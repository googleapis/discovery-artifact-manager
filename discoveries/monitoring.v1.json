{
  "name": "monitoring",
  "description": "Manages your Cloud Monitoring data and configurations.",
  "version_module": true,
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/monitoring",
            "https://www.googleapis.com/auth/monitoring.read"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "monitoring.operations.get",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "parameters": {
            "name": {
              "required": true,
              "description": "The name of the operation resource.",
              "type": "string",
              "pattern": "^operations/.*$",
              "location": "path"
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "location": {
          "resources": {
            "prometheus": {
              "resources": {
                "api": {
                  "resources": {
                    "v1": {
                      "resources": {
                        "label": {
                          "methods": {
                            "values": {
                              "parameterOrder": [
                                "name",
                                "location",
                                "label"
                              ],
                              "path": "v1/{+name}/location/{location}/prometheus/api/v1/label/{label}/values",
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/monitoring",
                                "https://www.googleapis.com/auth/monitoring.read"
                              ],
                              "description": "Lists possible values for a given label name.",
                              "httpMethod": "GET",
                              "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/label/{label}/values",
                              "parameters": {
                                "start": {
                                  "type": "string",
                                  "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
                                  "location": "query"
                                },
                                "match": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "A list of matchers encoded in the Prometheus label matcher format to constrain the values to series that satisfy them."
                                },
                                "name": {
                                  "pattern": "^projects/[^/]+$",
                                  "description": "The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                },
                                "end": {
                                  "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "location": {
                                  "description": "Location of the resource information. Has to be \"global\" now.",
                                  "location": "path",
                                  "type": "string",
                                  "required": true
                                },
                                "label": {
                                  "required": true,
                                  "type": "string",
                                  "description": "The label name for which values are queried.",
                                  "location": "path"
                                }
                              },
                              "id": "monitoring.projects.location.prometheus.api.v1.label.values"
                            }
                          }
                        },
                        "metadata": {
                          "methods": {
                            "list": {
                              "path": "v1/{+name}/location/{location}/prometheus/api/v1/metadata",
                              "parameterOrder": [
                                "name",
                                "location"
                              ],
                              "httpMethod": "GET",
                              "description": "Lists metadata for metrics.",
                              "id": "monitoring.projects.location.prometheus.api.v1.metadata.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/monitoring",
                                "https://www.googleapis.com/auth/monitoring.read"
                              ],
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "description": "Required. The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                                  "required": true,
                                  "type": "string",
                                  "pattern": "^projects/[^/]+$"
                                },
                                "location": {
                                  "location": "path",
                                  "type": "string",
                                  "description": "Location of the resource information. Has to be \"global\" for now.",
                                  "required": true
                                },
                                "metric": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "The metric name for which to query metadata. If unset, all metric metadata is returned."
                                },
                                "limit": {
                                  "description": "Maximum number of metrics to return.",
                                  "type": "string",
                                  "format": "int64",
                                  "location": "query"
                                }
                              },
                              "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/metadata"
                            }
                          }
                        }
                      },
                      "methods": {
                        "query": {
                          "request": {
                            "$ref": "QueryInstantRequest"
                          },
                          "description": "Evaluate a PromQL query at a single point in time.",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+$",
                              "description": "The project on which to execute the request. Data associcated with the project's workspace stored under the The format is: projects/PROJECT_ID_OR_NUMBER. Open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine.",
                              "required": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "id": "monitoring.projects.location.prometheus.api.v1.query",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/query",
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/query",
                          "httpMethod": "POST"
                        },
                        "series": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/series",
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/series",
                          "request": {
                            "$ref": "QuerySeriesRequest"
                          },
                          "id": "monitoring.projects.location.prometheus.api.v1.series",
                          "description": "Lists metadata for metrics.",
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+$",
                              "location": "path",
                              "description": "Required. The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER."
                            },
                            "location": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "description": "Location of the resource information. Has to be \"global\" for now."
                            }
                          },
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "HttpBody"
                          }
                        },
                        "query_range": {
                          "description": "Evaluate a PromQL query with start, end time range.",
                          "parameters": {
                            "location": {
                              "type": "string",
                              "required": true,
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "location": "path"
                            },
                            "name": {
                              "pattern": "^projects/[^/]+$",
                              "type": "string",
                              "description": "The project on which to execute the request. Data associcated with the project's workspace stored under the The format is: projects/PROJECT_ID_OR_NUMBER. Open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/query_range",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/query_range",
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "id": "monitoring.projects.location.prometheus.api.v1.query_range",
                          "request": {
                            "$ref": "QueryRangeRequest"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "dashboards": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The resource name of the Dashboard. The format is: projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID] ",
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "id": "monitoring.projects.dashboards.delete",
              "description": "Deletes an existing custom dashboard.This method requires the monitoring.dashboards.delete permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam)."
            },
            "create": {
              "id": "monitoring.projects.dashboards.create",
              "path": "v1/{+parent}/dashboards",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "response": {
                "$ref": "Dashboard"
              },
              "flatPath": "v1/projects/{projectsId}/dashboards",
              "request": {
                "$ref": "Dashboard"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The project on which to execute the request. The format is: projects/[PROJECT_ID_OR_NUMBER] The [PROJECT_ID_OR_NUMBER] must match the dashboard resource name.",
                  "location": "path"
                },
                "validateOnly": {
                  "type": "boolean",
                  "description": "If set, validate the request and preview the review, but do not actually save it.",
                  "location": "query"
                }
              },
              "description": "Creates a new custom dashboard. For examples on how you can use this API to create dashboards, see Managing dashboards by API (https://cloud.google.com/monitoring/dashboards/api-dashboard). This method requires the monitoring.dashboards.create permission on the specified project. For more information about permissions, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "httpMethod": "POST"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListDashboardsResponse"
              },
              "path": "v1/{+parent}/dashboards",
              "id": "monitoring.projects.dashboards.list",
              "parameters": {
                "pageToken": {
                  "description": "If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The scope of the dashboards to list. The format is: projects/[PROJECT_ID_OR_NUMBER] ",
                  "type": "string"
                },
                "pageSize": {
                  "description": "A positive number that is the maximum number of results to return. If unspecified, a default of 1000 is used.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "description": "Lists the existing dashboards.This method requires the monitoring.dashboards.list permission on the specified project. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.read"
              ],
              "flatPath": "v1/projects/{projectsId}/dashboards"
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "response": {
                "$ref": "Dashboard"
              },
              "request": {
                "$ref": "Dashboard"
              },
              "httpMethod": "PATCH",
              "id": "monitoring.projects.dashboards.patch",
              "parameters": {
                "validateOnly": {
                  "description": "If set, validate the request and preview the review, but do not actually save it.",
                  "type": "boolean",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$",
                  "type": "string",
                  "description": "Immutable. The resource name of the dashboard.",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "description": "Replaces an existing custom dashboard with a new definition.This method requires the monitoring.dashboards.update permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Fetches a specific dashboard.This method requires the monitoring.dashboards.get permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "httpMethod": "GET",
              "id": "monitoring.projects.dashboards.get",
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "response": {
                "$ref": "Dashboard"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.read"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The resource name of the Dashboard. The format is one of: dashboards/[DASHBOARD_ID] (for system dashboards) projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID] (for custom dashboards).",
                  "required": true
                }
              },
              "path": "v1/{+name}"
            }
          }
        }
      }
    },
    "locations": {
      "resources": {
        "global": {
          "resources": {
            "metricsScopes": {
              "resources": {
                "projects": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/monitoring",
                        "https://www.googleapis.com/auth/monitoring.write"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a MonitoredProject from the specified Metrics Scope.",
                      "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}/projects/{projectsId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource name of the MonitoredProject. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}Authorization requires the following Google IAM (https://cloud.google.com/iam) permissions on both the Metrics Scope and on the MonitoredProject: monitoring.metricsScopes.link",
                          "location": "path",
                          "pattern": "^locations/global/metricsScopes/[^/]+/projects/[^/]+$"
                        }
                      },
                      "id": "monitoring.locations.global.metricsScopes.projects.delete",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "create": {
                      "path": "v1/{+parent}/projects",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/monitoring",
                        "https://www.googleapis.com/auth/monitoring.write"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}",
                          "pattern": "^locations/global/metricsScopes/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Adds a MonitoredProject with the given project ID to the specified Metrics Scope.",
                      "id": "monitoring.locations.global.metricsScopes.projects.create",
                      "request": {
                        "$ref": "MonitoredProject"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}/projects"
                    }
                  }
                }
              },
              "methods": {
                "listMetricsScopesByMonitoredProject": {
                  "path": "v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject",
                  "flatPath": "v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject",
                  "response": {
                    "$ref": "ListMetricsScopesByMonitoredProjectResponse"
                  },
                  "parameters": {
                    "monitoredResourceContainer": {
                      "description": "Required. The resource name of the Monitored Project being requested. Example: projects/{MONITORED_PROJECT_ID_OR_NUMBER}",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Returns a list of every Metrics Scope that a specific MonitoredProject has been added to. The metrics scope representing the specified monitored project will always be the first entry in the response.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/monitoring",
                    "https://www.googleapis.com/auth/monitoring.read"
                  ],
                  "id": "monitoring.locations.global.metricsScopes.listMetricsScopesByMonitoredProject",
                  "httpMethod": "GET",
                  "parameterOrder": []
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "monitoring.locations.global.metricsScopes.get",
                  "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MetricsScope"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^locations/global/metricsScopes/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the Metrics Scope. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Returns a specific Metrics Scope, including the list of projects monitored by the specified Metrics Scope.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/monitoring",
                    "https://www.googleapis.com/auth/monitoring.read"
                  ],
                  "path": "v1/{+name}"
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://monitoring.googleapis.com/",
  "mtlsRootUrl": "https://monitoring.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/monitoring.write": {
          "description": "Publish metric data to your Google Cloud projects"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/monitoring.read": {
          "description": "View monitoring data for all of your Google Cloud and third-party projects"
        },
        "https://www.googleapis.com/auth/monitoring": {
          "description": "View and write monitoring data for all of your Google and third-party Cloud and API projects"
        }
      }
    }
  },
  "revision": "20220214",
  "servicePath": "",
  "version": "v1",
  "title": "Cloud Monitoring API",
  "canonicalName": "Monitoring",
  "parameters": {
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "basePath": "",
  "ownerName": "Google",
  "batchPath": "batch",
  "rootUrl": "https://monitoring.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "id": "monitoring:v1",
  "documentationLink": "https://cloud.google.com/monitoring/api/",
  "schemas": {
    "Status": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      },
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "RowLayout": {
      "description": "A simplified layout that divides the available space into rows and arranges a set of widgets horizontally in each row.",
      "properties": {
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The rows of content to display."
        }
      },
      "type": "object",
      "id": "RowLayout"
    },
    "TimeSeriesQuery": {
      "description": "TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API.",
      "properties": {
        "timeSeriesFilterRatio": {
          "$ref": "TimeSeriesFilterRatio",
          "description": "Parameters to fetch a ratio between two time series filters."
        },
        "unitOverride": {
          "type": "string",
          "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the unit (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in MetricDescriptor."
        },
        "timeSeriesQueryLanguage": {
          "type": "string",
          "description": "A query used to fetch time series."
        },
        "timeSeriesFilter": {
          "$ref": "TimeSeriesFilter",
          "description": "Filter parameters to fetch time series."
        }
      },
      "id": "TimeSeriesQuery",
      "type": "object"
    },
    "GaugeView": {
      "description": "A gauge chart shows where the current value sits within a pre-defined range. The upper and lower bounds should define the possible range of values for the scorecard's query (inclusive).",
      "id": "GaugeView",
      "type": "object",
      "properties": {
        "lowerBound": {
          "format": "double",
          "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
          "type": "number"
        },
        "upperBound": {
          "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Threshold": {
      "type": "object",
      "description": "Defines a threshold for categorizing time series values.",
      "id": "Threshold",
      "properties": {
        "value": {
          "description": "The value of the threshold. The value should be defined in the native scale of the metric.",
          "type": "number",
          "format": "double"
        },
        "direction": {
          "description": "The direction for the current threshold. Direction is not allowed in a XyChart.",
          "type": "string",
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "The threshold will be considered crossed if the actual value is above the threshold value.",
            "The threshold will be considered crossed if the actual value is below the threshold value."
          ],
          "enum": [
            "DIRECTION_UNSPECIFIED",
            "ABOVE",
            "BELOW"
          ]
        },
        "targetAxis": {
          "type": "string",
          "enumDescriptions": [
            "The target axis was not specified. Defaults to Y1.",
            "The y_axis (the right axis of chart).",
            "The y2_axis (the left axis of chart)."
          ],
          "enum": [
            "TARGET_AXIS_UNSPECIFIED",
            "Y1",
            "Y2"
          ],
          "description": "The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard."
        },
        "label": {
          "description": "A label for the threshold.",
          "type": "string"
        },
        "color": {
          "description": "The state color for this threshold. Color is not allowed in a XyChart.",
          "enum": [
            "COLOR_UNSPECIFIED",
            "YELLOW",
            "RED"
          ],
          "enumDescriptions": [
            "Color is unspecified. Not allowed in well-formed requests.",
            "Crossing the threshold is \"concerning\" behavior.",
            "Crossing the threshold is \"emergency\" behavior."
          ],
          "type": "string"
        }
      }
    },
    "ChartOptions": {
      "id": "ChartOptions",
      "type": "object",
      "description": "Options to control visual rendering of a chart.",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "COLOR",
            "X_RAY",
            "STATS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Mode is unspecified. The view will default to COLOR.",
            "The chart distinguishes data series using different color. Line colors may get reused when there are many lines in the chart.",
            "The chart uses the Stackdriver x-ray mode, in which each data set is plotted using the same semi-transparent color.",
            "The chart displays statistics such as average, median, 95th percentile, and more."
          ],
          "description": "The chart mode."
        }
      }
    },
    "Column": {
      "properties": {
        "widgets": {
          "items": {
            "$ref": "Widget"
          },
          "type": "array",
          "description": "The display widgets arranged vertically in this column."
        },
        "weight": {
          "description": "The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Defines the layout properties and content for a column.",
      "id": "Column"
    },
    "Axis": {
      "description": "A chart axis.",
      "id": "Axis",
      "type": "object",
      "properties": {
        "scale": {
          "type": "string",
          "enumDescriptions": [
            "Scale is unspecified. The view will default to LINEAR.",
            "Linear scale.",
            "Logarithmic scale (base 10)."
          ],
          "description": "The axis scale. By default, a linear scale is used.",
          "enum": [
            "SCALE_UNSPECIFIED",
            "LINEAR",
            "LOG10"
          ]
        },
        "label": {
          "description": "The label of the axis.",
          "type": "string"
        }
      }
    },
    "GridLayout": {
      "id": "GridLayout",
      "properties": {
        "widgets": {
          "items": {
            "$ref": "Widget"
          },
          "description": "The informational elements that are arranged into the columns row-first.",
          "type": "array"
        },
        "columns": {
          "description": "The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "A basic layout divides the available space into vertical columns of equal width and arranges a list of widgets using a row-first strategy.",
      "type": "object"
    },
    "XyChart": {
      "description": "A chart that displays data on a 2D (X and Y axes) plane.",
      "type": "object",
      "properties": {
        "thresholds": {
          "description": "Threshold lines drawn horizontally across the chart.",
          "type": "array",
          "items": {
            "$ref": "Threshold"
          }
        },
        "timeshiftDuration": {
          "description": "The duration used to display a comparison chart. A comparison chart simultaneously shows values from two similar-length time periods (e.g., week-over-week metrics). The duration must be positive, and it can only be applied to charts with data sets of LINE plot type.",
          "format": "google-duration",
          "type": "string"
        },
        "yAxis": {
          "description": "The properties applied to the Y axis.",
          "$ref": "Axis"
        },
        "chartOptions": {
          "$ref": "ChartOptions",
          "description": "Display options for the chart."
        },
        "dataSets": {
          "type": "array",
          "description": "Required. The data displayed in this chart.",
          "items": {
            "$ref": "DataSet"
          }
        },
        "y2Axis": {
          "$ref": "Axis",
          "description": "The properties applied to the Y2 axis."
        },
        "xAxis": {
          "description": "The properties applied to the X axis.",
          "$ref": "Axis"
        }
      },
      "id": "XyChart"
    },
    "Tile": {
      "id": "Tile",
      "description": "A single tile in the mosaic. The placement and size of the tile are configurable.",
      "properties": {
        "height": {
          "format": "int32",
          "description": "The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1.",
          "type": "integer"
        },
        "yPos": {
          "format": "int32",
          "type": "integer",
          "description": "The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. y_pos cannot be negative."
        },
        "width": {
          "description": "The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.",
          "type": "integer",
          "format": "int32"
        },
        "xPos": {
          "description": "The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. x_pos cannot be negative.",
          "type": "integer",
          "format": "int32"
        },
        "widget": {
          "description": "The informational widget contained in the tile. For example an XyChart.",
          "$ref": "Widget"
        }
      },
      "type": "object"
    },
    "ColumnLayout": {
      "description": "A simplified layout that divides the available space into vertical columns and arranges a set of widgets vertically in each column.",
      "properties": {
        "columns": {
          "type": "array",
          "description": "The columns of content to display.",
          "items": {
            "$ref": "Column"
          }
        }
      },
      "id": "ColumnLayout",
      "type": "object"
    },
    "Row": {
      "properties": {
        "widgets": {
          "items": {
            "$ref": "Widget"
          },
          "type": "array",
          "description": "The display widgets arranged horizontally in this row."
        },
        "weight": {
          "format": "int64",
          "description": "The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering.",
          "type": "string"
        }
      },
      "description": "Defines the layout properties and content for a row.",
      "type": "object",
      "id": "Row"
    },
    "Dashboard": {
      "description": "A Google Stackdriver dashboard. Dashboards define the content and layout of pages in the Stackdriver web application.",
      "properties": {
        "rowLayout": {
          "$ref": "RowLayout",
          "description": "The content is divided into equally spaced rows and the widgets are arranged horizontally."
        },
        "mosaicLayout": {
          "description": "The content is arranged as a grid of tiles, with each content widget occupying one or more grid blocks.",
          "$ref": "MosaicLayout"
        },
        "columnLayout": {
          "description": "The content is divided into equally spaced columns and the widgets are arranged vertically.",
          "$ref": "ColumnLayout"
        },
        "labels": {
          "type": "object",
          "description": "Labels applied to the dashboard",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Required. The mutable, human-readable name."
        },
        "name": {
          "description": "Immutable. The resource name of the dashboard.",
          "type": "string"
        },
        "gridLayout": {
          "description": "Content is arranged with a basic layout that re-flows a simple list of informational elements like widgets or tiles.",
          "$ref": "GridLayout"
        },
        "etag": {
          "type": "string",
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. An etag is returned in the response to GetDashboard, and users are expected to put that etag in the request to UpdateDashboard to ensure that their change will be applied to the same version of the Dashboard configuration. The field should not be passed during dashboard creation."
        }
      },
      "id": "Dashboard",
      "type": "object"
    },
    "PickTimeSeriesFilter": {
      "type": "object",
      "properties": {
        "rankingMethod": {
          "enumDescriptions": [
            "Not allowed. You must specify a different Method if you specify a PickTimeSeriesFilter.",
            "Select the mean of all values.",
            "Select the maximum value.",
            "Select the minimum value.",
            "Compute the sum of all values.",
            "Select the most recent value."
          ],
          "description": "ranking_method is applied to each time series independently to produce the value which will be used to compare the time series to other time series.",
          "enum": [
            "METHOD_UNSPECIFIED",
            "METHOD_MEAN",
            "METHOD_MAX",
            "METHOD_MIN",
            "METHOD_SUM",
            "METHOD_LATEST"
          ],
          "type": "string"
        },
        "direction": {
          "description": "How to use the ranking to select time series that pass through the filter.",
          "enum": [
            "DIRECTION_UNSPECIFIED",
            "TOP",
            "BOTTOM"
          ],
          "enumDescriptions": [
            "Not allowed. You must specify a different Direction if you specify a PickTimeSeriesFilter.",
            "Pass the highest num_time_series ranking inputs.",
            "Pass the lowest num_time_series ranking inputs."
          ],
          "type": "string"
        },
        "numTimeSeries": {
          "type": "integer",
          "format": "int32",
          "description": "How many time series to allow to pass through the filter."
        }
      },
      "id": "PickTimeSeriesFilter",
      "description": "Describes a ranking-based time series filter. Each input time series is ranked with an aligner. The filter will allow up to num_time_series time series to pass through it, selecting them based on the relative ranking.For example, if ranking_method is METHOD_MEAN,direction is BOTTOM, and num_time_series is 3, then the 3 times series with the lowest mean values will pass through the filter."
    },
    "MosaicLayout": {
      "type": "object",
      "properties": {
        "tiles": {
          "type": "array",
          "items": {
            "$ref": "Tile"
          },
          "description": "The tiles to display."
        },
        "columns": {
          "type": "integer",
          "format": "int32",
          "description": "The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive."
        }
      },
      "description": "A mosaic layout divides the available space into a grid of blocks, and overlays the grid with tiles. Unlike GridLayout, tiles may span multiple grid blocks and can be placed at arbitrary locations in the grid.",
      "id": "MosaicLayout"
    },
    "TableDataSet": {
      "id": "TableDataSet",
      "type": "object",
      "properties": {
        "timeSeriesQuery": {
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API.",
          "$ref": "TimeSeriesQuery"
        },
        "tableDisplayOptions": {
          "description": "Optional. Table display options for configuring how the table is rendered.",
          "$ref": "TableDisplayOptions"
        },
        "tableTemplate": {
          "type": "string",
          "description": "Optional. A template string for naming TimeSeries in the resulting data set. This should be a string with interpolations of the form ${label_name}, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\""
        },
        "minAlignmentPeriod": {
          "format": "google-duration",
          "description": "Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals.",
          "type": "string"
        }
      },
      "description": "Groups a time series query definition with table options."
    },
    "SparkChartView": {
      "description": "A sparkChart is a small chart suitable for inclusion in a table-cell or inline in text. This message contains the configuration for a sparkChart to show up on a Scorecard, showing recent trends of the scorecard's timeseries.",
      "id": "SparkChartView",
      "type": "object",
      "properties": {
        "minAlignmentPeriod": {
          "description": "The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query. For example, if the data is published once every 10 minutes it would not make sense to fetch and align data at one minute intervals. This field is optional and exists only as a hint.",
          "format": "google-duration",
          "type": "string"
        },
        "sparkChartType": {
          "type": "string",
          "description": "Required. The type of sparkchart to show in this chartView.",
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "The sparkline will be rendered as a small line chart.",
            "The sparkbar will be rendered as a small bar chart."
          ],
          "enum": [
            "SPARK_CHART_TYPE_UNSPECIFIED",
            "SPARK_LINE",
            "SPARK_BAR"
          ]
        }
      }
    },
    "Scorecard": {
      "description": "A widget showing the latest value of a metric, and how this value relates to one or more thresholds.",
      "type": "object",
      "id": "Scorecard",
      "properties": {
        "gaugeView": {
          "description": "Will cause the scorecard to show a gauge chart.",
          "$ref": "GaugeView"
        },
        "thresholds": {
          "items": {
            "$ref": "Threshold"
          },
          "type": "array",
          "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)As an example, consider a scorecard with the following four thresholds: { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state."
        },
        "sparkChartView": {
          "$ref": "SparkChartView",
          "description": "Will cause the scorecard to show a spark chart."
        },
        "timeSeriesQuery": {
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API.",
          "$ref": "TimeSeriesQuery"
        }
      }
    },
    "QuerySeriesRequest": {
      "description": "QuerySeries holds all parameters of the Prometheus upstream API for querying series.",
      "id": "QuerySeriesRequest",
      "properties": {
        "end": {
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        },
        "start": {
          "type": "string",
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp."
        }
      },
      "type": "object"
    },
    "Aggregation": {
      "type": "object",
      "properties": {
        "alignmentPeriod": {
          "description": "The alignment_period specifies a time interval, in seconds, that is used to divide the data in all the time series into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.The value must be at least 60 seconds. If a per-series aligner other than ALIGN_NONE is specified, this field is required or an error is returned. If no per-series aligner is specified, or the aligner ALIGN_NONE is specified, then this field is ignored.The maximum value of the alignment_period is 2 years, or 104 weeks.",
          "type": "string",
          "format": "google-duration"
        },
        "perSeriesAligner": {
          "enum": [
            "ALIGN_NONE",
            "ALIGN_DELTA",
            "ALIGN_RATE",
            "ALIGN_INTERPOLATE",
            "ALIGN_NEXT_OLDER",
            "ALIGN_MIN",
            "ALIGN_MAX",
            "ALIGN_MEAN",
            "ALIGN_COUNT",
            "ALIGN_SUM",
            "ALIGN_STDDEV",
            "ALIGN_COUNT_TRUE",
            "ALIGN_COUNT_FALSE",
            "ALIGN_FRACTION_TRUE",
            "ALIGN_PERCENTILE_99",
            "ALIGN_PERCENTILE_95",
            "ALIGN_PERCENTILE_50",
            "ALIGN_PERCENTILE_05",
            "ALIGN_PERCENT_CHANGE"
          ],
          "description": "An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.",
          "enumDescriptions": [
            "No alignment. Raw data is returned. Not valid if cross-series reduction is requested. The value_type of the result is the same as the value_type of the input.",
            "Align and convert to DELTA. The output is delta = y1 - y0.This alignment is valid for CUMULATIVE and DELTA metrics. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The value_type of the aligned result is the same as the value_type of the input.",
            "Align and convert to a rate. The result is computed as rate = (y1 - y0)/(t1 - t0), or \"delta over time\". Think of this aligner as providing the slope of the line that passes through the value at the start and at the end of the alignment_period.This aligner is valid for CUMULATIVE and DELTA metrics with numeric values. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The output is a GAUGE metric with value_type DOUBLE.If, by \"rate\", you mean \"percentage change\", see the ALIGN_PERCENT_CHANGE aligner instead.",
            "Align by interpolating between adjacent points around the alignment period boundary. This aligner is valid for GAUGE metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align by moving the most recent data point before the end of the alignment period to the boundary at the end of the alignment period. This aligner is valid for GAUGE metrics. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the minimum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the maximum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the mean value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is DOUBLE.",
            "Align the time series by returning the number of values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric or Boolean values. The value_type of the aligned result is INT64.",
            "Align the time series by returning the sum of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric and distribution values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the standard deviation of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the output is DOUBLE.",
            "Align the time series by returning the number of True values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.",
            "Align the time series by returning the number of False values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.",
            "Align the time series by returning the ratio of the number of True values to the total number of values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 99th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 95th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 50th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 5th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align and convert to a percentage change. This aligner is valid for GAUGE and DELTA metrics with numeric values. This alignment returns ((current - previous)/previous) * 100, where the value of previous is determined based on the alignment_period.If the values of current and previous are both 0, then the returned value is 0. If only previous is 0, the returned value is infinity.A 10-minute moving mean is computed at each point of the alignment period prior to the above calculation to smooth the metric and prevent false positives from very short-lived spikes. The moving mean is only applicable for data whose values are \u003e= 0. Any values \u003c 0 are treated as a missing datapoint, and are ignored. While DELTA metrics are accepted by this alignment, special care should be taken that the values for the metric will always be positive. The output is a GAUGE metric with value_type DOUBLE."
          ],
          "type": "string"
        },
        "groupByFields": {
          "description": "The set of fields to preserve when cross_series_reducer is specified. The group_by_fields determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The cross_series_reducer is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains resource.type. Fields not specified in group_by_fields are aggregated away. If group_by_fields is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If cross_series_reducer is not defined, this field is ignored.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "crossSeriesReducer": {
          "enumDescriptions": [
            "No cross-time series reduction. The output of the Aligner is returned.",
            "Reduce by computing the mean value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.",
            "Reduce by computing the minimum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the maximum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the sum across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric and distribution values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the standard deviation across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.",
            "Reduce by computing the number of data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of numeric, Boolean, distribution, and string value_type. The value_type of the output is INT64.",
            "Reduce by computing the number of True-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.",
            "Reduce by computing the number of False-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.",
            "Reduce by computing the ratio of the number of True-valued data points to the total number of data points for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.",
            "Reduce by computing the 99th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 95th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 50th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 5th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE."
          ],
          "type": "string",
          "enum": [
            "REDUCE_NONE",
            "REDUCE_MEAN",
            "REDUCE_MIN",
            "REDUCE_MAX",
            "REDUCE_SUM",
            "REDUCE_STDDEV",
            "REDUCE_COUNT",
            "REDUCE_COUNT_TRUE",
            "REDUCE_COUNT_FALSE",
            "REDUCE_FRACTION_TRUE",
            "REDUCE_PERCENTILE_99",
            "REDUCE_PERCENTILE_95",
            "REDUCE_PERCENTILE_50",
            "REDUCE_PERCENTILE_05"
          ],
          "description": "The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned."
        }
      },
      "description": "Describes how to combine multiple time series to provide a different view of the data. Aggregation of time series is done in two steps. First, each time series in the set is aligned to the same time interval boundaries, then the set of time series is optionally reduced in number.Alignment consists of applying the per_series_aligner operation to each time series after its data has been divided into regular alignment_period time intervals. This process takes all of the data points in an alignment period, applies a mathematical transformation such as averaging, minimum, maximum, delta, etc., and converts them into a single data point per period.Reduction is when the aligned and transformed time series can optionally be combined, reducing the number of time series through similar mathematical transformations. Reduction involves applying a cross_series_reducer to all the time series, optionally sorting the time series into subsets with group_by_fields, and applying the reducer to each subset.The raw time series data can contain a huge amount of information from multiple sources. Alignment and reduction transforms this mass of data into a more manageable and representative collection of data, for example \"the 95% latency across the average of all tasks in a cluster\". This representative data can be more easily graphed and comprehended, and the individual time series data is still available for later drilldown. For more details, see Filtering and aggregation (https://cloud.google.com/monitoring/api/v3/aggregation).",
      "id": "Aggregation"
    },
    "Option": {
      "id": "Option",
      "properties": {
        "name": {
          "type": "string",
          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, \"map_entry\". For custom options, it should be the fully-qualified name. For example, \"google.api.http\"."
        },
        "value": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
          "type": "object"
        }
      },
      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc.",
      "type": "object"
    },
    "DataSet": {
      "properties": {
        "legendTemplate": {
          "description": "A template string for naming TimeSeries in the resulting data set. This should be a string with interpolations of the form ${label_name}, which will resolve to the label's value.",
          "type": "string"
        },
        "targetAxis": {
          "description": "Optional. The target axis to use for plotting the metric.",
          "type": "string",
          "enum": [
            "TARGET_AXIS_UNSPECIFIED",
            "Y1",
            "Y2"
          ],
          "enumDescriptions": [
            "The target axis was not specified. Defaults to Y1.",
            "The y_axis (the right axis of chart).",
            "The y2_axis (the left axis of chart)."
          ]
        },
        "plotType": {
          "enumDescriptions": [
            "Plot type is unspecified. The view will default to LINE.",
            "The data is plotted as a set of lines (one line per series).",
            "The data is plotted as a set of filled areas (one area per series), with the areas stacked vertically (the base of each area is the top of its predecessor, and the base of the first area is the X axis). Since the areas do not overlap, each is filled with a different opaque color.",
            "The data is plotted as a set of rectangular boxes (one box per series), with the boxes stacked vertically (the base of each box is the top of its predecessor, and the base of the first box is the X axis). Since the boxes do not overlap, each is filled with a different opaque color.",
            "The data is plotted as a heatmap. The series being plotted must have a DISTRIBUTION value type. The value of each bucket in the distribution is displayed as a color. This type is not currently available in the Stackdriver Monitoring application."
          ],
          "enum": [
            "PLOT_TYPE_UNSPECIFIED",
            "LINE",
            "STACKED_AREA",
            "STACKED_BAR",
            "HEATMAP"
          ],
          "type": "string",
          "description": "How this data should be plotted on the chart."
        },
        "minAlignmentPeriod": {
          "description": "Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals.",
          "format": "google-duration",
          "type": "string"
        },
        "timeSeriesQuery": {
          "$ref": "TimeSeriesQuery",
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API."
        }
      },
      "id": "DataSet",
      "description": "Groups a time series query definition with charting options.",
      "type": "object"
    },
    "SpanContext": {
      "type": "object",
      "id": "SpanContext",
      "properties": {
        "spanName": {
          "type": "string",
          "description": "The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] [TRACE_ID] is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array.[SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array."
        }
      },
      "description": "The context of a span. This is attached to an Exemplar in Distribution values during aggregation.It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] "
    },
    "Widget": {
      "properties": {
        "blank": {
          "description": "A blank space.",
          "$ref": "Empty"
        },
        "text": {
          "description": "A raw string or markdown displaying textual content.",
          "$ref": "Text"
        },
        "alertChart": {
          "$ref": "AlertChart",
          "description": "A chart of alert policy data."
        },
        "xyChart": {
          "description": "A chart of time series data.",
          "$ref": "XyChart"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the widget."
        },
        "timeSeriesTable": {
          "description": "A widget that displays time series data in a tabular format.",
          "$ref": "TimeSeriesTable"
        },
        "collapsibleGroup": {
          "$ref": "CollapsibleGroup",
          "description": "A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets."
        },
        "logsPanel": {
          "$ref": "LogsPanel",
          "description": "A widget that shows a stream of logs."
        },
        "scorecard": {
          "$ref": "Scorecard",
          "description": "A scorecard summarizing time series data."
        }
      },
      "id": "Widget",
      "type": "object",
      "description": "Widget contains a single dashboard component and configuration of how to present the component in the dashboard."
    },
    "MetricsScope": {
      "id": "MetricsScope",
      "description": "Represents a Metrics Scope (https://cloud.google.com/monitoring/settings#concept-scope) in Cloud Monitoring, which specifies one or more Google projects and zero or more AWS accounts to monitor together.",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The time when this Metrics Scope record was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can be specified with the scoping project ID or number. On output, the resource name is specified with the scoping project number. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}"
        },
        "monitoredProjects": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of projects monitored by this Metrics Scope.",
          "items": {
            "$ref": "MonitoredProject"
          }
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when this Metrics Scope was created."
        }
      }
    },
    "TimeSeriesFilterRatio": {
      "properties": {
        "denominator": {
          "description": "The denominator of the ratio.",
          "$ref": "RatioPart"
        },
        "pickTimeSeriesFilter": {
          "description": "Ranking based time series filter.",
          "$ref": "PickTimeSeriesFilter"
        },
        "secondaryAggregation": {
          "$ref": "Aggregation",
          "description": "Apply a second aggregation after the ratio is computed."
        },
        "numerator": {
          "description": "The numerator of the ratio.",
          "$ref": "RatioPart"
        },
        "statisticalTimeSeriesFilter": {
          "description": "Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.",
          "$ref": "StatisticalTimeSeriesFilter"
        }
      },
      "type": "object",
      "description": "A pair of time series filters that define a ratio computation. The output time series is the pair-wise division of each aligned element from the numerator and denominator time series.",
      "id": "TimeSeriesFilterRatio"
    },
    "ListDashboardsResponse": {
      "id": "ListDashboardsResponse",
      "properties": {
        "dashboards": {
          "type": "array",
          "items": {
            "$ref": "Dashboard"
          },
          "description": "The list of requested dashboards."
        },
        "nextPageToken": {
          "description": "If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The ListDashboards request."
    },
    "HttpBody": {
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page.This message can be used both in streaming and non-streaming API methods in the request as well as the response.It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body.Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "type": "object",
      "id": "HttpBody",
      "properties": {
        "extensions": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
        },
        "data": {
          "type": "string",
          "description": "The HTTP request/response body as raw binary.",
          "format": "byte"
        },
        "contentType": {
          "description": "The HTTP Content-Type header value specifying the content type of the body.",
          "type": "string"
        }
      }
    },
    "StatisticalTimeSeriesFilter": {
      "type": "object",
      "description": "A filter that ranks streams based on their statistical relation to other streams in a request. Note: This field is deprecated and completely ignored by the API.",
      "properties": {
        "rankingMethod": {
          "description": "rankingMethod is applied to a set of time series, and then the produced value for each individual time series is used to compare a given time series to others. These are methods that cannot be applied stream-by-stream, but rather require the full context of a request to evaluate time series.",
          "enum": [
            "METHOD_UNSPECIFIED",
            "METHOD_CLUSTER_OUTLIER"
          ],
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "Compute the outlier score of each stream."
          ],
          "type": "string"
        },
        "numTimeSeries": {
          "format": "int32",
          "description": "How many time series to output.",
          "type": "integer"
        }
      },
      "id": "StatisticalTimeSeriesFilter"
    },
    "TimeSeriesFilter": {
      "properties": {
        "secondaryAggregation": {
          "$ref": "Aggregation",
          "description": "Apply a second aggregation after aggregation is applied."
        },
        "pickTimeSeriesFilter": {
          "$ref": "PickTimeSeriesFilter",
          "description": "Ranking based time series filter."
        },
        "filter": {
          "description": "Required. The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.",
          "type": "string"
        },
        "aggregation": {
          "$ref": "Aggregation",
          "description": "By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data."
        },
        "statisticalTimeSeriesFilter": {
          "$ref": "StatisticalTimeSeriesFilter",
          "description": "Statistics based time series filter. Note: This field is deprecated and completely ignored by the API."
        }
      },
      "id": "TimeSeriesFilter",
      "type": "object",
      "description": "A filter that defines a subset of time series data that is displayed in a widget. Time series data is fetched using the ListTimeSeries (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method."
    },
    "LogsPanel": {
      "description": "A widget that displays a stream of log.",
      "id": "LogsPanel",
      "properties": {
        "resourceNames": {
          "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "filter": {
          "type": "string",
          "description": "A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries."
        }
      },
      "type": "object"
    },
    "ListMetricsScopesByMonitoredProjectResponse": {
      "description": "Response for the ListMetricsScopesByMonitoredProject method.",
      "properties": {
        "metricsScopes": {
          "description": "A set of all metrics scopes that the specified monitored project has been added to.",
          "items": {
            "$ref": "MetricsScope"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListMetricsScopesByMonitoredProjectResponse"
    },
    "AlertChart": {
      "description": "A chart that displays alert policy data.",
      "id": "AlertChart",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The resource name of the alert policy. The format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID] "
        }
      }
    },
    "TableDisplayOptions": {
      "properties": {
        "shownColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Columns to display in the table. Leave empty to display all available columns. Note: This field is for future features and is not currently used."
        }
      },
      "description": "Table display options that can be reused.",
      "type": "object",
      "id": "TableDisplayOptions"
    },
    "DroppedLabels": {
      "id": "DroppedLabels",
      "type": "object",
      "description": "A set of (label, value) pairs that were removed from a Distribution time series during aggregation and then added as an attachment to a Distribution.Exemplar.The full label set for the exemplars is constructed by using the dropped pairs in combination with the label values that remain on the aggregated Distribution time series. The constructed full label set can be used to identify the specific entity, such as the instance or job, which might be contributing to a long-tail. However, with dropped labels, the storage requirements are reduced because only the aggregated distribution values for a large group of time series are stored.Note that there are no guarantees on ordering of the labels from exemplar-to-exemplar and from distribution-to-distribution in the same stream, and there may be duplicates. It is up to clients to resolve any ambiguities.",
      "properties": {
        "label": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map from label to its value, for all labels dropped in any aggregation."
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Contains metadata for longrunning operation for the edit Metrics Scope endpoints.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "The time when the operation result was last updated.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "type": "string",
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request has been received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the batch request was received."
        }
      },
      "type": "object"
    },
    "Type": {
      "type": "object",
      "properties": {
        "syntax": {
          "enumDescriptions": [
            "Syntax proto2.",
            "Syntax proto3."
          ],
          "type": "string",
          "description": "The source syntax.",
          "enum": [
            "SYNTAX_PROTO2",
            "SYNTAX_PROTO3"
          ]
        },
        "oneofs": {
          "type": "array",
          "description": "The list of types appearing in oneof definitions in this type.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The fully qualified message name.",
          "type": "string"
        },
        "sourceContext": {
          "$ref": "SourceContext",
          "description": "The source context."
        },
        "fields": {
          "items": {
            "$ref": "Field"
          },
          "type": "array",
          "description": "The list of fields."
        },
        "options": {
          "description": "The protocol buffer options.",
          "type": "array",
          "items": {
            "$ref": "Option"
          }
        }
      },
      "id": "Type",
      "description": "A protocol buffer message type."
    },
    "MonitoredProject": {
      "properties": {
        "createTime": {
          "description": "Output only. The time when this MonitoredProject was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Immutable. The resource name of the MonitoredProject. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}",
          "type": "string"
        }
      },
      "description": "A project being monitored (https://cloud.google.com/monitoring/settings/multiple-projects#create-multi) by a Metrics Scope.",
      "id": "MonitoredProject",
      "type": "object"
    },
    "Field": {
      "type": "object",
      "description": "A single field of a message type.",
      "properties": {
        "typeUrl": {
          "type": "string",
          "description": "The field type URL, without the scheme, for message or enumeration types. Example: \"type.googleapis.com/google.protobuf.Timestamp\"."
        },
        "jsonName": {
          "type": "string",
          "description": "The field JSON name."
        },
        "oneofIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the field type in Type.oneofs, for message or enumeration types. The first type has index 1; zero means the type is not in the list."
        },
        "defaultValue": {
          "description": "The string value of the default value of this field. Proto2 syntax only.",
          "type": "string"
        },
        "packed": {
          "description": "Whether to use alternative packed wire representation.",
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "The field number."
        },
        "options": {
          "items": {
            "$ref": "Option"
          },
          "description": "The protocol buffer options.",
          "type": "array"
        },
        "kind": {
          "enum": [
            "TYPE_UNKNOWN",
            "TYPE_DOUBLE",
            "TYPE_FLOAT",
            "TYPE_INT64",
            "TYPE_UINT64",
            "TYPE_INT32",
            "TYPE_FIXED64",
            "TYPE_FIXED32",
            "TYPE_BOOL",
            "TYPE_STRING",
            "TYPE_GROUP",
            "TYPE_MESSAGE",
            "TYPE_BYTES",
            "TYPE_UINT32",
            "TYPE_ENUM",
            "TYPE_SFIXED32",
            "TYPE_SFIXED64",
            "TYPE_SINT32",
            "TYPE_SINT64"
          ],
          "description": "The field type.",
          "type": "string",
          "enumDescriptions": [
            "Field type unknown.",
            "Field type double.",
            "Field type float.",
            "Field type int64.",
            "Field type uint64.",
            "Field type int32.",
            "Field type fixed64.",
            "Field type fixed32.",
            "Field type bool.",
            "Field type string.",
            "Field type group. Proto2 syntax only, and deprecated.",
            "Field type message.",
            "Field type bytes.",
            "Field type uint32.",
            "Field type enum.",
            "Field type sfixed32.",
            "Field type sfixed64.",
            "Field type sint32.",
            "Field type sint64."
          ]
        },
        "cardinality": {
          "description": "The field cardinality.",
          "type": "string",
          "enum": [
            "CARDINALITY_UNKNOWN",
            "CARDINALITY_OPTIONAL",
            "CARDINALITY_REQUIRED",
            "CARDINALITY_REPEATED"
          ],
          "enumDescriptions": [
            "For fields with unknown cardinality.",
            "For optional fields.",
            "For required fields. Proto2 syntax only.",
            "For repeated fields."
          ]
        },
        "name": {
          "description": "The field name.",
          "type": "string"
        }
      },
      "id": "Field"
    },
    "QueryRangeRequest": {
      "description": "QueryRangeRequest holds all parameters of the Prometheus upstream range query API plus GCM specific parameters.",
      "properties": {
        "query": {
          "description": "A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/.",
          "type": "string"
        },
        "end": {
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        },
        "start": {
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "description": "An upper bound timeout for the query. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field."
        },
        "step": {
          "type": "string",
          "description": "The resolution of query result. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field."
        }
      },
      "id": "QueryRangeRequest",
      "type": "object"
    },
    "QueryInstantRequest": {
      "type": "object",
      "id": "QueryInstantRequest",
      "description": "QueryInstantRequest holds all parameters of the Prometheus upstream instant query API plus GCM specific parameters.",
      "properties": {
        "time": {
          "description": "The single point in time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        },
        "timeout": {
          "description": "An upper bound timeout for the query. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field.",
          "type": "string"
        },
        "query": {
          "description": "A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/.",
          "type": "string"
        }
      }
    },
    "SourceContext": {
      "type": "object",
      "id": "SourceContext",
      "description": "SourceContext represents information about the source of a protobuf element, like the file in which it is defined.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: \"google/protobuf/source_context.proto\"."
        }
      }
    },
    "CollapsibleGroup": {
      "description": "A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.",
      "id": "CollapsibleGroup",
      "properties": {
        "collapsed": {
          "description": "The collapsed state of the widget on first page load.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Text": {
      "id": "Text",
      "properties": {
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "MARKDOWN",
            "RAW"
          ],
          "enumDescriptions": [
            "Format is unspecified. Defaults to MARKDOWN.",
            "The text contains Markdown formatting.",
            "The text contains no special formatting."
          ],
          "type": "string",
          "description": "How the text content is formatted."
        },
        "content": {
          "description": "The text content to be displayed.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A widget that displays textual content."
    },
    "Operation": {
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object"
    },
    "RatioPart": {
      "id": "RatioPart",
      "properties": {
        "filter": {
          "description": "Required. The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.",
          "type": "string"
        },
        "aggregation": {
          "description": "By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.",
          "$ref": "Aggregation"
        }
      },
      "description": "Describes a query to build the numerator or denominator of a TimeSeriesFilterRatio.",
      "type": "object"
    },
    "TimeSeriesTable": {
      "id": "TimeSeriesTable",
      "type": "object",
      "properties": {
        "dataSets": {
          "items": {
            "$ref": "TableDataSet"
          },
          "type": "array",
          "description": "Required. The data displayed in this table."
        }
      },
      "description": "A table that displays time series data."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    }
  }
}

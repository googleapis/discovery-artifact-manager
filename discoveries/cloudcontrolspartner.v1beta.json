{
  "version_module": true,
  "revision": "20240320",
  "schemas": {
    "Workload": {
      "id": "Workload",
      "description": "Contains metadata around the [Workload resource](https://cloud.google.com/assured-workloads/docs/reference/rest/Shared.Types/Workload) in the Assured Workloads API.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`",
          "type": "string"
        },
        "folderId": {
          "description": "Output only. Folder id this workload is associated with",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "description": "Output only. Time the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "folder": {
          "description": "Output only. The name of container folder of the assured workload",
          "readOnly": true,
          "type": "string"
        },
        "workloadOnboardingState": {
          "description": "Container for workload onboarding steps.",
          "$ref": "WorkloadOnboardingState"
        },
        "isOnboarded": {
          "description": "Indicates whether a workload is fully onboarded.",
          "type": "boolean"
        },
        "keyManagementProjectId": {
          "description": "The project id of the key management project for the workload",
          "type": "string"
        },
        "location": {
          "description": "The Google Cloud location of the workload",
          "type": "string"
        },
        "partner": {
          "description": "Partner associated with this workload.",
          "type": "string",
          "enumDescriptions": [
            "Unknown Partner.",
            "Enum representing S3NS (Thales) partner.",
            "Enum representing T_SYSTEM (TSI) partner.",
            "Enum representing SIA_MINSAIT (Indra) partner.",
            "Enum representing PSN (TIM) partner.",
            "Enum representing CNTXT (Kingdom of Saudi Arabia) partner.",
            "Enum representing CNXT (Kingdom of Saudi Arabia) partner offering without EKM provisioning."
          ],
          "enum": [
            "PARTNER_UNSPECIFIED",
            "PARTNER_LOCAL_CONTROLS_BY_S3NS",
            "PARTNER_SOVEREIGN_CONTROLS_BY_T_SYSTEMS",
            "PARTNER_SOVEREIGN_CONTROLS_BY_SIA_MINSAIT",
            "PARTNER_SOVEREIGN_CONTROLS_BY_PSN",
            "PARTNER_SOVEREIGN_CONTROLS_BY_CNTXT",
            "PARTNER_SOVEREIGN_CONTROLS_BY_CNTXT_NO_EKM"
          ]
        }
      }
    },
    "WorkloadOnboardingState": {
      "id": "WorkloadOnboardingState",
      "description": "Container for workload onboarding steps.",
      "type": "object",
      "properties": {
        "onboardingSteps": {
          "description": "List of workload onboarding steps.",
          "type": "array",
          "items": {
            "$ref": "WorkloadOnboardingStep"
          }
        }
      }
    },
    "WorkloadOnboardingStep": {
      "id": "WorkloadOnboardingStep",
      "description": "Container for workload onboarding information.",
      "type": "object",
      "properties": {
        "step": {
          "description": "The onboarding step.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified step.",
            "EKM Provisioned step.",
            "Signed Access Approval step."
          ],
          "enum": [
            "STEP_UNSPECIFIED",
            "EKM_PROVISIONED",
            "SIGNED_ACCESS_APPROVAL_CONFIGURED"
          ]
        },
        "startTime": {
          "description": "The starting time of the onboarding step.",
          "type": "string",
          "format": "google-datetime"
        },
        "completionTime": {
          "description": "The completion time of the onboarding step.",
          "type": "string",
          "format": "google-datetime"
        },
        "completionState": {
          "description": "Output only. The completion state of the onboarding step.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified completion state.",
            "Task started (has start date) but not yet completed.",
            "Succeeded state.",
            "Failed state.",
            "Not applicable state."
          ],
          "enum": [
            "COMPLETION_STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED",
            "NOT_APPLICABLE"
          ]
        }
      }
    },
    "ListWorkloadsResponse": {
      "id": "ListWorkloadsResponse",
      "description": "Response message for list customer workloads requests.",
      "type": "object",
      "properties": {
        "workloads": {
          "description": "List of customer workloads",
          "type": "array",
          "items": {
            "$ref": "Workload"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Customer": {
      "id": "Customer",
      "description": "Contains metadata around a Cloud Controls Partner Customer",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}`",
          "type": "string"
        },
        "displayName": {
          "description": "The customer organization's display name. E.g. \"google.com\".",
          "type": "string"
        },
        "customerOnboardingState": {
          "description": "Container for customer onboarding steps",
          "$ref": "CustomerOnboardingState"
        },
        "isOnboarded": {
          "description": "Indicates whether a customer is fully onboarded",
          "type": "boolean"
        }
      }
    },
    "CustomerOnboardingState": {
      "id": "CustomerOnboardingState",
      "description": "Container for customer onboarding steps",
      "type": "object",
      "properties": {
        "onboardingSteps": {
          "description": "List of customer onboarding steps",
          "type": "array",
          "items": {
            "$ref": "CustomerOnboardingStep"
          }
        }
      }
    },
    "CustomerOnboardingStep": {
      "id": "CustomerOnboardingStep",
      "description": "Container for customer onboarding information",
      "type": "object",
      "properties": {
        "step": {
          "description": "The onboarding step",
          "type": "string",
          "enumDescriptions": [
            "Unspecified step",
            "KAJ Enrollment",
            "Customer Environment"
          ],
          "enum": [
            "STEP_UNSPECIFIED",
            "KAJ_ENROLLMENT",
            "CUSTOMER_ENVIRONMENT"
          ]
        },
        "startTime": {
          "description": "The starting time of the onboarding step",
          "type": "string",
          "format": "google-datetime"
        },
        "completionTime": {
          "description": "The completion time of the onboarding step",
          "type": "string",
          "format": "google-datetime"
        },
        "completionState": {
          "description": "Output only. Current state of the step",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified completion state.",
            "Task started (has start date) but not yet completed.",
            "Succeeded state.",
            "Failed state.",
            "Not applicable state."
          ],
          "enum": [
            "COMPLETION_STATE_UNSPECIFIED",
            "PENDING",
            "SUCCEEDED",
            "FAILED",
            "NOT_APPLICABLE"
          ]
        }
      }
    },
    "ListCustomersResponse": {
      "id": "ListCustomersResponse",
      "description": "Response message for list customer Customers requests",
      "type": "object",
      "properties": {
        "customers": {
          "description": "List of customers",
          "type": "array",
          "items": {
            "$ref": "Customer"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EkmConnections": {
      "id": "EkmConnections",
      "description": "The EKM connections associated with a workload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/ekmConnections`",
          "type": "string"
        },
        "ekmConnections": {
          "description": "The EKM connections associated with the workload",
          "type": "array",
          "items": {
            "$ref": "EkmConnection"
          }
        }
      }
    },
    "EkmConnection": {
      "id": "EkmConnection",
      "description": "Details about the EKM connection",
      "type": "object",
      "properties": {
        "connectionName": {
          "description": "Resource name of the EKM connection in the format: projects/{project}/locations/{location}/ekmConnections/{ekm_connection}",
          "type": "string"
        },
        "connectionState": {
          "description": "Output only. The connection state",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified EKM connection state",
            "Available EKM connection state",
            "Not available EKM connection state",
            "Error EKM connection state",
            "Permission denied EKM connection state"
          ],
          "enum": [
            "CONNECTION_STATE_UNSPECIFIED",
            "AVAILABLE",
            "NOT_AVAILABLE",
            "ERROR",
            "PERMISSION_DENIED"
          ]
        },
        "connectionError": {
          "description": "The connection error that occurred if any",
          "$ref": "ConnectionError"
        }
      }
    },
    "ConnectionError": {
      "id": "ConnectionError",
      "description": "Information around the error that occurred if the connection state is anything other than available or unspecified",
      "type": "object",
      "properties": {
        "errorDomain": {
          "description": "The error domain for the error",
          "type": "string"
        },
        "errorMessage": {
          "description": "The error message for the error",
          "type": "string"
        }
      }
    },
    "PartnerPermissions": {
      "id": "PartnerPermissions",
      "description": "The permissions granted to the partner for a workload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/partnerPermissions`",
          "type": "string"
        },
        "partnerPermissions": {
          "description": "The partner permissions granted for the workload",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified partner permission",
              "Permission for Access Transparency and emergency logs",
              "Permission for Assured Workloads monitoring violations",
              "Permission for Access Approval requests",
              "Permission for External Key Manager connection status"
            ],
            "enum": [
              "PERMISSION_UNSPECIFIED",
              "ACCESS_TRANSPARENCY_AND_EMERGENCY_ACCESS_LOGS",
              "ASSURED_WORKLOADS_MONITORING",
              "ACCESS_APPROVAL_REQUESTS",
              "ASSURED_WORKLOADS_EKM_CONNECTION_STATUS"
            ]
          }
        }
      }
    },
    "ListAccessApprovalRequestsResponse": {
      "id": "ListAccessApprovalRequestsResponse",
      "description": "Response message for list access requests.",
      "type": "object",
      "properties": {
        "accessApprovalRequests": {
          "description": "List of access approval requests",
          "type": "array",
          "items": {
            "$ref": "AccessApprovalRequest"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccessApprovalRequest": {
      "id": "AccessApprovalRequest",
      "description": "Details about the Access request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/accessApprovalRequests/{access_approval_request}`",
          "type": "string"
        },
        "requestTime": {
          "description": "The time at which approval was requested.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedReason": {
          "description": "The justification for which approval is being requested.",
          "$ref": "AccessReason"
        },
        "requestedExpirationTime": {
          "description": "The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AccessReason": {
      "id": "AccessReason",
      "description": "Reason for the access.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of access justification.",
          "type": "string",
          "enumDescriptions": [
            "Default value for proto, shouldn't be used.",
            "Customer made a request or raised an issue that required the principal to access customer data. `detail` is of the form (\"#####\" is the issue ID): - \"Feedback Report: #####\" - \"Case Number: #####\" - \"Case ID: #####\" - \"E-PIN Reference: #####\" - \"Google-#####\" - \"T-#####\"",
            "The principal accessed customer data in order to diagnose or resolve a suspected issue in services. Often this access is used to confirm that customers are not affected by a suspected service issue or to remediate a reversible system issue.",
            "Google initiated service for security, fraud, abuse, or compliance purposes.",
            "The principal was compelled to access customer data in order to respond to a legal third party data request or process, including legal processes from customers themselves.",
            "The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage.",
            "Similar to 'GOOGLE_INITIATED_SERVICE' or 'GOOGLE_INITIATED_REVIEW', but with universe agnostic naming. The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage, or for security, fraud, abuse, or compliance review purposes."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CUSTOMER_INITIATED_SUPPORT",
            "GOOGLE_INITIATED_SERVICE",
            "GOOGLE_INITIATED_REVIEW",
            "THIRD_PARTY_DATA_REQUEST",
            "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT",
            "CLOUD_INITIATED_ACCESS"
          ]
        },
        "detail": {
          "description": "More detail about certain reason types. See comments for each type above.",
          "type": "string"
        }
      }
    },
    "Partner": {
      "id": "Partner",
      "description": "Message describing Partner resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. The resource name of the partner. Format: `organizations/{organization}/locations/{location}/partner` Example: \"organizations/123456/locations/us-central1/partner\"",
          "type": "string"
        },
        "skus": {
          "description": "List of SKUs the partner is offering",
          "type": "array",
          "items": {
            "$ref": "Sku"
          }
        },
        "ekmSolutions": {
          "description": "List of Google Cloud supported EKM partners supported by the partner",
          "type": "array",
          "items": {
            "$ref": "EkmMetadata"
          }
        },
        "operatedCloudRegions": {
          "description": "List of Google Cloud regions that the partner sells services to customers. Valid Google Cloud regions found here: https://cloud.google.com/compute/docs/regions-zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "partnerProjectId": {
          "description": "Google Cloud project ID in the partner's Google Cloud organization for receiving enhanced Logs for Partners.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the resource was created",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last time the resource was updated",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Sku": {
      "id": "Sku",
      "description": "Represents the SKU a partner owns inside Google Cloud to sell to customers.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Argentum product SKU, that is associated with the partner offerings to customers used by Syntro for billing purposes. SKUs can represent resold Google products or support services.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the product identified by the SKU. A partner may want to show partner branded names for their offerings such as local sovereign cloud solutions.",
          "type": "string"
        }
      }
    },
    "EkmMetadata": {
      "id": "EkmMetadata",
      "description": "Holds information needed by Mudbray to use partner EKMs for workloads.",
      "type": "object",
      "properties": {
        "ekmSolution": {
          "description": "The Cloud EKM partner.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified EKM solution",
            "EKM Partner Fortanix",
            "EKM Partner FutureX",
            "EKM Partner Thales",
            "EKM Partner Virtu"
          ],
          "enum": [
            "EKM_SOLUTION_UNSPECIFIED",
            "FORTANIX",
            "FUTUREX",
            "THALES",
            "VIRTRU"
          ]
        },
        "ekmEndpointUri": {
          "description": "Endpoint for sending requests to the EKM for key provisioning during Assured Workload creation.",
          "type": "string"
        }
      }
    },
    "ListViolationsResponse": {
      "id": "ListViolationsResponse",
      "description": "Response message for list customer violation requests",
      "type": "object",
      "properties": {
        "violations": {
          "description": "List of violation",
          "type": "array",
          "items": {
            "$ref": "Violation"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Workloads that could not be reached due to permission errors or any other error. Ref: https://google.aip.dev/217",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Violation": {
      "id": "Violation",
      "description": "Details of resource Violation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/violations/{violation}`",
          "type": "string"
        },
        "description": {
          "description": "Output only. Description for the Violation. e.g. OrgPolicy gcp.resourceLocations has non compliant value.",
          "readOnly": true,
          "type": "string"
        },
        "beginTime": {
          "description": "Output only. Time of the event which triggered the Violation.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last time when the Violation record was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "resolveTime": {
          "description": "Output only. Time of the event which fixed the Violation. If the violation is ACTIVE this will be empty.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "category": {
          "description": "Output only. Category under which this violation is mapped. e.g. Location, Service Usage, Access, Encryption, etc.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the violation",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Violation is resolved.",
            "Violation is Unresolved",
            "Violation is Exception"
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RESOLVED",
            "UNRESOLVED",
            "EXCEPTION"
          ]
        },
        "nonCompliantOrgPolicy": {
          "description": "Output only. Immutable. Name of the OrgPolicy which was modified with non-compliant change and resulted this violation. Format: `projects/{project_number}/policies/{constraint_name}` `folders/{folder_id}/policies/{constraint_name}` `organizations/{organization_id}/policies/{constraint_name}`",
          "readOnly": true,
          "type": "string"
        },
        "folderId": {
          "description": "The folder_id of the violation",
          "type": "string",
          "format": "int64"
        },
        "remediation": {
          "description": "Output only. Compliance violation remediation",
          "readOnly": true,
          "$ref": "Remediation"
        }
      }
    },
    "Remediation": {
      "id": "Remediation",
      "description": "Represents remediation guidance to resolve compliance violation for AssuredWorkload",
      "type": "object",
      "properties": {
        "instructions": {
          "description": "Required. Remediation instructions to resolve violations",
          "$ref": "Instructions"
        },
        "compliantValues": {
          "description": "Values that can resolve the violation For example: for list org policy violations, this will either be the list of allowed or denied values",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remediationType": {
          "description": "Output only. Remediation type based on the type of org policy values violated",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified remediation type",
            "Remediation type for boolean org policy",
            "Remediation type for list org policy which have allowed values in the monitoring rule",
            "Remediation type for list org policy which have denied values in the monitoring rule",
            "Remediation type for gcp.restrictCmekCryptoKeyProjects",
            "Remediation type for resource violation."
          ],
          "enum": [
            "REMEDIATION_TYPE_UNSPECIFIED",
            "REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION",
            "REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION",
            "REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION",
            "REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION",
            "REMEDIATION_RESOURCE_VIOLATION"
          ]
        }
      }
    },
    "Instructions": {
      "id": "Instructions",
      "description": "Instructions to remediate violation",
      "type": "object",
      "properties": {
        "gcloudInstructions": {
          "description": "Remediation instructions to resolve violation via gcloud cli",
          "$ref": "Gcloud"
        },
        "consoleInstructions": {
          "description": "Remediation instructions to resolve violation via cloud console",
          "$ref": "Console"
        }
      }
    },
    "Gcloud": {
      "id": "Gcloud",
      "description": "Remediation instructions to resolve violation via gcloud cli",
      "type": "object",
      "properties": {
        "gcloudCommands": {
          "description": "Gcloud command to resolve violation",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "steps": {
          "description": "Steps to resolve violation via gcloud cli",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalLinks": {
          "description": "Additional urls for more information about steps",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Console": {
      "id": "Console",
      "description": "Remediation instructions to resolve violation via cloud console",
      "type": "object",
      "properties": {
        "consoleUris": {
          "description": "Link to console page where violations can be resolved",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "steps": {
          "description": "Steps to resolve violation via cloud console",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalLinks": {
          "description": "Additional urls for more information about steps",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "baseUrl": "https://cloudcontrolspartner.googleapis.com/",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/sovereign-controls-by-partners/docs/sovereign-partners/reference/rest",
  "mtlsRootUrl": "https://cloudcontrolspartner.mtls.googleapis.com/",
  "batchPath": "batch",
  "title": "Cloud Controls Partner API",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Provides insights about your customers and their Assured Workloads based on your Sovereign Controls by Partners offering.",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "kind": "discovery#restDescription",
  "id": "cloudcontrolspartner:v1beta",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "canonicalName": "Cloud Controls Partner Service",
  "servicePath": "",
  "rootUrl": "https://cloudcontrolspartner.googleapis.com/",
  "resources": {
    "organizations": {
      "resources": {
        "locations": {
          "methods": {
            "getPartner": {
              "id": "cloudcontrolspartner.organizations.locations.getPartner",
              "path": "v1beta/{+name}",
              "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/partner",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Format: `organizations/{organization}/locations/{location}/partner`",
                  "pattern": "^organizations/[^/]+/locations/[^/]+/partner$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Partner"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get details of a Partner."
            }
          },
          "resources": {
            "customers": {
              "methods": {
                "get": {
                  "id": "cloudcontrolspartner.organizations.locations.customers.get",
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `organizations/{organization}/locations/{location}/customers/{customer}`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Customer"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single customer"
                },
                "list": {
                  "id": "cloudcontrolspartner.organizations.locations.customers.list",
                  "path": "v1beta/{+parent}/customers",
                  "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource Format: `organizations/{organization}/locations/{location}`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of Customers to return. The service may return fewer than this value. If unspecified, at most 500 Customers will be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListCustomers` call. Provide this to retrieve the subsequent page.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCustomersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists customers of a partner identified by its Google Cloud organization ID"
                }
              },
              "resources": {
                "workloads": {
                  "methods": {
                    "get": {
                      "id": "cloudcontrolspartner.organizations.locations.customers.workloads.get",
                      "path": "v1beta/{+name}",
                      "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Workload"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single workload"
                    },
                    "list": {
                      "id": "cloudcontrolspartner.organizations.locations.customers.workloads.list",
                      "path": "v1beta/{+parent}/workloads",
                      "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent resource Format: `organizations/{organization}/locations/{location}/customers/{customer}`",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of workloads to return. The service may return fewer than this value. If unspecified, at most 500 workloads will be returned.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListWorkloads` call. Provide this to retrieve the subsequent page.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. Filtering results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Hint for how to order the results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListWorkloadsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists customer workloads for a given customer org id"
                    },
                    "getEkmConnections": {
                      "id": "cloudcontrolspartner.organizations.locations.customers.workloads.getEkmConnections",
                      "path": "v1beta/{+name}",
                      "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/ekmConnections",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/ekmConnections`",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+/ekmConnections$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "EkmConnections"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the EKM connections associated with a workload"
                    },
                    "getPartnerPermissions": {
                      "id": "cloudcontrolspartner.organizations.locations.customers.workloads.getPartnerPermissions",
                      "path": "v1beta/{+name}",
                      "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/partnerPermissions",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource to get in the format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/partnerPermissions`",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+/partnerPermissions$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "PartnerPermissions"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the partner permissions granted for a workload"
                    }
                  },
                  "resources": {
                    "accessApprovalRequests": {
                      "methods": {
                        "list": {
                          "id": "cloudcontrolspartner.organizations.locations.customers.workloads.accessApprovalRequests.list",
                          "path": "v1beta/{+parent}/accessApprovalRequests",
                          "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/accessApprovalRequests",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. Parent resource Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`",
                              "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of access requests to return. The service may return fewer than this value. If unspecified, at most 500 access requests will be returned.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. A page token, received from a previous `ListAccessApprovalRequests` call. Provide this to retrieve the subsequent page.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. Filtering results.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. Hint for how to order the results.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListAccessApprovalRequestsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists access requests associated with a workload"
                        }
                      }
                    },
                    "violations": {
                      "methods": {
                        "list": {
                          "id": "cloudcontrolspartner.organizations.locations.customers.workloads.violations.list",
                          "path": "v1beta/{+parent}/violations",
                          "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/violations",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. Parent resource Format `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`",
                              "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of customers row to return. The service may return fewer than this value. If unspecified, at most 10 customers will be returned.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. A page token, received from a previous `ListViolations` call. Provide this to retrieve the subsequent page.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. Filtering results",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. Hint for how to order the results",
                              "location": "query",
                              "type": "string"
                            },
                            "interval.startTime": {
                              "description": "Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.",
                              "location": "query",
                              "type": "string",
                              "format": "google-datetime"
                            },
                            "interval.endTime": {
                              "description": "Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.",
                              "location": "query",
                              "type": "string",
                              "format": "google-datetime"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListViolationsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists Violations for a workload Callers may also choose to read across multiple Customers or for a single customer as per [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash character) as a wildcard character instead of {customer} & {workload}. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}`"
                        },
                        "get": {
                          "id": "cloudcontrolspartner.organizations.locations.customers.workloads.violations.get",
                          "path": "v1beta/{+name}",
                          "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/customers/{customersId}/workloads/{workloadsId}/violations/{violationsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. Format: `organizations/{organization}/locations/{location}/customers/{customer}/workloads/{workload}/violations/{violation}`",
                              "pattern": "^organizations/[^/]+/locations/[^/]+/customers/[^/]+/workloads/[^/]+/violations/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Violation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single Violation."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "cloudcontrolspartner",
  "version": "v1beta"
}

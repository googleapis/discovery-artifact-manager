{
  "id": "translate:v3beta1",
  "ownerDomain": "google.com",
  "parameters": {
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "type": "string",
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version_module": true,
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-translation": {
          "description": "Translate text from one language to another using Google Translate"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "servicePath": "",
  "ownerName": "Google",
  "name": "translate",
  "protocol": "rest",
  "revision": "20211029",
  "schemas": {
    "LanguageCodesSet": {
      "type": "object",
      "id": "LanguageCodesSet",
      "properties": {
        "languageCodes": {
          "type": "array",
          "description": "The BCP-47 language code(s) for terms defined in the glossary. All entries are unique. The list contains at least two entries. Expected to be an exact match for GlossaryTerm.language_code.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Used with equivalent term set glossaries."
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "WaitOperationRequest": {
      "properties": {
        "timeout": {
          "type": "string",
          "format": "google-duration",
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used."
        }
      },
      "description": "The request message for Operations.WaitOperation.",
      "type": "object",
      "id": "WaitOperationRequest"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "BatchDocumentOutputConfig": {
      "type": "object",
      "description": "Output configuration for BatchTranslateDocument request.",
      "id": "BatchDocumentOutputConfig",
      "properties": {
        "gcsDestination": {
          "description": "Google Cloud Storage destination for output content. For every single input document (for example, gs://a/b/c.[extension]), we generate at most 2 * n output files. (n is the # of target_language_codes in the BatchTranslateDocumentRequest). While the input documents are being processed, we write/update an index file `index.csv` under `gcs_destination.output_uri_prefix` (for example, gs://translation_output/index.csv) The index file is generated/updated as new files are being translated. The format is: input_document,target_language_code,translation_output,error_output, glossary_translation_output,glossary_error_output `input_document` is one file we matched using gcs_source.input_uri. `target_language_code` is provided in the request. `translation_output` contains the translations. (details provided below) `error_output` contains the error message during processing of the file. Both translations_file and errors_file could be empty strings if we have no content to output. `glossary_translation_output` and `glossary_error_output` are the translated output/error when we apply glossaries. They could also be empty if we have no content to output. Once a row is present in index.csv, the input/output matching never changes. Callers should also expect all the content in input_file are processed and ready to be consumed (that is, no partial output file is written). Since index.csv will be keeping updated during the process, please make sure there is no custom retention policy applied on the output bucket that may avoid file updating. (https://cloud.google.com/storage/docs/bucket-lock?hl=en#retention-policy) The naming format of translation output files follows (for target language code [trg]): `translation_output`: gs://translation_output/a_b_c_[trg]_translation.[extension] `glossary_translation_output`: gs://translation_test/a_b_c_[trg]_glossary_translation.[extension] The output document will maintain the same file format as the input document. The naming format of error output files follows (for target language code [trg]): `error_output`: gs://translation_test/a_b_c_[trg]_errors.txt `glossary_error_output`: gs://translation_test/a_b_c_[trg]_glossary_translation.txt The error output is a txt file containing error details.",
          "$ref": "GcsDestination"
        }
      }
    },
    "Translation": {
      "type": "object",
      "properties": {
        "translatedText": {
          "type": "string",
          "description": "Text translated into the target language. If an error occurs during translation, this field might be excluded from the response."
        },
        "detectedLanguageCode": {
          "type": "string",
          "description": "The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty."
        },
        "model": {
          "description": "Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
          "type": "string"
        },
        "glossaryConfig": {
          "$ref": "TranslateTextGlossaryConfig",
          "description": "The `glossary_config` used for this translation."
        }
      },
      "id": "Translation",
      "description": "A single translation response."
    },
    "TranslateTextRequest": {
      "properties": {
        "sourceLanguageCode": {
          "type": "string",
          "description": "Optional. The BCP-47 language code of the input text if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response."
        },
        "targetLanguageCode": {
          "type": "string",
          "description": "Required. The BCP-47 language code to use for translation of the input text, set to one of the language codes listed in Language Support."
        },
        "glossaryConfig": {
          "$ref": "TranslateTextGlossaryConfig",
          "description": "Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned."
        },
        "mimeType": {
          "type": "string",
          "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
        },
        "labels": {
          "type": "object",
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/labels for more information.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "contents": {
          "type": "array",
          "description": "Required. The content of the input in string format. We recommend the total content be less than 30k codepoints. The max length of this field is 1024. Use BatchTranslateText for larger text.",
          "items": {
            "type": "string"
          }
        },
        "model": {
          "description": "Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, For global (non-regionalized) requests, use `location-id` `global`. For example, `projects/{project-number-or-id}/locations/global/models/general/nmt`. If not provided, the default Google model (NMT) will be used",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The request message for synchronous translation.",
      "id": "TranslateTextRequest"
    },
    "DetectLanguageRequest": {
      "type": "object",
      "id": "DetectLanguageRequest",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
        },
        "model": {
          "description": "Optional. The language detection model to be used. Format: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}` Only one language detection model is currently supported: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`. If not specified, the default model is used.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/labels for more information.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "content": {
          "description": "The content of the input stored as a string.",
          "type": "string"
        }
      },
      "description": "The request message for language detection."
    },
    "GcsSource": {
      "id": "GcsSource",
      "properties": {
        "inputUri": {
          "type": "string",
          "description": "Required. Source data URI. For example, `gs://my_bucket/my_object`."
        }
      },
      "description": "The Google Cloud Storage location for the input content.",
      "type": "object"
    },
    "SupportedLanguage": {
      "id": "SupportedLanguage",
      "properties": {
        "languageCode": {
          "description": "Supported language code, generally consisting of its ISO 639-1 identifier, for example, 'en', 'ja'. In certain cases, BCP-47 codes including language and region identifiers are returned (for example, 'zh-TW' and 'zh-CN')",
          "type": "string"
        },
        "supportSource": {
          "description": "Can be used as source language.",
          "type": "boolean"
        },
        "supportTarget": {
          "type": "boolean",
          "description": "Can be used as target language."
        },
        "displayName": {
          "description": "Human readable name of the language localized in the display language specified in the request.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A single supported language response corresponds to information related to one supported language."
    },
    "TranslateTextResponse": {
      "id": "TranslateTextResponse",
      "properties": {
        "translations": {
          "items": {
            "$ref": "Translation"
          },
          "description": "Text translation responses with no glossary applied. This field has the same length as `contents`.",
          "type": "array"
        },
        "glossaryTranslations": {
          "type": "array",
          "description": "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
          "items": {
            "$ref": "Translation"
          }
        }
      },
      "type": "object"
    },
    "Glossary": {
      "properties": {
        "languagePair": {
          "description": "Used with unidirectional glossaries.",
          "$ref": "LanguageCodePair"
        },
        "entryCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of entries defined in the glossary.",
          "format": "int32"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the glossary creation was finished.",
          "readOnly": true
        },
        "name": {
          "description": "Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.",
          "type": "string"
        },
        "submitTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. When CreateGlossary was called."
        },
        "languageCodesSet": {
          "description": "Used with equivalent term set glossaries.",
          "$ref": "LanguageCodesSet"
        },
        "inputConfig": {
          "description": "Required. Provides examples to build the glossary from. Total glossary must not exceed 10M Unicode codepoints.",
          "$ref": "GlossaryInputConfig"
        }
      },
      "id": "Glossary",
      "type": "object",
      "description": "Represents a glossary built from user provided data."
    },
    "GcsDestination": {
      "type": "object",
      "properties": {
        "outputUriPrefix": {
          "description": "Required. There must be no files under 'output_uri_prefix'. 'output_uri_prefix' must end with \"/\" and start with \"gs://\", otherwise an INVALID_ARGUMENT (400) error is returned.",
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location for the output content.",
      "id": "GcsDestination"
    },
    "InputConfig": {
      "id": "InputConfig",
      "type": "object",
      "description": "Input configuration for BatchTranslateText request.",
      "properties": {
        "gcsSource": {
          "description": "Required. Google Cloud Storage location for the source input. This can be a single file (for example, `gs://translation-test/input.tsv`) or a wildcard (for example, `gs://translation-test/*`). If a file extension is `.tsv`, it can contain either one or two columns. The first column (optional) is the id of the text request. If the first column is missing, we use the row number (0-based) from the input file as the ID in the output file. The second column is the actual text to be translated. We recommend each row be \u003c= 10K Unicode codepoints, otherwise an error might be returned. Note that the input tsv must be RFC 4180 compliant. You could use https://github.com/Clever/csvlint to check potential formatting errors in your tsv file. csvlint --delimiter='\\t' your_input_file.tsv The other supported file extensions are `.txt` or `.html`, which is treated as a single large chunk of text.",
          "$ref": "GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "Optional. Can be \"text/plain\" or \"text/html\". For `.tsv`, \"text/html\" is used if mime_type is missing. For `.html`, this field must be \"text/html\" or empty. For `.txt`, this field must be \"text/plain\" or empty."
        }
      }
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {}
    },
    "TranslateTextGlossaryConfig": {
      "type": "object",
      "properties": {
        "glossary": {
          "type": "string",
          "description": "Required. Specifies the glossary used for this translation. Use this format: projects/*/locations/*/glossaries/*"
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
        }
      },
      "description": "Configures which glossary should be used for a specific target language, and defines options for applying that glossary.",
      "id": "TranslateTextGlossaryConfig"
    },
    "ListGlossariesResponse": {
      "description": "Response message for ListGlossaries.",
      "id": "ListGlossariesResponse",
      "type": "object",
      "properties": {
        "glossaries": {
          "description": "The list of glossaries for a project.",
          "items": {
            "$ref": "Glossary"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LanguageCodePair": {
      "type": "object",
      "properties": {
        "sourceLanguageCode": {
          "description": "Required. The BCP-47 language code of the input text, for example, \"en-US\". Expected to be an exact match for GlossaryTerm.language_code.",
          "type": "string"
        },
        "targetLanguageCode": {
          "type": "string",
          "description": "Required. The BCP-47 language code for translation output, for example, \"zh-CN\". Expected to be an exact match for GlossaryTerm.language_code."
        }
      },
      "id": "LanguageCodePair",
      "description": "Used with unidirectional glossaries."
    },
    "BatchTranslateTextRequest": {
      "properties": {
        "models": {
          "description": "Optional. The models to use for translation. Map's key is target language code. Map's value is model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "glossaries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "TranslateTextGlossaryConfig"
          },
          "description": "Optional. Glossaries to be applied for translation. It's keyed by target language code."
        },
        "sourceLanguageCode": {
          "type": "string",
          "description": "Required. Source language code."
        },
        "labels": {
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/labels for more information.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "targetLanguageCodes": {
          "description": "Required. Specify up to 10 language codes here.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputConfig": {
          "description": "Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don't generate output for duplicate inputs.",
          "$ref": "OutputConfig"
        },
        "inputConfigs": {
          "items": {
            "$ref": "InputConfig"
          },
          "type": "array",
          "description": "Required. Input configurations. The total number of files matched should be \u003c= 100. The total content size should be \u003c= 100M Unicode codepoints. The files must use UTF-8 encoding."
        }
      },
      "type": "object",
      "id": "BatchTranslateTextRequest",
      "description": "The batch translation request."
    },
    "TranslateDocumentRequest": {
      "description": "A document translation request.",
      "properties": {
        "labels": {
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "model": {
          "description": "Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If not provided, the default Google model (NMT) will be used for translation.",
          "type": "string"
        },
        "documentInputConfig": {
          "$ref": "DocumentInputConfig",
          "description": "Required. Input configurations."
        },
        "documentOutputConfig": {
          "description": "Optional. Output configurations. Defines if the output file should be stored within Cloud Storage as well as the desired output format. If not provided the translated file will only be returned through a byte-stream and its output mime type will be the same as the input file's mime type.",
          "$ref": "DocumentOutputConfig"
        },
        "sourceLanguageCode": {
          "type": "string",
          "description": "Optional. The BCP-47 language code of the input document if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response. Source language must be specified if the request contains a glossary or a custom model."
        },
        "glossaryConfig": {
          "$ref": "TranslateTextGlossaryConfig",
          "description": "Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned."
        },
        "targetLanguageCode": {
          "description": "Required. The BCP-47 language code to use for translation of the input document, set to one of the language codes listed in Language Support.",
          "type": "string"
        }
      },
      "id": "TranslateDocumentRequest",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      }
    },
    "DetectLanguageResponse": {
      "id": "DetectLanguageResponse",
      "type": "object",
      "description": "The response message for language detection.",
      "properties": {
        "languages": {
          "description": "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
          "type": "array",
          "items": {
            "$ref": "DetectedLanguage"
          }
        }
      }
    },
    "DocumentTranslation": {
      "id": "DocumentTranslation",
      "description": "A translated document message.",
      "type": "object",
      "properties": {
        "detectedLanguageCode": {
          "type": "string",
          "description": "The detected language for the input document. If the user did not provide the source language for the input document, this field will have the language code automatically detected. If the source language was passed, auto-detection of the language does not occur and this field is empty."
        },
        "mimeType": {
          "description": "The translated document's mime type.",
          "type": "string"
        },
        "byteStreamOutputs": {
          "description": "The array of translated documents. It is expected to be size 1 for now. We may produce multiple translated documents in the future for other type of file formats.",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "type": "array"
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status"
    },
    "DocumentInputConfig": {
      "type": "object",
      "description": "A document translation request input config.",
      "id": "DocumentInputConfig",
      "properties": {
        "gcsSource": {
          "$ref": "GcsSource",
          "description": "Google Cloud Storage location. This must be a single file. For example: gs://example_bucket/example_file.pdf"
        },
        "mimeType": {
          "description": "Specifies the input document's mime_type. If not specified it will be determined using the file extension for gcs_source provided files. For a file provided through bytes content the mime_type must be provided. Currently supported mime types are: - application/pdf - application/vnd.openxmlformats-officedocument.wordprocessingml.document - application/vnd.openxmlformats-officedocument.presentationml.presentation - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "type": "string"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Document's content represented as a stream of bytes."
        }
      }
    },
    "BatchTranslateDocumentRequest": {
      "properties": {
        "targetLanguageCodes": {
          "type": "array",
          "description": "Required. The BCP-47 language code to use for translation of the input document. Specify up to 10 language codes here.",
          "items": {
            "type": "string"
          }
        },
        "glossaries": {
          "type": "object",
          "description": "Optional. Glossaries to be applied. It's keyed by target language code.",
          "additionalProperties": {
            "$ref": "TranslateTextGlossaryConfig"
          }
        },
        "models": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The models to use for translation. Map's key is target language code. Map's value is the model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used."
        },
        "formatConversions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional."
        },
        "inputConfigs": {
          "description": "Required. Input configurations. The total number of files matched should be \u003c= 100. The total content size to translate should be \u003c= 100M Unicode codepoints. The files must use UTF-8 encoding.",
          "items": {
            "$ref": "BatchDocumentInputConfig"
          },
          "type": "array"
        },
        "sourceLanguageCode": {
          "description": "Required. The BCP-47 language code of the input document if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support (https://cloud.google.com/translate/docs/languages).",
          "type": "string"
        },
        "outputConfig": {
          "description": "Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don't generate output for duplicate inputs.",
          "$ref": "BatchDocumentOutputConfig"
        }
      },
      "description": "The BatchTranslateDocument request.",
      "type": "object",
      "id": "BatchTranslateDocumentRequest"
    },
    "OutputConfig": {
      "id": "OutputConfig",
      "properties": {
        "gcsDestination": {
          "$ref": "GcsDestination",
          "description": "Google Cloud Storage destination for output content. For every single input file (for example, gs://a/b/c.[extension]), we generate at most 2 * n output files. (n is the # of target_language_codes in the BatchTranslateTextRequest). Output files (tsv) generated are compliant with RFC 4180 except that record delimiters are '\\n' instead of '\\r\\n'. We don't provide any way to change record delimiters. While the input files are being processed, we write/update an index file 'index.csv' under 'output_uri_prefix' (for example, gs://translation-test/index.csv) The index file is generated/updated as new files are being translated. The format is: input_file,target_language_code,translations_file,errors_file, glossary_translations_file,glossary_errors_file input_file is one file we matched using gcs_source.input_uri. target_language_code is provided in the request. translations_file contains the translations. (details provided below) errors_file contains the errors during processing of the file. (details below). Both translations_file and errors_file could be empty strings if we have no content to output. glossary_translations_file and glossary_errors_file are always empty strings if the input_file is tsv. They could also be empty if we have no content to output. Once a row is present in index.csv, the input/output matching never changes. Callers should also expect all the content in input_file are processed and ready to be consumed (that is, no partial output file is written). Since index.csv will be keeping updated during the process, please make sure there is no custom retention policy applied on the output bucket that may avoid file updating. (https://cloud.google.com/storage/docs/bucket-lock?hl=en#retention-policy) The format of translations_file (for target language code 'trg') is: gs://translation_test/a_b_c_'trg'_translations.[extension] If the input file extension is tsv, the output has the following columns: Column 1: ID of the request provided in the input, if it's not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: translation without applying a glossary. Empty string if there is an error. Column 4 (only present if a glossary is provided in the request): translation after applying the glossary. Empty string if there is an error applying the glossary. Could be same string as column 3 if there is no glossary applied. If input file extension is a txt or html, the translation is directly written to the output file. If glossary is requested, a separate glossary_translations_file has format of gs://translation_test/a_b_c_'trg'_glossary_translations.[extension] The format of errors file (for target language code 'trg') is: gs://translation_test/a_b_c_'trg'_errors.[extension] If the input file extension is tsv, errors_file contains the following: Column 1: ID of the request provided in the input, if it's not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: Error detail for the translation. Could be empty. Column 4 (only present if a glossary is provided in the request): Error when applying the glossary. If the input file extension is txt or html, glossary_error_file will be generated that contains error details. glossary_error_file has format of gs://translation_test/a_b_c_'trg'_glossary_errors.[extension]"
        }
      },
      "description": "Output configuration for BatchTranslateText request.",
      "type": "object"
    },
    "DetectedLanguage": {
      "id": "DetectedLanguage",
      "description": "The response message for language detection.",
      "type": "object",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence of the detection result for this language."
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code of source content in the request, detected automatically."
        }
      }
    },
    "BatchDocumentInputConfig": {
      "id": "BatchDocumentInputConfig",
      "properties": {
        "gcsSource": {
          "$ref": "GcsSource",
          "description": "Google Cloud Storage location for the source input. This can be a single file (for example, `gs://translation-test/input.docx`) or a wildcard (for example, `gs://translation-test/*`). File mime type is determined based on extension. Supported mime type includes: - `pdf`, application/pdf - `docx`, application/vnd.openxmlformats-officedocument.wordprocessingml.document - `pptx`, application/vnd.openxmlformats-officedocument.presentationml.presentation - `xlsx`, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet The max file size to support for `.docx`, `.pptx` and `.xlsx` is 100MB. The max file size to support for `.pdf` is 1GB and the max page limit is 1000 pages. The max file size to support for all input documents is 1GB."
        }
      },
      "description": "Input configuration for BatchTranslateDocument request.",
      "type": "object"
    },
    "SupportedLanguages": {
      "id": "SupportedLanguages",
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "$ref": "SupportedLanguage"
          },
          "description": "A list of supported language responses. This list contains an entry for each language the Translation API supports."
        }
      },
      "type": "object",
      "description": "The response message for discovering supported languages."
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "GlossaryInputConfig": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Required. Google Cloud Storage location of glossary data. File format is determined based on the filename extension. API returns [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file formats. Wildcards are not allowed. This must be a single file in one of the following formats: For unidirectional glossaries: - TSV/CSV (`.tsv`/`.csv`): 2 column file, tab- or comma-separated. The first column is source text. The second column is target text. The file must not contain headers. That is, the first row is data, not column names. - TMX (`.tmx`): TMX file with parallel data defining source/target term pairs. For equivalent term sets glossaries: - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms in multiple languages. The format is defined for Google Translation Toolkit and documented in [Use a glossary](https://support.google.com/translatortoolkit/answer/6306379?hl=en).",
          "$ref": "GcsSource"
        }
      },
      "id": "GlossaryInputConfig",
      "description": "Input configuration for glossaries."
    },
    "TranslateDocumentResponse": {
      "type": "object",
      "description": "A translated document response message.",
      "properties": {
        "glossaryDocumentTranslation": {
          "$ref": "DocumentTranslation",
          "description": "The document's translation output if a glossary is provided in the request. This can be the same as [TranslateDocumentResponse.document_translation] if no glossary terms apply."
        },
        "model": {
          "type": "string",
          "description": "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`."
        },
        "documentTranslation": {
          "$ref": "DocumentTranslation",
          "description": "Translated document."
        },
        "glossaryConfig": {
          "$ref": "TranslateTextGlossaryConfig",
          "description": "The `glossary_config` used for this translation."
        }
      },
      "id": "TranslateDocumentResponse"
    },
    "DocumentOutputConfig": {
      "type": "object",
      "properties": {
        "gcsDestination": {
          "$ref": "GcsDestination",
          "description": "Optional. Google Cloud Storage destination for the translation output, e.g., `gs://my_bucket/my_directory/`. The destination directory provided does not have to be empty, but the bucket must exist. If a file with the same name as the output file already exists in the destination an error will be returned. For a DocumentInputConfig.contents provided document, the output file will have the name \"output_[trg]_translations.[ext]\", where - [trg] corresponds to the translated file's language code, - [ext] corresponds to the translated file's extension according to its mime type. For a DocumentInputConfig.gcs_uri provided document, the output file will have a name according to its URI. For example: an input file with URI: \"gs://a/b/c.[extension]\" stored in a gcs_destination bucket with name \"my_bucket\" will have an output URI: \"gs://my_bucket/a_b_c_[trg]_translations.[ext]\", where - [trg] corresponds to the translated file's language code, - [ext] corresponds to the translated file's extension according to its mime type. If the document was directly provided through the request, then the output document will have the format: \"gs://my_bucket/translated_document_[trg]_translations.[ext], where - [trg] corresponds to the translated file's language code, - [ext] corresponds to the translated file's extension according to its mime type. If a glossary was provided, then the output URI for the glossary translation will be equal to the default output URI but have `glossary_translations` instead of `translations`. For the previous example, its glossary URI would be: \"gs://my_bucket/a_b_c_[trg]_glossary_translations.[ext]\". Thus the max number of output files will be 2 (Translated document, Glossary translated document). Callers should expect no partial outputs. If there is any error during document translation, no output will be stored in the Cloud Storage bucket."
        },
        "mimeType": {
          "type": "string",
          "description": "Optional. Specifies the translated document's mime_type. If not specified, the translated file's mime type will be the same as the input file's mime type. Currently only support the output mime type to be the same as input mime type. - application/pdf - application/vnd.openxmlformats-officedocument.wordprocessingml.document - application/vnd.openxmlformats-officedocument.presentationml.presentation - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        }
      },
      "description": "A document translation request output config.",
      "id": "DocumentOutputConfig"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "glossaries": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project name."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v3beta1/{+parent}/glossaries",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/glossaries",
                  "description": "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if the project doesn't exist.",
                  "request": {
                    "$ref": "Glossary"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "translate.projects.locations.glossaries.create",
                  "httpMethod": "POST"
                },
                "delete": {
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}",
                  "id": "translate.projects.locations.glossaries.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v3beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/glossaries/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the glossary to delete."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a glossary, or cancels glossary construction if the glossary isn't created yet. Returns NOT_FOUND, if the glossary doesn't exist."
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v3beta1/{+parent}/glossaries",
                  "httpMethod": "GET",
                  "id": "translate.projects.locations.glossaries.list",
                  "description": "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. Requested page size. The server may return fewer glossaries than requested. If unspecified, the server picks an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results the server should return. Typically, this is the value of [ListGlossariesResponse.next_page_token] returned from the previous call to `ListGlossaries` method. The first page is returned if `page_token`is empty or missing.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the project from which to list all of the glossaries.",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. Filter specifying constraints of a list operation. Specify the constraint by the format of \"key=value\", where key must be \"src\" or \"tgt\", and the value must be a valid language code. For multiple restrictions, concatenate them by \"AND\" (uppercase only), such as: \"src=en-US AND tgt=zh-CN\". Notice that the exact match is used here, which means using 'en-US' and 'en' can lead to different results, which depends on the language code you used when you create the glossary. For the unidirectional glossaries, the \"src\" and \"tgt\" add restrictions on the source and target language code separately. For the equivalent term set glossaries, the \"src\" and/or \"tgt\" add restrictions on the term set. For example: \"src=en-US AND tgt=zh-CN\" will only pick the unidirectional glossaries which exactly match the source language code as \"en-US\" and the target language code \"zh-CN\", but all equivalent term set glossaries which contain \"en-US\" and \"zh-CN\" in their language set will be picked. If missing, no filtering is performed.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/glossaries",
                  "response": {
                    "$ref": "ListGlossariesResponse"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Glossary"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/glossaries/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the glossary to retrieve."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3beta1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/glossaries/{glossariesId}",
                  "id": "translate.projects.locations.glossaries.get",
                  "description": "Gets a glossary. Returns NOT_FOUND, if the glossary doesn't exist."
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "path": "v3beta1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "translate.projects.locations.operations.delete",
                  "httpMethod": "DELETE"
                },
                "get": {
                  "id": "translate.projects.locations.operations.get",
                  "path": "v3beta1/{+name}",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "wait": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v3beta1/{+name}:wait",
                  "request": {
                    "$ref": "WaitOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
                  "id": "translate.projects.locations.operations.wait",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to wait on.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "translate.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "path": "v3beta1/{+name}/operations",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-translation"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "translate.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v3beta1/{+name}:cancel",
                  "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            }
          },
          "methods": {
            "batchTranslateText": {
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "translate.projects.locations.batchTranslateText",
              "parameters": {
                "parent": {
                  "description": "Required. Location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}/locations/{location-id}`. The `global` location is not supported for batch translation. Only AutoML Translation models or glossaries within the same region (have the same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "BatchTranslateTextRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "path": "v3beta1/{+parent}:batchTranslateText",
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}:batchTranslateText",
              "description": "Translates a large volume of text in asynchronous batch mode. This function provides real-time output as the inputs are being processed. If caller cancels a request, the partial results (for an input file, it's all or nothing) may still be available on the specified output location. This call returns immediately and you can use google.longrunning.Operation.name to poll the status of the call."
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "translate.projects.locations.get",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "path": "v3beta1/{+name}"
            },
            "list": {
              "id": "translate.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v3beta1/projects/{projectsId}/locations",
              "path": "v3beta1/{+name}/locations",
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            },
            "batchTranslateDocument": {
              "request": {
                "$ref": "BatchTranslateDocumentRequest"
              },
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}:batchTranslateDocument",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. Location to make a regional call. Format: `projects/{project-number-or-id}/locations/{location-id}`. The `global` location is not supported for batch translation. Only AutoML Translation models or glossaries within the same region (have the same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "translate.projects.locations.batchTranslateDocument",
              "description": "Translates a large volume of document in asynchronous batch mode. This function provides real-time output as the inputs are being processed. If caller cancels a request, the partial results (for an input file, it's all or nothing) may still be available on the specified output location. This call returns immediately and you can use google.longrunning.Operation.name to poll the status of the call.",
              "httpMethod": "POST",
              "path": "v3beta1/{+parent}:batchTranslateDocument"
            },
            "detectLanguage": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ],
              "path": "v3beta1/{+parent}:detectLanguage",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}/locations/{location-id}` or `projects/{project-number-or-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Only models within the same region (has same location-id) can be used. Otherwise an INVALID_ARGUMENT (400) error is returned.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Detects the language of text within a request.",
              "httpMethod": "POST",
              "response": {
                "$ref": "DetectLanguageResponse"
              },
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}:detectLanguage",
              "request": {
                "$ref": "DetectLanguageRequest"
              },
              "id": "translate.projects.locations.detectLanguage",
              "parameterOrder": [
                "parent"
              ]
            },
            "translateDocument": {
              "description": "Translates documents in synchronous mode.",
              "httpMethod": "POST",
              "id": "translate.projects.locations.translateDocument",
              "request": {
                "$ref": "TranslateDocumentRequest"
              },
              "response": {
                "$ref": "TranslateDocumentResponse"
              },
              "path": "v3beta1/{+parent}:translateDocument",
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}:translateDocument",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Required. Location to make a regional call. Format: `projects/{project-number-or-id}/locations/{location-id}`. For global calls, use `projects/{project-number-or-id}/locations/global`. Non-global location is required for requests using AutoML models or custom glossaries. Models and glossaries must be within the same region (have the same location-id), otherwise an INVALID_ARGUMENT (400) error is returned.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ]
            },
            "translateText": {
              "path": "v3beta1/{+parent}:translateText",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ],
              "id": "translate.projects.locations.translateText",
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}:translateText",
              "response": {
                "$ref": "TranslateTextResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}` or `projects/{project-number-or-id}/locations/{location-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Non-global location is required for requests using AutoML models or custom glossaries. Models and glossaries must be within the same region (have same location-id), otherwise an INVALID_ARGUMENT (400) error is returned."
                }
              },
              "description": "Translates input text and returns translated text.",
              "request": {
                "$ref": "TranslateTextRequest"
              }
            },
            "getSupportedLanguages": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-translation"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "SupportedLanguages"
              },
              "path": "v3beta1/{+parent}/supportedLanguages",
              "id": "translate.projects.locations.getSupportedLanguages",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v3beta1/projects/{projectsId}/locations/{locationsId}/supportedLanguages",
              "description": "Returns a list of supported languages for translation.",
              "parameters": {
                "model": {
                  "type": "string",
                  "description": "Optional. Get supported languages of this model. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, Returns languages supported by the specified model. If missing, we get supported languages of Google general NMT model.",
                  "location": "query"
                },
                "displayLanguageCode": {
                  "location": "query",
                  "description": "Optional. The language to use to return localized, human readable names of supported languages. If missing, then display names are not returned in a response.",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}` or `projects/{project-number-or-id}/locations/{location-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Non-global location is required for AutoML models. Only models within the same region (have same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned."
                }
              }
            }
          }
        }
      },
      "methods": {
        "translateText": {
          "response": {
            "$ref": "TranslateTextResponse"
          },
          "parameters": {
            "parent": {
              "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}` or `projects/{project-number-or-id}/locations/{location-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Non-global location is required for requests using AutoML models or custom glossaries. Models and glossaries must be within the same region (have same location-id), otherwise an INVALID_ARGUMENT (400) error is returned.",
              "required": true,
              "location": "path",
              "pattern": "^projects/[^/]+$",
              "type": "string"
            }
          },
          "path": "v3beta1/{+parent}:translateText",
          "description": "Translates input text and returns translated text.",
          "request": {
            "$ref": "TranslateTextRequest"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "POST",
          "flatPath": "v3beta1/projects/{projectsId}:translateText",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-translation"
          ],
          "id": "translate.projects.translateText"
        },
        "getSupportedLanguages": {
          "id": "translate.projects.getSupportedLanguages",
          "flatPath": "v3beta1/projects/{projectsId}/supportedLanguages",
          "path": "v3beta1/{+parent}/supportedLanguages",
          "description": "Returns a list of supported languages for translation.",
          "response": {
            "$ref": "SupportedLanguages"
          },
          "parameters": {
            "parent": {
              "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}` or `projects/{project-number-or-id}/locations/{location-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Non-global location is required for AutoML models. Only models within the same region (have same location-id) can be used, otherwise an INVALID_ARGUMENT (400) error is returned.",
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+$",
              "location": "path"
            },
            "model": {
              "description": "Optional. Get supported languages of this model. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, Returns languages supported by the specified model. If missing, we get supported languages of Google general NMT model.",
              "type": "string",
              "location": "query"
            },
            "displayLanguageCode": {
              "type": "string",
              "location": "query",
              "description": "Optional. The language to use to return localized, human readable names of supported languages. If missing, then display names are not returned in a response."
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-translation"
          ]
        },
        "detectLanguage": {
          "description": "Detects the language of text within a request.",
          "response": {
            "$ref": "DetectLanguageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-translation"
          ],
          "parameters": {
            "parent": {
              "type": "string",
              "pattern": "^projects/[^/]+$",
              "description": "Required. Project or location to make a call. Must refer to a caller's project. Format: `projects/{project-number-or-id}/locations/{location-id}` or `projects/{project-number-or-id}`. For global calls, use `projects/{project-number-or-id}/locations/global` or `projects/{project-number-or-id}`. Only models within the same region (has same location-id) can be used. Otherwise an INVALID_ARGUMENT (400) error is returned.",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "v3beta1/projects/{projectsId}:detectLanguage",
          "request": {
            "$ref": "DetectLanguageRequest"
          },
          "httpMethod": "POST",
          "path": "v3beta1/{+parent}:detectLanguage",
          "id": "translate.projects.detectLanguage",
          "parameterOrder": [
            "parent"
          ]
        }
      }
    }
  },
  "canonicalName": "Translate",
  "basePath": "",
  "title": "Cloud Translation API",
  "mtlsRootUrl": "https://translation.mtls.googleapis.com/",
  "rootUrl": "https://translation.googleapis.com/",
  "version": "v3beta1",
  "baseUrl": "https://translation.googleapis.com/",
  "description": "Integrates text translation into your website or application.",
  "documentationLink": "https://cloud.google.com/translate/docs/quickstarts",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true
}

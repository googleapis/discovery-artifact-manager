{
  "title": "Access Approval API",
  "version": "v1",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "canonicalName": "Access Approval",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/cloud-provider-access-management/access-approval/docs",
  "version_module": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "mtlsRootUrl": "https://accessapproval.mtls.googleapis.com/",
  "name": "accessapproval",
  "id": "accessapproval:v1",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "approvalRequests": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying the page of results to return."
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\"."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "Requested page size.",
                  "type": "integer"
                }
              },
              "id": "accessapproval.projects.approvalRequests.list",
              "flatPath": "v1/projects/{projectsId}/approvalRequests",
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/approvalRequests"
            },
            "dismiss": {
              "path": "v1/{+name}:dismiss",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:dismiss",
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              },
              "id": "accessapproval.projects.approvalRequests.dismiss",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "description": "Name of the ApprovalRequest to dismiss.",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state."
            },
            "approve": {
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:approve",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "location": "path",
                  "description": "Name of the approval request to approve.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ApprovalRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "parameterOrder": [
                "name"
              ],
              "id": "accessapproval.projects.approvalRequests.approve",
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              },
              "path": "v1/{+name}:approve"
            },
            "get": {
              "id": "accessapproval.projects.approvalRequests.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ApprovalRequest"
              },
              "parameters": {
                "name": {
                  "description": "The name of the approval request to retrieve. Format: \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\"",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}",
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "path": "v1/{+name}"
            },
            "invalidate": {
              "response": {
                "$ref": "ApprovalRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:invalidate",
              "request": {
                "$ref": "InvalidateApprovalRequestMessage"
              },
              "path": "v1/{+name}:invalidate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.",
              "parameters": {
                "name": {
                  "description": "Name of the ApprovalRequest to invalidate.",
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "accessapproval.projects.approvalRequests.invalidate"
            }
          }
        }
      },
      "methods": {
        "getServiceAccount": {
          "parameterOrder": [
            "name"
          ],
          "description": "Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.",
          "path": "v1/{+name}",
          "response": {
            "$ref": "AccessApprovalServiceAccount"
          },
          "id": "accessapproval.projects.getServiceAccount",
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalServiceAccount to retrieve.",
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+/serviceAccount$",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{projectsId}/serviceAccount"
        },
        "updateAccessApprovalSettings": {
          "httpMethod": "PATCH",
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "parameters": {
            "updateMask": {
              "type": "string",
              "location": "query",
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated.",
              "format": "google-fieldmask"
            },
            "name": {
              "type": "string",
              "pattern": "^projects/[^/]+/accessApprovalSettings$",
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "id": "accessapproval.projects.updateAccessApprovalSettings",
          "parameterOrder": [
            "name"
          ]
        },
        "deleteAccessApprovalSettings": {
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalSettings to delete.",
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+/accessApprovalSettings$",
              "location": "path"
            }
          },
          "httpMethod": "DELETE",
          "id": "accessapproval.projects.deleteAccessApprovalSettings",
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        },
        "getAccessApprovalSettings": {
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "description": "Gets the settings associated with a project, folder, or organization.",
          "path": "v1/{+name}",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "description": "The name of the AccessApprovalSettings to retrieve. Format: \"{projects|folders|organizations}/{id}/accessApprovalSettings\"",
              "required": true,
              "pattern": "^projects/[^/]+/accessApprovalSettings$"
            }
          },
          "id": "accessapproval.projects.getAccessApprovalSettings",
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "organizations": {
      "methods": {
        "deleteAccessApprovalSettings": {
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "DELETE",
          "path": "v1/{+name}",
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "type": "string",
              "description": "Name of the AccessApprovalSettings to delete."
            }
          },
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "id": "accessapproval.organizations.deleteAccessApprovalSettings"
        },
        "getServiceAccount": {
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalServiceAccount to retrieve.",
              "type": "string",
              "location": "path",
              "pattern": "^organizations/[^/]+/serviceAccount$",
              "required": true
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "AccessApprovalServiceAccount"
          },
          "flatPath": "v1/organizations/{organizationsId}/serviceAccount",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "id": "accessapproval.organizations.getServiceAccount"
        },
        "updateAccessApprovalSettings": {
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "id": "accessapproval.organizations.updateAccessApprovalSettings",
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "required": true,
              "type": "string"
            },
            "updateMask": {
              "type": "string",
              "location": "query",
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated.",
              "format": "google-fieldmask"
            }
          }
        },
        "getAccessApprovalSettings": {
          "path": "v1/{+name}",
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The name of the AccessApprovalSettings to retrieve. Format: \"{projects|folders|organizations}/{id}/accessApprovalSettings\"",
              "location": "path",
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "type": "string",
              "required": true
            }
          },
          "id": "accessapproval.organizations.getAccessApprovalSettings",
          "description": "Gets the settings associated with a project, folder, or organization.",
          "httpMethod": "GET"
        }
      },
      "resources": {
        "approvalRequests": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ApprovalRequest"
              },
              "id": "accessapproval.organizations.approvalRequests.get",
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "parameters": {
                "name": {
                  "description": "The name of the approval request to retrieve. Format: \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\"",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$",
                  "location": "path"
                }
              }
            },
            "approve": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "path": "v1/{+name}:approve",
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:approve",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Name of the approval request to approve.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$"
                }
              },
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              },
              "id": "accessapproval.organizations.approvalRequests.approve"
            },
            "dismiss": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$",
                  "description": "Name of the ApprovalRequest to dismiss."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              },
              "id": "accessapproval.organizations.approvalRequests.dismiss",
              "httpMethod": "POST",
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:dismiss",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "path": "v1/{+name}:dismiss"
            },
            "invalidate": {
              "description": "Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:invalidate",
              "httpMethod": "POST",
              "request": {
                "$ref": "InvalidateApprovalRequestMessage"
              },
              "response": {
                "$ref": "ApprovalRequest"
              },
              "id": "accessapproval.organizations.approvalRequests.invalidate",
              "path": "v1/{+name}:invalidate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Name of the ApprovalRequest to invalidate.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$"
                }
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/approvalRequests",
              "httpMethod": "GET",
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying the page of results to return."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Requested page size.",
                  "format": "int32"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\".",
                  "required": true,
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "id": "accessapproval.organizations.approvalRequests.list",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests"
            }
          }
        }
      }
    },
    "folders": {
      "resources": {
        "approvalRequests": {
          "methods": {
            "get": {
              "response": {
                "$ref": "ApprovalRequest"
              },
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}",
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accessapproval.folders.approvalRequests.get",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "The name of the approval request to retrieve. Format: \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\"",
                  "type": "string",
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$"
                }
              }
            },
            "dismiss": {
              "id": "accessapproval.folders.approvalRequests.dismiss",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "parameters": {
                "name": {
                  "description": "Name of the ApprovalRequest to dismiss.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$"
                }
              },
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:dismiss",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              },
              "path": "v1/{+name}:dismiss",
              "parameterOrder": [
                "name"
              ]
            },
            "invalidate": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Name of the ApprovalRequest to invalidate.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.",
              "path": "v1/{+name}:invalidate",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:invalidate",
              "id": "accessapproval.folders.approvalRequests.invalidate",
              "httpMethod": "POST",
              "request": {
                "$ref": "InvalidateApprovalRequestMessage"
              }
            },
            "list": {
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "flatPath": "v1/folders/{foldersId}/approvalRequests",
              "httpMethod": "GET",
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^folders/[^/]+$",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\".",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Requested page size.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying the page of results to return."
                }
              },
              "id": "accessapproval.folders.approvalRequests.list",
              "path": "v1/{+parent}/approvalRequests"
            },
            "approve": {
              "response": {
                "$ref": "ApprovalRequest"
              },
              "id": "accessapproval.folders.approvalRequests.approve",
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:approve",
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}:approve",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Name of the approval request to approve.",
                  "location": "path",
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$"
                }
              }
            }
          }
        }
      },
      "methods": {
        "updateAccessApprovalSettings": {
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "parameters": {
            "updateMask": {
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated.",
              "location": "query",
              "format": "google-fieldmask",
              "type": "string"
            },
            "name": {
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "type": "string",
              "pattern": "^folders/[^/]+/accessApprovalSettings$",
              "location": "path",
              "required": true
            }
          },
          "id": "accessapproval.folders.updateAccessApprovalSettings",
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "httpMethod": "PATCH",
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        },
        "getServiceAccount": {
          "id": "accessapproval.folders.getServiceAccount",
          "description": "Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "flatPath": "v1/folders/{foldersId}/serviceAccount",
          "path": "v1/{+name}",
          "response": {
            "$ref": "AccessApprovalServiceAccount"
          },
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalServiceAccount to retrieve.",
              "location": "path",
              "type": "string",
              "pattern": "^folders/[^/]+/serviceAccount$",
              "required": true
            }
          }
        },
        "deleteAccessApprovalSettings": {
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalSettings to delete.",
              "pattern": "^folders/[^/]+/accessApprovalSettings$",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "httpMethod": "DELETE",
          "id": "accessapproval.folders.deleteAccessApprovalSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}"
        },
        "getAccessApprovalSettings": {
          "description": "Gets the settings associated with a project, folder, or organization.",
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "description": "The name of the AccessApprovalSettings to retrieve. Format: \"{projects|folders|organizations}/{id}/accessApprovalSettings\"",
              "type": "string",
              "pattern": "^folders/[^/]+/accessApprovalSettings$"
            }
          },
          "id": "accessapproval.folders.getAccessApprovalSettings"
        }
      }
    }
  },
  "schemas": {
    "AccessApprovalServiceAccount": {
      "properties": {
        "name": {
          "description": "The resource name of the Access Approval service account. Format is one of: * \"projects/{project}/serviceAccount\" * \"folders/{folder}/serviceAccount\" * \"organizations/{organization}/serviceAccount\"",
          "type": "string"
        },
        "accountEmail": {
          "description": "Email address of the service account.",
          "type": "string"
        }
      },
      "id": "AccessApprovalServiceAccount",
      "description": "Access Approval service account related to a project/folder/organization.",
      "type": "object"
    },
    "ApproveDecision": {
      "properties": {
        "approveTime": {
          "format": "google-datetime",
          "description": "The time at which approval was granted.",
          "type": "string"
        },
        "invalidateTime": {
          "description": "If set, denotes the timestamp at which the approval is invalidated.",
          "format": "google-datetime",
          "type": "string"
        },
        "autoApproved": {
          "type": "boolean",
          "description": "True when the request has been auto-approved."
        },
        "signatureInfo": {
          "description": "The signature for the ApprovalRequest and details on how it was signed.",
          "$ref": "SignatureInfo"
        },
        "expireTime": {
          "description": "The time at which the approval expires.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "ApproveDecision",
      "description": "A decision that has been made to approve access to a resource.",
      "type": "object"
    },
    "ListApprovalRequestsResponse": {
      "description": "Response to listing of ApprovalRequest objects.",
      "id": "ListApprovalRequestsResponse",
      "properties": {
        "approvalRequests": {
          "type": "array",
          "items": {
            "$ref": "ApprovalRequest"
          },
          "description": "Approval request details."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more."
        }
      },
      "type": "object"
    },
    "ApprovalRequest": {
      "description": "A request for the customer to approve access to a resource.",
      "type": "object",
      "id": "ApprovalRequest",
      "properties": {
        "requestedExpiration": {
          "type": "string",
          "format": "google-datetime",
          "description": "The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time."
        },
        "requestedLocations": {
          "description": "The locations for which approval is being requested.",
          "$ref": "AccessLocations"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the request. Format is \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\"."
        },
        "requestedResourceName": {
          "description": "The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \"full\" resource name (e.g. \"//library.googleapis.com/shelves/shelf1/books/book2\") or a \"relative\" resource name (e.g. \"shelves/shelf1/books/book2\") as described in the resource name specification.",
          "type": "string"
        },
        "requestedReason": {
          "$ref": "AccessReason",
          "description": "The justification for which approval is being requested."
        },
        "dismiss": {
          "description": "The request was dismissed.",
          "$ref": "DismissDecision"
        },
        "requestedResourceProperties": {
          "description": "Properties related to the resource represented by requested_resource_name.",
          "$ref": "ResourceProperties"
        },
        "requestTime": {
          "type": "string",
          "description": "The time at which approval was requested.",
          "format": "google-datetime"
        },
        "approve": {
          "description": "Access was approved.",
          "$ref": "ApproveDecision"
        }
      }
    },
    "ApproveApprovalRequestMessage": {
      "id": "ApproveApprovalRequestMessage",
      "description": "Request to approve an ApprovalRequest.",
      "type": "object",
      "properties": {
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The expiration time of this approval."
        }
      }
    },
    "EnrolledService": {
      "type": "object",
      "id": "EnrolledService",
      "properties": {
        "cloudProduct": {
          "type": "string",
          "description": "The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * GA * App Engine * Artifact Registry * BigQuery * Certificate Authority Service * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM * Cloud Firestore * Cloud HSM * Cloud Identity and Access Management * Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud SQL * Cloud Storage * Google Kubernetes Engine * Organization Policy Serivice * Persistent Disk * Resource Manager * Secret Manager * Speaker ID Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * ga-only * appengine.googleapis.com * artifactregistry.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * container.googleapis.com * cloudkms.googleapis.com * cloudresourcemanager.googleapis.com * cloudsql.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * dataproc.googleapis.com * dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com * orgpolicy.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * secretmanager.googleapis.com * speakerid.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using 'all' or any of the XXX.googleapis.com will be translated to the associated product name ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services"
        },
        "enrollmentLevel": {
          "enumDescriptions": [
            "Default value for proto, shouldn't be used.",
            "Service is enrolled in Access Approval for all requests"
          ],
          "description": "The enrollment level of the service.",
          "enum": [
            "ENROLLMENT_LEVEL_UNSPECIFIED",
            "BLOCK_ALL"
          ],
          "type": "string"
        }
      },
      "description": "Represents the enrollment of a cloud resource into a specific service."
    },
    "AccessApprovalSettings": {
      "id": "AccessApprovalSettings",
      "type": "object",
      "properties": {
        "invalidKeyVersion": {
          "description": "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that there is some configuration issue with the active_key_version configured at this level in the resource hierarchy (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on it, etc.) This key version is not necessarily the effective key version at this level, as key versions are inherited top-down.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\""
        },
        "enrolledServices": {
          "items": {
            "$ref": "EnrolledService"
          },
          "type": "array",
          "description": "A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the resource given by name against any of these services contained here will be required to have explicit approval. If name refers to an organization, enrollment can be done for individual services. If name refers to a folder or project, enrollment can only be done on an all or nothing basis. If a cloud_product is repeated in this list, the first entry will be honored and all following entries will be discarded. A maximum of 10 enrolled services will be enforced, to be expanded as the set of supported services is expanded."
        },
        "notificationEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email addresses are allowed."
        },
        "ancestorHasActiveKeyVersion": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that an ancestor of this Project or Folder has set active_key_version (this field will always be unset for the organization since organizations do not have ancestors)."
        },
        "activeKeyVersion": {
          "type": "string",
          "description": "The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a Google-managed key should be used for signing. This property will be ignored if set by an ancestor of this resource, and new non-empty values may not be set."
        },
        "enrolledAncestor": {
          "readOnly": true,
          "description": "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors of the Project or Folder (this field will always be unset for the organization since organizations do not have ancestors).",
          "type": "boolean"
        }
      },
      "description": "Settings on a Project/Folder/Organization related to Access Approval."
    },
    "AccessReason": {
      "properties": {
        "detail": {
          "type": "string",
          "description": "More detail about certain reason types. See comments for each type above."
        },
        "type": {
          "enumDescriptions": [
            "Default value for proto, shouldn't be used.",
            "Customer made a request or raised an issue that required the principal to access customer data. `detail` is of the form (\"#####\" is the issue ID): * \"Feedback Report: #####\" * \"Case Number: #####\" * \"Case ID: #####\" * \"E-PIN Reference: #####\" * \"Google-#####\" * \"T-#####\"",
            "The principal accessed customer data in order to diagnose or resolve a suspected issue in services. Often this access is used to confirm that customers are not affected by a suspected service issue or to remediate a reversible system issue.",
            "Google initiated service for security, fraud, abuse, or compliance purposes.",
            "The principal was compelled to access customer data in order to respond to a legal third party data request or process, including legal processes from customers themselves.",
            "The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage."
          ],
          "description": "Type of access justification.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CUSTOMER_INITIATED_SUPPORT",
            "GOOGLE_INITIATED_SERVICE",
            "GOOGLE_INITIATED_REVIEW",
            "THIRD_PARTY_DATA_REQUEST",
            "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccessReason"
    },
    "InvalidateApprovalRequestMessage": {
      "description": "Request to invalidate an existing approval.",
      "type": "object",
      "id": "InvalidateApprovalRequestMessage",
      "properties": {}
    },
    "AccessLocations": {
      "type": "object",
      "id": "AccessLocations",
      "description": "Home office and physical location of the principal.",
      "properties": {
        "principalPhysicalLocationCountry": {
          "description": "Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location",
          "type": "string"
        },
        "principalOfficeCountry": {
          "type": "string",
          "description": "The \"home office\" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location"
        }
      }
    },
    "SignatureInfo": {
      "id": "SignatureInfo",
      "type": "object",
      "properties": {
        "googlePublicKeyPem": {
          "description": "The public key for the Google default signing, encoded in PEM format. The signature was created using a private key which may be verified using this public key.",
          "type": "string"
        },
        "customerKmsKeyVersion": {
          "description": "The resource name of the customer CryptoKeyVersion used for signing.",
          "type": "string"
        },
        "signature": {
          "description": "The digital signature.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Information about the digital signature of the resource."
    },
    "ResourceProperties": {
      "id": "ResourceProperties",
      "type": "object",
      "description": "The properties associated with the resource of the request.",
      "properties": {
        "excludesDescendants": {
          "type": "boolean",
          "description": "Whether an approval will exclude the descendants of the resource being requested."
        }
      }
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "DismissDecision": {
      "id": "DismissDecision",
      "properties": {
        "implicit": {
          "description": "This field will be true if the ApprovalRequest was implicitly dismissed due to inaction by the access approval approvers (the request is not acted on by the approvers before the exiration time).",
          "type": "boolean"
        },
        "dismissTime": {
          "format": "google-datetime",
          "description": "The time at which the approval request was dismissed.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A decision that has been made to dismiss an approval request."
    },
    "DismissApprovalRequestMessage": {
      "type": "object",
      "description": "Request to dismiss an approval request.",
      "id": "DismissApprovalRequestMessage",
      "properties": {}
    }
  },
  "ownerName": "Google",
  "protocol": "rest",
  "rootUrl": "https://accessapproval.googleapis.com/",
  "servicePath": "",
  "description": "An API for controlling access to data by Google personnel.",
  "revision": "20230317",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "baseUrl": "https://accessapproval.googleapis.com/",
  "kind": "discovery#restDescription"
}

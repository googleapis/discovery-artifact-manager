{
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "name": "gkehub",
  "version_module": true,
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://gkehub.googleapis.com/",
  "rootUrl": "https://gkehub.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "featureConfigs": {
              "methods": {
                "delete": {
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/featureConfigs/{featureConfigsId}",
                  "httpMethod": "DELETE",
                  "path": "v2alpha/{+name}",
                  "id": "gkehub.projects.locations.featureConfigs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Removes a FeatureConfig.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/featureConfigs/.*$",
                      "description": "Required. The name of the membershipFeature to be deleted. Specified in the format `projects/*/locations/*/featureConfigs/**`."
                    },
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListFeatureConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.featureConfigs.list",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent where the FeatureConfigs will be listed. In the format: `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Lists FeatureConfigs that match the filter expression, following the syntax outlined in https://google.aip.dev/160.",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2alpha/{+parent}/featureConfigs",
                  "description": "Lists all FeatureConfigs in a given project and location.",
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/featureConfigs"
                },
                "get": {
                  "response": {
                    "$ref": "FeatureConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "========= FeatureConfig Services ========= Gets details of a featureConfig.",
                  "path": "v2alpha/{+name}",
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/featureConfigs/{featureConfigsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The FeatureConfig resource name in the format `projects/*/locations/*/featureConfigs/**`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/featureConfigs/.*$"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.featureConfigs.get"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "location": "query",
                      "type": "string"
                    },
                    "featureConfigId": {
                      "type": "string",
                      "location": "query",
                      "description": "The ID of the feature config to create."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The name of parent where the FeatureConfig will be created. Specified in the format `projects/{project}/locations/global/featureConfigs/{feature_type}/{feature_config}/`.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates FeatureConfig under a given parent.",
                  "request": {
                    "$ref": "FeatureConfig"
                  },
                  "id": "gkehub.projects.locations.featureConfigs.create",
                  "path": "v2alpha/{+parent}/featureConfigs",
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/featureConfigs",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "gkehub.projects.locations.operations.list",
                  "path": "v2alpha/{+name}/operations"
                },
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v2alpha/{+name}:cancel",
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2alpha/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "memberships": {
              "resources": {
                "features": {
                  "methods": {
                    "get": {
                      "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features/{featuresId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MembershipFeature"
                      },
                      "description": "========= MembershipFeature Services ========= Gets details of a membershipFeature.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.memberships.features.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/features/[^/]+$",
                          "description": "Required. The MembershipFeature resource name in the format `projects/*/locations/*/memberships/*/features/*`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v2alpha/{+name}",
                      "httpMethod": "GET"
                    },
                    "patch": {
                      "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features/{featuresId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/features/[^/]+$",
                          "type": "string",
                          "description": "Output only. The resource name of the membershipFeature, in the format: `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`. Note that `membershipFeatures` is shortened to `features` in the resource name. (see http://go/aip/122#collection-identifiers)"
                        },
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update.",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Idempotent request UUID.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates an existing MembershipFeature.",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "MembershipFeature"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkehub.projects.locations.memberships.features.patch",
                      "path": "v2alpha/{+name}"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Removes a membershipFeature.",
                      "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features/{featuresId}",
                      "path": "v2alpha/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkehub.projects.locations.memberships.features.delete",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Idempotent request UUID.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/features/[^/]+$",
                          "description": "Required. The name of the membershipFeature to be deleted. Specified in the format `projects/*/locations/*/memberships/*/features/*`.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "id": "gkehub.projects.locations.memberships.features.list",
                      "path": "v2alpha/{+parent}/features",
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Lists MembershipFeatures that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"helloworld\" in project \"foo-proj\" and membership \"member-bar\": name = \"projects/foo-proj/locations/global/memberships/member-bar/features/helloworld\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent where the MembershipFeature will be listed. In the format: `projects/*/locations/*/memberships/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "location": "path"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering."
                        },
                        "pageSize": {
                          "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListMembershipFeaturesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "description": "Lists MembershipFeatures in a given project and location.",
                      "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features"
                    },
                    "create": {
                      "request": {
                        "$ref": "MembershipFeature"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "gkehub.projects.locations.memberships.features.create",
                      "description": "Creates membershipFeature under a given parent.",
                      "parameters": {
                        "requestId": {
                          "description": "Idempotent request UUID.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of parent where the MembershipFeature will be created. Specified in the format `projects/*/locations/*/memberships/*/features/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v2alpha/{+parent}/features",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/features"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v2alpha/{+name}/locations",
              "id": "gkehub.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2alpha/projects/{projectsId}/locations"
            },
            "get": {
              "path": "v2alpha/{+name}",
              "flatPath": "v2alpha/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "gkehub.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "id": "gkehub:v2alpha",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "revision": "20220204",
  "ownerName": "Google",
  "basePath": "",
  "schemas": {
    "State": {
      "properties": {
        "description": {
          "description": "A human-readable description of the current status.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this status and any related Feature-specific details were updated."
        },
        "code": {
          "description": "The high-level, machine-readable status of this MembershipFeature.",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Unknown or not set.",
            "The MembershipFeature is operating normally.",
            "The MembershipFeature has encountered an issue, and is operating in a degraded state. The MembershipFeature may need intervention to return to normal operation. See the description and any associated MembershipFeature-specific details for more information.",
            "The MembershipFeature is not operating or is in a severely degraded state. The MembershipFeature may need intervention to return to normal operation. See the description and any associated MembershipFeature-specific details for more information."
          ],
          "type": "string"
        }
      },
      "description": "High-level state of a MembershipFeature.",
      "id": "State",
      "type": "object"
    },
    "FeatureConfigState": {
      "description": "FeatureConfigState describes the state of a FeatureConfig resource.",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING"
          ],
          "type": "string",
          "description": "Output only. The current state of the FeatureConfig resource.",
          "readOnly": true,
          "enumDescriptions": [
            "The code is not set.",
            "The FeatureConfig is being created.",
            "The FeatureConfig has been created.",
            "The FeatureConfig is being deleted."
          ]
        }
      },
      "id": "FeatureConfigState"
    },
    "ResourceState": {
      "properties": {
        "state": {
          "description": "Output only. The current state of the Feature resource in the Hub API.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "type": "string",
          "enumDescriptions": [
            "State is unknown or not set.",
            "The MembershipFeature is being enabled, and the MembershipFeature resource is being created. Once complete, the corresponding MembershipFeature will be enabled in this Hub.",
            "The MembershipFeature is enabled in this Hub, and the MembershipFeature resource is fully available.",
            "The MembershipFeature is being disabled in this Hub, and the MembershipFeature resource is being deleted.",
            "The MembershipFeature resource is being updated.",
            "The MembershipFeature resource is being updated by the Hub Service."
          ],
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ResourceState",
      "description": "ResourceState describes the state of a MembershipFeature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the MembershipFeature."
    },
    "ListMembershipFeaturesResponse": {
      "description": "Response message for the `GkeHubFeature.ListMembershipFeatures` method.",
      "id": "ListMembershipFeaturesResponse",
      "type": "object",
      "properties": {
        "membershipFeatures": {
          "items": {
            "$ref": "MembershipFeature"
          },
          "description": "The list of matching MembershipFeatures.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListMembershipFeatures` method. The value of an empty string means that there are no more resources to return."
        }
      }
    },
    "FeatureConfig": {
      "description": "FeatureConfig contains configurations for a Fleet feature. FeatureConfig can be applied to MembershipFeature(s) to setup per-membership FeatureSpec.",
      "id": "FeatureConfig",
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "FeatureSpec",
          "description": "Input only. Immutable. User input of feature spec. Note that this field is immutable. Must create a new FeatureConfig if a new feature spec is needed."
        },
        "name": {
          "description": "Output only. Resource name of this FeatureConfig, in the format: `projects/{project}/locations/global/FeatureConfigs/{feature_type}/{feature_config}`",
          "readOnly": true,
          "type": "string"
        },
        "uniqueId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all FeatureConfig resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id."
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. When the FeatureConfig resource was deleted.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the FeatureConfig resource was last updated."
        },
        "state": {
          "$ref": "FeatureConfigState",
          "description": "Lifecycle information of the FeatureConfig."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "GCP labels for this FeatureConfig."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. When the FeatureConfig resource was created.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      }
    },
    "FeatureState": {
      "properties": {
        "state": {
          "description": "The high-level state of this MembershipFeature.",
          "$ref": "State"
        }
      },
      "type": "object",
      "description": "FeatureState contains high-level state information and per-feature state information for this MembershipFeature.",
      "id": "FeatureState"
    },
    "MembershipFeature": {
      "description": "MembershipFeature represents the settings and status of a Fleet Feature enabled on a single Fleet Membership.",
      "type": "object",
      "id": "MembershipFeature",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. When the MembershipFeature resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "GCP labels for this MembershipFeature."
        },
        "state": {
          "description": "Output only. State of the this membershipFeature.",
          "readOnly": true,
          "$ref": "FeatureState"
        },
        "resourceState": {
          "$ref": "ResourceState",
          "description": "Lifecycle information of the resource itself."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the membershipFeature, in the format: `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`. Note that `membershipFeatures` is shortened to `features` in the resource name. (see http://go/aip/122#collection-identifiers)",
          "readOnly": true
        },
        "spec": {
          "readOnly": true,
          "description": "Output only. Spec of this membershipFeature.",
          "$ref": "FeatureSpec"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. When the MembershipFeature resource was last updated.",
          "type": "string"
        },
        "deleteTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the MembershipFeature resource was deleted."
        },
        "featureConfigRef": {
          "$ref": "FeatureConfigRef",
          "description": "Reference information for a FeatureConfig applied on the MembershipFeature."
        }
      }
    },
    "GoogleRpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus"
    },
    "ListFeatureConfigsResponse": {
      "type": "object",
      "id": "ListFeatureConfigsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListFeatureConfigs` method. The value of an empty string means that there are no more resources to return."
        },
        "featureConfigs": {
          "items": {
            "$ref": "FeatureConfig"
          },
          "description": "The list of FeatureConfig(s).",
          "type": "array"
        }
      },
      "description": "Response message for the `GkeHubFeature.ListFeatureConfigs` method."
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "cancelRequested": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "statusDetail": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        }
      },
      "description": "Metadata of the long-running operation."
    },
    "Operation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object"
    },
    "FeatureSpec": {
      "properties": {},
      "type": "object",
      "description": "FeatureSpec contains user input per-feature spec information.",
      "id": "FeatureSpec"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      }
    },
    "FeatureConfigRef": {
      "type": "object",
      "id": "FeatureConfigRef",
      "properties": {
        "config": {
          "description": "Input only. Resource name of FeatureConfig, in the format: `projects/{project}/locations/global/featureConfigs/{feature_config}`.",
          "type": "string"
        },
        "configUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the FeatureConfig was last applied and copied to FeatureSpec."
        },
        "uuid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An id that uniquely identify a FeatureConfig object."
        }
      },
      "description": "Information of the FeatureConfig applied on the MembershipFeature."
    },
    "CancelOperationRequest": {
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v2alpha",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "canonicalName": "GKE Hub",
  "description": "",
  "title": "GKE Hub API",
  "batchPath": "batch"
}

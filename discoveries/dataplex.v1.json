{
  "baseUrl": "https://dataplex.googleapis.com/",
  "canonicalName": "Cloud Dataplex",
  "title": "Cloud Dataplex API",
  "ownerName": "Google",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/dataplex/docs",
  "servicePath": "",
  "description": "Dataplex API is used to manage the lifecycle of data lakes.",
  "name": "dataplex",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "revision": "20220328",
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "dataplex:v1",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "dataplex.projects.locations.operations.list",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    }
                  },
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "id": "dataplex.projects.locations.operations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "lakes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dataplex.projects.locations.lakes.list",
                  "description": "Lists lake resources in a project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filter request."
                    },
                    "pageSize": {
                      "description": "Optional. Maximum number of Lakes to return. The service may return fewer than this value. If unspecified, at most 10 lakes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Page token received from a previous ListLakes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakes must match the call that provided the page token."
                    },
                    "orderBy": {
                      "description": "Optional. Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListLakesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/lakes"
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "dataplex.projects.locations.lakes.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    }
                  }
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.lakes.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions"
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "id": "dataplex.projects.locations.lakes.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy"
                },
                "create": {
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "lakeId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Lake identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the customer project / location."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dataplex.projects.locations.lakes.create",
                  "description": "Creates a lake resource.",
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "path": "v1/{+parent}/lakes"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "id": "dataplex.projects.locations.lakes.patch",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Updates a lake resource.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Mask of fields to update.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "dataplex.projects.locations.lakes.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "description": "Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Retrieves a lake resource.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataplex.projects.locations.lakes.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "actions": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListLakeActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakeActions must match the call that provided the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.actions.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions",
                      "path": "v1/{+parent}/actions",
                      "description": "Lists action resources in a lake."
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "getIamPolicy": {
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.zones.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32"
                        },
                        "resource": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                        }
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Optional. Filter request.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. Maximum number of zones to return. The service may return fewer than this value. If unspecified, at most 10 zones will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Order by fields for the result."
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.zones.list",
                      "description": "Lists zone resources in a lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListZonesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/zones",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "description": "Retrieves a zone resource.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}",
                          "required": true
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.zones.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "description": "Updates a zone resource.",
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update."
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.zones.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "description": "Creates a zone resource within a lake.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "zoneId": {
                          "type": "string",
                          "description": "Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. \"default\", \"global-temp\")",
                          "location": "query"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "id": "dataplex.projects.locations.lakes.zones.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/zones",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}`",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "description": "Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.",
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dataplex.projects.locations.lakes.zones.delete"
                    },
                    "testIamPermissions": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions",
                      "id": "dataplex.projects.locations.lakes.zones.testIamPermissions",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      }
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "id": "dataplex.projects.locations.lakes.zones.setIamPolicy"
                    }
                  },
                  "resources": {
                    "actions": {
                      "methods": {
                        "list": {
                          "id": "dataplex.projects.locations.lakes.zones.actions.list",
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32"
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "Optional. Page token received from a previous ListZoneActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZoneActions must match the call that provided the page token.",
                              "location": "query"
                            },
                            "parent": {
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                            }
                          },
                          "description": "Lists action resources in a zone.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                          },
                          "path": "v1/{+parent}/actions"
                        }
                      }
                    },
                    "entities": {
                      "methods": {
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "httpMethod": "GET",
                          "parameters": {
                            "view": {
                              "enumDescriptions": [
                                "The default unset value. Return both table and fileset entities if unspecified.",
                                "Only list table entities.",
                                "Only list fileset entities."
                              ],
                              "location": "query",
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "TABLES",
                                "FILESETS"
                              ],
                              "description": "Required. Specify the entity view to make a partial list request.",
                              "type": "string"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Page token received from a previous ListEntities call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEntities must match the call that provided the page token."
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "required": true,
                              "location": "path"
                            },
                            "pageSize": {
                              "description": "Optional. Maximum number of entities to return. The service may return fewer than this value. If unspecified, 100 entities will be returned by default. The maximum value is 500; larger values will will be truncated to 500.",
                              "type": "integer",
                              "location": "query",
                              "format": "int32"
                            },
                            "filter": {
                              "location": "query",
                              "description": "Optional. The following filter parameters can be added to the URL to limit the entities returned by the API: Entity ID: ?filter=\"id=entityID\" Asset ID: ?filter=\"asset=assetID\" Data path ?filter=\"data_path=gs://my-bucket\" Is HIVE compatible: ?filter=\"hive_compatible=true\" Is BigQuery compatible: ?filter=\"bigquery_compatible=true\"",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.entities.list",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListEntitiesResponse"
                          },
                          "path": "v1/{+parent}/entities",
                          "description": "List metadata entities in a zone."
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Get a metadata entity.",
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "required": true
                            },
                            "view": {
                              "location": "query",
                              "enumDescriptions": [
                                "The API will default to the BASIC view.",
                                "Minimal view that does not include the schema.",
                                "Include basic information and schema.",
                                "Include everything. Currently, this is the same as the SCHEMA view."
                              ],
                              "description": "Optional. Used to select the subset of entity information to return. Defaults to BASIC.",
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "BASIC",
                                "SCHEMA",
                                "FULL"
                              ],
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.entities.get",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}"
                        },
                        "create": {
                          "path": "v1/{+parent}/entities",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "id": "dataplex.projects.locations.lakes.zones.entities.create",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
                            },
                            "validateOnly": {
                              "location": "query",
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                            }
                          },
                          "description": "Create a metadata entity.",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          }
                        },
                        "update": {
                          "httpMethod": "PUT",
                          "id": "dataplex.projects.locations.lakes.zones.entities.update",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.",
                              "type": "string"
                            },
                            "validateOnly": {
                              "location": "query",
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "description": "Update a metadata entity. Only supports full resource update.",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          }
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
                            },
                            "etag": {
                              "type": "string",
                              "description": "Required. The etag associated with the entity, which can be retrieved with a GetEntity request.",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.entities.delete",
                          "description": "Delete a metadata entity.",
                          "path": "v1/{+name}"
                        }
                      },
                      "resources": {
                        "partitions": {
                          "methods": {
                            "create": {
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.create",
                              "parameterOrder": [
                                "parent"
                              ],
                              "path": "v1/{+parent}/partitions",
                              "parameters": {
                                "parent": {
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                                  "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                                  "required": true
                                },
                                "validateOnly": {
                                  "type": "boolean",
                                  "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                                  "location": "query"
                                }
                              },
                              "httpMethod": "POST",
                              "request": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Create a metadata partition."
                            },
                            "delete": {
                              "path": "v1/{+name}",
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.delete",
                              "response": {
                                "$ref": "Empty"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameters": {
                                "etag": {
                                  "description": "Optional. The etag associated with the partition.",
                                  "type": "string",
                                  "location": "query"
                                },
                                "name": {
                                  "description": "Required. The resource name of the partition. format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided.",
                                  "location": "path",
                                  "required": true,
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$"
                                }
                              },
                              "description": "Delete a metadata partition.",
                              "httpMethod": "DELETE",
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}"
                            },
                            "get": {
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "required": true,
                                  "description": "Required. The resource name of the partition: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$",
                                  "type": "string"
                                }
                              },
                              "httpMethod": "GET",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "path": "v1/{+name}",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.get",
                              "description": "Get a metadata partition of an entity.",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}"
                            },
                            "list": {
                              "httpMethod": "GET",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameters": {
                                "filter": {
                                  "type": "string",
                                  "description": "Optional. Filter the partitions returned to the caller using a key value pair expression. Supported operators and syntax: logic operators: AND, OR comparison operators: \u003c, \u003e, \u003e=, \u003c= ,=, != LIKE operators: The right hand of a LIKE operator supports \".\" and \"*\" for wildcard searches, for example \"value1 LIKE \".*oo.*\" parenthetical grouping: ( )Sample filter expression: `?filter=\"key1 \u003c value1 OR key2 \u003e value2\"Notes: Keys to the left of operators are case insensitive. Partition results are sorted first by creation time, then by lexicographic order. Up to 20 key value filter pairs are allowed, but due to performance considerations, only the first 10 will be used as a filter.",
                                  "location": "query"
                                },
                                "pageSize": {
                                  "description": "Optional. Maximum number of partitions to return. The service may return fewer than this value. If unspecified, 100 partitions will be returned by default. The maximum page size is 500; larger values will will be truncated to 500.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "parent": {
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The resource name of the parent entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
                                },
                                "pageToken": {
                                  "description": "Optional. Page token received from a previous ListPartitions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPartitions must match the call that provided the page token.",
                                  "type": "string",
                                  "location": "query"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.list",
                              "path": "v1/{+parent}/partitions",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListPartitionsResponse"
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "description": "List metadata partitions of an entity."
                            }
                          }
                        }
                      }
                    },
                    "assets": {
                      "resources": {
                        "actions": {
                          "methods": {
                            "list": {
                              "description": "Lists action resources in an asset.",
                              "path": "v1/{+parent}/actions",
                              "parameterOrder": [
                                "parent"
                              ],
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "id": "dataplex.projects.locations.lakes.zones.assets.actions.list",
                              "parameters": {
                                "pageToken": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. Page token received from a previous ListAssetActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssetActions must match the call that provided the page token."
                                },
                                "pageSize": {
                                  "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "parent": {
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                                  "location": "path",
                                  "type": "string",
                                  "description": "Required. The resource name of the parent asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}"
                                }
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                              },
                              "httpMethod": "GET"
                            }
                          }
                        }
                      },
                      "methods": {
                        "setIamPolicy": {
                          "path": "v1/{+resource}:setIamPolicy",
                          "parameters": {
                            "resource": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.setIamPolicy",
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy",
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          },
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          }
                        },
                        "list": {
                          "parameters": {
                            "filter": {
                              "type": "string",
                              "description": "Optional. Filter request.",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Page token received from a previous ListAssets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssets must match the call that provided the page token."
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}`",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Optional. Maximum number of asset to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Order by fields for the result."
                            }
                          },
                          "description": "Lists asset resources in a zone.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListAssetsResponse"
                          },
                          "path": "v1/{+parent}/assets",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.list",
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets"
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path",
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}/assets/{asset_id}",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "httpMethod": "DELETE",
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          }
                        },
                        "get": {
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retrieves an asset resource.",
                          "id": "dataplex.projects.locations.lakes.zones.assets.get",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}/assets/{asset_id}",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "create": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "path": "v1/{+parent}/assets",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "validateOnly": {
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /zones/{zone_id}`",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "type": "string"
                            },
                            "assetId": {
                              "location": "query",
                              "type": "string",
                              "description": "Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone."
                            }
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "description": "Creates an asset resource.",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "id": "dataplex.projects.locations.lakes.zones.assets.create"
                        },
                        "testIamPermissions": {
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions",
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "id": "dataplex.projects.locations.lakes.zones.assets.testIamPermissions",
                          "parameterOrder": [
                            "resource"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:testIamPermissions",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          },
                          "parameters": {
                            "resource": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                              "type": "string"
                            }
                          }
                        },
                        "patch": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "path": "v1/{+name}",
                          "description": "Updates an asset resource.",
                          "id": "dataplex.projects.locations.lakes.zones.assets.patch",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "validateOnly": {
                              "location": "query",
                              "type": "boolean",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                            },
                            "name": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$"
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "description": "Required. Mask of fields to update.",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "PATCH",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          }
                        },
                        "getIamPolicy": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.getIamPolicy",
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "type": "integer",
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                            },
                            "resource": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "path": "v1/{+resource}:getIamPolicy",
                          "httpMethod": "GET"
                        }
                      }
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "filter": {
                          "description": "Optional. Filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. Maximum number of environments to return. The service may return fewer than this value. If unspecified, at most 10 environments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListEnvironments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEnvironments must match the call that provided the page token."
                        }
                      },
                      "path": "v1/{+parent}/environments",
                      "description": "Lists environments under the given lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListEnvironmentsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments",
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.environments.list"
                    },
                    "setIamPolicy": {
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      }
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Get environment resource.",
                      "path": "v1/{+name}"
                    },
                    "getIamPolicy": {
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "id": "dataplex.projects.locations.lakes.environments.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "testIamPermissions": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      }
                    },
                    "patch": {
                      "description": "Update the environment resource.",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.patch",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "name": {
                          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    },
                    "create": {
                      "parameters": {
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "environmentId": {
                          "location": "query",
                          "description": "Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/environments",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dataplex.projects.locations.lakes.environments.create",
                      "httpMethod": "POST",
                      "description": "Create an environment resource.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "id": "dataplex.projects.locations.lakes.environments.delete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      }
                    }
                  },
                  "resources": {
                    "sessions": {
                      "methods": {
                        "list": {
                          "path": "v1/{+parent}/sessions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists session resources in an environment.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. Maximum number of sessions to return. The service may return fewer than this value. If unspecified, at most 10 sessions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "type": "integer"
                            },
                            "parent": {
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListSessions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSessions must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListSessionsResponse"
                          },
                          "id": "dataplex.projects.locations.lakes.environments.sessions.list",
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions"
                        }
                      }
                    }
                  }
                },
                "contentitems": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "id": "dataplex.projects.locations.lakes.contentitems.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Get a content resource.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "required": true
                        },
                        "view": {
                          "location": "query",
                          "description": "Optional. Specify content view to make a partial request.",
                          "enumDescriptions": [
                            "Content view not specified. Defaults to BASIC. The API will default to the BASIC view.",
                            "Will not return the data_text field.",
                            "Returns the complete proto."
                          ],
                          "enum": [
                            "CONTENT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "delete": {
                      "id": "dataplex.projects.locations.lakes.contentitems.delete",
                      "httpMethod": "DELETE",
                      "description": "Delete a content.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "response": {
                        "$ref": "Empty"
                      }
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "path": "v1/{+name}",
                      "description": "Update a content. Only supports full resource update.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.contentitems.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "required": true,
                          "location": "path"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query",
                          "description": "Required. Mask of fields to update."
                        }
                      }
                    },
                    "list": {
                      "description": "List content.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListContentResponse"
                      },
                      "path": "v1/{+parent}/contentitems",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = \"value1\" labels:key1 type = \"NOTEBOOK\" type = \"SQL_SCRIPT\"These restrictions can be coinjoined with AND, OR and NOT conjunctions.",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.contentitems.list"
                    },
                    "create": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameters": {
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+parent}/contentitems",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "httpMethod": "POST",
                      "description": "Create a content.",
                      "id": "dataplex.projects.locations.lakes.contentitems.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "tasks": {
                  "resources": {
                    "jobs": {
                      "methods": {
                        "get": {
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /tasks/{task_id}/jobs/{job_id}",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$"
                            }
                          },
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.get",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Job"
                          },
                          "description": "Get job resource.",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET"
                        },
                        "cancel": {
                          "response": {
                            "$ref": "Empty"
                          },
                          "description": "Cancel jobs running for the task resource.",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /task/{task_id}/job/{job_id}`",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDataplexV1CancelJobRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.cancel",
                          "httpMethod": "POST",
                          "path": "v1/{+name}:cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel"
                        },
                        "list": {
                          "description": "Lists Jobs under the given task.",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListJobsResponse"
                          },
                          "path": "v1/{+parent}/jobs",
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.list",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs",
                          "parameters": {
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListJobs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListJobs must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Optional. Maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 10 jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                              "required": true,
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}",
                              "type": "string",
                              "location": "path"
                            }
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "create": {
                      "description": "Creates a task resource within a lake.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "taskId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Task identifier."
                        },
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/tasks",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.create"
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListTasksResponse"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "pageSize": {
                          "description": "Optional. Maximum number of tasks to return. The service may return fewer than this value. If unspecified, at most 10 tasks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Optional. Order by fields for the result.",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token."
                        },
                        "filter": {
                          "description": "Optional. Filter request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+parent}/tasks",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists tasks under the given lake.",
                      "id": "dataplex.projects.locations.lakes.tasks.list",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "path": "v1/{+resource}:testIamPermissions",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "required": true
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.testIamPermissions",
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /tasks/{tasks_id}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.get",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "description": "Get task resource."
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id} /task/{task_id}`",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      },
                      "description": "Delete the task resource.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "id": "dataplex.projects.locations.lakes.tasks.delete"
                    },
                    "setIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      }
                    },
                    "patch": {
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "name": {
                          "location": "path",
                          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.patch",
                      "httpMethod": "PATCH",
                      "description": "Update the task resource.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.tasks.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "location": "path"
                        },
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "path": "v1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy"
                    }
                  }
                },
                "content": {
                  "methods": {
                    "setIamPolicy": {
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "id": "dataplex.projects.locations.lakes.content.setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy"
                    },
                    "testIamPermissions": {
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "id": "dataplex.projects.locations.lakes.content.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/[^/]+$"
                        }
                      },
                      "httpMethod": "POST"
                    },
                    "getIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.content.getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160)."
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "id": "dataplex.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              }
            },
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "id": "dataplex.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "rootUrl": "https://dataplex.googleapis.com/",
  "version": "v1",
  "batchPath": "batch",
  "schemas": {
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources": {
      "description": "Compute resources associated with the analyze interactive workloads.",
      "type": "object",
      "properties": {
        "diskSizeGb": {
          "description": "Optional. Size in GB of the disk. Default is 100 GB.",
          "format": "int32",
          "type": "integer"
        },
        "nodeCount": {
          "description": "Optional. Total number of nodes in the sessions created for this environment.",
          "format": "int32",
          "type": "integer"
        },
        "maxNodeCount": {
          "format": "int32",
          "description": "Optional. Max configurable nodes. If max_node_count \u003e node_count, then auto-scaling is enabled.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources"
    },
    "GoogleIamV1AuditConfig": {
      "type": "object",
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services."
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataOrganization": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataOrganization",
      "properties": {},
      "type": "object",
      "description": "Action details for invalid data arrangement."
    },
    "GoogleCloudDataplexV1AssetSecurityStatus": {
      "id": "GoogleCloudDataplexV1AssetSecurityStatus",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "APPLYING",
            "ERROR"
          ],
          "description": "The current state of the security policy applied to the attached resource.",
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "Security policy has been successfully applied to the attached resource.",
            "Security policy is in the process of being applied to the attached resource.",
            "Security policy could not be applied to the attached resource due to errors."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Last update time of the status.",
          "type": "string"
        }
      },
      "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy."
    },
    "GoogleCloudDataplexV1ActionUnauthorizedResource": {
      "properties": {},
      "type": "object",
      "description": "Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.",
      "id": "GoogleCloudDataplexV1ActionUnauthorizedResource"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for TestIamPermissions method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1ContentSqlScript": {
      "properties": {
        "engine": {
          "enum": [
            "QUERY_ENGINE_UNSPECIFIED",
            "SPARK"
          ],
          "description": "Required. Query Engine to be used for the Sql Query.",
          "type": "string",
          "enumDescriptions": [
            "Value was unspecified.",
            "Spark SQL Query."
          ]
        }
      },
      "type": "object",
      "description": "Configuration for the Sql Script content.",
      "id": "GoogleCloudDataplexV1ContentSqlScript"
    },
    "GoogleCloudDataplexV1Environment": {
      "description": "Environment represents a user-visible compute infrastructure for analytics within a lake.",
      "id": "GoogleCloudDataplexV1Environment",
      "type": "object",
      "properties": {
        "infrastructureSpec": {
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec",
          "description": "Required. Infrastructure specification for the Environment."
        },
        "sessionSpec": {
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionSpec",
          "description": "Optional. Configuration for sessions created for this environment."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the environment."
        },
        "labels": {
          "description": "Optional. User defined labels for the environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the environment.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        },
        "sessionStatus": {
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionStatus",
          "readOnly": true,
          "description": "Output only. Status of sessions created for this environment."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
          "readOnly": true
        },
        "endpoints": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EnvironmentEndpoints",
          "description": "Output only. URI Endpoints to access sessions associated with the Environment."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Environment creation time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the environment was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ListEntitiesResponse": {
      "id": "GoogleCloudDataplexV1ListEntitiesResponse",
      "description": "List metadata entities response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Entity"
          },
          "description": "Entities in the specified parent zone.",
          "type": "array"
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for TestIamPermissions method."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpec": {
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpec",
      "type": "object",
      "description": "Configuration for the underlying infrastructure used to run workloads.",
      "properties": {
        "batch": {
          "description": "Compute resources needed for a Task when using Dataproc Serverless.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources"
        },
        "containerImage": {
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime",
          "description": "Container Image Runtime Configuration."
        },
        "vpcNetwork": {
          "description": "Vpc network.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork"
        }
      }
    },
    "GoogleCloudDataplexV1ListLakesResponse": {
      "description": "List lakes response.",
      "id": "GoogleCloudDataplexV1ListLakesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachableLocations": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lakes": {
          "type": "array",
          "description": "Lakes under the given parent location.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Lake"
          }
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDataplexV1Action": {
      "id": "GoogleCloudDataplexV1Action",
      "description": "Action represents an issue requiring administrator action for resolution.",
      "properties": {
        "category": {
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "RESOURCE_MANAGEMENT",
            "SECURITY_POLICY",
            "DATA_DISCOVERY"
          ],
          "description": "The category of issue associated with the action.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified category.",
            "Resource management related issues.",
            "Security policy related issues.",
            "Data and discovery related issues."
          ]
        },
        "missingResource": {
          "description": "Details for issues related to absence of a managed resource.",
          "$ref": "GoogleCloudDataplexV1ActionMissingResource"
        },
        "zone": {
          "type": "string",
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
          "readOnly": true
        },
        "dataLocations": {
          "type": "array",
          "description": "The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).",
          "items": {
            "type": "string"
          }
        },
        "asset": {
          "type": "string",
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
          "readOnly": true
        },
        "failedSecurityPolicyApply": {
          "description": "Details for issues related to applying security policy.",
          "$ref": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply"
        },
        "issue": {
          "description": "Detailed description of the issue requiring action.",
          "type": "string"
        },
        "invalidDataFormat": {
          "description": "Details for issues related to invalid or unsupported data formats.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataFormat"
        },
        "name": {
          "description": "Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.",
          "type": "string",
          "readOnly": true
        },
        "invalidDataPartition": {
          "description": "Details for issues related to invalid or unsupported data partition structure.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataPartition"
        },
        "unauthorizedResource": {
          "description": "Details for issues related to lack of permissions to access data resources.",
          "$ref": "GoogleCloudDataplexV1ActionUnauthorizedResource"
        },
        "missingData": {
          "description": "Details for issues related to absence of data within managed resources.",
          "$ref": "GoogleCloudDataplexV1ActionMissingData"
        },
        "invalidDataOrganization": {
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataOrganization",
          "description": "Details for issues related to invalid data arrangement."
        },
        "lake": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
          "type": "string"
        },
        "incompatibleDataSchema": {
          "description": "Details for issues related to incompatible schemas detected within data.",
          "$ref": "GoogleCloudDataplexV1ActionIncompatibleDataSchema"
        },
        "detectTime": {
          "description": "The time that the issue was detected.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetResourceStatus": {
      "description": "Status of the resource referenced by an asset.",
      "id": "GoogleCloudDataplexV1AssetResourceStatus",
      "type": "object",
      "properties": {
        "message": {
          "description": "Additional information about the current state.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "ERROR"
          ],
          "description": "The current state of the managed resource.",
          "enumDescriptions": [
            "State unspecified.",
            "Resource does not have any errors.",
            "Resource has errors."
          ],
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Last update time of the status.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1Partition": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Optional. The etag for this partition."
        },
        "location": {
          "type": "string",
          "description": "Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/"
        },
        "name": {
          "description": "Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode \"US:CA/CA#Sunnyvale so that the request URL ends with \"/partitions/US%253ACA/CA%2523Sunnyvale\". The name field in the response retains the encoded format.",
          "readOnly": true,
          "type": "string"
        },
        "values": {
          "description": "Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Represents partition metadata contained within entity instances.",
      "id": "GoogleCloudDataplexV1Partition",
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentEndpoints": {
      "id": "GoogleCloudDataplexV1EnvironmentEndpoints",
      "type": "object",
      "properties": {
        "sql": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI to serve SQL APIs"
        },
        "notebooks": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI to serve notebook APIs"
        }
      }
    },
    "GoogleCloudDataplexV1Task": {
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time when the task was last updated."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. User-defined labels for the task."
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.",
          "readOnly": true
        },
        "spark": {
          "$ref": "GoogleCloudDataplexV1TaskSparkTaskConfig",
          "description": "Config related to running custom Spark tasks."
        },
        "triggerSpec": {
          "$ref": "GoogleCloudDataplexV1TaskTriggerSpec",
          "description": "Required. Spec related to how often and when a task should be triggered."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the task was created."
        },
        "description": {
          "description": "Optional. Description of the task.",
          "type": "string"
        },
        "executionSpec": {
          "description": "Required. Spec related to how a task is executed.",
          "$ref": "GoogleCloudDataplexV1TaskExecutionSpec"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Current state of the task.",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.",
          "type": "string"
        }
      },
      "description": "A task represents a user-visible job.",
      "id": "GoogleCloudDataplexV1Task"
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions": {
      "type": "object",
      "properties": {
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean)."
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions",
      "description": "Describe JSON data format."
    },
    "GoogleIamV1Policy": {
      "properties": {
        "bindings": {
          "type": "array",
          "description": "Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.",
          "format": "byte"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "GoogleIamV1Policy"
    },
    "GoogleCloudDataplexV1StorageFormatCsvOptions": {
      "description": "Describes CSV and similar semi-structured data formats.",
      "type": "object",
      "properties": {
        "delimiter": {
          "description": "Optional. The delimiter used to separate values. Defaults to ','.",
          "type": "string"
        },
        "quote": {
          "description": "Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or ''' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified.",
          "type": "string"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified."
        },
        "headerRows": {
          "type": "integer",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDataplexV1StorageFormatCsvOptions"
    },
    "GoogleCloudDataplexV1TaskTriggerSpec": {
      "id": "GoogleCloudDataplexV1TaskTriggerSpec",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "ON_DEMAND",
            "RECURRING"
          ],
          "description": "Required. Immutable. Trigger type of the user-specified Task.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified trigger type.",
            "The task runs one-time shortly after Task Creation.",
            "The task is scheduled to run periodically."
          ]
        },
        "disabled": {
          "type": "boolean",
          "description": "Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING."
        },
        "maxRetries": {
          "description": "Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.",
          "type": "integer",
          "format": "int32"
        },
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\". This field is required for RECURRING tasks.",
          "type": "string"
        }
      },
      "description": "Task scheduling and trigger settings."
    },
    "GoogleIamV1Binding": {
      "description": "Associates members, or principals, with a role.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Cloud Platform resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1Binding"
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatusStats": {
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatusStats",
      "type": "object",
      "properties": {
        "dataItems": {
          "format": "int64",
          "type": "string",
          "description": "The count of data items within the referenced resource."
        },
        "filesets": {
          "description": "The count of fileset entities within the referenced resource.",
          "type": "string",
          "format": "int64"
        },
        "tables": {
          "format": "int64",
          "type": "string",
          "description": "The count of table entities within the referenced resource."
        },
        "dataSize": {
          "description": "The number of stored data bytes within the referenced resource.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "The aggregated data statistics for the asset reported by discovery."
    },
    "GoogleCloudDataplexV1Lake": {
      "description": "A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.",
      "id": "GoogleCloudDataplexV1Lake",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the lake was last updated.",
          "type": "string"
        },
        "metastoreStatus": {
          "description": "Output only. Metastore status of the lake.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1LakeMetastoreStatus"
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.",
          "readOnly": true
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the lake."
        },
        "metastore": {
          "description": "Optional. Settings to manage lake and Dataproc Metastore service instance association.",
          "$ref": "GoogleCloudDataplexV1LakeMetastore"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the lake was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "serviceAccount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the lake.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetStatus"
        },
        "labels": {
          "description": "Optional. User-defined labels for the lake.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the lake.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1LakeMetastoreStatus": {
      "id": "GoogleCloudDataplexV1LakeMetastoreStatus",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of the metastore status of the lake."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "NONE",
            "READY",
            "UPDATING",
            "ERROR"
          ],
          "description": "Current state of association.",
          "enumDescriptions": [
            "Unspecified.",
            "A Metastore service instance is not associated with the lake.",
            "A Metastore service instance is attached to the lake.",
            "Attach/detach is in progress.",
            "Attach/detach could not be done due to errors."
          ],
          "type": "string"
        },
        "endpoint": {
          "type": "string",
          "description": "The URI of the endpoint used to access the Metastore service."
        },
        "message": {
          "description": "Additional information about the current status.",
          "type": "string"
        }
      },
      "description": "Status of Lake and Dataproc Metastore service instance association.",
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentSessionSpec": {
      "type": "object",
      "id": "GoogleCloudDataplexV1EnvironmentSessionSpec",
      "properties": {
        "maxIdleDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period."
        },
        "enableFastStartup": {
          "description": "Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions": {
      "properties": {
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean)."
        }
      },
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions",
      "type": "object",
      "description": "Describe JSON data format."
    },
    "GoogleCloudDataplexV1ListContentResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Content"
          },
          "description": "Content under the given parent lake."
        }
      },
      "description": "List content response.",
      "type": "object",
      "id": "GoogleCloudDataplexV1ListContentResponse"
    },
    "GoogleCloudDataplexV1DiscoveryEvent": {
      "description": "The payload associated with Discovery data processing.",
      "id": "GoogleCloudDataplexV1DiscoveryEvent",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "CONFIG",
            "ENTITY_CREATED",
            "ENTITY_UPDATED",
            "ENTITY_DELETED",
            "PARTITION_CREATED",
            "PARTITION_UPDATED",
            "PARTITION_DELETED"
          ],
          "description": "The type of the event being logged.",
          "enumDescriptions": [
            "An unspecified event type.",
            "An event representing discovery configuration in effect.",
            "An event representing a metadata entity being created.",
            "An event representing a metadata entity being updated.",
            "An event representing a metadata entity being deleted.",
            "An event representing a partition being created.",
            "An event representing a partition being updated.",
            "An event representing a partition being deleted."
          ]
        },
        "partition": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails",
          "description": "Details about the partition associated with the event."
        },
        "assetId": {
          "description": "The id of the associated asset.",
          "type": "string"
        },
        "config": {
          "description": "Details about discovery configuration in effect.",
          "$ref": "GoogleCloudDataplexV1DiscoveryEventConfigDetails"
        },
        "dataLocation": {
          "type": "string",
          "description": "The data location associated with the event."
        },
        "action": {
          "description": "Details about the action associated with the event.",
          "$ref": "GoogleCloudDataplexV1DiscoveryEventActionDetails"
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "lakeId": {
          "description": "The id of the associated lake.",
          "type": "string"
        },
        "entity": {
          "description": "Details about the entity associated with the event.",
          "$ref": "GoogleCloudDataplexV1DiscoveryEventEntityDetails"
        },
        "zoneId": {
          "description": "The id of the associated zone.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ContentNotebook": {
      "id": "GoogleCloudDataplexV1ContentNotebook",
      "type": "object",
      "properties": {
        "kernelType": {
          "enum": [
            "KERNEL_TYPE_UNSPECIFIED",
            "PYTHON3"
          ],
          "description": "Required. Kernel Type of the notebook.",
          "enumDescriptions": [
            "Kernel Type unspecified.",
            "Python 3 Kernel."
          ],
          "type": "string"
        }
      },
      "description": "Configuration for Notebook content."
    },
    "GoogleCloudDataplexV1DiscoveryEventActionDetails": {
      "description": "Details about the action.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat"
        }
      },
      "id": "GoogleCloudDataplexV1DiscoveryEventActionDetails",
      "type": "object"
    },
    "GoogleCloudDataplexV1SessionEvent": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "An unspecified event type.",
            "Event for start of a session.",
            "Event for stop of a session.",
            "Query events in the session."
          ],
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "START",
            "STOP",
            "QUERY"
          ],
          "description": "The type of the event."
        },
        "userId": {
          "description": "The information about the user that created the session.",
          "type": "string"
        },
        "sessionId": {
          "type": "string",
          "description": "Unique identifier for the session."
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "query": {
          "description": "The execution details of the query.",
          "$ref": "GoogleCloudDataplexV1SessionEventQueryDetail"
        }
      },
      "id": "GoogleCloudDataplexV1SessionEvent",
      "description": "These messages contain information about sessions within an environment. The monitored resource is 'Environment'.",
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetDiscoverySpec": {
      "type": "object",
      "description": "Settings to manage the metadata discovery and publishing for an asset.",
      "properties": {
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
          "type": "string"
        },
        "csvOptions": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions",
          "description": "Optional. Configuration for CSV data."
        },
        "jsonOptions": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions",
          "description": "Optional. Configuration for Json data."
        },
        "excludePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "type": "boolean",
          "description": "Optional. Whether discovery is enabled."
        },
        "includePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoverySpec"
    },
    "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility": {
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "Output only. Whether the entity is compatible and can be represented in the metadata store.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Provides additional detail if the entity is incompatible with the metadata store."
        }
      },
      "type": "object",
      "description": "Provides compatibility information for a specific metadata store.",
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      },
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "GoogleCloudDataplexV1ListSessionsResponse": {
      "description": "List sessions response.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sessions": {
          "description": "Sessions under a given environment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Session"
          }
        }
      },
      "id": "GoogleCloudDataplexV1ListSessionsResponse",
      "type": "object"
    },
    "GoogleCloudDataplexV1ListJobsResponse": {
      "id": "GoogleCloudDataplexV1ListJobsResponse",
      "description": "List jobs response.",
      "type": "object",
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Job"
          },
          "description": "Jobs under a given task."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ListAssetsResponse": {
      "properties": {
        "assets": {
          "type": "array",
          "description": "Asset under the given parent zone.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Asset"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDataplexV1ListAssetsResponse",
      "type": "object",
      "description": "List assets response."
    },
    "GoogleCloudDataplexV1DiscoveryEventPartitionDetails": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails",
      "description": "Details about the partition.",
      "properties": {
        "sampledDataLocations": {
          "type": "array",
          "description": "The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.",
          "items": {
            "type": "string"
          }
        },
        "entity": {
          "type": "string",
          "description": "The name to the containing entity resource. The name is the fully-qualified resource name."
        },
        "partition": {
          "type": "string",
          "description": "The name to the partition resource. The name is the fully-qualified resource name."
        },
        "type": {
          "description": "The type of the containing entity resource.",
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ],
          "type": "string",
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ]
        }
      }
    },
    "GoogleCloudDataplexV1DiscoveryEventEntityDetails": {
      "properties": {
        "type": {
          "description": "The type of the entity resource.",
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ],
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "type": "string"
        },
        "entity": {
          "description": "The name of the entity resource. The name is the fully-qualified resource name.",
          "type": "string"
        }
      },
      "description": "Details about the entity.",
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventEntityDetails"
    },
    "GoogleCloudDataplexV1AssetStatus": {
      "id": "GoogleCloudDataplexV1AssetStatus",
      "description": "Aggregated status of the underlying assets of a lake or zone.",
      "properties": {
        "activeAssets": {
          "type": "integer",
          "description": "Number of active assets.",
          "format": "int32"
        },
        "securityPolicyApplyingAssets": {
          "type": "integer",
          "description": "Number of assets that are in process of updating the security policy on attached resources.",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "description": "Last update time of the status.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionMissingResource": {
      "description": "Action details for resource references in assets that cannot be located.",
      "id": "GoogleCloudDataplexV1ActionMissingResource",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudLocationListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudDataplexV1TaskExecutionSpec": {
      "properties": {
        "maxJobExecutionLifetime": {
          "description": "Optional. The maximum duration after which the job execution is expired.",
          "type": "string",
          "format": "google-duration"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used."
        },
        "args": {
          "description": "Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDataplexV1TaskExecutionSpec",
      "type": "object",
      "description": "Execution related settings, like retry and service_account."
    },
    "GoogleCloudDataplexV1SchemaPartitionField": {
      "description": "Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.",
      "id": "GoogleCloudDataplexV1SchemaPartitionField",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "description": "Required. Immutable. The type of field.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudLocationLocation": {
      "id": "GoogleCloudLocationLocation",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: \"us-east1\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\"",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} ",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply": {
      "properties": {
        "asset": {
          "description": "Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
      "description": "Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionInvalidDataFormat": {
      "description": "Action details for invalid or unsupported data files detected by discovery.",
      "properties": {
        "sampledDataLocations": {
          "items": {
            "type": "string"
          },
          "description": "The list of data locations sampled and used for format/schema inference.",
          "type": "array"
        },
        "newFormat": {
          "description": "The new unexpected data format within the entity.",
          "type": "string"
        },
        "expectedFormat": {
          "description": "The expected data format of the entity.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ActionInvalidDataFormat",
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime": {
      "description": "Software Runtime Configuration to run Analyze.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be \"spark\".",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageVersion": {
          "description": "Required. Dataplex Image version.",
          "type": "string"
        },
        "javaLibraries": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar"
        },
        "pythonPackages": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime",
      "type": "object"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "id": "GoogleIamV1SetIamPolicyRequest",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: \"bindings, etag\""
        }
      },
      "type": "object",
      "description": "Request message for SetIamPolicy method."
    },
    "GoogleCloudDataplexV1DiscoveryEventConfigDetails": {
      "properties": {
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc."
        }
      },
      "description": "Details about configuration events.",
      "id": "GoogleCloudDataplexV1DiscoveryEventConfigDetails",
      "type": "object"
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources": {
      "description": "Batch compute resources associated with the task.",
      "type": "object",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources",
      "properties": {
        "maxExecutorsCount": {
          "type": "integer",
          "description": "Optional. Max configurable executors. If max_executors_count \u003e executors_count, then auto-scaling is enabled.",
          "format": "int32"
        },
        "executorsCount": {
          "format": "int32",
          "description": "Optional. Total number of job executors.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDataplexV1ActionMissingData": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionMissingData",
      "properties": {},
      "description": "Action details for absence of data detected by discovery."
    },
    "GoogleCloudDataplexV1ListTasksResponse": {
      "id": "GoogleCloudDataplexV1ListTasksResponse",
      "properties": {
        "tasks": {
          "type": "array",
          "description": "Tasks under the given parent lake.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Task"
          }
        },
        "unreachableLocations": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "List tasks response.",
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "GoogleLongrunningCancelOperationRequest",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDataplexV1StorageFormat": {
      "id": "GoogleCloudDataplexV1StorageFormat",
      "description": "Describes the format of the data within its storage location.",
      "properties": {
        "mimeType": {
          "description": "Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}",
          "type": "string"
        },
        "compressionFormat": {
          "type": "string",
          "enum": [
            "COMPRESSION_FORMAT_UNSPECIFIED",
            "GZIP",
            "BZIP2"
          ],
          "enumDescriptions": [
            "CompressionFormat unspecified. Implies uncompressed data.",
            "GZip compressed set of files.",
            "BZip2 compressed set of files."
          ],
          "description": "Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed."
        },
        "json": {
          "$ref": "GoogleCloudDataplexV1StorageFormatJsonOptions",
          "description": "Optional. Additional information about CSV formatted data."
        },
        "format": {
          "enumDescriptions": [
            "Format unspecified.",
            "Parquet-formatted structured data.",
            "Avro-formatted structured data.",
            "Orc-formatted structured data.",
            "Csv-formatted semi-structured data.",
            "Json-formatted semi-structured data.",
            "Image data formats (such as jpg and png).",
            "Audio data formats (such as mp3, and wav).",
            "Video data formats (such as mp4 and mpg).",
            "Textual data formats (such as txt and xml).",
            "TensorFlow record format.",
            "Data that doesn't match a specific format.",
            "Data of an unknown format."
          ],
          "description": "Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.",
          "enum": [
            "FORMAT_UNSPECIFIED",
            "PARQUET",
            "AVRO",
            "ORC",
            "CSV",
            "JSON",
            "IMAGE",
            "AUDIO",
            "VIDEO",
            "TEXT",
            "TFRECORD",
            "OTHER",
            "UNKNOWN"
          ],
          "type": "string",
          "readOnly": true
        },
        "csv": {
          "description": "Optional. Additional information about CSV formatted data.",
          "$ref": "GoogleCloudDataplexV1StorageFormatCsvOptions"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1StorageFormatJsonOptions": {
      "description": "Describes JSON data format.",
      "type": "object",
      "properties": {
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified."
        }
      },
      "id": "GoogleCloudDataplexV1StorageFormatJsonOptions"
    },
    "GoogleCloudDataplexV1ZoneResourceSpec": {
      "properties": {
        "locationType": {
          "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "SINGLE_REGION",
            "MULTI_REGION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified location type.",
            "Resources that are associated with a single region.",
            "Resources that are associated with a multi-region location."
          ]
        }
      },
      "id": "GoogleCloudDataplexV1ZoneResourceSpec",
      "type": "object",
      "description": "Settings for resources attached as assets within a zone."
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDataplexV1Asset": {
      "type": "object",
      "id": "GoogleCloudDataplexV1Asset",
      "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone.",
      "properties": {
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the asset was last updated.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name."
        },
        "labels": {
          "description": "Optional. User defined labels for the asset.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "discoverySpec": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpec",
          "description": "Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone."
        },
        "name": {
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
          "type": "string",
          "readOnly": true
        },
        "discoveryStatus": {
          "description": "Output only. Status of the discovery feature applied to data referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatus"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the asset."
        },
        "state": {
          "description": "Output only. Current state of the asset.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ]
        },
        "resourceSpec": {
          "description": "Required. Specification of the resource that is referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetResourceSpec"
        },
        "resourceStatus": {
          "$ref": "GoogleCloudDataplexV1AssetResourceStatus",
          "description": "Output only. Status of the resource referenced by this asset.",
          "readOnly": true
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to resource referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetSecurityStatus"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the asset was created."
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } ",
      "type": "object"
    },
    "GoogleCloudDataplexV1Zone": {
      "type": "object",
      "description": "A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.",
      "id": "GoogleCloudDataplexV1Zone",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the zone."
        },
        "updateTime": {
          "description": "Output only. The time when the zone was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. User defined labels for the zone."
        },
        "resourceSpec": {
          "$ref": "GoogleCloudDataplexV1ZoneResourceSpec",
          "description": "Required. Specification of the resources that are referenced by the assets within this zone."
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the zone was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "discoverySpec": {
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpec",
          "description": "Optional. Specification of the discovery feature applied to data in this zone."
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "description": "Output only. Current state of the zone.",
          "readOnly": true
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "RAW",
            "CURATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Zone type not specified.",
            "A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.",
            "A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout."
          ],
          "description": "Required. Immutable. The type of the zone."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.",
          "type": "string"
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the zone.",
          "$ref": "GoogleCloudDataplexV1AssetStatus",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDataplexV1ActionInvalidDataPartition": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionInvalidDataPartition",
      "properties": {
        "expectedStructure": {
          "enumDescriptions": [
            "PartitionStructure unspecified.",
            "Consistent hive-style partition definition (both raw and curated zone).",
            "Hive style partition definition (curated zone only)."
          ],
          "enum": [
            "PARTITION_STRUCTURE_UNSPECIFIED",
            "CONSISTENT_KEYS",
            "HIVE_STYLE_KEYS"
          ],
          "description": "The issue type of InvalidDataPartition.",
          "type": "string"
        }
      },
      "description": "Action details for invalid or unsupported partitions detected by discovery."
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpec": {
      "properties": {
        "compute": {
          "description": "Optional. Compute resources needed for analyze interactive workloads.",
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources"
        },
        "osImage": {
          "description": "Required. Software Runtime Configuration for analyze interactive workloads.",
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime"
        }
      },
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec",
      "description": "Configuration for the underlying infrastructure used to run workloads.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ListActionsResponse": {
      "id": "GoogleCloudDataplexV1ListActionsResponse",
      "properties": {
        "actions": {
          "description": "Actions under the given parent lake/zone/asset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "List actions response."
    },
    "GoogleCloudDataplexV1TaskSparkTaskConfig": {
      "type": "object",
      "properties": {
        "pythonScriptFile": {
          "type": "string",
          "description": "The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value)."
        },
        "infrastructureSpec": {
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpec",
          "description": "Optional. Infrastructure specification for the execution."
        },
        "sqlScriptFile": {
          "type": "string",
          "description": "A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=\"value\";)."
        },
        "fileUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.",
          "type": "array"
        },
        "mainJarFileUri": {
          "type": "string",
          "description": "The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value)."
        },
        "archiveUris": {
          "description": "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainClass": {
          "type": "string",
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value)."
        },
        "sqlScript": {
          "description": "The query text. The execution args are used to declare a set of script variables (set key=\"value\";).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1TaskSparkTaskConfig",
      "description": "User-specified config for running a Spark task."
    },
    "GoogleCloudDataplexV1Schema": {
      "id": "GoogleCloudDataplexV1Schema",
      "type": "object",
      "description": "Schema information describing the structure and layout of the data.",
      "properties": {
        "partitionFields": {
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaPartitionField"
          },
          "description": "Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.",
          "type": "array"
        },
        "partitionStyle": {
          "enum": [
            "PARTITION_STYLE_UNSPECIFIED",
            "HIVE_COMPATIBLE"
          ],
          "enumDescriptions": [
            "PartitionStyle unspecified",
            "Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late."
          ],
          "type": "string",
          "description": "Optional. The structure of paths containing partition data within the entity."
        },
        "userManaged": {
          "type": "boolean",
          "description": "Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields."
        },
        "fields": {
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          },
          "type": "array",
          "description": "Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable."
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpec": {
      "description": "Settings to manage the metadata discovery and publishing in a zone.",
      "properties": {
        "excludePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, \"CRON_TZ=America/New_York 1 * * * *\", or \"TZ=America/New_York 1 * * * *\".",
          "type": "string"
        },
        "csvOptions": {
          "description": "Optional. Configuration for CSV data.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions"
        },
        "enabled": {
          "description": "Required. Whether discovery is enabled.",
          "type": "boolean"
        },
        "jsonOptions": {
          "description": "Optional. Configuration for Json data.",
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions"
        },
        "includePatterns": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpec",
      "type": "object"
    },
    "GoogleCloudDataplexV1LakeMetastore": {
      "description": "Settings to manage association of Dataproc Metastore with a lake.",
      "id": "GoogleCloudDataplexV1LakeMetastore",
      "properties": {
        "service": {
          "type": "string",
          "description": "Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1Entity": {
      "id": "GoogleCloudDataplexV1Entity",
      "type": "object",
      "description": "Represents tables and fileset metadata contained within a zone.",
      "properties": {
        "dataPath": {
          "type": "string",
          "description": "Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id."
        },
        "asset": {
          "type": "string",
          "description": "Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the entity was last updated."
        },
        "schema": {
          "description": "Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.",
          "$ref": "GoogleCloudDataplexV1Schema"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the entity was created.",
          "type": "string",
          "readOnly": true
        },
        "format": {
          "$ref": "GoogleCloudDataplexV1StorageFormat",
          "description": "Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
        },
        "etag": {
          "type": "string",
          "description": "Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests."
        },
        "catalogEntry": {
          "readOnly": true,
          "description": "Output only. The name of the associated Data Catalog entry.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Required. Immutable. The type of entity.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "enumDescriptions": [
            "Type unspecified.",
            "Structured and semi-structured data.",
            "Unstructured data."
          ]
        },
        "dataPathPattern": {
          "type": "string",
          "description": "Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv."
        },
        "id": {
          "type": "string",
          "description": "Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores. Must begin with a letter and consist of 256 or fewer characters."
        },
        "system": {
          "description": "Required. Immutable. Identifies the storage system of the entity data.",
          "type": "string",
          "enum": [
            "STORAGE_SYSTEM_UNSPECIFIED",
            "CLOUD_STORAGE",
            "BIGQUERY"
          ],
          "enumDescriptions": [
            "Storage system unspecified.",
            "The entity data is contained within a Cloud Storage bucket.",
            "The entity data is contained within a BigQuery dataset."
          ]
        },
        "displayName": {
          "description": "Optional. Display name must be shorter than or equal to 256 characters.",
          "type": "string"
        },
        "compatibility": {
          "description": "Output only. Metadata stores that the entity is compatible with.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatus"
        },
        "description": {
          "type": "string",
          "description": "Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters."
        }
      }
    },
    "GoogleCloudDataplexV1JobEvent": {
      "id": "GoogleCloudDataplexV1JobEvent",
      "description": "The payload associated with Job logs that contains events describing jobs that have run within a Lake.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the job started running."
        },
        "endTime": {
          "description": "The time when the job ended running.",
          "type": "string",
          "format": "google-datetime"
        },
        "service": {
          "type": "string",
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ],
          "description": "The service used to execute the job.",
          "enumDescriptions": [
            "Unspecified service.",
            "Cloud Dataproc."
          ]
        },
        "retries": {
          "format": "int32",
          "description": "The number of retries.",
          "type": "integer"
        },
        "type": {
          "description": "The type of the job.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPARK",
            "NOTEBOOK"
          ],
          "enumDescriptions": [
            "Unspecified job type.",
            "Spark jobs.",
            "Notebook jobs."
          ],
          "type": "string"
        },
        "jobId": {
          "description": "The unique id identifying the job.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified job state.",
            "Job successfully completed.",
            "Job was unsuccessful.",
            "Job was cancelled by the user.",
            "Job was cancelled or aborted via the service executing the job."
          ],
          "type": "string",
          "description": "The job state on completion.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "ABORTED"
          ]
        },
        "serviceJob": {
          "type": "string",
          "description": "The reference to the job within the service."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1OperationMetadata": {
      "id": "GoogleCloudDataplexV1OperationMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
          "type": "boolean"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "type": "object",
      "description": "Represents the metadata of a long-running operation."
    },
    "GoogleCloudDataplexV1EntityCompatibilityStatus": {
      "type": "object",
      "properties": {
        "bigquery": {
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
          "readOnly": true,
          "description": "Output only. Whether this entity is compatible with BigQuery."
        },
        "hiveMetastore": {
          "readOnly": true,
          "description": "Output only. Whether this entity is compatible with Hive Metastore.",
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
        }
      },
      "description": "Provides compatibility information for various metadata stores.",
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatus"
    },
    "GoogleCloudDataplexV1SchemaSchemaField": {
      "description": "Represents a column field within a table schema.",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "REQUIRED",
            "NULLABLE",
            "REPEATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Mode unspecified.",
            "The field has required semantics.",
            "The field has optional semantics, and may be null.",
            "The field has repeated (0 or more) semantics, and is a list of values."
          ],
          "description": "Required. Additional field semantics."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ],
          "description": "Required. The type of field."
        },
        "name": {
          "description": "Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.",
          "type": "string"
        },
        "fields": {
          "type": "array",
          "description": "Optional. Any nested field for complex types.",
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          }
        },
        "description": {
          "type": "string",
          "description": "Optional. User friendly field description. Must be less than or equal to 1024 characters."
        }
      },
      "id": "GoogleCloudDataplexV1SchemaSchemaField",
      "type": "object"
    },
    "GoogleCloudDataplexV1Job": {
      "id": "GoogleCloudDataplexV1Job",
      "description": "A job represents an instance of a task.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}/jobs/{job_id}."
        },
        "state": {
          "description": "Output only. Execution state for the job.",
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is running.",
            "The job is cancelling.",
            "The job cancellation was successful.",
            "The job completed successfully.",
            "The job is no longer running due to an error.",
            "The job was cancelled outside of Dataplex."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED",
            "ABORTED"
          ]
        },
        "serviceJob": {
          "description": "Output only. The full resource name for the job run under a particular service.",
          "type": "string",
          "readOnly": true
        },
        "service": {
          "description": "Output only. The underlying service running a job.",
          "type": "string",
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Service used to run the job is unspecified.",
            "Dataproc service is used to run this job."
          ]
        },
        "retryCount": {
          "description": "Output only. . The number of times the job has been retried (excluding the initial attempt).",
          "type": "integer",
          "readOnly": true,
          "format": "uint32"
        },
        "message": {
          "description": "Output only. Additional information about the current state.",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the job.",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the job ended."
        },
        "startTime": {
          "readOnly": true,
          "description": "Output only. The time when the job was started.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1Content": {
      "description": "Content represents a user-visible notebook or a sql script",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Content creation time."
        },
        "path": {
          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
          "type": "string"
        },
        "notebook": {
          "$ref": "GoogleCloudDataplexV1ContentNotebook",
          "description": "Notebook related configurations."
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the content was last updated."
        },
        "sqlScript": {
          "$ref": "GoogleCloudDataplexV1ContentSqlScript",
          "description": "Sql Script related configurations."
        },
        "description": {
          "description": "Optional. Description of the content.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name."
        },
        "dataText": {
          "description": "Required. Content data in string format.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User defined labels for the content.",
          "type": "object"
        }
      },
      "id": "GoogleCloudDataplexV1Content",
      "type": "object"
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        },
        "logType": {
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ListZonesResponse": {
      "id": "GoogleCloudDataplexV1ListZonesResponse",
      "type": "object",
      "description": "List zones response.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "zones": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Zone"
          },
          "type": "array",
          "description": "Zones under the given parent lake."
        }
      }
    },
    "GoogleCloudDataplexV1ListEnvironmentsResponse": {
      "id": "GoogleCloudDataplexV1ListEnvironmentsResponse",
      "description": "List environments response.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "environments": {
          "description": "Environments under the given parent lake.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Environment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetResourceSpec": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}"
        },
        "type": {
          "enumDescriptions": [
            "Type not specified.",
            "Cloud Storage bucket.",
            "BigQuery dataset."
          ],
          "type": "string",
          "description": "Required. Immutable. Type of resource.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STORAGE_BUCKET",
            "BIGQUERY_DATASET"
          ]
        }
      },
      "id": "GoogleCloudDataplexV1AssetResourceSpec",
      "type": "object",
      "description": "Identifies the cloud resource that is referenced by this asset."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork": {
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork",
      "properties": {
        "subNetwork": {
          "type": "string",
          "description": "Optional. The Cloud VPC sub-network in which the job is run."
        },
        "networkTags": {
          "description": "Optional. List of network tags to apply to the job.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "network": {
          "type": "string",
          "description": "Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used."
        }
      },
      "type": "object",
      "description": "Cloud VPC Network used to run the infrastructure."
    },
    "GoogleCloudDataplexV1Session": {
      "type": "object",
      "description": "Represents an active analyze session running for a user.",
      "properties": {
        "userId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Email of user running the session."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Session start time."
        }
      },
      "id": "GoogleCloudDataplexV1Session"
    },
    "GoogleCloudDataplexV1CancelJobRequest": {
      "type": "object",
      "id": "GoogleCloudDataplexV1CancelJobRequest",
      "description": "Cancel task jobs.",
      "properties": {}
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "state": {
          "enumDescriptions": [
            "State is unspecified.",
            "Discovery for the asset is scheduled.",
            "Discovery for the asset is running.",
            "Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.",
            "Discovery for the asset is disabled."
          ],
          "type": "string",
          "description": "The current status of the discovery feature.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SCHEDULED",
            "IN_PROGRESS",
            "PAUSED",
            "DISABLED"
          ]
        },
        "lastRunDuration": {
          "type": "string",
          "description": "The duration of the last discovery run.",
          "format": "google-duration"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Last update time of the status."
        },
        "lastRunTime": {
          "type": "string",
          "description": "The start time of the last discovery run.",
          "format": "google-datetime"
        },
        "stats": {
          "description": "Data Stats of the asset reported by discovery.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatusStats"
        }
      },
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatus",
      "description": "Status of discovery for an asset."
    },
    "GoogleCloudDataplexV1ListPartitionsResponse": {
      "properties": {
        "partitions": {
          "description": "Partitions under the specified parent entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Partition"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ListPartitionsResponse",
      "type": "object",
      "description": "List metadata partitions response."
    },
    "GoogleCloudDataplexV1ActionIncompatibleDataSchema": {
      "id": "GoogleCloudDataplexV1ActionIncompatibleDataSchema",
      "description": "Action details for incompatible schemas detected by discovery.",
      "type": "object",
      "properties": {
        "schemaChange": {
          "type": "string",
          "enum": [
            "SCHEMA_CHANGE_UNSPECIFIED",
            "INCOMPATIBLE",
            "MODIFIED"
          ],
          "description": "Whether the action relates to a schema that is incompatible or modified.",
          "enumDescriptions": [
            "Schema change unspecified.",
            "Newly discovered schema is incompatible with existing schema.",
            "Newly discovered schema has changed from existing schema for data in a curated zone."
          ]
        },
        "sampledDataLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of data locations sampled and used for format/schema inference."
        },
        "existingSchema": {
          "description": "The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "The name of the table containing invalid data."
        },
        "newSchema": {
          "description": "The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions": {
      "type": "object",
      "description": "Describe CSV and similar semi-structured data formats.",
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions",
      "properties": {
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.",
          "type": "boolean"
        },
        "headerRows": {
          "format": "int32",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "type": "integer"
        },
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "delimiter": {
          "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1SessionEventQueryDetail": {
      "description": "Execution details of the query.",
      "type": "object",
      "properties": {
        "engine": {
          "description": "Query Execution engine.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified Engine type.",
            "Spark-sql engine is specified in Query.",
            "BigQuery engine is specified in Query."
          ],
          "enum": [
            "ENGINE_UNSPECIFIED",
            "SPARK_SQL",
            "BIGQUERY"
          ]
        },
        "queryId": {
          "type": "string",
          "description": "The unique Query id identifying the query."
        },
        "dataProcessedBytes": {
          "type": "string",
          "format": "int64",
          "description": "The data processed by the query."
        },
        "queryText": {
          "type": "string",
          "description": "The query text executed."
        },
        "resultSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "The size of results the query produced."
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Time taken for execution of the query."
        }
      },
      "id": "GoogleCloudDataplexV1SessionEventQueryDetail"
    },
    "GoogleCloudDataplexV1EnvironmentSessionStatus": {
      "id": "GoogleCloudDataplexV1EnvironmentSessionStatus",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Output only. Queries over sessions to mark whether the environment is currently active or not",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime": {
      "description": "Container Image Runtime Configuration used with Batch execution.",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "javaJars": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar"
        },
        "pythonPackages": {
          "type": "array",
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions": {
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions",
      "type": "object",
      "description": "Describe CSV and similar semi-structured data formats.",
      "properties": {
        "delimiter": {
          "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
          "type": "string"
        },
        "headerRows": {
          "type": "integer",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "format": "int32"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings."
        }
      }
    }
  },
  "mtlsRootUrl": "https://dataplex.mtls.googleapis.com/"
}

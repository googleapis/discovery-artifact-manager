{
  "rootUrl": "https://dataplex.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "entryGroups": {
              "methods": {
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "id": "dataplex.projects.locations.entryGroups.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy",
                  "id": "dataplex.projects.locations.entryGroups.setIamPolicy",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy",
                  "id": "dataplex.projects.locations.entryGroups.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                }
              }
            },
            "lakes": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "parameters": {
                    "orderBy": {
                      "description": "Optional. Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. Maximum number of Lakes to return. The service may return fewer than this value. If unspecified, at most 10 lakes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "location": "path"
                    },
                    "filter": {
                      "description": "Optional. Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Optional. Page token received from a previous ListLakes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakes must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "dataplex.projects.locations.lakes.list",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListLakesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/lakes",
                  "httpMethod": "GET",
                  "description": "Lists lake resources in a project and location."
                },
                "patch": {
                  "description": "Updates a lake resource.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Mask of fields to update.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataplex.projects.locations.lakes.patch",
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "dataplex.projects.locations.lakes.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "description": "Retrieves a lake resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the lake location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "lakeId": {
                      "type": "string",
                      "description": "Required. Lake identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the customer project / location.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/lakes",
                  "httpMethod": "POST",
                  "description": "Creates a lake resource.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes",
                  "id": "dataplex.projects.locations.lakes.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1Lake"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "dataplex.projects.locations.lakes.testIamPermissions",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:testIamPermissions"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes a lake resource. All zones within the lake must be deleted before the lake can be deleted.",
                  "id": "dataplex.projects.locations.lakes.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of the lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE"
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "id": "dataplex.projects.locations.lakes.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}:setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.lakes.setIamPolicy",
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "zones": {
                  "resources": {
                    "entities": {
                      "resources": {
                        "partitions": {
                          "methods": {
                            "list": {
                              "description": "List metadata partitions of an entity.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "httpMethod": "GET",
                              "parameters": {
                                "pageToken": {
                                  "description": "Optional. Page token received from a previous ListPartitions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListPartitions must match the call that provided the page token.",
                                  "type": "string",
                                  "location": "query"
                                },
                                "pageSize": {
                                  "format": "int32",
                                  "location": "query",
                                  "type": "integer",
                                  "description": "Optional. Maximum number of partitions to return. The service may return fewer than this value. If unspecified, 100 partitions will be returned by default. The maximum page size is 500; larger values will will be truncated to 500."
                                },
                                "parent": {
                                  "description": "Required. The resource name of the parent entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$"
                                },
                                "filter": {
                                  "description": "Optional. Filter the partitions returned to the caller using a key value pair expression. Supported operators and syntax: logic operators: AND, OR comparison operators: \u003c, \u003e, \u003e=, \u003c= ,=, != LIKE operators: The right hand of a LIKE operator supports \".\" and \"*\" for wildcard searches, for example \"value1 LIKE \".*oo.*\" parenthetical grouping: ( )Sample filter expression: `?filter=\"key1 \u003c value1 OR key2 \u003e value2\"Notes: Keys to the left of operators are case insensitive. Partition results are sorted first by creation time, then by lexicographic order. Up to 20 key value filter pairs are allowed, but due to performance considerations, only the first 10 will be used as a filter.",
                                  "type": "string",
                                  "location": "query"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "path": "v1/{+parent}/partitions",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListPartitionsResponse"
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.list"
                            },
                            "get": {
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.get",
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}",
                              "path": "v1/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$",
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The resource name of the partition: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided."
                                }
                              },
                              "description": "Get a metadata partition of an entity.",
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              }
                            },
                            "delete": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameterOrder": [
                                "name"
                              ],
                              "httpMethod": "DELETE",
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.delete",
                              "description": "Delete a metadata partition.",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions/{partitionsId}",
                              "response": {
                                "$ref": "Empty"
                              },
                              "parameters": {
                                "etag": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "Optional. The etag associated with the partition.",
                                  "deprecated": true
                                },
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+/partitions/.*$",
                                  "required": true,
                                  "description": "Required. The resource name of the partition. format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}/partitions/{partition_value_path}. The {partition_value_path} segment consists of an ordered sequence of partition values separated by \"/\". All values must be provided.",
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "path": "v1/{+name}"
                            },
                            "create": {
                              "path": "v1/{+parent}/partitions",
                              "httpMethod": "POST",
                              "parameters": {
                                "validateOnly": {
                                  "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                                  "location": "query",
                                  "type": "boolean"
                                },
                                "parent": {
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                                  "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}/partitions",
                              "request": {
                                "$ref": "GoogleCloudDataplexV1Partition"
                              },
                              "id": "dataplex.projects.locations.lakes.zones.entities.partitions.create",
                              "description": "Create a metadata partition.",
                              "parameterOrder": [
                                "parent"
                              ]
                            }
                          }
                        }
                      },
                      "methods": {
                        "update": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
                            },
                            "validateOnly": {
                              "type": "boolean",
                              "location": "query",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                            }
                          },
                          "httpMethod": "PUT",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "description": "Update a metadata entity. Only supports full resource update.",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "id": "dataplex.projects.locations.lakes.zones.entities.update",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}"
                        },
                        "delete": {
                          "id": "dataplex.projects.locations.lakes.zones.entities.delete",
                          "path": "v1/{+name}",
                          "httpMethod": "DELETE",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "description": "Delete a metadata entity.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "etag": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. The etag associated with the entity, which can be retrieved with a GetEntity request."
                            },
                            "name": {
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "Empty"
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "create": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "path": "v1/{+parent}/entities",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
                            },
                            "validateOnly": {
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "type": "boolean",
                              "location": "query"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "httpMethod": "POST",
                          "id": "dataplex.projects.locations.lakes.zones.entities.create",
                          "description": "Create a metadata entity.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities/{entitiesId}",
                          "id": "dataplex.projects.locations.lakes.zones.entities.get",
                          "parameters": {
                            "view": {
                              "description": "Optional. Used to select the subset of entity information to return. Defaults to BASIC.",
                              "location": "query",
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "BASIC",
                                "SCHEMA",
                                "FULL"
                              ],
                              "type": "string",
                              "enumDescriptions": [
                                "The API will default to the BASIC view.",
                                "Minimal view that does not include the schema.",
                                "Include basic information and schema.",
                                "Include everything. Currently, this is the same as the SCHEMA view."
                              ]
                            },
                            "name": {
                              "description": "Required. The resource name of the entity: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/entities/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Entity"
                          },
                          "description": "Get a metadata entity."
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListEntitiesResponse"
                          },
                          "description": "List metadata entities in a zone.",
                          "id": "dataplex.projects.locations.lakes.zones.entities.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/entities",
                          "parameters": {
                            "view": {
                              "enum": [
                                "ENTITY_VIEW_UNSPECIFIED",
                                "TABLES",
                                "FILESETS"
                              ],
                              "enumDescriptions": [
                                "The default unset value. Return both table and fileset entities if unspecified.",
                                "Only list table entities.",
                                "Only list fileset entities."
                              ],
                              "type": "string",
                              "description": "Required. Specify the entity view to make a partial list request.",
                              "location": "query"
                            },
                            "parent": {
                              "location": "path",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "type": "string",
                              "required": true
                            },
                            "pageSize": {
                              "description": "Optional. Maximum number of entities to return. The service may return fewer than this value. If unspecified, 100 entities will be returned by default. The maximum value is 500; larger values will will be truncated to 500.",
                              "type": "integer",
                              "location": "query",
                              "format": "int32"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The following filter parameters can be added to the URL to limit the entities returned by the API: Entity ID: ?filter=\"id=entityID\" Asset ID: ?filter=\"asset=assetID\" Data path ?filter=\"data_path=gs://my-bucket\" Is HIVE compatible: ?filter=\"hive_compatible=true\" Is BigQuery compatible: ?filter=\"bigquery_compatible=true\""
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListEntities call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEntities must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "path": "v1/{+parent}/entities"
                        }
                      }
                    },
                    "actions": {
                      "methods": {
                        "list": {
                          "parameters": {
                            "pageSize": {
                              "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListZoneActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZoneActions must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/actions",
                          "id": "dataplex.projects.locations.lakes.zones.actions.list",
                          "description": "Lists action resources in a zone.",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/actions"
                        }
                      }
                    },
                    "assets": {
                      "resources": {
                        "actions": {
                          "methods": {
                            "list": {
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                              },
                              "description": "Lists action resources in an asset.",
                              "parameterOrder": [
                                "parent"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}/actions",
                              "path": "v1/{+parent}/actions",
                              "parameters": {
                                "pageSize": {
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                                },
                                "parent": {
                                  "description": "Required. The resource name of the parent asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                                  "location": "path",
                                  "type": "string"
                                },
                                "pageToken": {
                                  "description": "Optional. Page token received from a previous ListAssetActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssetActions must match the call that provided the page token.",
                                  "type": "string",
                                  "location": "query"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "id": "dataplex.projects.locations.lakes.zones.assets.actions.list"
                            }
                          }
                        }
                      },
                      "methods": {
                        "delete": {
                          "description": "Deletes an asset resource. The referenced storage resource is detached (default) or deleted based on the associated Lifecycle policy.",
                          "id": "dataplex.projects.locations.lakes.zones.assets.delete",
                          "path": "v1/{+name}",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "DELETE",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}"
                        },
                        "getIamPolicy": {
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            },
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "path": "v1/{+resource}:getIamPolicy",
                          "id": "dataplex.projects.locations.lakes.zones.assets.getIamPolicy"
                        },
                        "list": {
                          "description": "Lists asset resources in a zone.",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "filter": {
                              "location": "query",
                              "description": "Optional. Filter request.",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. Maximum number of asset to return. The service may return fewer than this value. If unspecified, at most 10 assets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "type": "integer"
                            },
                            "parent": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                              "type": "string"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "Optional. Page token received from a previous ListAssets call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListAssets must match the call that provided the page token.",
                              "type": "string"
                            },
                            "orderBy": {
                              "type": "string",
                              "description": "Optional. Order by fields for the result.",
                              "location": "query"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "id": "dataplex.projects.locations.lakes.zones.assets.list",
                          "path": "v1/{+parent}/assets",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListAssetsResponse"
                          }
                        },
                        "patch": {
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Updates an asset resource.",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.patch",
                          "httpMethod": "PATCH",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "path": "v1/{+name}",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "name": {
                              "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            },
                            "updateMask": {
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask",
                              "description": "Required. Mask of fields to update."
                            },
                            "validateOnly": {
                              "location": "query",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "type": "boolean"
                            }
                          }
                        },
                        "create": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dataplex.projects.locations.lakes.zones.assets.create",
                          "parameters": {
                            "assetId": {
                              "type": "string",
                              "description": "Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone.",
                              "location": "query"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
                            },
                            "validateOnly": {
                              "location": "query",
                              "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                              "type": "boolean"
                            }
                          },
                          "path": "v1/{+parent}/assets",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates an asset resource."
                        },
                        "get": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "description": "Required. The resource name of the asset: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Asset"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}",
                          "path": "v1/{+name}",
                          "description": "Retrieves an asset resource."
                        },
                        "setIamPolicy": {
                          "id": "dataplex.projects.locations.lakes.zones.assets.setIamPolicy",
                          "response": {
                            "$ref": "GoogleIamV1Policy"
                          },
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:setIamPolicy",
                          "request": {
                            "$ref": "GoogleIamV1SetIamPolicyRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:setIamPolicy"
                        },
                        "testIamPermissions": {
                          "response": {
                            "$ref": "GoogleIamV1TestIamPermissionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}/assets/{assetsId}:testIamPermissions",
                          "parameterOrder": [
                            "resource"
                          ],
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+/assets/[^/]+$",
                              "location": "path"
                            }
                          },
                          "id": "dataplex.projects.locations.lakes.zones.assets.testIamPermissions",
                          "path": "v1/{+resource}:testIamPermissions",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "request": {
                            "$ref": "GoogleIamV1TestIamPermissionsRequest"
                          },
                          "httpMethod": "POST"
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "description": "Retrieves a zone resource."
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. Mask of fields to update.",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.patch",
                      "description": "Updates a zone resource.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "path": "v1/{+name}"
                    },
                    "testIamPermissions": {
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      }
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a zone resource. All assets within a zone must be deleted before the zone can be deleted.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Zone"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "zoneId": {
                          "type": "string",
                          "description": "Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. \"default\", \"global-temp\")",
                          "location": "query"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "path": "v1/{+parent}/zones",
                      "httpMethod": "POST",
                      "description": "Creates a zone resource within a lake.",
                      "id": "dataplex.projects.locations.lakes.zones.create"
                    },
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.zones.getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        },
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "path": "v1/{+resource}:getIamPolicy"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.zones.list",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListZonesResponse"
                      },
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Optional. Filter request.",
                          "type": "string"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Optional. Order by fields for the result.",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token."
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. Maximum number of zones to return. The service may return fewer than this value. If unspecified, at most 10 zones will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists zone resources in a lake.",
                      "path": "v1/{+parent}/zones"
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/zones/{zonesId}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/zones/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "dataplex.projects.locations.lakes.zones.setIamPolicy"
                    }
                  }
                },
                "environments": {
                  "resources": {
                    "sessions": {
                      "methods": {
                        "list": {
                          "path": "v1/{+parent}/sessions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}/sessions",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListSessionsResponse"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.environments.sessions.list",
                          "description": "Lists session resources in an environment.",
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "description": "Optional. Maximum number of sessions to return. The service may return fewer than this value. If unspecified, at most 10 sessions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "pageToken": {
                              "description": "Optional. Page token received from a previous ListSessions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListSessions must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}."
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Filter request. The following mode filter is supported to return only the sessions belonging to the requester when the mode is USER and return sessions of all the users when the mode is ADMIN. When no filter is sent default to USER mode. NOTE: When the mode is ADMIN, the requester should have dataplex.environments.listAllSessions permission to list all sessions, in absence of the permission, the request fails.mode = ADMIN | USER"
                            }
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "path": "v1/{+parent}/environments",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListEnvironmentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path"
                        },
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListEnvironments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListEnvironments must match the call that provided the page token."
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Filter request.",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. Maximum number of environments to return. The service may return fewer than this value. If unspecified, at most 10 environments will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments",
                      "description": "Lists environments under the given lake.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dataplex.projects.locations.lakes.environments.list"
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Delete the environment resource. All the child resources must have been deleted before environment deletion can be initiated.",
                      "id": "dataplex.projects.locations.lakes.environments.delete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE"
                    },
                    "testIamPermissions": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:testIamPermissions",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "id": "dataplex.projects.locations.lakes.environments.testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "id": "dataplex.projects.locations.lakes.environments.get",
                      "description": "Get environment resource.",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the environment: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environments/{environment_id}.",
                          "location": "path"
                        }
                      }
                    },
                    "create": {
                      "path": "v1/{+parent}/environments",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Create an environment resource.",
                      "id": "dataplex.projects.locations.lakes.environments.create",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query"
                        },
                        "environmentId": {
                          "type": "string",
                          "description": "Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "patch": {
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
                          "required": true
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Mask of fields to update.",
                          "format": "google-fieldmask"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.environments.patch",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Environment"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}",
                      "description": "Update the environment resource.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "getIamPolicy": {
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:getIamPolicy",
                      "id": "dataplex.projects.locations.lakes.environments.getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$"
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      }
                    },
                    "setIamPolicy": {
                      "id": "dataplex.projects.locations.lakes.environments.setIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/environments/[^/]+$",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/environments/{environmentsId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      }
                    }
                  }
                },
                "contentitems": {
                  "methods": {
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "path": "v1/{+parent}/contentitems",
                      "description": "Create a content.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "id": "dataplex.projects.locations.lakes.contentitems.create",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      }
                    },
                    "delete": {
                      "id": "dataplex.projects.locations.lakes.contentitems.delete",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "httpMethod": "DELETE",
                      "description": "Delete a content.",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        },
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "description": "Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.",
                      "path": "v1/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:getIamPolicy",
                      "id": "dataplex.projects.locations.lakes.contentitems.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List content.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListContentResponse"
                      },
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = \"value1\" labels:key1 type = \"NOTEBOOK\" type = \"SQL_SCRIPT\"These restrictions can be coinjoined with AND, OR and NOT conjunctions.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/contentitems",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems",
                      "id": "dataplex.projects.locations.lakes.contentitems.list"
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.lakes.contentitems.testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:testIamPermissions",
                      "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "setIamPolicy": {
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.lakes.contentitems.setIamPolicy",
                      "description": "Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource.",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}:setIamPolicy"
                    },
                    "patch": {
                      "id": "dataplex.projects.locations.lakes.contentitems.patch",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "description": "Update a content. Only supports full resource update.",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Required. Mask of fields to update.",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/contentitems/{contentitemsId}",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "httpMethod": "GET",
                      "description": "Get a content resource.",
                      "id": "dataplex.projects.locations.lakes.contentitems.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/contentitems/.*$",
                          "required": true
                        },
                        "view": {
                          "enum": [
                            "CONTENT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "description": "Optional. Specify content view to make a partial request.",
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "Content view not specified. Defaults to BASIC. The API will default to the BASIC view.",
                            "Will not return the data_text field.",
                            "Returns the complete proto."
                          ]
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "actions": {
                  "methods": {
                    "list": {
                      "description": "Lists action resources in a lake.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListActionsResponse"
                      },
                      "path": "v1/{+parent}/actions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/actions",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListLakeActions call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListLakeActions must match the call that provided the page token."
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Optional. Maximum number of actions to return. The service may return fewer than this value. If unspecified, at most 10 actions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dataplex.projects.locations.lakes.actions.list"
                    }
                  }
                },
                "tasks": {
                  "methods": {
                    "getIamPolicy": {
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.tasks.getIamPolicy"
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "description": "Update the task resource.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.",
                          "required": true
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.patch"
                    },
                    "run": {
                      "response": {
                        "$ref": "GoogleCloudDataplexV1RunTaskResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.run",
                      "path": "v1/{+name}:run",
                      "description": "Run an on demand execution of a Task.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:run",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1RunTaskRequest"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{tasks_id}.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.tasks.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "description": "Get task resource.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      }
                    },
                    "create": {
                      "id": "dataplex.projects.locations.lakes.tasks.create",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks",
                      "path": "v1/{+parent}/tasks",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Task"
                      },
                      "parameters": {
                        "taskId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Task identifier."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "description": "Creates a task resource within a lake."
                    },
                    "setIamPolicy": {
                      "path": "v1/{+resource}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "dataplex.projects.locations.lakes.tasks.setIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:setIamPolicy"
                    },
                    "testIamPermissions": {
                      "path": "v1/{+resource}:testIamPermissions",
                      "id": "dataplex.projects.locations.lakes.tasks.testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}:testIamPermissions",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Delete the task resource.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                          "description": "Required. The resource name of the task: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/task/{task_id}."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}",
                      "id": "dataplex.projects.locations.lakes.tasks.delete",
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListTasksResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dataplex.projects.locations.lakes.tasks.list",
                      "path": "v1/{+parent}/tasks",
                      "parameters": {
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Filter request.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListZones call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListZones must match the call that provided the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. Maximum number of tasks to return. The service may return fewer than this value. If unspecified, at most 10 tasks will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Lists tasks under the given lake."
                    }
                  },
                  "resources": {
                    "jobs": {
                      "methods": {
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDataplexV1Job"
                          },
                          "description": "Get job resource.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}",
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$",
                              "required": true,
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.",
                              "location": "path"
                            }
                          },
                          "httpMethod": "GET"
                        },
                        "list": {
                          "description": "Lists Jobs under the given task.",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+$",
                              "description": "Required. The resource name of the parent environment: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Page token received from a previous ListJobs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListJobs must match the call that provided the page token."
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "Optional. Maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 10 jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "format": "int32",
                              "location": "query"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/jobs",
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.list",
                          "response": {
                            "$ref": "GoogleCloudDataplexV1ListJobsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "cancel": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "dataplex.projects.locations.lakes.tasks.jobs.cancel",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. The resource name of the job: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/task/{task_id}/job/{job_id}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/tasks/[^/]+/jobs/[^/]+$"
                            }
                          },
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDataplexV1CancelJobRequest"
                          },
                          "response": {
                            "$ref": "Empty"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/tasks/{tasksId}/jobs/{jobsId}:cancel",
                          "path": "v1/{+name}:cancel",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Cancel jobs running for the task resource."
                        }
                      }
                    }
                  }
                },
                "content": {
                  "methods": {
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Update a content. Only supports full resource update.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "parameters": {
                        "updateMask": {
                          "description": "Required. Mask of fields to update.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "validateOnly": {
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "id": "dataplex.projects.locations.lakes.content.patch"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "enumDescriptions": [
                            "Content view not specified. Defaults to BASIC. The API will default to the BASIC view.",
                            "Will not return the data_text field.",
                            "Returns the complete proto."
                          ],
                          "description": "Optional. Specify content view to make a partial request.",
                          "enum": [
                            "CONTENT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.content.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "description": "Get a content resource.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      }
                    },
                    "testIamPermissions": {
                      "description": "Returns the caller's permissions on a resource. If the resource does not exist, an empty set of permissions is returned (a NOT_FOUND error is not returned).A caller is not required to have Google IAM permission to make this request.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "type": "string"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.content.testIamPermissions"
                    },
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:setIamPolicy",
                      "id": "dataplex.projects.locations.lakes.content.setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:setIamPolicy",
                      "description": "Sets the access control policy on the specified contentitem resource. Replaces any existing policy.Caller must have Google IAM dataplex.content.setIamPolicy permission on the resource."
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List content.",
                      "id": "dataplex.projects.locations.lakes.content.list",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$"
                        },
                        "pageToken": {
                          "description": "Optional. Page token received from a previous ListContent call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListContent must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. Maximum number of content to return. The service may return fewer than this value. If unspecified, at most 10 content will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Optional. Filter request. Filters are case-sensitive. The following formats are supported:labels.key1 = \"value1\" labels:key1 type = \"NOTEBOOK\" type = \"SQL_SCRIPT\"These restrictions can be coinjoined with AND, OR and NOT conjunctions.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListContentResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content",
                      "path": "v1/{+parent}/content"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "location": "query"
                        }
                      },
                      "id": "dataplex.projects.locations.lakes.content.create",
                      "path": "v1/{+parent}/content",
                      "description": "Create a content.",
                      "request": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1Content"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "getIamPolicy": {
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a contentitem resource. A NOT_FOUND error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it.Caller must have Google IAM dataplex.content.getIamPolicy permission on the resource.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}:getIamPolicy",
                      "httpMethod": "GET",
                      "id": "dataplex.projects.locations.lakes.content.getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/lakes/[^/]+/content/.*$",
                          "description": "Required. The resource name of the content: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/lakes/{lakesId}/content/{contentId}",
                      "id": "dataplex.projects.locations.lakes.content.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "description": "Delete a content.",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      }
                    }
                  }
                }
              }
            },
            "dataAttributeBindings": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/dataAttributeBindings",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataAttributeBinding"
                  },
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "dataAttributeBindingId": {
                      "location": "query",
                      "description": "Required. DataAttributeBinding identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the Location.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The resource name of the parent data taxonomy projects/{project_number}/locations/{location_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "dataplex.projects.locations.dataAttributeBindings.create",
                  "description": "Create a DataAttributeBinding resource.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes a DataAttributeBinding resource. All attributes within the DataAttributeBinding must be deleted before the DataAttributeBinding can be deleted.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the DataAttributeBinding: projects/{project_number}/locations/{location_id}/dataAttributeBindings/{data_attribute_binding_id}"
                    },
                    "etag": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. If the client provided etag value does not match the current etag value, the DeleteDataAttributeBindingRequest method returns an ABORTED error response. Etags must be used when calling the DeleteDataAttributeBinding."
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "dataplex.projects.locations.dataAttributeBindings.delete",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/dataAttributeBindings",
                  "description": "Lists DataAttributeBinding resources in a project and location.",
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. Order by fields for the result.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Filter request. Filter using resource: filter=resource:\"resource-name\" Filter using attribute: filter=attributes:\"attribute-name\" Filter using attribute in paths list: filter=paths.attributes:\"attribute-name\""
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the Location: projects/{project_number}/locations/{location_id}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. Maximum number of DataAttributeBindings to return. The service may return fewer than this value. If unspecified, at most 10 DataAttributeBindings will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Page token received from a previous ListDataAttributeBindings call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataAttributeBindings must match the call that provided the page token."
                    }
                  },
                  "id": "dataplex.projects.locations.dataAttributeBindings.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListDataAttributeBindingsResponse"
                  }
                },
                "setIamPolicy": {
                  "id": "dataplex.projects.locations.dataAttributeBindings.setIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Mask of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The relative resource name of the Data Attribute Binding, of the form: projects/{project_number}/locations/{location}/dataAttributeBindings/{data_attribute_binding_id}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "PATCH",
                  "id": "dataplex.projects.locations.dataAttributeBindings.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a DataAttributeBinding resource.",
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataAttributeBinding"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    },
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "dataplex.projects.locations.dataAttributeBindings.getIamPolicy"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.dataAttributeBindings.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of the DataAttributeBinding: projects/{project_number}/locations/{location_id}/dataAttributeBindings/{data_attribute_binding_id}",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}",
                  "httpMethod": "GET",
                  "description": "Retrieves a DataAttributeBinding resource.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDataplexV1DataAttributeBinding"
                  }
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "dataplex.projects.locations.dataAttributeBindings.testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataAttributeBindings/{dataAttributeBindingsId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataAttributeBindings/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                }
              }
            },
            "aspectTypes": {
              "methods": {
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/aspectTypes/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.aspectTypes.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/aspectTypes/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.aspectTypes.setIamPolicy"
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/aspectTypes/{aspectTypesId}:getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "id": "dataplex.projects.locations.aspectTypes.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/aspectTypes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED."
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "dataplex.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "id": "dataplex.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dataplex.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "entryTypes": {
              "methods": {
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "dataplex.projects.locations.entryTypes.getIamPolicy",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryTypes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryTypes/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.entryTypes.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  }
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/entryTypes/{entryTypesId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/entryTypes/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "id": "dataplex.projects.locations.entryTypes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  }
                }
              }
            },
            "dataTaxonomies": {
              "methods": {
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.dataTaxonomies.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "dataplex.projects.locations.dataTaxonomies.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. Maximum number of DataTaxonomies to return. The service may return fewer than this value. If unspecified, at most 10 DataTaxonomies will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer"
                    },
                    "orderBy": {
                      "description": "Optional. Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. Page token received from a previous ListDataTaxonomies call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataTaxonomies must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Filter request."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The resource name of the DataTaxonomy location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies",
                  "id": "dataplex.projects.locations.dataTaxonomies.list",
                  "description": "Lists DataTaxonomy resources in a project and location.",
                  "path": "v1/{+parent}/dataTaxonomies",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListDataTaxonomiesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the DataTaxonomy: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$"
                    }
                  },
                  "id": "dataplex.projects.locations.dataTaxonomies.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Retrieves a DataTaxonomy resource.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1DataTaxonomy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}:setIamPolicy",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "id": "dataplex.projects.locations.dataTaxonomies.setIamPolicy"
                },
                "delete": {
                  "description": "Deletes a DataTaxonomy resource. All attributes within the DataTaxonomy must be deleted before the DataTaxonomy can be deleted.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the DataTaxonomy: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}"
                    },
                    "etag": {
                      "description": "Optional. If the client provided etag value does not match the current etag value,the DeleteDataTaxonomy method returns an ABORTED error.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dataplex.projects.locations.dataTaxonomies.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}"
                },
                "patch": {
                  "description": "Updates a DataTaxonomy resource.",
                  "id": "dataplex.projects.locations.dataTaxonomies.patch",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.",
                      "location": "path"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Mask of fields to update."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}",
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataTaxonomy"
                  },
                  "httpMethod": "PATCH"
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataTaxonomy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies",
                  "description": "Create a DataTaxonomy resource.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The resource name of the data taxonomy location, of the form: projects/{project_number}/locations/{location_id} where location_id refers to a GCP region.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "dataTaxonomyId": {
                      "location": "query",
                      "description": "Required. DataTaxonomy identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the Project.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/dataTaxonomies",
                  "id": "dataplex.projects.locations.dataTaxonomies.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "attributes": {
                  "methods": {
                    "getIamPolicy": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:getIamPolicy",
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.getIamPolicy",
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:getIamPolicy"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the DataAttribute: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}",
                          "location": "path"
                        },
                        "etag": {
                          "description": "Optional. If the client provided etag value does not match the current etag value, the DeleteDataAttribute method returns an ABORTED error response.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Deletes a Data Attribute resource.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1DataAttribute"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/attributes",
                      "httpMethod": "POST",
                      "description": "Create a DataAttribute resource.",
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.create",
                      "parameters": {
                        "dataAttributeId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. DataAttribute identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the DataTaxonomy."
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The resource name of the parent data taxonomy projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$"
                        },
                        "validateOnly": {
                          "location": "query",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                          "type": "boolean"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a DataAttribute resource.",
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDataplexV1DataAttribute"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Output only. The relative resource name of the dataAttribute, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$"
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "testIamPermissions": {
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleIamV1TestIamPermissionsResponse"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "request": {
                        "$ref": "GoogleIamV1TestIamPermissionsRequest"
                      },
                      "path": "v1/{+resource}:testIamPermissions"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the dataAttribute: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}"
                        }
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1DataAttribute"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.get",
                      "description": "Retrieves a Data Attribute resource."
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "GoogleIamV1Policy"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleIamV1SetIamPolicyRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "required": true,
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes/{attributesId}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                      "path": "v1/{+resource}:setIamPolicy"
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataTaxonomies/{dataTaxonomiesId}/attributes",
                      "id": "dataplex.projects.locations.dataTaxonomies.attributes.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListDataAttributesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/attributes",
                      "description": "Lists Data Attribute resources in a DataTaxonomy.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the DataTaxonomy: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataTaxonomies/[^/]+$"
                        },
                        "filter": {
                          "description": "Optional. Filter request.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. Maximum number of DataAttributes to return. The service may return fewer than this value. If unspecified, at most 10 dataAttributes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query"
                        },
                        "orderBy": {
                          "description": "Optional. Order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Page token received from a previous ListDataAttributes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataAttributes must match the call that provided the page token."
                        }
                      }
                    }
                  }
                }
              }
            },
            "dataScans": {
              "resources": {
                "jobs": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs/{jobsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "description": "Optional. Select the DataScanJob view to return. Defaults to BASIC.",
                          "enum": [
                            "DATA_SCAN_JOB_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "enumDescriptions": [
                            "The API will default to the BASIC view.",
                            "Basic view that does not include spec and result.",
                            "Include everything."
                          ],
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the DataScanJob: projects/{project}/locations/{location_id}/dataScans/{data_scan_id}/jobs/{data_scan_job_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+/jobs/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets a DataScanJob resource.",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1DataScanJob"
                      },
                      "id": "dataplex.projects.locations.dataScans.jobs.get"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDataplexV1ListDataScanJobsResponse"
                      },
                      "id": "dataplex.projects.locations.dataScans.jobs.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/jobs",
                      "description": "Lists DataScanJobs under the given DataScan.",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. Maximum number of DataScanJobs to return. The service may return fewer than this value. If unspecified, at most 10 DataScanJobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Page token received from a previous ListDataScanJobs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataScanJobs must match the call that provided the page token."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                          "description": "Required. The resource name of the parent environment: projects/{project}/locations/{location_id}/dataScans/{data_scan_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. An expression for filtering the results of the ListDataScanJobs request.If unspecified, all datascan jobs will be returned. Multiple filters can be applied (with AND, OR logical operators). Filters are case-sensitive.Allowed fields are: start_time end_timestart_time and end_time expect RFC-3339 formatted strings (e.g. 2018-10-08T18:30:00-07:00).For instance, 'start_time \u003e 2018-10-08T00:00:00.123456789Z AND end_time \u003c 2018-10-09T00:00:00.123456789Z' limits results to DataScanJobs between specified start and end times.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}/jobs"
                    }
                  }
                }
              },
              "methods": {
                "run": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.dataScans.run",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "description": "Required. The resource name of the DataScan: projects/{project}/locations/{location_id}/dataScans/{data_scan_id}. where project refers to a project_id or project_number and location_id refers to a GCP region.Only OnDemand data scans are allowed.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:run",
                  "request": {
                    "$ref": "GoogleCloudDataplexV1RunDataScanRequest"
                  },
                  "description": "Runs an on-demand execution of a DataScan",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDataplexV1RunDataScanResponse"
                  },
                  "path": "v1/{+name}:run"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataScan"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dataplex.projects.locations.dataScans.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. Mask of fields to update."
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "type": "boolean"
                    }
                  },
                  "description": "Updates a DataScan resource.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:getIamPolicy",
                  "id": "dataplex.projects.locations.dataScans.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a DataScan resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataplex.projects.locations.dataScans.get",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1DataScan"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the dataScan: projects/{project}/locations/{location_id}/dataScans/{data_scan_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "view": {
                      "description": "Optional. Select the DataScan view to return. Defaults to BASIC.",
                      "location": "query",
                      "enumDescriptions": [
                        "The API will default to the BASIC view.",
                        "Basic view that does not include spec and result.",
                        "Include everything."
                      ],
                      "enum": [
                        "DATA_SCAN_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudDataplexV1DataScan"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/dataScans",
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the request, but do not perform mutations. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the parent location: projects/{project}/locations/{location_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                      "location": "path"
                    },
                    "dataScanId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a number or a letter. Must be between 1-63 characters. Must be unique within the customer project / location."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a DataScan resource.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dataplex.projects.locations.dataScans.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans"
                },
                "testIamPermissions": {
                  "id": "dataplex.projects.locations.dataScans.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}:setIamPolicy",
                  "id": "dataplex.projects.locations.dataScans.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans/{dataScansId}",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "id": "dataplex.projects.locations.dataScans.delete",
                  "description": "Deletes a DataScan resource.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataScans/[^/]+$",
                      "description": "Required. The resource name of the dataScan: projects/{project}/locations/{location_id}/dataScans/{data_scan_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                      "required": true
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataScans",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filter request."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Order by fields (name or create_time) for the result. If not specified, the ordering is undefined."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. Maximum number of dataScans to return. The service may return fewer than this value. If unspecified, at most 500 scans will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the parent location: projects/{project}/locations/{location_id} where project refers to a project_id or project_number and location_id refers to a GCP region.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Optional. Page token received from a previous ListDataScans call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDataScans must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/dataScans",
                  "id": "dataplex.projects.locations.dataScans.list",
                  "response": {
                    "$ref": "GoogleCloudDataplexV1ListDataScansResponse"
                  },
                  "description": "Lists DataScans."
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              },
              "description": "Gets information about a location.",
              "id": "dataplex.projects.locations.get",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "httpMethod": "GET"
            },
            "list": {
              "path": "v1/{+name}/locations",
              "id": "dataplex.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "description": "Dataplex API is used to manage the lifecycle of data lakes.",
  "servicePath": "",
  "mtlsRootUrl": "https://dataplex.mtls.googleapis.com/",
  "ownerName": "Google",
  "schemas": {
    "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility": {
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "Output only. Whether the entity is compatible and can be represented in the metadata store.",
          "readOnly": true
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Provides additional detail if the entity is incompatible with the metadata store."
        }
      },
      "type": "object",
      "description": "Provides compatibility information for a specific metadata store.",
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
    },
    "GoogleCloudDataplexV1ResourceAccessSpec": {
      "type": "object",
      "description": "ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.",
      "id": "GoogleCloudDataplexV1ResourceAccessSpec",
      "properties": {
        "owners": {
          "type": "array",
          "description": "Optional. The set of principals to be granted owner role on the resource.",
          "items": {
            "type": "string"
          }
        },
        "writers": {
          "type": "array",
          "description": "Optional. The set of principals to be granted writer role on the resource.",
          "items": {
            "type": "string"
          }
        },
        "readers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource."
        }
      }
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleTypeExpr",
      "type": "object",
      "properties": {
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions": {
      "type": "object",
      "description": "Describe CSV and similar semi-structured data formats.",
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions",
      "properties": {
        "headerRows": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows."
        },
        "delimiter": {
          "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
          "type": "string"
        },
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. The default is UTF-8."
        },
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo": {
      "properties": {
        "average": {
          "format": "double",
          "type": "number",
          "description": "Average of non-null values in the scanned data. NaN, if the field has a NaN."
        },
        "quartiles": {
          "description": "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of approximate quartile values for the scanned data, occurring in order Q1, median, Q3.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "min": {
          "description": "Minimum of non-null values in the scanned data. NaN, if the field has a NaN.",
          "format": "int64",
          "type": "string"
        },
        "standardDeviation": {
          "description": "Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.",
          "format": "double",
          "type": "number"
        },
        "max": {
          "type": "string",
          "format": "int64",
          "description": "Maximum of non-null values in the scanned data. NaN, if the field has a NaN."
        }
      },
      "description": "The profile information for an integer type field.",
      "type": "object",
      "id": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo"
    },
    "GoogleCloudDataplexV1ListDataTaxonomiesResponse": {
      "description": "List DataTaxonomies response.",
      "type": "object",
      "properties": {
        "dataTaxonomies": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataTaxonomy"
          },
          "description": "DataTaxonomies under the given parent location."
        },
        "unreachableLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ListDataTaxonomiesResponse"
    },
    "GoogleCloudDataplexV1DataQualityResult": {
      "id": "GoogleCloudDataplexV1DataQualityResult",
      "description": "The output of a DataQualityScan.",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataQualityRuleResult"
          },
          "description": "A list of all the rules in a job, and their results."
        },
        "rowCount": {
          "type": "string",
          "description": "The count of rows processed.",
          "format": "int64"
        },
        "dimensions": {
          "description": "A list of results at the dimension level.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataQualityDimensionResult"
          }
        },
        "scannedData": {
          "$ref": "GoogleCloudDataplexV1ScannedData",
          "description": "The data scanned for this result."
        },
        "passed": {
          "type": "boolean",
          "description": "Overall data quality result -- true if all rules passed."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1DataQualityRuleNonNullExpectation": {
      "id": "GoogleCloudDataplexV1DataQualityRuleNonNullExpectation",
      "properties": {},
      "description": "Evaluates whether each column value is null.",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataProfileSpec": {
      "properties": {
        "samplingPercent": {
          "format": "float",
          "type": "number",
          "description": "Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100."
        },
        "excludeFields": {
          "description": "Optional. The fields to exclude from data profile.If specified, the fields will be excluded from data profile, regardless of include_fields value.",
          "$ref": "GoogleCloudDataplexV1DataProfileSpecSelectedFields"
        },
        "includeFields": {
          "$ref": "GoogleCloudDataplexV1DataProfileSpecSelectedFields",
          "description": "Optional. The fields to include in data profile.If not specified, all fields at the time of profile scan job execution are included, except for ones listed in exclude_fields."
        },
        "rowFilter": {
          "description": "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 \u003e= 0 AND col2 \u003c 10",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DataProfileSpec",
      "description": "DataProfileScan related setting."
    },
    "GoogleCloudDataplexV1DataScanEventDataQualityResult": {
      "id": "GoogleCloudDataplexV1DataScanEventDataQualityResult",
      "type": "object",
      "description": "Data quality result for data scan job.",
      "properties": {
        "dimensionPassed": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not."
        },
        "rowCount": {
          "description": "The count of rows processed in the data scan job.",
          "format": "int64",
          "type": "string"
        },
        "passed": {
          "description": "Whether the data quality result was pass or not.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDataplexV1DataQualityDimensionResult": {
      "properties": {
        "passed": {
          "type": "boolean",
          "description": "Whether the dimension passed or failed."
        }
      },
      "type": "object",
      "description": "DataQualityDimensionResult provides a more detailed, per-dimension view of the results.",
      "id": "GoogleCloudDataplexV1DataQualityDimensionResult"
    },
    "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo": {
      "id": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo",
      "properties": {
        "topNValues": {
          "description": "The list of top N non-null values and number of times they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue"
          },
          "type": "array"
        },
        "nullRatio": {
          "description": "Ratio of rows with null value against total scanned rows.",
          "format": "double",
          "type": "number"
        },
        "distinctRatio": {
          "description": "Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.",
          "type": "number",
          "format": "double"
        },
        "stringProfile": {
          "$ref": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo",
          "description": "String type field information."
        },
        "integerProfile": {
          "$ref": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo",
          "description": "Integer type field information."
        },
        "doubleProfile": {
          "description": "Double type field information.",
          "$ref": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo"
        }
      },
      "type": "object",
      "description": "The profile information for each field type."
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources": {
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources",
      "type": "object",
      "description": "Compute resources associated with the analyze interactive workloads.",
      "properties": {
        "diskSizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Size in GB of the disk. Default is 100 GB."
        },
        "nodeCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Total number of nodes in the sessions created for this environment."
        },
        "maxNodeCount": {
          "description": "Optional. Max configurable nodes. If max_node_count \u003e node_count, then auto-scaling is enabled.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatus": {
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatus",
      "description": "Status of discovery for an asset.",
      "properties": {
        "lastRunTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of the last discovery run."
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "State is unspecified.",
            "Discovery for the asset is scheduled.",
            "Discovery for the asset is running.",
            "Discovery for the asset is currently paused (e.g. due to a lack of available resources). It will be automatically resumed.",
            "Discovery for the asset is disabled."
          ],
          "description": "The current status of the discovery feature.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SCHEDULED",
            "IN_PROGRESS",
            "PAUSED",
            "DISABLED"
          ]
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of the status."
        },
        "stats": {
          "description": "Data Stats of the asset reported by discovery.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatusStats"
        },
        "lastRunDuration": {
          "format": "google-duration",
          "description": "The duration of the last discovery run.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ContentSqlScript": {
      "id": "GoogleCloudDataplexV1ContentSqlScript",
      "type": "object",
      "properties": {
        "engine": {
          "type": "string",
          "enumDescriptions": [
            "Value was unspecified.",
            "Spark SQL Query."
          ],
          "description": "Required. Query Engine to be used for the Sql Query.",
          "enum": [
            "QUERY_ENGINE_UNSPECIFIED",
            "SPARK"
          ]
        }
      },
      "description": "Configuration for the Sql Script content."
    },
    "GoogleCloudDataplexV1ActionMissingResource": {
      "properties": {},
      "id": "GoogleCloudDataplexV1ActionMissingResource",
      "description": "Action details for resource references in assets that cannot be located.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionMissingData": {
      "properties": {},
      "type": "object",
      "description": "Action details for absence of data detected by discovery.",
      "id": "GoogleCloudDataplexV1ActionMissingData"
    },
    "GoogleCloudDataplexV1TaskExecutionStatus": {
      "properties": {
        "latestJob": {
          "description": "Output only. latest job execution",
          "$ref": "GoogleCloudDataplexV1Job",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Last update time of the status."
        }
      },
      "description": "Status of the task execution (e.g. Jobs).",
      "id": "GoogleCloudDataplexV1TaskExecutionStatus",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataQualityRuleResult": {
      "description": "DataQualityRuleResult provides a more detailed, per-rule view of the results.",
      "properties": {
        "passedCount": {
          "type": "string",
          "description": "The number of rows which passed a rule evaluation. This field is only valid for ColumnMap type rules.",
          "format": "int64"
        },
        "passed": {
          "description": "Whether the rule passed or failed.",
          "type": "boolean"
        },
        "evaluatedCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of rows a rule was evaluated against. This field is only valid for ColumnMap type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true."
        },
        "rule": {
          "description": "The rule specified in the DataQualitySpec, as is.",
          "$ref": "GoogleCloudDataplexV1DataQualityRule"
        },
        "passRatio": {
          "description": "The ratio of passed_count / evaluated_count. This field is only valid for ColumnMap type rules.",
          "format": "double",
          "type": "number"
        },
        "nullCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of rows with null values in the specified column."
        },
        "failingRowsQuery": {
          "type": "string",
          "description": "The query to find rows that did not pass this rule. Only applies to ColumnMap and RowCondition rules."
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DataQualityRuleResult"
    },
    "GoogleCloudDataplexV1DiscoveryEventPartitionDetails": {
      "properties": {
        "type": {
          "description": "The type of the containing entity resource.",
          "type": "string",
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ]
        },
        "sampledDataLocations": {
          "items": {
            "type": "string"
          },
          "description": "The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.",
          "type": "array"
        },
        "partition": {
          "description": "The name to the partition resource. The name is the fully-qualified resource name.",
          "type": "string"
        },
        "entity": {
          "description": "The name to the containing entity resource. The name is the fully-qualified resource name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails",
      "description": "Details about the partition.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions": {
      "type": "object",
      "properties": {
        "headerRows": {
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "type": "integer",
          "format": "int32"
        },
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings."
        },
        "delimiter": {
          "type": "string",
          "description": "Optional. The delimiter being used to separate values. This defaults to ','."
        }
      },
      "description": "Describe CSV and similar semi-structured data formats.",
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions"
    },
    "GoogleCloudDataplexV1StorageFormatJsonOptions": {
      "id": "GoogleCloudDataplexV1StorageFormatJsonOptions",
      "description": "Describes JSON data format.",
      "properties": {
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpec": {
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec",
      "type": "object",
      "properties": {
        "compute": {
          "description": "Optional. Compute resources needed for analyze interactive workloads.",
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources"
        },
        "osImage": {
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime",
          "description": "Required. Software Runtime Configuration for analyze interactive workloads."
        }
      },
      "description": "Configuration for the underlying infrastructure used to run workloads."
    },
    "GoogleCloudDataplexV1ActionInvalidDataOrganization": {
      "properties": {},
      "description": "Action details for invalid data arrangement.",
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionInvalidDataOrganization"
    },
    "GoogleCloudDataplexV1ListDataAttributeBindingsResponse": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ListDataAttributeBindingsResponse",
      "description": "List DataAttributeBindings response.",
      "properties": {
        "unreachableLocations": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "dataAttributeBindings": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataAttributeBinding"
          },
          "description": "DataAttributeBindings under the given parent Location."
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } "
    },
    "GoogleCloudDataplexV1DataAttributeBinding": {
      "id": "GoogleCloudDataplexV1DataAttributeBinding",
      "description": "DataAttributeBinding represents binding of attributes to resources. Eg: Bind 'CustomerInfo' entity with 'PII' attribute.",
      "properties": {
        "paths": {
          "type": "array",
          "description": "Optional. The list of paths for items within the associated resource (eg. columns and partitions within a table) along with attribute bindings.",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataAttributeBindingPath"
          }
        },
        "resource": {
          "description": "Optional. Immutable. The resource name of the resource that is associated to attributes. Presently, only entity resource is supported in the form: projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/entities/{entity_id} Must belong in the same project and region as the attribute binding, and there can only exist one active binding for a resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. User-defined labels for the DataAttributeBinding.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the DataAttributeBinding. This ID will be different if the DataAttributeBinding is deleted and re-created with the same name.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the Data Attribute Binding, of the form: projects/{project_number}/locations/{location}/dataAttributeBindings/{data_attribute_binding_id}",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the DataAttributeBinding was last updated."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Etags must be used when calling the DeleteDataAttributeBinding and the UpdateDataAttributeBinding method.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the DataAttributeBinding."
        },
        "attributes": {
          "items": {
            "type": "string"
          },
          "description": "Optional. List of attributes to be associated with the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}",
          "type": "array"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the DataAttributeBinding was created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1RunTaskRequest": {
      "id": "GoogleCloudDataplexV1RunTaskRequest",
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Optional. User-defined labels for the task. If the map is left empty, the task will run with existing labels from task definition. If the map contains an entry with a new key, the same will be added to existing set of labels. If the map contains an entry with an existing label key in task definition, the task will run with new label value for that entry. Clearing an existing label will require label value to be explicitly set to a hyphen \"-\". The label value cannot be empty.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "args": {
          "type": "object",
          "description": "Optional. Execution spec arguments. If the map is left empty, the task will run with existing execution spec args from task definition. If the map contains an entry with a new key, the same will be added to existing set of args. If the map contains an entry with an existing arg key in task definition, the task will run with new arg value for that entry. Clearing an existing arg will require arg value to be explicitly set to a hyphen \"-\". The arg value cannot be empty.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1SessionEvent": {
      "id": "GoogleCloudDataplexV1SessionEvent",
      "description": "These messages contain information about sessions within an environment. The monitored resource is 'Environment'.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The information about the user that created the session. It will be the email address of the user."
        },
        "query": {
          "description": "The execution details of the query.",
          "$ref": "GoogleCloudDataplexV1SessionEventQueryDetail"
        },
        "message": {
          "type": "string",
          "description": "The log message."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "An unspecified event type.",
            "Event when the session is assigned to a user.",
            "Event for stop of a session.",
            "Query events in the session.",
            "Event for creation of a cluster. It is not yet assigned to a user. This comes before START in the sequence"
          ],
          "description": "The type of the event.",
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "START",
            "STOP",
            "QUERY",
            "CREATE"
          ]
        },
        "unassignedDuration": {
          "type": "string",
          "description": "The idle duration of a warm pooled session before it is assigned to user.",
          "format": "google-duration"
        },
        "eventSucceeded": {
          "type": "boolean",
          "description": "The status of the event."
        },
        "sessionId": {
          "type": "string",
          "description": "Unique identifier for the session."
        },
        "fastStartupEnabled": {
          "type": "boolean",
          "description": "If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user."
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for TestIamPermissions method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation": {
      "description": "Evaluates whether the column aggregate statistic lies between a specified range.",
      "id": "GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation",
      "properties": {
        "strictMinEnabled": {
          "description": "Whether column statistic needs to be strictly greater than ('\u003e') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.",
          "type": "boolean"
        },
        "statistic": {
          "enum": [
            "STATISTIC_UNDEFINED",
            "MEAN",
            "MIN",
            "MAX"
          ],
          "description": "The aggregate metric to evaluate.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified statistic type",
            "Evaluate the column mean",
            "Evaluate the column min",
            "Evaluate the column max"
          ]
        },
        "minValue": {
          "description": "The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.",
          "type": "string"
        },
        "maxValue": {
          "type": "string",
          "description": "The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided."
        },
        "strictMaxEnabled": {
          "type": "boolean",
          "description": "Whether column statistic needs to be strictly lesser than ('\u003c') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpec": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpec",
      "properties": {
        "schedule": {
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.",
          "type": "string"
        },
        "jsonOptions": {
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions",
          "description": "Optional. Configuration for Json data."
        },
        "enabled": {
          "description": "Required. Whether discovery is enabled.",
          "type": "boolean"
        },
        "csvOptions": {
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions",
          "description": "Optional. Configuration for CSV data."
        },
        "includePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "excludePatterns": {
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Settings to manage the metadata discovery and publishing in a zone."
    },
    "GoogleCloudDataplexV1Zone": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name."
        },
        "labels": {
          "type": "object",
          "description": "Optional. User defined labels for the zone.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "discoverySpec": {
          "$ref": "GoogleCloudDataplexV1ZoneDiscoverySpec",
          "description": "Optional. Specification of the discovery feature applied to data in this zone."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the zone."
        },
        "description": {
          "description": "Optional. Description of the zone.",
          "type": "string"
        },
        "resourceSpec": {
          "$ref": "GoogleCloudDataplexV1ZoneResourceSpec",
          "description": "Required. Specification of the resources that are referenced by the assets within this zone."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the zone was last updated."
        },
        "type": {
          "enumDescriptions": [
            "Zone type not specified.",
            "A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.",
            "A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout."
          ],
          "description": "Required. Immutable. The type of the zone.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "RAW",
            "CURATED"
          ]
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the zone was created.",
          "type": "string"
        },
        "assetStatus": {
          "$ref": "GoogleCloudDataplexV1AssetStatus",
          "description": "Output only. Aggregated status of the underlying assets of the zone.",
          "readOnly": true
        }
      },
      "description": "A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.",
      "id": "GoogleCloudDataplexV1Zone",
      "type": "object"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "type": "object",
      "id": "GoogleIamV1SetIamPolicyRequest",
      "description": "Request message for SetIamPolicy method.",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used:paths: \"bindings, etag\""
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1Policy"
        }
      }
    },
    "GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation": {
      "type": "object",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "The SQL expression."
        }
      },
      "id": "GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation",
      "description": "Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 \u003e= 0 AND col2 \u003c 10"
    },
    "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue": {
      "properties": {
        "count": {
          "format": "int64",
          "description": "Count of the corresponding value in the scanned data.",
          "type": "string"
        },
        "value": {
          "description": "String value of a top N non-null value.",
          "type": "string"
        }
      },
      "description": "Top N non-null values in the scanned data.",
      "type": "object",
      "id": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue"
    },
    "GoogleCloudDataplexV1LakeMetastore": {
      "description": "Settings to manage association of Dataproc Metastore with a lake.",
      "properties": {
        "service": {
          "description": "Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1LakeMetastore"
    },
    "GoogleCloudDataplexV1StorageFormat": {
      "id": "GoogleCloudDataplexV1StorageFormat",
      "properties": {
        "csv": {
          "description": "Optional. Additional information about CSV formatted data.",
          "$ref": "GoogleCloudDataplexV1StorageFormatCsvOptions"
        },
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "PARQUET",
            "AVRO",
            "ORC",
            "CSV",
            "JSON",
            "IMAGE",
            "AUDIO",
            "VIDEO",
            "TEXT",
            "TFRECORD",
            "OTHER",
            "UNKNOWN"
          ],
          "description": "Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.",
          "type": "string",
          "enumDescriptions": [
            "Format unspecified.",
            "Parquet-formatted structured data.",
            "Avro-formatted structured data.",
            "Orc-formatted structured data.",
            "Csv-formatted semi-structured data.",
            "Json-formatted semi-structured data.",
            "Image data formats (such as jpg and png).",
            "Audio data formats (such as mp3, and wav).",
            "Video data formats (such as mp4 and mpg).",
            "Textual data formats (such as txt and xml).",
            "TensorFlow record format.",
            "Data that doesn't match a specific format.",
            "Data of an unknown format."
          ],
          "readOnly": true
        },
        "compressionFormat": {
          "enumDescriptions": [
            "CompressionFormat unspecified. Implies uncompressed data.",
            "GZip compressed set of files.",
            "BZip2 compressed set of files."
          ],
          "description": "Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.",
          "enum": [
            "COMPRESSION_FORMAT_UNSPECIFIED",
            "GZIP",
            "BZIP2"
          ],
          "type": "string"
        },
        "json": {
          "description": "Optional. Additional information about CSV formatted data.",
          "$ref": "GoogleCloudDataplexV1StorageFormatJsonOptions"
        },
        "iceberg": {
          "$ref": "GoogleCloudDataplexV1StorageFormatIcebergOptions",
          "description": "Optional. Additional information about iceberg tables."
        },
        "mimeType": {
          "description": "Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}",
          "type": "string"
        }
      },
      "description": "Describes the format of the data within its storage location.",
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetResourceStatus": {
      "id": "GoogleCloudDataplexV1AssetResourceStatus",
      "type": "object",
      "properties": {
        "managedAccessIdentity": {
          "readOnly": true,
          "description": "Output only. Service account associated with the BigQuery Connection.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "Resource does not have any errors.",
            "Resource has errors."
          ],
          "description": "The current state of the managed resource.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "ERROR"
          ]
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Status of the resource referenced by an asset."
    },
    "GoogleCloudDataplexV1Environment": {
      "description": "Environment represents a user-visible compute infrastructure for analytics within a lake. LINT.IfChange",
      "id": "GoogleCloudDataplexV1Environment",
      "type": "object",
      "properties": {
        "endpoints": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EnvironmentEndpoints",
          "description": "Output only. URI Endpoints to access sessions associated with the Environment."
        },
        "name": {
          "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
          "readOnly": true,
          "type": "string"
        },
        "sessionStatus": {
          "readOnly": true,
          "description": "Output only. Status of sessions created for this environment.",
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionStatus"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time when the environment was last updated."
        },
        "infrastructureSpec": {
          "description": "Required. Infrastructure specification for the Environment.",
          "$ref": "GoogleCloudDataplexV1EnvironmentInfrastructureSpec"
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the environment."
        },
        "labels": {
          "type": "object",
          "description": "Optional. User defined labels for the environment.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Environment creation time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "sessionSpec": {
          "description": "Optional. Configuration for sessions created for this environment.",
          "$ref": "GoogleCloudDataplexV1EnvironmentSessionSpec"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Current state of the environment.",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ]
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1ListPartitionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list.",
          "type": "string"
        },
        "partitions": {
          "description": "Partitions under the specified parent entity.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Partition"
          }
        }
      },
      "id": "GoogleCloudDataplexV1ListPartitionsResponse",
      "description": "List metadata partitions response.",
      "type": "object"
    },
    "GoogleCloudDataplexV1AssetSecurityStatus": {
      "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.",
      "id": "GoogleCloudDataplexV1AssetSecurityStatus",
      "properties": {
        "message": {
          "type": "string",
          "description": "Additional information about the current state."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Last update time of the status.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "APPLYING",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "Security policy has been successfully applied to the attached resource.",
            "Security policy is in the process of being applied to the attached resource.",
            "Security policy could not be applied to the attached resource due to errors."
          ],
          "description": "The current state of the security policy applied to the attached resource."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1Lake": {
      "properties": {
        "createTime": {
          "description": "Output only. The time when the lake was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the lake."
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "metastoreStatus": {
          "description": "Output only. Metastore status of the lake.",
          "$ref": "GoogleCloudDataplexV1LakeMetastoreStatus",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User-defined labels for the lake."
        },
        "metastore": {
          "description": "Optional. Settings to manage lake and Dataproc Metastore service instance association.",
          "$ref": "GoogleCloudDataplexV1LakeMetastore"
        },
        "serviceAccount": {
          "description": "Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the lake was last updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "assetStatus": {
          "description": "Output only. Aggregated status of the underlying assets of the lake.",
          "$ref": "GoogleCloudDataplexV1AssetStatus",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "type": "string",
          "description": "Output only. Current state of the lake."
        }
      },
      "id": "GoogleCloudDataplexV1Lake",
      "type": "object",
      "description": "A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata."
    },
    "GoogleCloudDataplexV1ListDataAttributesResponse": {
      "id": "GoogleCloudDataplexV1ListDataAttributesResponse",
      "properties": {
        "dataAttributes": {
          "items": {
            "$ref": "GoogleCloudDataplexV1DataAttribute"
          },
          "description": "DataAttributes under the given parent DataTaxonomy.",
          "type": "array"
        },
        "unreachableLocations": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "List DataAttributes response.",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataScanExecutionStatus": {
      "description": "Status of the data scan execution.",
      "id": "GoogleCloudDataplexV1DataScanExecutionStatus",
      "type": "object",
      "properties": {
        "latestJobStartTime": {
          "description": "The time when the latest DataScanJob started.",
          "type": "string",
          "format": "google-datetime"
        },
        "latestJobEndTime": {
          "description": "The time when the latest DataScanJob ended.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1DiscoveryEventEntityDetails": {
      "properties": {
        "entity": {
          "description": "The name of the entity resource. The name is the fully-qualified resource name.",
          "type": "string"
        },
        "type": {
          "description": "The type of the entity resource.",
          "type": "string",
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ],
          "enumDescriptions": [
            "An unspecified event type.",
            "Entities representing structured data.",
            "Entities representing unstructured data."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventEntityDetails",
      "description": "Details about the entity."
    },
    "GoogleCloudDataplexV1DiscoveryEventConfigDetails": {
      "description": "Details about configuration events.",
      "properties": {
        "parameters": {
          "type": "object",
          "description": "A list of discovery configuration parameters in effect. The keys are the field paths within DiscoverySpec. Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference, etc.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDataplexV1DiscoveryEventConfigDetails",
      "type": "object"
    },
    "GoogleIamV1AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "id": "GoogleIamV1AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1DataProfileResultProfile": {
      "description": "Contains name, type, mode and field type specific profile information.",
      "id": "GoogleCloudDataplexV1DataProfileResultProfile",
      "properties": {
        "fields": {
          "items": {
            "$ref": "GoogleCloudDataplexV1DataProfileResultProfileField"
          },
          "description": "List of fields with structural and profile information for each field.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EntityCompatibilityStatus": {
      "id": "GoogleCloudDataplexV1EntityCompatibilityStatus",
      "type": "object",
      "description": "Provides compatibility information for various metadata stores.",
      "properties": {
        "bigquery": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
          "description": "Output only. Whether this entity is compatible with BigQuery."
        },
        "hiveMetastore": {
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility",
          "readOnly": true,
          "description": "Output only. Whether this entity is compatible with Hive Metastore."
        }
      }
    },
    "GoogleCloudDataplexV1AssetDiscoveryStatusStats": {
      "id": "GoogleCloudDataplexV1AssetDiscoveryStatusStats",
      "description": "The aggregated data statistics for the asset reported by discovery.",
      "properties": {
        "dataItems": {
          "description": "The count of data items within the referenced resource.",
          "format": "int64",
          "type": "string"
        },
        "tables": {
          "type": "string",
          "format": "int64",
          "description": "The count of table entities within the referenced resource."
        },
        "filesets": {
          "format": "int64",
          "type": "string",
          "description": "The count of fileset entities within the referenced resource."
        },
        "dataSize": {
          "type": "string",
          "format": "int64",
          "description": "The number of stored data bytes within the referenced resource."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1Trigger": {
      "id": "GoogleCloudDataplexV1Trigger",
      "type": "object",
      "description": "DataScan scheduling and trigger settings.",
      "properties": {
        "onDemand": {
          "description": "The scan runs once via RunDataScan API.",
          "$ref": "GoogleCloudDataplexV1TriggerOnDemand"
        },
        "schedule": {
          "$ref": "GoogleCloudDataplexV1TriggerSchedule",
          "description": "The scan is scheduled to run periodically."
        }
      }
    },
    "GoogleCloudDataplexV1TriggerSchedule": {
      "description": "The scan is scheduled to run periodically.",
      "properties": {
        "cron": {
          "description": "Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1TriggerSchedule",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataAttribute": {
      "type": "object",
      "properties": {
        "dataAccessSpec": {
          "$ref": "GoogleCloudDataplexV1DataAccessSpec",
          "description": "Optional. Specified when applied to data stored on the resource (eg: rows, columns in BigQuery Tables)."
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the DataAttribute. This ID will be different if the DataAttribute is deleted and re-created with the same name.",
          "readOnly": true
        },
        "parentId": {
          "description": "Optional. The ID of the parent DataAttribute resource, should belong to the same data taxonomy. Circular dependency in parent chain is not valid. Maximum depth of the hierarchy allowed is 4. a -\u003e b -\u003e c -\u003e d -\u003e e, depth = 4",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "resourceAccessSpec": {
          "description": "Optional. Specified when applied to a resource (eg: Cloud Storage bucket, BigQuery dataset, BigQuery table).",
          "$ref": "GoogleCloudDataplexV1ResourceAccessSpec"
        },
        "attributeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. The number of child attributes present for this attribute.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the DataAttribute."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the DataAttribute was last updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the dataAttribute, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. User-defined labels for the DataAttribute.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the DataAttribute was created."
        }
      },
      "id": "GoogleCloudDataplexV1DataAttribute",
      "description": "Denotes one dataAttribute in a dataTaxonomy, for example, PII. DataAttribute resources can be defined in a hierarchy. A single dataAttribute resource can contain specs of multiple types PII - ResourceAccessSpec : - readers :foo@bar.com - DataAccessSpec : - readers :bar@foo.com "
    },
    "GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation": {
      "description": "Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) \u003e= 0",
      "id": "GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation",
      "type": "object",
      "properties": {
        "sqlExpression": {
          "description": "The SQL expression.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1DataSource": {
      "id": "GoogleCloudDataplexV1DataSource",
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Immutable. The service-qualified full resource name of the cloud resource for a DataScan job to scan against. The field could be: BigQuery table of type \"TABLE\" for DataProfileScan/DataQualityScan Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID"
        },
        "entity": {
          "type": "string",
          "description": "Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}."
        }
      },
      "description": "The data source for DataScan."
    },
    "GoogleCloudDataplexV1RunTaskResponse": {
      "id": "GoogleCloudDataplexV1RunTaskResponse",
      "properties": {
        "job": {
          "$ref": "GoogleCloudDataplexV1Job",
          "description": "Jobs created by RunTask API."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1EnvironmentSessionStatus": {
      "properties": {
        "active": {
          "description": "Output only. Queries over sessions to mark whether the environment is currently active or not",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "description": "Status of sessions created for this environment.",
      "id": "GoogleCloudDataplexV1EnvironmentSessionStatus",
      "type": "object"
    },
    "GoogleCloudDataplexV1Job": {
      "type": "object",
      "description": "A job represents an instance of a task.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. User-defined labels for the task."
        },
        "endTime": {
          "description": "Output only. The time when the job ended.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "service": {
          "description": "Output only. The underlying service running a job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Service used to run the job is unspecified.",
            "Dataproc service is used to run this job."
          ],
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ]
        },
        "startTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the job was started."
        },
        "trigger": {
          "enumDescriptions": [
            "The trigger is unspecified.",
            "The job was triggered by Dataplex based on trigger spec from task definition.",
            "The job was triggered by the explicit call of Task API."
          ],
          "description": "Output only. Job execution trigger.",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "TASK_CONFIG",
            "RUN_REQUEST"
          ],
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System generated globally unique ID for the job."
        },
        "retryCount": {
          "format": "uint32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The number of times the job has been retried (excluding the initial attempt)."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}."
        },
        "serviceJob": {
          "readOnly": true,
          "description": "Output only. The full resource name for the job run under a particular service.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Execution state for the job.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED",
            "ABORTED"
          ],
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is running.",
            "The job is cancelling.",
            "The job cancellation was successful.",
            "The job completed successfully.",
            "The job is no longer running due to an error.",
            "The job was cancelled outside of Dataplex."
          ]
        },
        "executionSpec": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1TaskExecutionSpec",
          "description": "Output only. Spec related to how a task is executed."
        },
        "message": {
          "readOnly": true,
          "description": "Output only. Additional information about the current state.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1Job"
    },
    "GoogleCloudDataplexV1AssetDiscoverySpec": {
      "type": "object",
      "description": "Settings to manage the metadata discovery and publishing for an asset.",
      "id": "GoogleCloudDataplexV1AssetDiscoverySpec",
      "properties": {
        "csvOptions": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions",
          "description": "Optional. Configuration for CSV data."
        },
        "jsonOptions": {
          "description": "Optional. Configuration for Json data.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions"
        },
        "includePatterns": {
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "items": {
            "type": "string"
          }
        },
        "schedule": {
          "type": "string",
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *."
        },
        "excludePatterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names."
        },
        "enabled": {
          "type": "boolean",
          "description": "Optional. Whether discovery is enabled."
        }
      }
    },
    "GoogleCloudDataplexV1Schema": {
      "id": "GoogleCloudDataplexV1Schema",
      "properties": {
        "partitionFields": {
          "description": "Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaPartitionField"
          }
        },
        "partitionStyle": {
          "description": "Optional. The structure of paths containing partition data within the entity.",
          "type": "string",
          "enumDescriptions": [
            "PartitionStyle unspecified",
            "Partitions are hive-compatible. Examples: gs://bucket/path/to/table/dt=2019-10-31/lang=en, gs://bucket/path/to/table/dt=2019-10-31/lang=en/late."
          ],
          "enum": [
            "PARTITION_STYLE_UNSPECIFIED",
            "HIVE_COMPATIBLE"
          ]
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          },
          "description": "Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable."
        },
        "userManaged": {
          "description": "Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Schema information describing the structure and layout of the data."
    },
    "GoogleCloudDataplexV1SchemaSchemaField": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. User friendly field description. Must be less than or equal to 1024 characters."
        },
        "fields": {
          "items": {
            "$ref": "GoogleCloudDataplexV1SchemaSchemaField"
          },
          "description": "Optional. Any nested field for complex types.",
          "type": "array"
        },
        "mode": {
          "type": "string",
          "description": "Required. Additional field semantics.",
          "enumDescriptions": [
            "Mode unspecified.",
            "The field has required semantics.",
            "The field has optional semantics, and may be null.",
            "The field has repeated (0 or more) semantics, and is a list of values."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "REQUIRED",
            "NULLABLE",
            "REPEATED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore."
        },
        "type": {
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ],
          "type": "string",
          "description": "Required. The type of field."
        }
      },
      "id": "GoogleCloudDataplexV1SchemaSchemaField",
      "type": "object",
      "description": "Represents a column field within a table schema."
    },
    "GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs": {
      "type": "object",
      "properties": {
        "rowFilterApplied": {
          "description": "Boolean indicating whether a row filter was applied in the DataScan job.",
          "type": "boolean"
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied."
        },
        "columnFilterApplied": {
          "description": "Boolean indicating whether a column filter was applied in the DataScan job.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs",
      "description": "Applied configs for data profile type data scan job."
    },
    "GoogleCloudDataplexV1RunDataScanResponse": {
      "id": "GoogleCloudDataplexV1RunDataScanResponse",
      "description": "Run DataScan Response.",
      "properties": {
        "job": {
          "$ref": "GoogleCloudDataplexV1DataScanJob",
          "description": "DataScanJob created by RunDataScan request."
        }
      },
      "type": "object"
    },
    "GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation": {
      "description": "Evaluates whether the column has duplicates.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation"
    },
    "GoogleCloudDataplexV1Entity": {
      "properties": {
        "catalogEntry": {
          "readOnly": true,
          "description": "Output only. The name of the associated Data Catalog entry.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name must be shorter than or equal to 256 characters."
        },
        "dataPath": {
          "type": "string",
          "description": "Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id."
        },
        "format": {
          "description": "Required. Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.",
          "$ref": "GoogleCloudDataplexV1StorageFormat"
        },
        "system": {
          "enumDescriptions": [
            "Storage system unspecified.",
            "The entity data is contained within a Cloud Storage bucket.",
            "The entity data is contained within a BigQuery dataset."
          ],
          "enum": [
            "STORAGE_SYSTEM_UNSPECIFIED",
            "CLOUD_STORAGE",
            "BIGQUERY"
          ],
          "type": "string",
          "description": "Required. Immutable. Identifies the storage system of the entity data."
        },
        "name": {
          "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.",
          "type": "string",
          "readOnly": true
        },
        "dataPathPattern": {
          "description": "Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Type unspecified.",
            "Structured and semi-structured data.",
            "Unstructured data."
          ],
          "description": "Required. Immutable. The type of entity.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ]
        },
        "compatibility": {
          "$ref": "GoogleCloudDataplexV1EntityCompatibilityStatus",
          "readOnly": true,
          "description": "Output only. Metadata stores that the entity is compatible with."
        },
        "access": {
          "description": "Output only. Identifies the access mechanism to the entity. Not user settable.",
          "$ref": "GoogleCloudDataplexV1StorageAccess",
          "readOnly": true
        },
        "id": {
          "description": "Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.",
          "type": "string"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name."
        },
        "schema": {
          "description": "Required. The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.",
          "$ref": "GoogleCloudDataplexV1Schema"
        },
        "asset": {
          "description": "Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the entity was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the entity was last updated.",
          "format": "google-datetime"
        }
      },
      "description": "Represents tables and fileset metadata contained within a zone.",
      "type": "object",
      "id": "GoogleCloudDataplexV1Entity"
    },
    "GoogleCloudDataplexV1ListJobsResponse": {
      "id": "GoogleCloudDataplexV1ListJobsResponse",
      "properties": {
        "jobs": {
          "description": "Jobs under a given task.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Job"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "List jobs response.",
      "type": "object"
    },
    "GoogleCloudDataplexV1TaskTriggerSpec": {
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks."
        },
        "schedule": {
          "type": "string",
          "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "ON_DEMAND",
            "RECURRING"
          ],
          "description": "Required. Immutable. Trigger type of the user-specified Task.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified trigger type.",
            "The task runs one-time shortly after Task Creation.",
            "The task is scheduled to run periodically."
          ]
        },
        "startTime": {
          "type": "string",
          "description": "Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.",
          "format": "google-datetime"
        },
        "maxRetries": {
          "format": "int32",
          "description": "Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDataplexV1TaskTriggerSpec",
      "type": "object",
      "description": "Task scheduling and trigger settings."
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object",
      "id": "GoogleLongrunningCancelOperationRequest"
    },
    "GoogleCloudDataplexV1Asset": {
      "type": "object",
      "properties": {
        "resourceSpec": {
          "description": "Required. Specification of the resource that is referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetResourceSpec"
        },
        "securityStatus": {
          "description": "Output only. Status of the security policy applied to resource referenced by this asset.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1AssetSecurityStatus"
        },
        "description": {
          "description": "Optional. Description of the asset.",
          "type": "string"
        },
        "resourceStatus": {
          "$ref": "GoogleCloudDataplexV1AssetResourceStatus",
          "description": "Output only. Status of the resource referenced by this asset.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time when the asset was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.",
          "readOnly": true
        },
        "discoveryStatus": {
          "readOnly": true,
          "description": "Output only. Status of the discovery feature applied to data referenced by this asset.",
          "$ref": "GoogleCloudDataplexV1AssetDiscoveryStatus"
        },
        "state": {
          "description": "Output only. Current state of the asset.",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the asset was last updated.",
          "readOnly": true
        },
        "discoverySpec": {
          "$ref": "GoogleCloudDataplexV1AssetDiscoverySpec",
          "description": "Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone."
        },
        "labels": {
          "description": "Optional. User defined labels for the asset.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone.",
      "id": "GoogleCloudDataplexV1Asset"
    },
    "GoogleCloudDataplexV1ListDataScansResponse": {
      "id": "GoogleCloudDataplexV1ListDataScansResponse",
      "description": "List dataScans response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "dataScans": {
          "description": "DataScans (BASIC view only) under the given parent location.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataScan"
          }
        }
      }
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources": {
      "type": "object",
      "properties": {
        "maxExecutorsCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Max configurable executors. If max_executors_count \u003e executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000"
        },
        "executorsCount": {
          "format": "int32",
          "description": "Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2",
          "type": "integer"
        }
      },
      "description": "Batch compute resources associated with the task.",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources"
    },
    "GoogleCloudDataplexV1ActionInvalidDataFormat": {
      "id": "GoogleCloudDataplexV1ActionInvalidDataFormat",
      "type": "object",
      "properties": {
        "newFormat": {
          "type": "string",
          "description": "The new unexpected data format within the entity."
        },
        "sampledDataLocations": {
          "description": "The list of data locations sampled and used for format/schema inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expectedFormat": {
          "description": "The expected data format of the entity.",
          "type": "string"
        }
      },
      "description": "Action details for invalid or unsupported data files detected by discovery."
    },
    "GoogleIamV1Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/).",
      "properties": {
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        },
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.",
          "type": "array"
        },
        "version": {
          "description": "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        },
        "etag": {
          "type": "string",
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.",
          "format": "byte"
        }
      },
      "id": "GoogleIamV1Policy"
    },
    "GoogleCloudDataplexV1Partition": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Optional. The etag for this partition."
        },
        "location": {
          "description": "Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode \"US:CA/CA#Sunnyvale so that the request URL ends with \"/partitions/US%253ACA/CA%2523Sunnyvale\". The name field in the response retains the encoded format."
        },
        "values": {
          "description": "Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDataplexV1Partition",
      "description": "Represents partition metadata contained within entity instances."
    },
    "GoogleCloudDataplexV1ContentNotebook": {
      "properties": {
        "kernelType": {
          "type": "string",
          "enum": [
            "KERNEL_TYPE_UNSPECIFIED",
            "PYTHON3"
          ],
          "enumDescriptions": [
            "Kernel Type unspecified.",
            "Python 3 Kernel."
          ],
          "description": "Required. Kernel Type of the notebook."
        }
      },
      "type": "object",
      "description": "Configuration for Notebook content.",
      "id": "GoogleCloudDataplexV1ContentNotebook"
    },
    "GoogleCloudDataplexV1DataProfileResult": {
      "description": "DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.",
      "type": "object",
      "properties": {
        "profile": {
          "description": "The profile information per field.",
          "$ref": "GoogleCloudDataplexV1DataProfileResultProfile"
        },
        "scannedData": {
          "description": "The data scanned for this result.",
          "$ref": "GoogleCloudDataplexV1ScannedData"
        },
        "rowCount": {
          "type": "string",
          "description": "The count of rows scanned.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDataplexV1DataProfileResult"
    },
    "GoogleCloudDataplexV1ListDataScanJobsResponse": {
      "properties": {
        "dataScanJobs": {
          "type": "array",
          "description": "DataScanJobs (BASIC view only) under a given dataScan.",
          "items": {
            "$ref": "GoogleCloudDataplexV1DataScanJob"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ListDataScanJobsResponse",
      "description": "List DataScanJobs response.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ActionIncompatibleDataSchema": {
      "description": "Action details for incompatible schemas detected by discovery.",
      "type": "object",
      "properties": {
        "newSchema": {
          "type": "string",
          "description": "The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types."
        },
        "existingSchema": {
          "description": "The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.",
          "type": "string"
        },
        "schemaChange": {
          "description": "Whether the action relates to a schema that is incompatible or modified.",
          "type": "string",
          "enumDescriptions": [
            "Schema change unspecified.",
            "Newly discovered schema is incompatible with existing schema.",
            "Newly discovered schema has changed from existing schema for data in a curated zone."
          ],
          "enum": [
            "SCHEMA_CHANGE_UNSPECIFIED",
            "INCOMPATIBLE",
            "MODIFIED"
          ]
        },
        "table": {
          "description": "The name of the table containing invalid data.",
          "type": "string"
        },
        "sampledDataLocations": {
          "description": "The list of data locations sampled and used for format/schema inference.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDataplexV1ActionIncompatibleDataSchema"
    },
    "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
      "description": "Failed to apply security policy to the managed resource(s) under a lake, zone or an asset. For a lake or zone resource, one or more underlying assets has a failure applying security policy to the associated managed resource.",
      "properties": {
        "asset": {
          "type": "string",
          "description": "Resource name of one of the assets with failing security policy application. Populated for a lake or zone resource only."
        }
      }
    },
    "GoogleCloudDataplexV1ScannedDataIncrementalField": {
      "description": "A data range denoted by a pair of start/end values of a field.",
      "properties": {
        "end": {
          "type": "string",
          "description": "Value that marks the end of the range."
        },
        "field": {
          "type": "string",
          "description": "The field that contains values which monotonically increases over time (e.g. a timestamp column)."
        },
        "start": {
          "description": "Value that marks the start of the range.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1ScannedDataIncrementalField"
    },
    "GoogleCloudDataplexV1DataQualitySpec": {
      "id": "GoogleCloudDataplexV1DataQualitySpec",
      "description": "DataQualityScan related setting.",
      "type": "object",
      "properties": {
        "rules": {
          "items": {
            "$ref": "GoogleCloudDataplexV1DataQualityRule"
          },
          "type": "array",
          "description": "The list of rules to evaluate against a data source. At least one rule is required."
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100."
        },
        "rowFilter": {
          "description": "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 \u003e= 0 AND col2 \u003c 10",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ListContentResponse": {
      "id": "GoogleCloudDataplexV1ListContentResponse",
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "description": "Content under the given parent lake.",
          "items": {
            "$ref": "GoogleCloudDataplexV1Content"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "List content response."
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "description": "Response message for TestIamPermissions method.",
      "properties": {
        "permissions": {
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "type": "object"
    },
    "GoogleCloudDataplexV1ListTasksResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachableLocations": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "tasks": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Task"
          },
          "description": "Tasks under the given parent lake.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1ListTasksResponse",
      "description": "List tasks response."
    },
    "GoogleCloudDataplexV1ListEnvironmentsResponse": {
      "type": "object",
      "description": "List environments response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Environment"
          },
          "description": "Environments under the given parent lake.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1ListEnvironmentsResponse"
    },
    "GoogleCloudDataplexV1EnvironmentEndpoints": {
      "type": "object",
      "properties": {
        "notebooks": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to serve notebook APIs"
        },
        "sql": {
          "description": "Output only. URI to serve SQL APIs",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDataplexV1EnvironmentEndpoints",
      "description": "URI Endpoints to access sessions associated with the Environment."
    },
    "GoogleCloudDataplexV1DataQualityRuleRangeExpectation": {
      "properties": {
        "minValue": {
          "description": "Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.",
          "type": "string"
        },
        "strictMinEnabled": {
          "description": "Optional. Whether each value needs to be strictly greater than ('\u003e') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.",
          "type": "boolean"
        },
        "maxValue": {
          "type": "string",
          "description": "Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided."
        },
        "strictMaxEnabled": {
          "description": "Optional. Whether each value needs to be strictly lesser than ('\u003c') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDataplexV1DataQualityRuleRangeExpectation",
      "description": "Evaluates whether each column value lies between a specified range.",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataQualityRule": {
      "id": "GoogleCloudDataplexV1DataQualityRule",
      "type": "object",
      "description": "A rule captures data quality intent about a data source.",
      "properties": {
        "setExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleSetExpectation",
          "description": "ColumnMap rule which evaluates whether each column value is contained by a specified set."
        },
        "rowConditionExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation",
          "description": "Table rule which evaluates whether each row passes the specified condition."
        },
        "ignoreNull": {
          "type": "boolean",
          "description": "Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules."
        },
        "rangeExpectation": {
          "description": "ColumnMap rule which evaluates whether each column value lies between a specified range.",
          "$ref": "GoogleCloudDataplexV1DataQualityRuleRangeExpectation"
        },
        "statisticRangeExpectation": {
          "description": "ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.",
          "$ref": "GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation"
        },
        "threshold": {
          "format": "double",
          "type": "number",
          "description": "Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0)."
        },
        "regexExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleRegexExpectation",
          "description": "ColumnMap rule which evaluates whether each column value matches a specified regex."
        },
        "dimension": {
          "description": "Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are \"COMPLETENESS\", \"ACCURACY\", \"CONSISTENCY\", \"VALIDITY\", \"UNIQUENESS\", \"INTEGRITY\"",
          "type": "string"
        },
        "uniquenessExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation",
          "description": "ColumnAggregate rule which evaluates whether the column has duplicates."
        },
        "nonNullExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleNonNullExpectation",
          "description": "ColumnMap rule which evaluates whether each column value is null."
        },
        "column": {
          "type": "string",
          "description": "Optional. The unnested column which this rule is evaluated against."
        },
        "tableConditionExpectation": {
          "$ref": "GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation",
          "description": "Table rule which evaluates whether the provided expression is true."
        }
      }
    },
    "GoogleCloudDataplexV1DataProfileResultProfileField": {
      "id": "GoogleCloudDataplexV1DataProfileResultProfileField",
      "description": "A field within a table.",
      "type": "object",
      "properties": {
        "profile": {
          "description": "Profile information for the corresponding field.",
          "$ref": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo"
        },
        "mode": {
          "type": "string",
          "description": "The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field."
        },
        "name": {
          "type": "string",
          "description": "The name of the field."
        },
        "type": {
          "description": "The data type retrieved from the schema of the data source. For instance, for a BigQuery native table, it is the BigQuery Table Schema (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablefieldschema). For a Dataplex Entity, it is the Entity Schema (https://cloud.google.com/dataplex/docs/reference/rpc/google.cloud.dataplex.v1#type_3).",
          "type": "string"
        }
      }
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "description": "Associates members, or principals, with a role.",
      "type": "object",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleCloudDataplexV1DataProfileSpecSelectedFields": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DataProfileSpecSelectedFields",
      "properties": {
        "fieldNames": {
          "description": "Optional. Expected input is a list of fully qualified names of fields as in the schema.Only top-level field names for nested fields are supported. For instance, if 'x' is of nested field type, listing 'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of 'x'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The specification for fields to include or exclude in data profile scan."
    },
    "GoogleCloudDataplexV1TaskExecutionSpec": {
      "id": "GoogleCloudDataplexV1TaskExecutionSpec",
      "properties": {
        "project": {
          "type": "string",
          "description": "Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project."
        },
        "maxJobExecutionLifetime": {
          "format": "google-duration",
          "description": "Optional. The maximum duration after which the job execution is expired.",
          "type": "string"
        },
        "kmsKey": {
          "description": "Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.",
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used."
        },
        "args": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument."
        }
      },
      "description": "Execution related settings, like retry and service_account.",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataTaxonomy": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the DataTaxonomy was last updated.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Optional. Description of the DataTaxonomy.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. System generated globally unique ID for the dataTaxonomy. This ID will be different if the DataTaxonomy is deleted and re-created with the same name."
        },
        "attributeCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. The number of attributes in the DataTaxonomy.",
          "format": "int32"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User-defined labels for the DataTaxonomy.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the DataTaxonomy was created."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1DataTaxonomy",
      "description": "DataTaxonomy represents a set of hierarchical DataAttributes resources, grouped with a common theme Eg: 'SensitiveDataTaxonomy' can have attributes to manage PII data. It is defined at project level."
    },
    "GoogleCloudLocationListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object"
    },
    "GoogleCloudDataplexV1Task": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. User-defined labels for the task."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the task."
        },
        "spark": {
          "$ref": "GoogleCloudDataplexV1TaskSparkTaskConfig",
          "description": "Config related to running custom Spark tasks."
        },
        "triggerSpec": {
          "$ref": "GoogleCloudDataplexV1TaskTriggerSpec",
          "description": "Required. Spec related to how often and when a task should be triggered."
        },
        "executionSpec": {
          "$ref": "GoogleCloudDataplexV1TaskExecutionSpec",
          "description": "Required. Spec related to how a task is executed."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. User friendly display name."
        },
        "executionStatus": {
          "$ref": "GoogleCloudDataplexV1TaskExecutionStatus",
          "readOnly": true,
          "description": "Output only. Status of the latest task executions."
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the task.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the task was created.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time when the task was last updated."
        },
        "notebook": {
          "$ref": "GoogleCloudDataplexV1TaskNotebookTaskConfig",
          "description": "Config related to running scheduled Notebooks."
        }
      },
      "id": "GoogleCloudDataplexV1Task",
      "type": "object",
      "description": "A task represents a user-visible job."
    },
    "GoogleCloudDataplexV1EnvironmentSessionSpec": {
      "type": "object",
      "properties": {
        "enableFastStartup": {
          "type": "boolean",
          "description": "Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration."
        },
        "maxIdleDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period."
        }
      },
      "description": "Configuration for sessions created for this environment.",
      "id": "GoogleCloudDataplexV1EnvironmentSessionSpec"
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDataplexV1DiscoveryEventActionDetails": {
      "description": "Details about the action.",
      "properties": {
        "type": {
          "description": "The type of action. Eg. IncompatibleDataSchema, InvalidDataFormat",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEventActionDetails"
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork": {
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork",
      "type": "object",
      "properties": {
        "networkTags": {
          "items": {
            "type": "string"
          },
          "description": "Optional. List of network tags to apply to the job.",
          "type": "array"
        },
        "network": {
          "description": "Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.",
          "type": "string"
        },
        "subNetwork": {
          "type": "string",
          "description": "Optional. The Cloud VPC sub-network in which the job is run."
        }
      },
      "description": "Cloud VPC Network used to run the infrastructure."
    },
    "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions": {
      "type": "object",
      "id": "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions",
      "properties": {
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "type": "boolean",
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean)."
        }
      },
      "description": "Describe JSON data format."
    },
    "GoogleCloudDataplexV1LakeMetastoreStatus": {
      "properties": {
        "message": {
          "description": "Additional information about the current status.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "A Metastore service instance is not associated with the lake.",
            "A Metastore service instance is attached to the lake.",
            "Attach/detach is in progress.",
            "Attach/detach could not be done due to errors."
          ],
          "description": "Current state of association.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NONE",
            "READY",
            "UPDATING",
            "ERROR"
          ]
        },
        "endpoint": {
          "description": "The URI of the endpoint used to access the Metastore service.",
          "type": "string"
        },
        "updateTime": {
          "description": "Last update time of the metastore status of the lake.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1LakeMetastoreStatus",
      "description": "Status of Lake and Dataproc Metastore service instance association."
    },
    "GoogleCloudDataplexV1ZoneResourceSpec": {
      "type": "object",
      "description": "Settings for resources attached as assets within a zone.",
      "id": "GoogleCloudDataplexV1ZoneResourceSpec",
      "properties": {
        "locationType": {
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "SINGLE_REGION",
            "MULTI_REGION"
          ],
          "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
          "enumDescriptions": [
            "Unspecified location type.",
            "Resources that are associated with a single region.",
            "Resources that are associated with a multi-region location."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime": {
      "properties": {
        "pythonPackages": {
          "type": "array",
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "items": {
            "type": "string"
          }
        },
        "imageVersion": {
          "description": "Required. Dataplex Image version.",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "description": "Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be \"spark\".",
          "additionalProperties": {
            "type": "string"
          }
        },
        "javaLibraries": {
          "items": {
            "type": "string"
          },
          "description": "Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar",
          "type": "array"
        }
      },
      "id": "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime",
      "description": "Software Runtime Configuration to run Analyze.",
      "type": "object"
    },
    "GoogleCloudDataplexV1Action": {
      "description": "Action represents an issue requiring administrator action for resolution.",
      "type": "object",
      "id": "GoogleCloudDataplexV1Action",
      "properties": {
        "zone": {
          "description": "Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.",
          "readOnly": true,
          "type": "string"
        },
        "asset": {
          "type": "string",
          "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
          "readOnly": true
        },
        "invalidDataFormat": {
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataFormat",
          "description": "Details for issues related to invalid or unsupported data formats."
        },
        "missingResource": {
          "$ref": "GoogleCloudDataplexV1ActionMissingResource",
          "description": "Details for issues related to absence of a managed resource."
        },
        "dataLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year=2020/month=Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id)."
        },
        "invalidDataOrganization": {
          "description": "Details for issues related to invalid data arrangement.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataOrganization"
        },
        "failedSecurityPolicyApply": {
          "$ref": "GoogleCloudDataplexV1ActionFailedSecurityPolicyApply",
          "description": "Details for issues related to applying security policy."
        },
        "name": {
          "description": "Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.",
          "readOnly": true,
          "type": "string"
        },
        "lake": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}."
        },
        "missingData": {
          "$ref": "GoogleCloudDataplexV1ActionMissingData",
          "description": "Details for issues related to absence of data within managed resources."
        },
        "invalidDataPartition": {
          "description": "Details for issues related to invalid or unsupported data partition structure.",
          "$ref": "GoogleCloudDataplexV1ActionInvalidDataPartition"
        },
        "issue": {
          "description": "Detailed description of the issue requiring action.",
          "type": "string"
        },
        "unauthorizedResource": {
          "$ref": "GoogleCloudDataplexV1ActionUnauthorizedResource",
          "description": "Details for issues related to lack of permissions to access data resources."
        },
        "detectTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that the issue was detected."
        },
        "incompatibleDataSchema": {
          "$ref": "GoogleCloudDataplexV1ActionIncompatibleDataSchema",
          "description": "Details for issues related to incompatible schemas detected within data."
        },
        "category": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified category.",
            "Resource management related issues.",
            "Security policy related issues.",
            "Data and discovery related issues."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "RESOURCE_MANAGEMENT",
            "SECURITY_POLICY",
            "DATA_DISCOVERY"
          ],
          "description": "The category of issue associated with the action."
        }
      }
    },
    "GoogleCloudDataplexV1AssetResourceSpec": {
      "id": "GoogleCloudDataplexV1AssetResourceSpec",
      "type": "object",
      "description": "Identifies the cloud resource that is referenced by this asset.",
      "properties": {
        "type": {
          "description": "Required. Immutable. Type of resource.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STORAGE_BUCKET",
            "BIGQUERY_DATASET"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type not specified.",
            "Cloud Storage bucket.",
            "BigQuery dataset."
          ]
        },
        "name": {
          "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}",
          "type": "string"
        },
        "readAccessMode": {
          "type": "string",
          "enum": [
            "ACCESS_MODE_UNSPECIFIED",
            "DIRECT",
            "MANAGED"
          ],
          "enumDescriptions": [
            "Access mode unspecified.",
            "Default. Data is accessed directly using storage APIs.",
            "Data is accessed through a managed interface using BigQuery APIs."
          ],
          "description": "Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets."
        }
      }
    },
    "GoogleCloudDataplexV1RunDataScanRequest": {
      "description": "Run DataScan Request",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDataplexV1RunDataScanRequest"
    },
    "GoogleCloudDataplexV1TaskNotebookTaskConfig": {
      "properties": {
        "fileUris": {
          "description": "Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveUris": {
          "description": "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infrastructureSpec": {
          "description": "Optional. Infrastructure specification for the execution.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpec"
        },
        "notebook": {
          "description": "Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1TaskNotebookTaskConfig",
      "type": "object",
      "description": "Config for running scheduled notebooks."
    },
    "GoogleCloudDataplexV1DataScanJob": {
      "properties": {
        "dataQualityResult": {
          "description": "Output only. The result of the data quality scan.",
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1DataQualityResult"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the DataScanJob ended."
        },
        "dataQualitySpec": {
          "description": "Output only. DataQualityScan related setting.",
          "$ref": "GoogleCloudDataplexV1DataQualitySpec",
          "readOnly": true
        },
        "dataProfileResult": {
          "readOnly": true,
          "description": "Output only. The result of the data profile scan.",
          "$ref": "GoogleCloudDataplexV1DataProfileResult"
        },
        "type": {
          "readOnly": true,
          "enumDescriptions": [
            "The DataScan type is unspecified.",
            "Data Quality scan.",
            "Data Profile scan."
          ],
          "type": "string",
          "enum": [
            "DATA_SCAN_TYPE_UNSPECIFIED",
            "DATA_QUALITY",
            "DATA_PROFILE"
          ],
          "description": "Output only. The type of the parent DataScan."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.",
          "type": "string"
        },
        "message": {
          "readOnly": true,
          "description": "Output only. Additional information about the current state.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the DataScanJob.",
          "readOnly": true,
          "type": "string"
        },
        "dataProfileSpec": {
          "description": "Output only. DataProfileScan related setting.",
          "$ref": "GoogleCloudDataplexV1DataProfileSpec",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "The DataScanJob state is unspecified.",
            "The DataScanJob is running.",
            "The DataScanJob is canceling.",
            "The DataScanJob cancellation was successful.",
            "The DataScanJob completed successfully.",
            "The DataScanJob is no longer running due to an error.",
            "The DataScanJob has been created but not started to run yet."
          ],
          "description": "Output only. Execution state for the DataScanJob.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED",
            "PENDING"
          ],
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the DataScanJob was started."
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DataScanJob",
      "description": "A DataScanJob represents an instance of DataScan execution."
    },
    "GoogleCloudDataplexV1DataAttributeBindingPath": {
      "description": "Represents a subresource of the given resource, and associated bindings with it. Currently supported subresources are column and partition schema fields within a table.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name identifier of the path. Nested columns should be of the form: 'address.city'."
        },
        "attributes": {
          "type": "array",
          "description": "Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDataplexV1DataAttributeBindingPath"
    },
    "GoogleCloudDataplexV1DataScanExecutionSpec": {
      "type": "object",
      "description": "DataScan execution settings.",
      "properties": {
        "field": {
          "description": "Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.",
          "type": "string"
        },
        "trigger": {
          "description": "Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.",
          "$ref": "GoogleCloudDataplexV1Trigger"
        }
      },
      "id": "GoogleCloudDataplexV1DataScanExecutionSpec"
    },
    "GoogleCloudDataplexV1ListSessionsResponse": {
      "properties": {
        "sessions": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Session"
          },
          "description": "Sessions under a given environment.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1ListSessionsResponse",
      "type": "object",
      "description": "List sessions response."
    },
    "GoogleCloudDataplexV1StorageFormatIcebergOptions": {
      "properties": {
        "metadataLocation": {
          "type": "string",
          "description": "Optional. The location of where the iceberg metadata is present, must be within the table path"
        }
      },
      "id": "GoogleCloudDataplexV1StorageFormatIcebergOptions",
      "type": "object",
      "description": "Describes Iceberg data format."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudDataplexV1DataQualityRuleRegexExpectation": {
      "properties": {
        "regex": {
          "type": "string",
          "description": "A regular expression the column value is expected to match."
        }
      },
      "id": "GoogleCloudDataplexV1DataQualityRuleRegexExpectation",
      "description": "Evaluates whether each column value matches a specified regex.",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataScanEventDataProfileResult": {
      "id": "GoogleCloudDataplexV1DataScanEventDataProfileResult",
      "properties": {
        "rowCount": {
          "format": "int64",
          "type": "string",
          "description": "The count of rows processed in the data scan job."
        }
      },
      "type": "object",
      "description": "Data profile result for data scan job."
    },
    "GoogleCloudDataplexV1DataQualityRuleSetExpectation": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DataQualityRuleSetExpectation",
      "description": "Evaluates whether each column value is contained by a specified set.",
      "properties": {
        "values": {
          "type": "array",
          "description": "Expected values for the column value.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs": {
      "type": "object",
      "properties": {
        "rowFilterApplied": {
          "description": "Boolean indicating whether a row filter was applied in the DataScan job.",
          "type": "boolean"
        },
        "samplingPercent": {
          "type": "number",
          "format": "float",
          "description": "The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied."
        }
      },
      "description": "Applied configs for data quality type data scan job.",
      "id": "GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs"
    },
    "GoogleCloudDataplexV1ListEntitiesResponse": {
      "type": "object",
      "id": "GoogleCloudDataplexV1ListEntitiesResponse",
      "description": "List metadata entities response.",
      "properties": {
        "entities": {
          "description": "Entities in the specified parent zone.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Entity"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no remaining results in the list."
        }
      }
    },
    "GoogleCloudDataplexV1DataScanEvent": {
      "id": "GoogleCloudDataplexV1DataScanEvent",
      "properties": {
        "scope": {
          "description": "The scope of the data scan (e.g. full, incremental).",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "FULL",
            "INCREMENTAL"
          ],
          "enumDescriptions": [
            "An unspecified scope type.",
            "Data scan runs on all of the data.",
            "Data scan runs on incremental data."
          ],
          "type": "string"
        },
        "jobId": {
          "description": "The identifier of the specific data scan job this log entry is for.",
          "type": "string"
        },
        "dataProfileConfigs": {
          "$ref": "GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs",
          "description": "Applied configs for data profile type data scan."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the data scan job finished."
        },
        "dataQualityConfigs": {
          "$ref": "GoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs",
          "description": "Applied configs for data quality type data scan."
        },
        "specVersion": {
          "type": "string",
          "description": "A version identifier of the spec which was used to execute this job."
        },
        "dataProfile": {
          "$ref": "GoogleCloudDataplexV1DataScanEventDataProfileResult",
          "description": "Data profile result for data profile type data scan."
        },
        "dataQuality": {
          "description": "Data quality result for data quality type data scan.",
          "$ref": "GoogleCloudDataplexV1DataScanEventDataQualityResult"
        },
        "dataSource": {
          "description": "The data source of the data scan",
          "type": "string"
        },
        "trigger": {
          "type": "string",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "ON_DEMAND",
            "SCHEDULE"
          ],
          "description": "The trigger type of the data scan job.",
          "enumDescriptions": [
            "An unspecified trigger type.",
            "Data scan triggers on demand.",
            "Data scan triggers as per schedule."
          ]
        },
        "state": {
          "enumDescriptions": [
            "Unspecified job state.",
            "Data scan started.",
            "Data scan successfully completed.",
            "Data scan was unsuccessful.",
            "Data scan was cancelled."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The status of the data scan job."
        },
        "message": {
          "type": "string",
          "description": "The message describing the data scan job event."
        },
        "type": {
          "enumDescriptions": [
            "An unspecified data scan type.",
            "Data scan for data profile.",
            "Data scan for data quality."
          ],
          "enum": [
            "SCAN_TYPE_UNSPECIFIED",
            "DATA_PROFILE",
            "DATA_QUALITY"
          ],
          "description": "The type of the data scan.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "The time when the data scan job started to run.",
          "format": "google-datetime"
        }
      },
      "description": "These messages contain information about the execution of a datascan. The monitored resource is 'DataScan'",
      "type": "object"
    },
    "GoogleCloudLocationLocation": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} ",
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: \"us-east1\"."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\""
        }
      },
      "id": "GoogleCloudLocationLocation",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object"
    },
    "GoogleCloudDataplexV1TriggerOnDemand": {
      "type": "object",
      "properties": {},
      "description": "The scan runs once via RunDataScan API.",
      "id": "GoogleCloudDataplexV1TriggerOnDemand"
    },
    "GoogleCloudDataplexV1TaskSparkTaskConfig": {
      "id": "GoogleCloudDataplexV1TaskSparkTaskConfig",
      "type": "object",
      "description": "User-specified config for running a Spark task.",
      "properties": {
        "archiveUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array"
        },
        "pythonScriptFile": {
          "type": "string",
          "description": "The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value)."
        },
        "fileUris": {
          "description": "Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mainJarFileUri": {
          "description": "The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).",
          "type": "string"
        },
        "sqlScriptFile": {
          "description": "A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=\"value\";).",
          "type": "string"
        },
        "sqlScript": {
          "type": "string",
          "description": "The query text. The execution args are used to declare a set of script variables (set key=\"value\";)."
        },
        "infrastructureSpec": {
          "description": "Optional. Infrastructure specification for the execution.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpec"
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDataplexV1ListLakesResponse": {
      "id": "GoogleCloudDataplexV1ListLakesResponse",
      "type": "object",
      "description": "List lakes response.",
      "properties": {
        "unreachableLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "lakes": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Lake"
          },
          "type": "array",
          "description": "Lakes under the given parent location."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      }
    },
    "GoogleCloudDataplexV1ScannedData": {
      "properties": {
        "incrementalField": {
          "description": "The range denoted by values of an incremental field",
          "$ref": "GoogleCloudDataplexV1ScannedDataIncrementalField"
        }
      },
      "type": "object",
      "description": "The data scanned during processing (e.g. in incremental DataScan)",
      "id": "GoogleCloudDataplexV1ScannedData"
    },
    "GoogleCloudDataplexV1Content": {
      "type": "object",
      "id": "GoogleCloudDataplexV1Content",
      "properties": {
        "dataText": {
          "type": "string",
          "description": "Required. Content data in string format."
        },
        "labels": {
          "description": "Optional. User defined labels for the content.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "description": "Output only. The time when the content was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the content."
        },
        "createTime": {
          "description": "Output only. Content creation time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "notebook": {
          "description": "Notebook related configurations.",
          "$ref": "GoogleCloudDataplexV1ContentNotebook"
        },
        "path": {
          "description": "Required. The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}",
          "readOnly": true
        },
        "sqlScript": {
          "description": "Sql Script related configurations.",
          "$ref": "GoogleCloudDataplexV1ContentSqlScript"
        }
      },
      "description": "Content represents a user-visible notebook or a sql script"
    },
    "GoogleCloudDataplexV1ListActionsResponse": {
      "type": "object",
      "description": "List actions response.",
      "id": "GoogleCloudDataplexV1ListActionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Action"
          },
          "description": "Actions under the given parent lake/zone/asset."
        }
      }
    },
    "GoogleCloudDataplexV1SessionEventQueryDetail": {
      "type": "object",
      "id": "GoogleCloudDataplexV1SessionEventQueryDetail",
      "description": "Execution details of the query.",
      "properties": {
        "resultSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The size of results the query produced."
        },
        "engine": {
          "description": "Query Execution engine.",
          "enum": [
            "ENGINE_UNSPECIFIED",
            "SPARK_SQL",
            "BIGQUERY"
          ],
          "enumDescriptions": [
            "An unspecified Engine type.",
            "Spark-sql engine is specified in Query.",
            "BigQuery engine is specified in Query."
          ],
          "type": "string"
        },
        "dataProcessedBytes": {
          "format": "int64",
          "type": "string",
          "description": "The data processed by the query."
        },
        "queryId": {
          "description": "The unique Query id identifying the query.",
          "type": "string"
        },
        "queryText": {
          "description": "The query text executed.",
          "type": "string"
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "Time taken for execution of the query."
        }
      }
    },
    "GoogleCloudDataplexV1DiscoveryEvent": {
      "type": "object",
      "id": "GoogleCloudDataplexV1DiscoveryEvent",
      "properties": {
        "entity": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventEntityDetails",
          "description": "Details about the entity associated with the event."
        },
        "lakeId": {
          "description": "The id of the associated lake.",
          "type": "string"
        },
        "type": {
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "CONFIG",
            "ENTITY_CREATED",
            "ENTITY_UPDATED",
            "ENTITY_DELETED",
            "PARTITION_CREATED",
            "PARTITION_UPDATED",
            "PARTITION_DELETED"
          ],
          "type": "string",
          "description": "The type of the event being logged.",
          "enumDescriptions": [
            "An unspecified event type.",
            "An event representing discovery configuration in effect.",
            "An event representing a metadata entity being created.",
            "An event representing a metadata entity being updated.",
            "An event representing a metadata entity being deleted.",
            "An event representing a partition being created.",
            "An event representing a partition being updated.",
            "An event representing a partition being deleted."
          ]
        },
        "action": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventActionDetails",
          "description": "Details about the action associated with the event."
        },
        "dataLocation": {
          "type": "string",
          "description": "The data location associated with the event."
        },
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "zoneId": {
          "description": "The id of the associated zone.",
          "type": "string"
        },
        "assetId": {
          "description": "The id of the associated asset.",
          "type": "string"
        },
        "config": {
          "$ref": "GoogleCloudDataplexV1DiscoveryEventConfigDetails",
          "description": "Details about discovery configuration in effect."
        },
        "partition": {
          "description": "Details about the partition associated with the event.",
          "$ref": "GoogleCloudDataplexV1DiscoveryEventPartitionDetails"
        }
      },
      "description": "The payload associated with Discovery data processing."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime": {
      "type": "object",
      "description": "Container Image Runtime Configuration used with Batch execution.",
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
          "type": "object"
        },
        "javaJars": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar"
        },
        "pythonPackages": {
          "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image": {
          "description": "Optional. Container image to use.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime"
    },
    "GoogleCloudDataplexV1StorageAccess": {
      "id": "GoogleCloudDataplexV1StorageAccess",
      "type": "object",
      "description": "Describes the access mechanism of the data within its storage location.",
      "properties": {
        "read": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "ACCESS_MODE_UNSPECIFIED",
            "DIRECT",
            "MANAGED"
          ],
          "description": "Output only. Describes the read access mechanism of the data. Not user settable.",
          "enumDescriptions": [
            "Access mode unspecified.",
            "Default. Data is accessed directly using storage APIs.",
            "Data is accessed through a managed interface using BigQuery APIs."
          ]
        }
      }
    },
    "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo": {
      "description": "The profile information for a string type field.",
      "properties": {
        "averageLength": {
          "type": "number",
          "format": "double",
          "description": "Average length of non-null values in the scanned data."
        },
        "minLength": {
          "format": "int64",
          "description": "Minimum length of non-null values in the scanned data.",
          "type": "string"
        },
        "maxLength": {
          "format": "int64",
          "description": "Maximum length of non-null values in the scanned data.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo",
      "type": "object"
    },
    "GoogleCloudDataplexV1Session": {
      "type": "object",
      "id": "GoogleCloudDataplexV1Session",
      "properties": {
        "name": {
          "description": "Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Session start time.",
          "type": "string"
        },
        "userId": {
          "readOnly": true,
          "description": "Output only. Email of user running the session.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "description": "Output only. State of Session"
        }
      },
      "description": "Represents an active analyze session running for a user."
    },
    "GoogleCloudDataplexV1ListZonesResponse": {
      "id": "GoogleCloudDataplexV1ListZonesResponse",
      "description": "List zones response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "zones": {
          "description": "Zones under the given parent lake.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDataplexV1Zone"
          }
        }
      }
    },
    "GoogleCloudDataplexV1DataScan": {
      "properties": {
        "updateTime": {
          "description": "Output only. The time when the scan was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "data": {
          "$ref": "GoogleCloudDataplexV1DataSource",
          "description": "Required. The data source for DataScan."
        },
        "dataQualitySpec": {
          "$ref": "GoogleCloudDataplexV1DataQualitySpec",
          "description": "DataQualityScan related setting."
        },
        "dataProfileSpec": {
          "description": "DataProfileScan related setting.",
          "$ref": "GoogleCloudDataplexV1DataProfileSpec"
        },
        "displayName": {
          "description": "Optional. User friendly display name. Must be between 1-256 characters.",
          "type": "string"
        },
        "type": {
          "enum": [
            "DATA_SCAN_TYPE_UNSPECIFIED",
            "DATA_QUALITY",
            "DATA_PROFILE"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "The DataScan type is unspecified.",
            "Data Quality scan.",
            "Data Profile scan."
          ],
          "description": "Output only. The type of DataScan."
        },
        "executionSpec": {
          "description": "Optional. DataScan execution settings.If not specified, the fields in it will use their default values.",
          "$ref": "GoogleCloudDataplexV1DataScanExecutionSpec"
        },
        "dataQualityResult": {
          "description": "Output only. The result of the data quality scan.",
          "$ref": "GoogleCloudDataplexV1DataQualityResult",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.",
          "readOnly": true,
          "type": "string"
        },
        "dataProfileResult": {
          "readOnly": true,
          "$ref": "GoogleCloudDataplexV1DataProfileResult",
          "description": "Output only. The result of the data profile scan."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the scan. Must be between 1-1024 characters."
        },
        "labels": {
          "description": "Optional. User-defined labels for the scan.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "executionStatus": {
          "$ref": "GoogleCloudDataplexV1DataScanExecutionStatus",
          "readOnly": true,
          "description": "Output only. Status of the data scan execution."
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions."
          ],
          "description": "Output only. Current state of the DataScan.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the scan was created."
        }
      },
      "id": "GoogleCloudDataplexV1DataScan",
      "description": "Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).",
      "type": "object"
    },
    "GoogleCloudDataplexV1JobEvent": {
      "properties": {
        "message": {
          "description": "The log message.",
          "type": "string"
        },
        "endTime": {
          "description": "The time when the job ended running.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "type": "string",
          "description": "The time when the job started running.",
          "format": "google-datetime"
        },
        "jobId": {
          "description": "The unique id identifying the job.",
          "type": "string"
        },
        "executionTrigger": {
          "type": "string",
          "description": "Job execution trigger.",
          "enumDescriptions": [
            "The job execution trigger is unspecified.",
            "The job was triggered by Dataplex based on trigger spec from task definition.",
            "The job was triggered by the explicit call of Task API."
          ],
          "enum": [
            "EXECUTION_TRIGGER_UNSPECIFIED",
            "TASK_CONFIG",
            "RUN_REQUEST"
          ]
        },
        "serviceJob": {
          "type": "string",
          "description": "The reference to the job within the service."
        },
        "service": {
          "description": "The service used to execute the job.",
          "enumDescriptions": [
            "Unspecified service.",
            "Cloud Dataproc."
          ],
          "type": "string",
          "enum": [
            "SERVICE_UNSPECIFIED",
            "DATAPROC"
          ]
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPARK",
            "NOTEBOOK"
          ],
          "enumDescriptions": [
            "Unspecified job type.",
            "Spark jobs.",
            "Notebook jobs."
          ],
          "type": "string",
          "description": "The type of the job."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "ABORTED"
          ],
          "description": "The job state on completion.",
          "enumDescriptions": [
            "Unspecified job state.",
            "Job successfully completed.",
            "Job was unsuccessful.",
            "Job was cancelled by the user.",
            "Job was cancelled or aborted via the service executing the job."
          ],
          "type": "string"
        },
        "retries": {
          "description": "The number of retries.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDataplexV1JobEvent",
      "type": "object",
      "description": "The payload associated with Job logs that contains events describing jobs that have run within a Lake."
    },
    "GoogleCloudDataplexV1ActionInvalidDataPartition": {
      "properties": {
        "expectedStructure": {
          "description": "The issue type of InvalidDataPartition.",
          "enum": [
            "PARTITION_STRUCTURE_UNSPECIFIED",
            "CONSISTENT_KEYS",
            "HIVE_STYLE_KEYS"
          ],
          "type": "string",
          "enumDescriptions": [
            "PartitionStructure unspecified.",
            "Consistent hive-style partition definition (both raw and curated zone).",
            "Hive style partition definition (curated zone only)."
          ]
        }
      },
      "description": "Action details for invalid or unsupported partitions detected by discovery.",
      "type": "object",
      "id": "GoogleCloudDataplexV1ActionInvalidDataPartition"
    },
    "GoogleCloudDataplexV1SchemaPartitionField": {
      "id": "GoogleCloudDataplexV1SchemaPartitionField",
      "description": "Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "SchemaType unspecified.",
            "Boolean field.",
            "Single byte numeric field.",
            "16-bit numeric field.",
            "32-bit numeric field.",
            "64-bit numeric field.",
            "Floating point numeric field.",
            "Double precision numeric field.",
            "Real value numeric field.",
            "Sequence of characters field.",
            "Sequence of bytes field.",
            "Date and time field.",
            "Date field.",
            "Time field.",
            "Structured field. Nested fields that define the structure of the map. If all nested fields are nullable, this field represents a union.",
            "Null field that does not have values."
          ],
          "description": "Required. Immutable. The type of field.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "BOOLEAN",
            "BYTE",
            "INT16",
            "INT32",
            "INT64",
            "FLOAT",
            "DOUBLE",
            "DECIMAL",
            "STRING",
            "BINARY",
            "TIMESTAMP",
            "DATE",
            "TIME",
            "RECORD",
            "NULL"
          ]
        },
        "name": {
          "type": "string",
          "description": "Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore.."
        }
      }
    },
    "GoogleCloudDataplexV1AssetStatus": {
      "id": "GoogleCloudDataplexV1AssetStatus",
      "type": "object",
      "description": "Aggregated status of the underlying assets of a lake or zone.",
      "properties": {
        "securityPolicyApplyingAssets": {
          "type": "integer",
          "description": "Number of assets that are in process of updating the security policy on attached resources.",
          "format": "int32"
        },
        "updateTime": {
          "description": "Last update time of the status.",
          "type": "string",
          "format": "google-datetime"
        },
        "activeAssets": {
          "format": "int32",
          "type": "integer",
          "description": "Number of active assets."
        }
      }
    },
    "GoogleCloudDataplexV1OperationMetadata": {
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
          "readOnly": true,
          "type": "boolean"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        }
      },
      "id": "GoogleCloudDataplexV1OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of a long-running operation."
    },
    "GoogleCloudDataplexV1CancelJobRequest": {
      "description": "Cancel task jobs.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDataplexV1CancelJobRequest"
    },
    "GoogleCloudDataplexV1DataAccessSpec": {
      "properties": {
        "readers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources."
        }
      },
      "description": "DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data, the data is only accessible to principals explicitly granted access through the DataAccessSpec. Principals with access to the containing resource are not implicitly granted access.",
      "type": "object",
      "id": "GoogleCloudDataplexV1DataAccessSpec"
    },
    "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions": {
      "properties": {
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions",
      "description": "Describe JSON data format.",
      "type": "object"
    },
    "GoogleCloudDataplexV1ListAssetsResponse": {
      "id": "GoogleCloudDataplexV1ListAssetsResponse",
      "type": "object",
      "description": "List assets response.",
      "properties": {
        "assets": {
          "items": {
            "$ref": "GoogleCloudDataplexV1Asset"
          },
          "description": "Asset under the given parent zone.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "GoogleCloudDataplexV1StorageFormatCsvOptions": {
      "id": "GoogleCloudDataplexV1StorageFormatCsvOptions",
      "properties": {
        "encoding": {
          "type": "string",
          "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified."
        },
        "headerRows": {
          "format": "int32",
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.",
          "type": "integer"
        },
        "delimiter": {
          "type": "string",
          "description": "Optional. The delimiter used to separate values. Defaults to ','."
        },
        "quote": {
          "type": "string",
          "description": "Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or ''' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified."
        }
      },
      "type": "object",
      "description": "Describes CSV and similar semi-structured data formats."
    },
    "GoogleCloudDataplexV1TaskInfrastructureSpec": {
      "description": "Configuration for the underlying infrastructure used to run workloads.",
      "type": "object",
      "id": "GoogleCloudDataplexV1TaskInfrastructureSpec",
      "properties": {
        "vpcNetwork": {
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork",
          "description": "Vpc network."
        },
        "containerImage": {
          "description": "Container Image Runtime Configuration.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime"
        },
        "batch": {
          "description": "Compute resources needed for a Task when using Dataproc Serverless.",
          "$ref": "GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources"
        }
      }
    },
    "GoogleCloudDataplexV1ActionUnauthorizedResource": {
      "description": "Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.",
      "properties": {},
      "id": "GoogleCloudDataplexV1ActionUnauthorizedResource",
      "type": "object"
    },
    "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo": {
      "properties": {
        "average": {
          "description": "Average of non-null values in the scanned data. NaN, if the field has a NaN.",
          "type": "number",
          "format": "double"
        },
        "standardDeviation": {
          "format": "double",
          "type": "number",
          "description": "Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN."
        },
        "max": {
          "format": "double",
          "type": "number",
          "description": "Maximum of non-null values in the scanned data. NaN, if the field has a NaN."
        },
        "min": {
          "type": "number",
          "description": "Minimum of non-null values in the scanned data. NaN, if the field has a NaN.",
          "format": "double"
        },
        "quartiles": {
          "description": "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "type": "object",
      "description": "The profile information for a double type field.",
      "id": "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo"
    }
  },
  "discoveryVersion": "v1",
  "version_module": true,
  "id": "dataplex:v1",
  "version": "v1",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "name": "dataplex",
  "documentationLink": "https://cloud.google.com/dataplex/docs",
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "baseUrl": "https://dataplex.googleapis.com/",
  "revision": "20230607",
  "title": "Cloud Dataplex API",
  "canonicalName": "Cloud Dataplex"
}

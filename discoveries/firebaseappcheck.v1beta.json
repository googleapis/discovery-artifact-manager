{
  "revision": "20220408",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "resources": {
    "jwks": {
      "methods": {
        "get": {
          "flatPath": "v1beta/jwks",
          "response": {
            "$ref": "GoogleFirebaseAppcheckV1betaPublicJwkSet"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "description": "Returns a public JWK set as specified by [RFC 7517](https://tools.ietf.org/html/rfc7517) that can be used to verify App Check tokens. Exactly one of the public keys in the returned set will successfully validate any App Check token that is currently valid.",
          "path": "v1beta/{+name}",
          "id": "firebaseappcheck.jwks.get",
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^jwks$",
              "description": "Required. The relative resource name to the public JWK set. Must always be exactly the string `jwks`."
            }
          },
          "httpMethod": "GET"
        }
      }
    },
    "projects": {
      "resources": {
        "apps": {
          "resources": {
            "recaptchaEnterpriseConfig": {
              "methods": {
                "get": {
                  "id": "firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.get",
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaEnterpriseConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaEnterpriseConfig$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The relative resource name of the RecaptchaEnterpriseConfig, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```"
                    }
                  },
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig"
                  },
                  "description": "Gets the RecaptchaEnterpriseConfig for the specified app."
                },
                "batchGet": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project name shared by all RecaptchaEnterpriseConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "pattern": "^projects/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "names": {
                      "repeated": true,
                      "type": "string",
                      "description": "Required. The relative resource names of the RecaptchaEnterpriseConfigs to retrieve, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ``` A maximum of 100 objects can be retrieved in a batch.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet",
                  "path": "v1beta/{+parent}/apps/-/recaptchaEnterpriseConfig:batchGet",
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/recaptchaEnterpriseConfig:batchGet",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Atomically gets the RecaptchaEnterpriseConfigs for the specified list of apps.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "patch": {
                  "description": "Updates the RecaptchaEnterpriseConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA Enterprise tokens for App Check tokens.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. A comma-separated list of names of fields in the RecaptchaEnterpriseConfig to update. Example: `site_key`.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The relative resource name of the reCAPTCHA Enterprise configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```",
                      "type": "string",
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaEnterpriseConfig$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaEnterpriseConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v1beta/{+name}",
                  "id": "firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.patch",
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig"
                  }
                }
              }
            },
            "recaptchaConfig": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaConfig"
                  },
                  "description": "Updates the RecaptchaConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA tokens for App Check tokens. For security reasons, the `site_secret` field is never populated in the response.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaConfig"
                  },
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. A comma-separated list of names of fields in the RecaptchaConfig to update. Example: `site_secret`."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaConfig$",
                      "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaConfig ```",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "PATCH",
                  "id": "firebaseappcheck.projects.apps.recaptchaConfig.patch",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaConfig"
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaConfig",
                  "httpMethod": "GET",
                  "id": "firebaseappcheck.projects.apps.recaptchaConfig.get",
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the RecaptchaConfig for the specified app. For security reasons, the `site_secret` field is never populated in the response.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaConfig"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The relative resource name of the RecaptchaConfig, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaConfig ```",
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaConfig$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "batchGet": {
                  "parameters": {
                    "names": {
                      "repeated": true,
                      "description": "Required. The relative resource names of the RecaptchaConfigs to retrieve, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaConfig ``` A maximum of 100 objects can be retrieved in a batch.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent project name shared by all RecaptchaConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/recaptchaConfig:batchGet",
                  "httpMethod": "GET",
                  "description": "Atomically gets the RecaptchaConfigs for the specified list of apps. For security reasons, the `site_secret` field is never populated in the response.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/apps/-/recaptchaConfig:batchGet",
                  "id": "firebaseappcheck.projects.apps.recaptchaConfig.batchGet",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse"
                  }
                }
              }
            },
            "safetyNetConfig": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaSafetyNetConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/safetyNetConfig",
                  "description": "Updates the SafetyNetConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange SafetyNet tokens for App Check tokens.",
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaSafetyNetConfig"
                  },
                  "id": "firebaseappcheck.projects.apps.safetyNetConfig.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The relative resource name of the SafetyNet configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```",
                      "type": "string",
                      "pattern": "^projects/[^/]+/apps/[^/]+/safetyNetConfig$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. A comma-separated list of names of fields in the SafetyNetConfig Gets to update. Example: `token_ttl`.",
                      "type": "string"
                    }
                  }
                },
                "batchGet": {
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/safetyNetConfig:batchGet",
                  "description": "Atomically gets the SafetyNetConfigs for the specified list of apps.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "firebaseappcheck.projects.apps.safetyNetConfig.batchGet",
                  "path": "v1beta/{+parent}/apps/-/safetyNetConfig:batchGet",
                  "parameters": {
                    "names": {
                      "location": "query",
                      "description": "Required. The relative resource names of the SafetyNetConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ``` A maximum of 100 objects can be retrieved in a batch.",
                      "type": "string",
                      "repeated": true
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+$",
                      "description": "Required. The parent project name shared by all SafetyNetConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/safetyNetConfig",
                  "description": "Gets the SafetyNetConfig for the specified app.",
                  "parameters": {
                    "name": {
                      "description": "Required. The relative resource name of the SafetyNetConfig, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```",
                      "pattern": "^projects/[^/]+/apps/[^/]+/safetyNetConfig$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "firebaseappcheck.projects.apps.safetyNetConfig.get",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaSafetyNetConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}"
                }
              }
            },
            "debugTokens": {
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
                  },
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. A comma-separated list of names of fields in the DebugToken to update. Example: `display_name`.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/debugTokens/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "firebaseappcheck.projects.apps.debugTokens.patch",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Updates the specified DebugToken. For security reasons, the `token` field cannot be updated, nor will it be populated in the response, but you can revoke the debug token using DeleteDebugToken.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
                  },
                  "httpMethod": "PATCH"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/apps/[^/]+/debugTokens/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "id": "firebaseappcheck.projects.apps.debugTokens.get",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}",
                  "description": "Gets the specified DebugToken. For security reasons, the `token` field is never populated in the response.",
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
                  }
                },
                "delete": {
                  "description": "Deletes the specified DebugToken. A deleted debug token cannot be used to exchange for an App Check token. Use this method when you suspect the secret `token` has been compromised or when you no longer need the debug token.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}",
                  "path": "v1beta/{+name}",
                  "id": "firebaseappcheck.projects.apps.debugTokens.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/apps/[^/]+/debugTokens/[^/]+$",
                      "required": true,
                      "description": "Required. The relative resource name of the DebugToken to delete, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "list": {
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/debugTokens",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "GET",
                  "id": "firebaseappcheck.projects.apps.debugTokens.list",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of DebugTokens to return in the response. Note that an app can have at most 20 debug tokens. The server may return fewer than this at its own discretion. If no value is specified (or too large a value is specified), the server will impose its own limit.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Token returned from a previous call to ListDebugTokens indicating where in the set of DebugTokens to resume listing. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListDebugTokens must match the call that provided the page token; if they do not match, the result is undefined.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The relative resource name of the parent app for which to list each associated DebugToken, in the format: ``` projects/{project_number}/apps/{app_id} ```",
                      "location": "path",
                      "pattern": "^projects/[^/]+/apps/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Lists all DebugTokens for the specified app. For security reasons, the `token` field is never populated in the response.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/debugTokens",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaListDebugTokensResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v1beta/{+parent}/debugTokens",
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/debugTokens",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
                  },
                  "description": "Creates a new DebugToken for the specified app. For security reasons, after the creation operation completes, the `token` field cannot be updated or retrieved, but you can revoke the debug token using DeleteDebugToken. Each app can have a maximum of 20 debug tokens.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The relative resource name of the parent app in which the specified DebugToken will be created, in the format: ``` projects/{project_number}/apps/{app_id} ```",
                      "pattern": "^projects/[^/]+/apps/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "firebaseappcheck.projects.apps.debugTokens.create"
                }
              }
            },
            "deviceCheckConfig": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Gets the DeviceCheckConfig for the specified app. For security reasons, the `private_key` field is never populated in the response.",
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/deviceCheckConfig",
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The relative resource name of the DeviceCheckConfig, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/deviceCheckConfig$"
                    }
                  },
                  "id": "firebaseappcheck.projects.apps.deviceCheckConfig.get",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"
                  },
                  "httpMethod": "GET"
                },
                "batchGet": {
                  "path": "v1beta/{+parent}/apps/-/deviceCheckConfig:batchGet",
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/deviceCheckConfig:batchGet",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Atomically gets the DeviceCheckConfigs for the specified list of apps. For security reasons, the `private_key` field is never populated in the response.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse"
                  },
                  "parameters": {
                    "names": {
                      "type": "string",
                      "description": "Required. The relative resource names of the DeviceCheckConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ``` A maximum of 100 objects can be retrieved in a batch.",
                      "repeated": true,
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project name shared by all DeviceCheckConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "pattern": "^projects/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "id": "firebaseappcheck.projects.apps.deviceCheckConfig.batchGet"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"
                  },
                  "id": "firebaseappcheck.projects.apps.deviceCheckConfig.patch",
                  "description": "Updates the DeviceCheckConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange DeviceCheck tokens for App Check tokens. For security reasons, the `private_key` field is never populated in the response.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```",
                      "location": "path",
                      "pattern": "^projects/[^/]+/apps/[^/]+/deviceCheckConfig$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. A comma-separated list of names of fields in the DeviceCheckConfig Gets to update. Example: `key_id,private_key`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v1beta/{+name}",
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/deviceCheckConfig"
                }
              }
            },
            "recaptchaV3Config": {
              "methods": {
                "get": {
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaV3Config",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaV3Config"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "firebaseappcheck.projects.apps.recaptchaV3Config.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The relative resource name of the RecaptchaV3Config, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaV3Config$"
                    }
                  },
                  "description": "Gets the RecaptchaV3Config for the specified app. For security reasons, the `site_secret` field is never populated in the response.",
                  "httpMethod": "GET"
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "Required. A comma-separated list of names of fields in the RecaptchaV3Config to update. Example: `site_secret`.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```",
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/recaptchaV3Config$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/recaptchaV3Config",
                  "id": "firebaseappcheck.projects.apps.recaptchaV3Config.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaV3Config"
                  },
                  "description": "Updates the RecaptchaV3Config for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA V3 tokens for App Check tokens. For security reasons, the `site_secret` field is never populated in the response.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaV3Config"
                  }
                },
                "batchGet": {
                  "parameters": {
                    "names": {
                      "repeated": true,
                      "type": "string",
                      "location": "query",
                      "description": "Required. The relative resource names of the RecaptchaV3Configs to retrieve, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ``` A maximum of 100 objects can be retrieved in a batch."
                    },
                    "parent": {
                      "description": "Required. The parent project name shared by all RecaptchaV3Configs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "required": true,
                      "pattern": "^projects/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "firebaseappcheck.projects.apps.recaptchaV3Config.batchGet",
                  "description": "Atomically gets the RecaptchaV3Configs for the specified list of apps. For security reasons, the `site_secret` field is never populated in the response.",
                  "path": "v1beta/{+parent}/apps/-/recaptchaV3Config:batchGet",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/recaptchaV3Config:batchGet"
                }
              }
            },
            "appAttestConfig": {
              "methods": {
                "batchGet": {
                  "id": "firebaseappcheck.projects.apps.appAttestConfig.batchGet",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Atomically gets the AppAttestConfigs for the specified list of apps.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project name shared by all AppAttestConfigs being retrieved, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being retrieved must match this field, or the entire batch fails.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+$"
                    },
                    "names": {
                      "location": "query",
                      "repeated": true,
                      "description": "Required. The relative resource names of the AppAttestConfigs to retrieve, in the format ``` projects/{project_number}/apps/{app_id}/appAttestConfig ``` A maximum of 100 objects can be retrieved in a batch.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/-/appAttestConfig:batchGet",
                  "path": "v1beta/{+parent}/apps/-/appAttestConfig:batchGet"
                },
                "patch": {
                  "path": "v1beta/{+name}",
                  "id": "firebaseappcheck.projects.apps.appAttestConfig.patch",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/apps/[^/]+/appAttestConfig$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The relative resource name of the App Attest configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Required. A comma-separated list of names of fields in the AppAttestConfig Gets to update. Example: `token_ttl`.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "GoogleFirebaseAppcheckV1betaAppAttestConfig"
                  },
                  "httpMethod": "PATCH",
                  "description": "Updates the AppAttestConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange AppAttest tokens for App Check tokens.",
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaAppAttestConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/appAttestConfig",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}/appAttestConfig",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/apps/[^/]+/appAttestConfig$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The relative resource name of the AppAttestConfig, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```"
                    }
                  },
                  "response": {
                    "$ref": "GoogleFirebaseAppcheckV1betaAppAttestConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "description": "Gets the AppAttestConfig for the specified app.",
                  "id": "firebaseappcheck.projects.apps.appAttestConfig.get",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "exchangeAppAttestAttestation": {
              "id": "firebaseappcheck.projects.apps.exchangeAppAttestAttestation",
              "path": "v1beta/{+app}:exchangeAppAttestAttestation",
              "description": "Accepts an App Attest CBOR attestation and verifies it with Apple using your preconfigured team and bundle IDs. If valid, returns an attestation artifact that can later be exchanged for an AppCheckToken using ExchangeAppAttestAssertion. For convenience and performance, this method's response object will also contain an AppCheckToken (if the verification is successful).",
              "parameters": {
                "app": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/apps/[^/]+$"
                }
              },
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAttestation",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse"
              },
              "parameterOrder": [
                "app"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            },
            "exchangeSafetyNetToken": {
              "path": "v1beta/{+app}:exchangeSafetyNetToken",
              "parameterOrder": [
                "app"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest"
              },
              "description": "Validates a [SafetyNet token](https://developer.android.com/training/safetynet/attestation#request-attestation-step). If valid, returns an AppCheckToken.",
              "id": "firebaseappcheck.projects.apps.exchangeSafetyNetToken",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "parameters": {
                "app": {
                  "location": "path",
                  "description": "Required. The relative resource name of the Android app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/apps/[^/]+$"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeSafetyNetToken"
            },
            "exchangeRecaptchaEnterpriseToken": {
              "description": "Validates a [reCAPTCHA Enterprise response token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token). If valid, returns an App Check token AppCheckToken.",
              "path": "v1beta/{+app}:exchangeRecaptchaEnterpriseToken",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken",
              "httpMethod": "POST",
              "parameters": {
                "app": {
                  "description": "Required. The relative resource name of the web app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaEnterpriseToken",
              "parameterOrder": [
                "app"
              ],
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              }
            },
            "exchangeRecaptchaToken": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "firebaseappcheck.projects.apps.exchangeRecaptchaToken",
              "parameters": {
                "app": {
                  "location": "path",
                  "description": "Required. The relative resource name of the web app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "description": "Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptcha/docs/v3). If valid, returns an AppCheckToken.",
              "parameterOrder": [
                "app"
              ],
              "path": "v1beta/{+app}:exchangeRecaptchaToken",
              "httpMethod": "POST",
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaToken",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest"
              }
            },
            "exchangeRecaptchaV3Token": {
              "path": "v1beta/{+app}:exchangeRecaptchaV3Token",
              "parameters": {
                "app": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The relative resource name of the web app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaV3Token",
              "id": "firebaseappcheck.projects.apps.exchangeRecaptchaV3Token",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "app"
              ],
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest"
              },
              "description": "Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptcha/docs/v3). If valid, returns an AppCheckToken."
            },
            "exchangeDeviceCheckToken": {
              "description": "Accepts a [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice) issued by DeviceCheck, and attempts to validate it with Apple. If valid, returns an AppCheckToken.",
              "path": "v1beta/{+app}:exchangeDeviceCheckToken",
              "httpMethod": "POST",
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeDeviceCheckToken",
              "parameters": {
                "app": {
                  "type": "string",
                  "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "required": true,
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "app"
              ],
              "id": "firebaseappcheck.projects.apps.exchangeDeviceCheckToken",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest"
              }
            },
            "generateAppAttestChallenge": {
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse"
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:generateAppAttestChallenge",
              "parameterOrder": [
                "app"
              ],
              "parameters": {
                "app": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Generates a challenge that protects the integrity of an immediately following call to ExchangeAppAttestAttestation or ExchangeAppAttestAssertion. A challenge should not be reused for multiple calls.",
              "path": "v1beta/{+app}:generateAppAttestChallenge",
              "id": "firebaseappcheck.projects.apps.generateAppAttestChallenge",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest"
              }
            },
            "exchangeCustomToken": {
              "path": "v1beta/{+app}:exchangeCustomToken",
              "description": "Validates a custom token signed using your project's Admin SDK service account credentials. If valid, returns an AppCheckToken.",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "parameterOrder": [
                "app"
              ],
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeCustomToken",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest"
              },
              "httpMethod": "POST",
              "id": "firebaseappcheck.projects.apps.exchangeCustomToken",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameters": {
                "app": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "required": true,
                  "description": "Required. The relative resource name of the app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "type": "string"
                }
              }
            },
            "exchangeAppAttestAssertion": {
              "id": "firebaseappcheck.projects.apps.exchangeAppAttestAssertion",
              "parameterOrder": [
                "app"
              ],
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Accepts an App Attest assertion and an artifact previously obtained from ExchangeAppAttestAttestation and verifies those with Apple. If valid, returns an AppCheckToken.",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest"
              },
              "parameters": {
                "app": {
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "required": true
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAssertion",
              "path": "v1beta/{+app}:exchangeAppAttestAssertion"
            },
            "exchangeDebugToken": {
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken"
              },
              "flatPath": "v1beta/projects/{projectsId}/apps/{appsId}:exchangeDebugToken",
              "parameterOrder": [
                "app"
              ],
              "parameters": {
                "app": {
                  "pattern": "^projects/[^/]+/apps/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The relative resource name of the app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.",
                  "required": true
                }
              },
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest"
              },
              "httpMethod": "POST",
              "description": "Validates a debug token secret that you have previously created using CreateDebugToken. If valid, returns an AppCheckToken. Note that a restrictive quota is enforced on this method to prevent accidental exposure of the app to abuse.",
              "path": "v1beta/{+app}:exchangeDebugToken",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "firebaseappcheck.projects.apps.exchangeDebugToken"
            }
          }
        },
        "services": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaListServicesResponse"
              },
              "flatPath": "v1beta/projects/{projectsId}/services",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The relative resource name of the parent project for which to list each associated Service, in the format: ``` projects/{project_number} ```",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of Services to return in the response. Only explicitly configured services are returned. The server may return fewer than this at its own discretion. If no value is specified (or too large a value is specified), the server will impose its own limit."
                },
                "pageToken": {
                  "description": "Token returned from a previous call to ListServices indicating where in the set of Services to resume listing. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ListServices must match the call that provided the page token; if they do not match, the result is undefined.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Lists all Service configurations for the specified project. Only Services which were explicitly configured using UpdateService or BatchUpdateServices will be returned.",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1beta/{+parent}/services",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "id": "firebaseappcheck.projects.services.list"
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaService"
              },
              "flatPath": "v1beta/projects/{projectsId}/services/{servicesId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaService"
              },
              "httpMethod": "PATCH",
              "id": "firebaseappcheck.projects.services.patch",
              "description": "Updates the specified Service configuration.",
              "path": "v1beta/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/services/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`."
                }
              }
            },
            "batchUpdate": {
              "id": "firebaseappcheck.projects.services.batchUpdate",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent project name shared by all Service configurations being updated, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being updated must match this field, or the entire batch fails."
                }
              },
              "description": "Atomically updates the specified Service configurations.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse"
              },
              "path": "v1beta/{+parent}/services:batchUpdate",
              "flatPath": "v1beta/projects/{projectsId}/services:batchUpdate",
              "request": {
                "$ref": "GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest"
              }
            },
            "get": {
              "description": "Gets the Service configuration for the specified service name.",
              "httpMethod": "GET",
              "path": "v1beta/{+name}",
              "flatPath": "v1beta/projects/{projectsId}/services/{servicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "firebaseappcheck.projects.services.get",
              "response": {
                "$ref": "GoogleFirebaseAppcheckV1betaService"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The relative resource name of the Service to retrieve, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)",
                  "required": true,
                  "pattern": "^projects/[^/]+/services/[^/]+$"
                }
              }
            }
          }
        }
      }
    }
  },
  "id": "firebaseappcheck:v1beta",
  "description": "Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "title": "Firebase App Check API",
  "name": "firebaseappcheck",
  "batchPath": "batch",
  "baseUrl": "https://firebaseappcheck.googleapis.com/",
  "mtlsRootUrl": "https://firebaseappcheck.mtls.googleapis.com/",
  "canonicalName": "Firebaseappcheck",
  "version": "v1beta",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "rootUrl": "https://firebaseappcheck.googleapis.com/",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "servicePath": "",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "basePath": "",
  "protocol": "rest",
  "version_module": true,
  "documentationLink": "https://firebase.google.com/docs/app-check",
  "schemas": {
    "GoogleFirebaseAppcheckV1betaPublicJwkSet": {
      "description": "The currently active set of public keys that can be used to verify App Check tokens. This object is a JWK set as specified by [section 5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the response **must not** be cached for longer than six hours.",
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaPublicJwkSet",
      "properties": {
        "keys": {
          "description": "The set of public keys. See [section 5.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5).",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaPublicJwk"
          },
          "type": "array"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest": {
      "type": "object",
      "description": "Request message for the ExchangeSafetyNetToken method.",
      "id": "GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest",
      "properties": {
        "safetyNetToken": {
          "description": "Required. The [SafetyNet attestation response](https://developer.android.com/training/safetynet/attestation#request-attestation-step) issued to your app.",
          "type": "string"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest": {
      "properties": {
        "recaptchaV3Token": {
          "description": "Required. The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3).",
          "type": "string"
        }
      },
      "description": "Request message for the ExchangeRecaptchaV3Token method.",
      "id": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest",
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest": {
      "type": "object",
      "description": "Request message for the ExchangeRecaptchaEnterpriseToken method.",
      "properties": {
        "recaptchaEnterpriseToken": {
          "description": "Required. The reCAPTCHA token as returned by the [reCAPTCHA Enterprise JavaScript API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages).",
          "type": "string"
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest"
    },
    "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse": {
      "properties": {
        "configs": {
          "description": "RecaptchaConfigs retrieved.",
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaConfig"
          }
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse",
      "description": "Response message for the BatchGetRecaptchaConfigs method."
    },
    "GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest": {
      "description": "Request message for the BatchUpdateServices method.",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If this field is present, the `update_mask` field in the UpdateServiceRequest messages must all match this field, or the entire batch fails and no updates will be committed."
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaUpdateServiceRequest"
          },
          "description": "Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch."
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest",
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaPublicJwk": {
      "type": "object",
      "description": "A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).",
      "properties": {
        "e": {
          "type": "string",
          "description": "See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2)."
        },
        "kty": {
          "type": "string",
          "description": "See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1)."
        },
        "n": {
          "type": "string",
          "description": "See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1)."
        },
        "use": {
          "description": "See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2).",
          "type": "string"
        },
        "kid": {
          "description": "See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5).",
          "type": "string"
        },
        "alg": {
          "description": "See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).",
          "type": "string"
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaPublicJwk"
    },
    "GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest": {
      "type": "object",
      "description": "Request message for the ExchangeDebugToken method.",
      "properties": {
        "debugToken": {
          "description": "Required. A debug token secret. This string must match a debug token secret previously created using CreateDebugToken.",
          "type": "string"
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest"
    },
    "GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse": {
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse",
      "description": "Response message for the BatchUpdateServices method.",
      "properties": {
        "services": {
          "description": "Service objects after the updates have been applied.",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaService"
          },
          "type": "array"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaDebugToken": {
      "description": "A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services.",
      "id": "GoogleFirebaseAppcheckV1betaDebugToken",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. A human readable display name used to identify this debug token."
        },
        "token": {
          "type": "string",
          "description": "Required. Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response."
        },
        "name": {
          "type": "string",
          "description": "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```"
        }
      },
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse": {
      "description": "Response message for the BatchGetDeviceCheckConfigs method.",
      "properties": {
        "configs": {
          "description": "DeviceCheckConfigs retrieved.",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaDeviceCheckConfig"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse"
    },
    "GoogleFirebaseAppcheckV1betaRecaptchaV3Config": {
      "id": "GoogleFirebaseAppcheckV1betaRecaptchaV3Config",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```"
        },
        "siteSecret": {
          "description": "Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response.",
          "type": "string"
        },
        "tokenTtl": {
          "type": "string",
          "format": "google-duration",
          "description": "Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days, inclusive."
        },
        "siteSecretSet": {
          "readOnly": true,
          "description": "Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set.",
          "type": "boolean"
        }
      },
      "description": "An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also controls certain properties of the returned App Check token, such as its ttl."
    },
    "GoogleFirebaseAppcheckV1betaListDebugTokensResponse": {
      "type": "object",
      "description": "Response message for the ListDebugTokens method.",
      "properties": {
        "nextPageToken": {
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted.",
          "type": "string"
        },
        "debugTokens": {
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaDebugToken"
          },
          "type": "array",
          "description": "The DebugTokens retrieved."
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaListDebugTokensResponse"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse": {
      "id": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse",
      "type": "object",
      "description": "Response message for the BatchGetRecaptchaV3Configs method.",
      "properties": {
        "configs": {
          "type": "array",
          "description": "RecaptchaV3Configs retrieved.",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaV3Config"
          }
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaAppAttestConfig": {
      "description": "An app's App Attest configuration object. This configuration controls certain properties of the App Check token returned by ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.iosApps/patch).",
      "id": "GoogleFirebaseAppcheckV1betaAppAttestConfig",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The relative resource name of the App Attest configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```",
          "type": "string"
        },
        "tokenTtl": {
          "format": "google-duration",
          "description": "Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
          "type": "string"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse": {
      "properties": {
        "appCheckToken": {
          "$ref": "GoogleFirebaseAppcheckV1betaAppCheckToken",
          "description": "Encapsulates an App Check token."
        },
        "artifact": {
          "type": "string",
          "format": "byte",
          "description": "An artifact that can be used in future calls to ExchangeAppAttestAssertion."
        },
        "attestationToken": {
          "description": "Encapsulates an App Check token.",
          "$ref": "GoogleFirebaseAppcheckV1betaAttestationTokenResponse"
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse",
      "type": "object",
      "description": "Response message for the ExchangeAppAttestAttestation method."
    },
    "GoogleFirebaseAppcheckV1betaAttestationTokenResponse": {
      "id": "GoogleFirebaseAppcheckV1betaAttestationTokenResponse",
      "description": "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
      "type": "object",
      "properties": {
        "attestationToken": {
          "description": "An App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check.",
          "type": "string"
        },
        "ttl": {
          "description": "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
          "format": "google-duration",
          "type": "string"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse": {
      "description": "Response message for the BatchGetRecaptchaEnterpriseConfigs method.",
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse",
      "properties": {
        "configs": {
          "description": "RecaptchaEnterpriseConfigs retrieved.",
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig"
          }
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest": {
      "type": "object",
      "description": "Request message for the ExchangeCustomToken method.",
      "properties": {
        "customToken": {
          "type": "string",
          "description": "Required. A custom token signed using your project's Admin SDK service account credentials."
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest"
    },
    "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig": {
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig",
      "description": "An app's reCAPTCHA Enterprise configuration object. This configuration is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA Enterprise. It also controls certain properties of the returned App Check token, such as its ttl.",
      "properties": {
        "name": {
          "description": "Required. The relative resource name of the reCAPTCHA Enterprise configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```",
          "type": "string"
        },
        "siteKey": {
          "type": "string",
          "description": "The score-based site key [created in reCAPTCHA Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key) used to [invoke reCAPTCHA and generate the reCAPTCHA tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages) for your application. Important: This is *not* the `site_secret` (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key."
        },
        "tokenTtl": {
          "description": "Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaSafetyNetConfig": {
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaSafetyNetConfig",
      "description": "An app's SafetyNet configuration object. This configuration controls certain properties of the App Check token returned by ExchangeSafetyNetToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by SafetyNet; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The relative resource name of the SafetyNet configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```"
        },
        "tokenTtl": {
          "description": "Specifies the duration for which App Check tokens exchanged from SafetyNet tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest": {
      "type": "object",
      "properties": {
        "challenge": {
          "description": "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
          "format": "byte",
          "type": "string"
        },
        "assertion": {
          "type": "string",
          "format": "byte",
          "description": "Required. The CBOR-encoded assertion returned by the client-side App Attest API."
        },
        "artifact": {
          "format": "byte",
          "type": "string",
          "description": "Required. The artifact returned by a previous call to ExchangeAppAttestAttestation."
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest",
      "description": "Request message for the ExchangeAppAttestAssertion method."
    },
    "GoogleFirebaseAppcheckV1betaListServicesResponse": {
      "id": "GoogleFirebaseAppcheckV1betaListServicesResponse",
      "description": "Response message for the ListServices method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted."
        },
        "services": {
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaService"
          },
          "description": "The Services retrieved.",
          "type": "array"
        }
      }
    },
    "GoogleFirebaseAppcheckV1betaAppCheckToken": {
      "type": "object",
      "properties": {
        "attestationToken": {
          "description": "An App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check.",
          "type": "string"
        },
        "token": {
          "type": "string",
          "description": "An App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check."
        },
        "ttl": {
          "type": "string",
          "format": "google-duration",
          "description": "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration."
        }
      },
      "description": "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
      "id": "GoogleFirebaseAppcheckV1betaAppCheckToken"
    },
    "GoogleFirebaseAppcheckV1betaUpdateServiceRequest": {
      "id": "GoogleFirebaseAppcheckV1betaUpdateServiceRequest",
      "type": "object",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`."
        },
        "service": {
          "description": "Required. The Service to update. The Service's `name` field is used to identify the Service to be updated, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)",
          "$ref": "GoogleFirebaseAppcheckV1betaService"
        }
      },
      "description": "Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method."
    },
    "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse": {
      "type": "object",
      "properties": {
        "ttl": {
          "format": "google-duration",
          "description": "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
          "type": "string"
        },
        "challenge": {
          "type": "string",
          "format": "byte",
          "description": "A one-time use challenge for the client to pass to the App Attest API."
        }
      },
      "id": "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse",
      "description": "Response message for the GenerateAppAttestChallenge method."
    },
    "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest": {
      "properties": {},
      "description": "Request message for the GenerateAppAttestChallenge method.",
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest"
    },
    "GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest": {
      "properties": {
        "deviceToken": {
          "description": "Required. The `device_token` as returned by Apple's client-side [DeviceCheck API](https://developer.apple.com/documentation/devicecheck/dcdevice). This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest",
      "description": "Request message for the ExchangeDeviceCheckToken method."
    },
    "GoogleFirebaseAppcheckV1betaRecaptchaConfig": {
      "description": "An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also controls certain properties of the returned App Check token, such as its ttl.",
      "properties": {
        "siteSecretSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set."
        },
        "siteSecret": {
          "type": "string",
          "description": "Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response."
        },
        "tokenTtl": {
          "description": "Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days, inclusive.",
          "type": "string",
          "format": "google-duration"
        },
        "name": {
          "description": "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaConfig ```",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaRecaptchaConfig"
    },
    "GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse": {
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaSafetyNetConfig"
          },
          "description": "SafetyNetConfigs retrieved."
        }
      },
      "description": "Response message for the BatchGetSafetyNetConfigs method.",
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse"
    },
    "GoogleFirebaseAppcheckV1betaService": {
      "properties": {
        "enforcementMode": {
          "description": "Required. The App Check enforcement mode for this service.",
          "enumDescriptions": [
            "Firebase App Check is not enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this mode by default.",
            "Firebase App Check is not enforced for the service. App Check metrics are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced.",
            "Firebase App Check is enforced for the service. The service will reject any request that attempts to access your project's resources if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some services will still allow requests bearing the developer's privileged service account credentials without an App Check token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor the composition of your callers. While the service is protected by App Check, other applicable protections, such as user authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since there are no outdated clients in use."
          ],
          "type": "string",
          "enum": [
            "OFF",
            "UNENFORCED",
            "ENFORCED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)"
        }
      },
      "description": "The enforcement configuration for a Firebase service supported by App Check.",
      "id": "GoogleFirebaseAppcheckV1betaService",
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse": {
      "properties": {
        "configs": {
          "description": "AppAttestConfigs retrieved.",
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppcheckV1betaAppAttestConfig"
          }
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse",
      "description": "Response message for the BatchGetAppAttestConfigs method."
    },
    "GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest": {
      "id": "GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest",
      "properties": {
        "recaptchaToken": {
          "type": "string",
          "description": "Required. The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3)."
        }
      },
      "description": "Request message for the ExchangeRecaptchaToken method.",
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest": {
      "id": "GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest",
      "description": "Request message for the ExchangeAppAttestAttestation method.",
      "properties": {
        "challenge": {
          "type": "string",
          "description": "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
          "format": "byte"
        },
        "keyId": {
          "type": "string",
          "description": "Required. The key ID generated by App Attest for the client app.",
          "format": "byte"
        },
        "attestationStatement": {
          "format": "byte",
          "description": "Required. The App Attest statement returned by the client-side App Attest API. This is a base64url encoded CBOR object in the JSON response.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirebaseAppcheckV1betaDeviceCheckConfig": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```"
        },
        "privateKeySet": {
          "readOnly": true,
          "description": "Output only. Whether the `private_key` field was previously set. Since we will never return the `private_key` field, this field is the only way to find out whether it was previously set.",
          "type": "boolean"
        },
        "keyId": {
          "description": "Required. The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account.",
          "type": "string"
        },
        "tokenTtl": {
          "type": "string",
          "description": "Specifies the duration for which App Check tokens exchanged from DeviceCheck tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
          "format": "google-duration"
        },
        "privateKey": {
          "description": "Required. Input only. The contents of the private key (`.p8`) file associated with the key specified by `key_id`. For security reasons, this field will never be populated in any response.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppcheckV1betaDeviceCheckConfig",
      "description": "An app's DeviceCheck configuration object. This configuration is used by ExchangeDeviceCheckToken to validate device tokens issued to apps by DeviceCheck. It also controls certain properties of the returned App Check token, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.iosApps/patch)."
    }
  }
}

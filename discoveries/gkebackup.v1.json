{
  "schemas": {
    "TransformationRuleAction": {
      "type": "object",
      "properties": {
        "op": {
          "enumDescriptions": [
            "Unspecified operation",
            "The \"remove\" operation removes the value at the target location.",
            "The \"move\" operation removes the value at a specified location and adds it to the target location.",
            "The \"copy\" operation copies the value at a specified location to the target location.",
            "The \"add\" operation performs one of the following functions, depending upon what the target location references: 1. If the target location specifies an array index, a new value is inserted into the array at the specified index. 2. If the target location specifies an object member that does not already exist, a new member is added to the object. 3. If the target location specifies an object member that does exist, that member's value is replaced.",
            "The \"test\" operation tests that a value at the target location is equal to a specified value.",
            "The \"replace\" operation replaces the value at the target location with a new value. The operation object MUST contain a \"value\" member whose content specifies the replacement value."
          ],
          "type": "string",
          "description": "Required. op specifies the operation to perform.",
          "enum": [
            "OP_UNSPECIFIED",
            "REMOVE",
            "MOVE",
            "COPY",
            "ADD",
            "TEST",
            "REPLACE"
          ]
        },
        "path": {
          "type": "string",
          "description": "Optional. A string containing a JSON-Pointer value that references a location within the target document where the operation is performed."
        },
        "fromPath": {
          "description": "Optional. A string containing a JSON Pointer value that references the location in the target document to move the value from.",
          "type": "string"
        },
        "value": {
          "description": "Optional. A string that specifies the desired value in string format to use for transformation.",
          "type": "string"
        }
      },
      "id": "TransformationRuleAction",
      "description": "TransformationRuleAction defines a TransformationRule action based on the JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)"
    },
    "ListRestorePlansResponse": {
      "id": "ListRestorePlansResponse",
      "description": "Response message for ListRestorePlans.",
      "properties": {
        "nextPageToken": {
          "description": "A token which may be sent as page_token in a subsequent `ListRestorePlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "restorePlans": {
          "type": "array",
          "items": {
            "$ref": "RestorePlan"
          },
          "description": "The list of RestorePlans matching the given criteria."
        }
      },
      "type": "object"
    },
    "VolumeBackup": {
      "description": "Represents the backup of a specific persistent volume as a component of a Backup - both the record of the operation and a pointer to the underlying storage-specific artifacts. Next id: 14",
      "type": "object",
      "id": "VolumeBackup",
      "properties": {
        "completeTime": {
          "description": "Output only. The timestamp when the associated underlying volume backup operation completed.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "storageBytes": {
          "description": "Output only. The aggregate size of the underlying artifacts associated with this VolumeBackup in the backup storage. This may change over time when multiple backups of the same volume share the same backup storage location. In particular, this is likely to increase in size when the immediately preceding backup of the same volume is deleted.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "description": "Output only. The timestamp when this VolumeBackup resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "SNAPSHOTTING",
            "UPLOADING",
            "SUCCEEDED",
            "FAILED",
            "DELETING"
          ],
          "enumDescriptions": [
            "This is an illegal state and should not be encountered.",
            "A volume for the backup was identified and backup process is about to start.",
            "The volume backup operation has begun and is in the initial \"snapshot\" phase of the process. Any defined ProtectedApplication \"pre\" hooks will be executed before entering this state and \"post\" hooks will be executed upon leaving this state.",
            "The snapshot phase of the volume backup operation has completed and the snapshot is now being uploaded to backup storage.",
            "The volume backup operation has completed successfully.",
            "The volume backup operation has failed.",
            "This VolumeBackup resource (and its associated artifacts) is in the process of being deleted."
          ],
          "readOnly": true,
          "description": "Output only. The current state of this VolumeBackup."
        },
        "format": {
          "description": "Output only. The format used for the volume backup.",
          "readOnly": true,
          "enumDescriptions": [
            "Default value, not specified.",
            "Compute Engine Persistent Disk snapshot based volume backup."
          ],
          "type": "string",
          "enum": [
            "VOLUME_BACKUP_FORMAT_UNSPECIFIED",
            "GCE_PERSISTENT_DISK"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when this VolumeBackup resource was last updated.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full name of the VolumeBackup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.",
          "type": "string"
        },
        "diskSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The minimum size of the disk to which this VolumeBackup can be restored.",
          "readOnly": true
        },
        "etag": {
          "readOnly": true,
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume backup updates in order to avoid race conditions.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A human readable message explaining why the VolumeBackup is in its current state."
        },
        "sourcePvc": {
          "readOnly": true,
          "description": "Output only. A reference to the source Kubernetes PVC from which this VolumeBackup was created.",
          "$ref": "NamespacedName"
        },
        "volumeBackupHandle": {
          "description": "Output only. A storage system-specific opaque handle to the underlying volume backup.",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
          "readOnly": true
        }
      }
    },
    "VolumeRestore": {
      "properties": {
        "name": {
          "description": "Output only. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`",
          "type": "string",
          "readOnly": true
        },
        "volumeBackup": {
          "description": "Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when this VolumeRestore resource was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "etag": {
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The timestamp when this VolumeRestore resource was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "targetPvc": {
          "description": "Output only. The reference to the target Kubernetes PVC to be restored.",
          "$ref": "NamespacedName",
          "readOnly": true
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A human readable message explaining why the VolumeRestore is in its current state."
        },
        "state": {
          "enumDescriptions": [
            "This is an illegal state and should not be encountered.",
            "A volume for the restore was identified and restore process is about to start.",
            "The volume is currently being restored.",
            "The volume has been successfully restored.",
            "The volume restoration process failed.",
            "This VolumeRestore resource is in the process of being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "RESTORING",
            "SUCCEEDED",
            "FAILED",
            "DELETING"
          ],
          "readOnly": true,
          "description": "Output only. The current state of this VolumeRestore.",
          "type": "string"
        },
        "volumeType": {
          "description": "Output only. The type of volume provisioned",
          "type": "string",
          "enum": [
            "VOLUME_TYPE_UNSPECIFIED",
            "GCE_PERSISTENT_DISK"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default",
            "Compute Engine Persistent Disk volume"
          ]
        },
        "volumeHandle": {
          "description": "Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup.",
          "type": "string",
          "readOnly": true
        },
        "completeTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when the associated underlying volume restoration completed.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "VolumeRestore",
      "description": "Represents the operation of restoring a volume from a VolumeBackup. Next id: 13",
      "type": "object"
    },
    "RestoreConfig": {
      "id": "RestoreConfig",
      "type": "object",
      "properties": {
        "transformationRules": {
          "type": "array",
          "items": {
            "$ref": "TransformationRule"
          },
          "description": "Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no transformation will occur."
        },
        "noNamespaces": {
          "description": "Do not restore any namespaced resources if set to \"True\". Specifying this field to \"False\" is not allowed.",
          "type": "boolean"
        },
        "substitutionRules": {
          "description": "Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.",
          "items": {
            "$ref": "SubstitutionRule"
          },
          "type": "array"
        },
        "selectedApplications": {
          "$ref": "NamespacedNames",
          "description": "A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored."
        },
        "allNamespaces": {
          "description": "Restore all namespaced resources in the Backup if set to \"True\". Specifying this field to \"False\" is an error.",
          "type": "boolean"
        },
        "volumeDataRestorePolicy": {
          "description": "Optional. Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified (illegal).",
            "For each PVC to be restored, create a new underlying volume and PV from the corresponding VolumeBackup contained within the Backup.",
            "For each PVC to be restored, attempt to reuse the original PV contained in the Backup (with its original underlying volume). This option is likely only usable when restoring a workload to its original cluster.",
            "For each PVC to be restored, create PVC without any particular action to restore data. In this case, the normal Kubernetes provisioning logic would kick in, and this would likely result in either dynamically provisioning blank PVs or binding to statically provisioned PVs."
          ],
          "enum": [
            "VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED",
            "RESTORE_VOLUME_DATA_FROM_BACKUP",
            "REUSE_VOLUME_HANDLE_FROM_BACKUP",
            "NO_VOLUME_DATA_RESTORATION"
          ]
        },
        "clusterResourceConflictPolicy": {
          "description": "Optional. Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Only allowed if no cluster-scoped resources will be restored.",
            "Do not attempt to restore the conflicting resource.",
            "Delete the existing version before re-creating it from the Backup. This is a dangerous option which could cause unintentional data loss if used inappropriately. For example, deleting a CRD will cause Kubernetes to delete all CRs of that type."
          ],
          "enum": [
            "CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED",
            "USE_EXISTING_VERSION",
            "USE_BACKUP_VERSION"
          ]
        },
        "clusterResourceRestoreScope": {
          "description": "Optional. Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.",
          "$ref": "ClusterResourceRestoreScope"
        },
        "selectedNamespaces": {
          "$ref": "Namespaces",
          "description": "A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored."
        },
        "namespacedResourceRestoreMode": {
          "enumDescriptions": [
            "Unspecified (invalid).",
            "When conflicting top-level resources (either Namespaces or ProtectedApplications, depending upon the scope) are encountered, this will first trigger a delete of the conflicting resource AND ALL OF ITS REFERENCED RESOURCES (e.g., all resources in the Namespace or all resources referenced by the ProtectedApplication) before restoring the resources from the Backup. This mode should only be used when you are intending to revert some portion of a cluster to an earlier state.",
            "If conflicting top-level resources (either Namespaces or ProtectedApplications, depending upon the scope) are encountered at the beginning of a restore process, the Restore will fail. If a conflict occurs during the restore process itself (e.g., because an out of band process creates conflicting resources), a conflict will be reported."
          ],
          "description": "Optional. Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.",
          "type": "string",
          "enum": [
            "NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED",
            "DELETE_AND_RESTORE",
            "FAIL_ON_CONFLICT"
          ]
        },
        "excludedNamespaces": {
          "$ref": "Namespaces",
          "description": "A list of selected namespaces excluded from restoration. All namespaces except those in this list will be restored."
        }
      },
      "description": "Configuration of a restore. Next id: 12"
    },
    "BackupConfig": {
      "id": "BackupConfig",
      "properties": {
        "allNamespaces": {
          "type": "boolean",
          "description": "If True, include all namespaced resources"
        },
        "includeSecrets": {
          "type": "boolean",
          "description": "Optional. This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False"
        },
        "selectedNamespaces": {
          "description": "If set, include just the resources in the listed namespaces.",
          "$ref": "Namespaces"
        },
        "selectedApplications": {
          "description": "If set, include just the resources referenced by the listed ProtectedApplications.",
          "$ref": "NamespacedNames"
        },
        "includeVolumeData": {
          "type": "boolean",
          "description": "Optional. This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False"
        },
        "encryptionKey": {
          "description": "Optional. This defines a customer managed encryption key that will be used to encrypt the \"config\" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.",
          "$ref": "EncryptionKey"
        }
      },
      "type": "object",
      "description": "BackupConfig defines the configuration of Backups created via this BackupPlan."
    },
    "Backup": {
      "properties": {
        "retainDays": {
          "description": "Optional. The age (in days) after which this Backup will be automatically deleted. Must be an integer value \u003e= 0: - If 0, no automatic deletion will occur for this Backup. - If not 0, this must be \u003e= delete_lock_days and \u003c= 365. Once a Backup is created, this value may only be increased. Defaults to the parent BackupPlan's backup_retain_days value.",
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform backup updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackup`, and systems are expected to put that etag in the request to `UpdateBackup` or `DeleteBackup` to ensure that their change will be applied to the same version of the resource."
        },
        "configBackupSizeBytes": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The size of the config backup in bytes."
        },
        "selectedApplications": {
          "readOnly": true,
          "description": "Output only. If set, the list of ProtectedApplications whose resources were included in the Backup.",
          "$ref": "NamespacedNames"
        },
        "uid": {
          "type": "string",
          "description": "Output only. Server generated global unique identifier of [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)",
          "readOnly": true
        },
        "deleteLockExpireTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which an existing delete lock will expire for this backup (calculated from create_time + delete_lock_days).",
          "type": "string",
          "readOnly": true
        },
        "sizeBytes": {
          "readOnly": true,
          "description": "Output only. The total size of the Backup in bytes = config backup size + sum(volume backup sizes)",
          "type": "string",
          "format": "int64"
        },
        "resourceCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The total number of Kubernetes resources included in the Backup."
        },
        "labels": {
          "type": "object",
          "description": "Optional. A set of custom labels supplied by user.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryptionKey": {
          "$ref": "EncryptionKey",
          "readOnly": true,
          "description": "Output only. The customer managed encryption key that was used to encrypt the Backup's artifacts. Inherited from the parent BackupPlan's encryption_key value."
        },
        "clusterMetadata": {
          "readOnly": true,
          "$ref": "ClusterMetadata",
          "description": "Output only. Information about the GKE cluster from which this Backup was created."
        },
        "retainExpireTime": {
          "description": "Output only. The time at which this Backup will be automatically deleted (calculated from create_time + retain_days).",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "volumeCount": {
          "readOnly": true,
          "description": "Output only. The total number of volume backups contained in the Backup.",
          "format": "int32",
          "type": "integer"
        },
        "stateReason": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable description of why the backup is in the current `state`."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when this Backup resource was last updated.",
          "type": "string",
          "readOnly": true
        },
        "deleteLockDays": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Minimum age for this Backup (in days). If this field is set to a non-zero value, the Backup will be \"locked\" against deletion (either manual or automatic deletion) for the number of days provided (measured from the creation time of the Backup). MUST be an integer value between 0-90 (inclusive). Defaults to parent BackupPlan's backup_delete_lock_days setting and may only be increased (either at creation time or in a subsequent update)."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The fully qualified name of the Backup. `projects/*/locations/*/backupPlans/*/backups/*`"
        },
        "podCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The total number of Kubernetes Pods contained in the Backup.",
          "readOnly": true
        },
        "selectedNamespaces": {
          "description": "Output only. If set, the list of namespaces that were included in the Backup.",
          "$ref": "Namespaces",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when this Backup resource was created.",
          "readOnly": true
        },
        "completeTime": {
          "readOnly": true,
          "description": "Output only. Completion time of the Backup",
          "format": "google-datetime",
          "type": "string"
        },
        "containsSecrets": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether or not the Backup contains Kubernetes Secrets. Controlled by the parent BackupPlan's include_secrets value."
        },
        "allNamespaces": {
          "type": "boolean",
          "description": "Output only. If True, all namespaces were included in the Backup.",
          "readOnly": true
        },
        "containsVolumeData": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether or not the Backup contains volume data. Controlled by the parent BackupPlan's include_volume_data value."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "DELETING"
          ],
          "enumDescriptions": [
            "The Backup resource is in the process of being created.",
            "The Backup resource has been created and the associated BackupJob Kubernetes resource has been injected into the source cluster.",
            "The gkebackup agent in the cluster has begun executing the backup operation.",
            "The backup operation has completed successfully.",
            "The backup operation has failed.",
            "This Backup resource (and its associated artifacts) is in the process of being deleted."
          ],
          "description": "Output only. Current state of the Backup",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Optional. User specified descriptive string for this Backup."
        },
        "manual": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. This flag indicates whether this Backup resource was created manually by a user or via a schedule in the BackupPlan. A value of True means that the Backup was created manually."
        }
      },
      "description": "Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups). Next id: 29",
      "type": "object",
      "id": "Backup"
    },
    "ClusterResourceRestoreScope": {
      "description": "Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore \"all valid\" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume",
      "type": "object",
      "properties": {
        "noGroupKinds": {
          "description": "Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.",
          "type": "boolean"
        },
        "allGroupKinds": {
          "description": "Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.",
          "type": "boolean"
        },
        "excludedGroupKinds": {
          "items": {
            "$ref": "GroupKind"
          },
          "type": "array",
          "description": "Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message."
        },
        "selectedGroupKinds": {
          "description": "Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.",
          "items": {
            "$ref": "GroupKind"
          },
          "type": "array"
        }
      },
      "id": "ClusterResourceRestoreScope"
    },
    "ListVolumeRestoresResponse": {
      "properties": {
        "volumeRestores": {
          "type": "array",
          "description": "The list of VolumeRestores matching the given criteria.",
          "items": {
            "$ref": "VolumeRestore"
          }
        },
        "nextPageToken": {
          "description": "A token which may be sent as page_token in a subsequent `ListVolumeRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListVolumeRestoresResponse",
      "description": "Response message for ListVolumeRestores."
    },
    "TransformationRule": {
      "id": "TransformationRule",
      "type": "object",
      "description": "A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. The description is a user specified string description of the transformation rule."
        },
        "resourceFilter": {
          "$ref": "ResourceFilter",
          "description": "Optional. This field is used to specify a set of fields that should be used to determine which resources in backup should be acted upon by the supplied transformation rule actions, and this will ensure that only specific resources are affected by transformation rule actions."
        },
        "fieldActions": {
          "items": {
            "$ref": "TransformationRuleAction"
          },
          "type": "array",
          "description": "Required. A list of transformation rule actions to take against candidate resources. Actions are executed in order defined - this order matters, as they could potentially interfere with each other and the first operation could affect the outcome of the second operation."
        }
      }
    },
    "SubstitutionRule": {
      "properties": {
        "targetNamespaces": {
          "description": "Optional. (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string (\"\") as one of the target namespaces.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "newValue": {
          "type": "string",
          "description": "Optional. This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string (\"\")."
        },
        "targetGroupKinds": {
          "type": "array",
          "description": "Optional. (Filtering parameter) Any resource subject to substitution must belong to one of the listed \"types\". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).",
          "items": {
            "$ref": "GroupKind"
          }
        },
        "originalValuePattern": {
          "description": "Optional. (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., \"\", rather than unspecified) value for this field will only match empty fields.",
          "type": "string"
        },
        "targetJsonPath": {
          "description": "Required. This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.",
      "id": "SubstitutionRule"
    },
    "ListBackupsResponse": {
      "type": "object",
      "properties": {
        "backups": {
          "type": "array",
          "items": {
            "$ref": "Backup"
          },
          "description": "The list of Backups matching the given criteria."
        },
        "nextPageToken": {
          "description": "A token which may be sent as page_token in a subsequent `ListBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.",
          "type": "string"
        }
      },
      "description": "Response message for ListBackups.",
      "id": "ListBackupsResponse"
    },
    "Namespaces": {
      "type": "object",
      "id": "Namespaces",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of Kubernetes Namespaces"
        }
      },
      "description": "A list of Kubernetes Namespaces"
    },
    "RestorePlan": {
      "description": "The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan. Next id: 13",
      "type": "object",
      "id": "RestorePlan",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Optional. A set of custom labels supplied by user.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cluster": {
          "description": "Required. Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when this RestorePlan resource was last updated.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.",
          "readOnly": true
        },
        "backupPlan": {
          "description": "Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.",
          "type": "string"
        },
        "restoreConfig": {
          "$ref": "RestoreConfig",
          "description": "Required. Configuration of Restores created via this RestorePlan."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default first value for Enums.",
            "Waiting for cluster state to be RUNNING.",
            "The RestorePlan has successfully been created and is ready for Restores.",
            "RestorePlan creation has failed.",
            "The RestorePlan is in the process of being deleted."
          ],
          "description": "Output only. State of the RestorePlan. This State field reflects the various stages a RestorePlan can be in during the Create operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CLUSTER_PENDING",
            "READY",
            "FAILED",
            "DELETING"
          ],
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format."
        },
        "stateReason": {
          "readOnly": true,
          "description": "Output only. Human-readable description of why RestorePlan is in the current `state`",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when this RestorePlan resource was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource."
        },
        "description": {
          "description": "Optional. User specified descriptive string for this RestorePlan.",
          "type": "string"
        }
      }
    },
    "ListVolumeBackupsResponse": {
      "description": "Response message for ListVolumeBackups.",
      "id": "ListVolumeBackupsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which may be sent as page_token in a subsequent `ListVolumeBackups` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return."
        },
        "volumeBackups": {
          "type": "array",
          "description": "The list of VolumeBackups matching the given criteria.",
          "items": {
            "$ref": "VolumeBackup"
          }
        }
      },
      "type": "object"
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "ListBackupPlansResponse": {
      "description": "Response message for ListBackupPlans.",
      "id": "ListBackupPlansResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token which may be sent as page_token in a subsequent `ListBackupPlans` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.",
          "type": "string"
        },
        "backupPlans": {
          "description": "The list of BackupPlans matching the given criteria.",
          "items": {
            "$ref": "BackupPlan"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ResourceFilter": {
      "id": "ResourceFilter",
      "description": "ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.",
      "properties": {
        "jsonPath": {
          "description": "Optional. This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression that matches specific fields of candidate resources and it operates as a filtering parameter (resources that are not matched with this expression will not be candidates for transformation).",
          "type": "string"
        },
        "groupKinds": {
          "description": "Optional. (Filtering parameter) Any resource subject to transformation must belong to one of the listed \"types\". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for transformation).",
          "type": "array",
          "items": {
            "$ref": "GroupKind"
          }
        },
        "namespaces": {
          "description": "Optional. (Filtering parameter) Any resource subject to transformation must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for transformation).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "AuditConfig": {
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        }
      },
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      },
      "id": "Expr",
      "type": "object"
    },
    "Schedule": {
      "properties": {
        "cronSchedule": {
          "description": "Optional. A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. This is mutually exclusive with the rpo_config field since at most one schedule can be defined for a BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.",
          "type": "string"
        },
        "paused": {
          "description": "Optional. This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Defines scheduling parameters for automatically creating Backups via this BackupPlan.",
      "id": "Schedule"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      },
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "EncryptionKey": {
      "properties": {
        "gcpKmsEncryptionKey": {
          "description": "Optional. Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Defined a customer managed encryption key that will be used to encrypt Backup artifacts.",
      "id": "EncryptionKey"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Policy": {
      "type": "object",
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      }
    },
    "Binding": {
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "type": "object",
      "id": "GoogleLongrunningCancelOperationRequest",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "Location": {
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents a Google Cloud location."
    },
    "ListRestoresResponse": {
      "type": "object",
      "description": "Response message for ListRestores.",
      "id": "ListRestoresResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token which may be sent as page_token in a subsequent `ListRestores` call to retrieve the next page of results. If this field is omitted or empty, then there are no more results to return.",
          "type": "string"
        },
        "restores": {
          "type": "array",
          "description": "The list of Restores matching the given criteria.",
          "items": {
            "$ref": "Restore"
          }
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "BackupPlan": {
      "type": "object",
      "id": "BackupPlan",
      "properties": {
        "backupConfig": {
          "description": "Optional. Defines the configuration of Backups created via this BackupPlan.",
          "$ref": "BackupConfig"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default first value for Enums.",
            "Waiting for cluster state to be RUNNING.",
            "The BackupPlan is in the process of being created.",
            "The BackupPlan has successfully been created and is ready for Backups.",
            "BackupPlan creation has failed.",
            "The BackupPlan has been deactivated.",
            "The BackupPlan is in the process of being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CLUSTER_PENDING",
            "PROVISIONING",
            "READY",
            "FAILED",
            "DEACTIVATED",
            "DELETING"
          ],
          "description": "Output only. State of the BackupPlan. This State field reflects the various stages a BackupPlan can be in during the Create operation. It will be set to \"DEACTIVATED\" if the BackupPlan is deactivated on an Update",
          "readOnly": true
        },
        "protectedPodCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The timestamp when this BackupPlan resource was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full name of the BackupPlan resource. Format: `projects/*/locations/*/backupPlans/*`"
        },
        "deactivated": {
          "description": "Optional. This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False",
          "type": "boolean"
        },
        "cluster": {
          "description": "Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`",
          "type": "string"
        },
        "retentionPolicy": {
          "$ref": "RetentionPolicy",
          "description": "Optional. RetentionPolicy governs lifecycle of Backups created under this plan."
        },
        "backupSchedule": {
          "description": "Optional. Defines a schedule for automatic Backup creation via this BackupPlan.",
          "$ref": "Schedule"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A set of custom labels supplied by user.",
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when this BackupPlan resource was last updated."
        },
        "stateReason": {
          "type": "string",
          "description": "Output only. Human-readable description of why BackupPlan is in the current `state`",
          "readOnly": true
        },
        "etag": {
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Optional. User specified descriptive string for this BackupPlan.",
          "type": "string"
        }
      },
      "description": "Defines the configuration and scheduling for a \"line\" of Backups."
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "NamespacedName": {
      "id": "NamespacedName",
      "description": "A reference to a namespaced resource in Kubernetes.",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Optional. The Namespace of the Kubernetes resource."
        },
        "name": {
          "description": "Optional. The name of the Kubernetes resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterMetadata": {
      "id": "ClusterMetadata",
      "type": "object",
      "properties": {
        "anthosVersion": {
          "readOnly": true,
          "description": "Output only. Anthos version",
          "type": "string"
        },
        "k8sVersion": {
          "readOnly": true,
          "description": "Output only. The Kubernetes server version of the source cluster.",
          "type": "string"
        },
        "cluster": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan's cluster field."
        },
        "gkeVersion": {
          "description": "Output only. GKE version",
          "type": "string",
          "readOnly": true
        },
        "backupCrdVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. A list of the Backup for GKE CRD versions found in the cluster.",
          "readOnly": true
        }
      },
      "description": "Information about the GKE cluster from which this Backup was created."
    },
    "NamespacedNames": {
      "description": "A list of namespaced Kubernetes resources.",
      "properties": {
        "namespacedNames": {
          "items": {
            "$ref": "NamespacedName"
          },
          "description": "Optional. A list of namespaced Kubernetes resources.",
          "type": "array"
        }
      },
      "id": "NamespacedNames",
      "type": "object"
    },
    "Restore": {
      "description": "Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 18",
      "type": "object",
      "id": "Restore",
      "properties": {
        "stateReason": {
          "readOnly": true,
          "description": "Output only. Human-readable description of why the Restore is in its current state.",
          "type": "string"
        },
        "description": {
          "description": "User specified descriptive string for this Restore.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when this Restore resource was created."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`",
          "readOnly": true
        },
        "cluster": {
          "description": "Output only. The target cluster into which this Restore will restore data. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` Inherited from parent RestorePlan's cluster value.",
          "readOnly": true,
          "type": "string"
        },
        "volumesRestoredCount": {
          "description": "Output only. Number of volumes restored during the restore execution.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "backup": {
          "type": "string",
          "description": "Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format: `projects/*/locations/*/backupPlans/*/backups/*`."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when this Restore resource was last updated.",
          "format": "google-datetime"
        },
        "restoreConfig": {
          "$ref": "RestoreConfig",
          "description": "Output only. Configuration of the Restore. Inherited from parent RestorePlan's restore_config.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "The Restore resource is in the process of being created.",
            "The Restore resource has been created and the associated RestoreJob Kubernetes resource has been injected into target cluster.",
            "The gkebackup agent in the cluster has begun executing the restore operation.",
            "The restore operation has completed successfully. Restored workloads may not yet be operational.",
            "The restore operation has failed.",
            "This Restore resource is in the process of being deleted."
          ],
          "description": "Output only. The current state of the Restore.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "DELETING"
          ],
          "readOnly": true
        },
        "resourcesFailedCount": {
          "description": "Output only. Number of resources that failed to be restored during the restore execution.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "resourcesExcludedCount": {
          "type": "integer",
          "description": "Output only. Number of resources excluded during the restore execution.",
          "format": "int32",
          "readOnly": true
        },
        "resourcesRestoredCount": {
          "description": "Output only. Number of resources restored during the restore execution.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "completeTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp of when the restore operation completed.",
          "format": "google-datetime"
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to ensure that their change will be applied to the same version of the resource."
        },
        "labels": {
          "description": "A set of custom labels supplied by user.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      }
    },
    "RetentionPolicy": {
      "description": "RetentionPolicy defines a Backup retention policy for a BackupPlan.",
      "type": "object",
      "id": "RetentionPolicy",
      "properties": {
        "backupDeleteLockDays": {
          "description": "Optional. Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)",
          "format": "int32",
          "type": "integer"
        },
        "locked": {
          "description": "Optional. This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False",
          "type": "boolean"
        },
        "backupRetainDays": {
          "description": "Optional. The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value \u003e= 0 and \u003c= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be \u003e= backup_delete_lock_days. If cron_schedule is defined, then this must be \u003c= 360 * the creation interval. If rpo_config is defined, then this must be \u003c= 360 * target_rpo_minutes / (1440minutes/day). Default: 0 (no automatic deletion)",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupKind": {
      "id": "GroupKind",
      "properties": {
        "resourceGroup": {
          "description": "Optional. API group string of a Kubernetes resource, e.g. \"apiextensions.k8s.io\", \"storage.k8s.io\", etc. Note: use empty string for core API group",
          "type": "string"
        },
        "resourceKind": {
          "description": "Optional. Kind of a Kubernetes resource, e.g. \"CustomResourceDefinition\", \"StorageClass\", etc.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific \"types\" of resources to restore."
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest"
    }
  },
  "version_module": true,
  "ownerDomain": "google.com",
  "canonicalName": "Backup for GKE",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "name": "gkebackup",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "discoveryVersion": "v1",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "batchPath": "batch",
  "baseUrl": "https://gkebackup.googleapis.com/",
  "ownerName": "Google",
  "id": "gkebackup:v1",
  "basePath": "",
  "version": "v1",
  "mtlsRootUrl": "https://gkebackup.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "title": "Backup for GKE API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "id": "gkebackup.projects.locations.get",
              "path": "v1/{+name}"
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "id": "gkebackup.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              }
            }
          },
          "resources": {
            "restorePlans": {
              "resources": {
                "restores": {
                  "methods": {
                    "getIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "id": "gkebackup.projects.locations.restorePlans.restores.getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:getIamPolicy"
                    },
                    "get": {
                      "response": {
                        "$ref": "Restore"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "gkebackup.projects.locations.restorePlans.restores.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the details of a single Restore."
                    },
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "id": "gkebackup.projects.locations.restorePlans.restores.setIamPolicy",
                      "httpMethod": "POST"
                    },
                    "testIamPermissions": {
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "id": "gkebackup.projects.locations.restorePlans.restores.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      }
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes an existing Restore.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "gkebackup.projects.locations.restorePlans.restores.delete",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Full name of the Restore Format: `projects/*/locations/*/restorePlans/*/restores/*`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$"
                        },
                        "force": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. If set to true, any VolumeRestores below this restore will also be deleted. Otherwise, the request will only succeed if the restore has no VolumeRestores."
                        },
                        "etag": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. If provided, this value must match the current value of the target Restore's etag field or the request is rejected."
                        }
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "description": "Lists the Restores for a given RestorePlan.",
                      "id": "gkebackup.projects.locations.restorePlans.restores.list",
                      "response": {
                        "$ref": "ListRestoresResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                          "description": "Required. The RestorePlan that contains the Restores to list. Format: `projects/*/locations/*/restorePlans/*`"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The value of next_page_token received from a previous `ListRestores` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListRestores` must match the call that provided the page token."
                        },
                        "orderBy": {
                          "description": "Optional. Field by which to sort the results.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Optional. Field match expression used to filter the results.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/restores"
                    },
                    "create": {
                      "description": "Creates a new Restore for the given RestorePlan.",
                      "id": "gkebackup.projects.locations.restorePlans.restores.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/restores",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                          "required": true,
                          "description": "Required. The RestorePlan within which to create the Restore. Format: `projects/*/locations/*/restorePlans/*`",
                          "location": "path",
                          "type": "string"
                        },
                        "restoreId": {
                          "location": "query",
                          "description": "Required. The client-provided short name for the Restore resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Restores in this RestorePlan.",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Restore"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores",
                      "httpMethod": "POST"
                    },
                    "patch": {
                      "request": {
                        "$ref": "Restore"
                      },
                      "httpMethod": "PATCH",
                      "path": "v1/{+name}",
                      "id": "gkebackup.projects.locations.restorePlans.restores.patch",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Optional. This is used to specify the fields to be overwritten in the Restore targeted for update. The values for each of these updated fields will be taken from the `restore` provided with this request. Field names are relative to the root of the resource. If no `update_mask` is provided, all fields in `restore` will be written to the target Restore resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `restore` are ignored and are not used to update the target Restore.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}",
                      "description": "Update a Restore.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  },
                  "resources": {
                    "volumeRestores": {
                      "methods": {
                        "get": {
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "Required. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+/volumeRestores/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "VolumeRestore"
                          },
                          "httpMethod": "GET",
                          "id": "gkebackup.projects.locations.restorePlans.restores.volumeRestores.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retrieve the details of a single VolumeRestore."
                        },
                        "setIamPolicy": {
                          "id": "gkebackup.projects.locations.restorePlans.restores.volumeRestores.setIamPolicy",
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:setIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+/volumeRestores/[^/]+$"
                            }
                          },
                          "path": "v1/{+resource}:setIamPolicy",
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "testIamPermissions": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:testIamPermissions",
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "resource"
                          ],
                          "id": "gkebackup.projects.locations.restorePlans.restores.volumeRestores.testIamPermissions",
                          "path": "v1/{+resource}:testIamPermissions",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "parameters": {
                            "resource": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+/volumeRestores/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "httpMethod": "POST"
                        },
                        "getIamPolicy": {
                          "id": "gkebackup.projects.locations.restorePlans.restores.volumeRestores.getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "response": {
                            "$ref": "Policy"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores/{volumeRestoresId}:getIamPolicy",
                          "path": "v1/{+resource}:getIamPolicy",
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+/volumeRestores/[^/]+$"
                            },
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer"
                            }
                          },
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "resource"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+/restores/[^/]+$",
                              "description": "Required. The Restore that contains the VolumeRestores to list. Format: `projects/*/locations/*/restorePlans/*/restores/*`"
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried."
                            },
                            "orderBy": {
                              "description": "Optional. Field by which to sort the results.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Field match expression used to filter the results."
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "Optional. The value of next_page_token received from a previous `ListVolumeRestores` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListVolumeRestores` must match the call that provided the page token.",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListVolumeRestoresResponse"
                          },
                          "id": "gkebackup.projects.locations.restorePlans.restores.volumeRestores.list",
                          "path": "v1/{+parent}/volumeRestores",
                          "description": "Lists the VolumeRestores for a given Restore.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}/restores/{restoresId}/volumeRestores",
                          "httpMethod": "GET"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "gkebackup.projects.locations.restorePlans.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "gkebackup.projects.locations.restorePlans.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans",
                  "request": {
                    "$ref": "RestorePlan"
                  },
                  "parameters": {
                    "restorePlanId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location within which to create the RestorePlan. Format: `projects/*/locations/*`"
                    }
                  },
                  "path": "v1/{+parent}/restorePlans",
                  "description": "Creates a new RestorePlan in a given location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "id": "gkebackup.projects.locations.restorePlans.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}:getIamPolicy",
                  "id": "gkebackup.projects.locations.restorePlans.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListRestorePlansResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists RestorePlans in a given location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "description": "Optional. Field by which to sort the results.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location that contains the RestorePlans to list. Format: `projects/*/locations/*`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "Optional. Field match expression used to filter the results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The value of next_page_token received from a previous `ListRestorePlans` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListRestorePlans` must match the call that provided the page token."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/restorePlans",
                  "id": "gkebackup.projects.locations.restorePlans.list"
                },
                "patch": {
                  "request": {
                    "$ref": "RestorePlan"
                  },
                  "id": "gkebackup.projects.locations.restorePlans.patch",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Optional. This is used to specify the fields to be overwritten in the RestorePlan targeted for update. The values for each of these updated fields will be taken from the `restore_plan` provided with this request. Field names are relative to the root of the resource. If no `update_mask` is provided, all fields in `restore_plan` will be written to the target RestorePlan resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `restore_plan` are ignored and are not used to update the target RestorePlan.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "description": "Output only. The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Update a RestorePlan."
                },
                "delete": {
                  "id": "gkebackup.projects.locations.restorePlans.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes an existing RestorePlan.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "location": "path",
                      "description": "Required. Fully qualified RestorePlan name. Format: `projects/*/locations/*/restorePlans/*`",
                      "required": true,
                      "type": "string"
                    },
                    "etag": {
                      "description": "Optional. If provided, this value must match the current value of the target RestorePlan's etag field or the request is rejected.",
                      "type": "string",
                      "location": "query"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. If set to true, any Restores below this RestorePlan will also be deleted. Otherwise, the request will only succeed if the RestorePlan has no Restores."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}",
                  "httpMethod": "DELETE"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/restorePlans/{restorePlansId}",
                  "httpMethod": "GET",
                  "description": "Retrieve the details of a single RestorePlan.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/restorePlans/[^/]+$",
                      "description": "Required. Fully qualified RestorePlan name. Format: `projects/*/locations/*/restorePlans/*`"
                    }
                  },
                  "response": {
                    "$ref": "RestorePlan"
                  },
                  "id": "gkebackup.projects.locations.restorePlans.get"
                }
              }
            },
            "backupPlans": {
              "resources": {
                "backups": {
                  "resources": {
                    "volumeBackups": {
                      "methods": {
                        "get": {
                          "description": "Retrieve the details of a single VolumeBackup.",
                          "response": {
                            "$ref": "VolumeBackup"
                          },
                          "id": "gkebackup.projects.locations.backupPlans.backups.volumeBackups.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "Required. Full name of the VolumeBackup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+/volumeBackups/[^/]+$"
                            }
                          }
                        },
                        "getIamPolicy": {
                          "parameterOrder": [
                            "resource"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+/volumeBackups/[^/]+$",
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true
                            },
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "id": "gkebackup.projects.locations.backupPlans.backups.volumeBackups.getIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+resource}:getIamPolicy",
                          "response": {
                            "$ref": "Policy"
                          }
                        },
                        "testIamPermissions": {
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+/volumeBackups/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:testIamPermissions",
                          "parameterOrder": [
                            "resource"
                          ],
                          "httpMethod": "POST",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "path": "v1/{+resource}:testIamPermissions",
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "id": "gkebackup.projects.locations.backupPlans.backups.volumeBackups.testIamPermissions"
                        },
                        "setIamPolicy": {
                          "id": "gkebackup.projects.locations.backupPlans.backups.volumeBackups.setIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "Policy"
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+/volumeBackups/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups/{volumeBackupsId}:setIamPolicy",
                          "path": "v1/{+resource}:setIamPolicy",
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          }
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListVolumeBackupsResponse"
                          },
                          "description": "Lists the VolumeBackups for a given Backup.",
                          "id": "gkebackup.projects.locations.backupPlans.backups.volumeBackups.list",
                          "parameters": {
                            "pageToken": {
                              "description": "Optional. The value of next_page_token received from a previous `ListVolumeBackups` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListVolumeBackups` must match the call that provided the page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "location": "path",
                              "description": "Required. The Backup that contains the VolumeBackups to list. Format: `projects/*/locations/*/backupPlans/*/backups/*`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$",
                              "required": true,
                              "type": "string"
                            },
                            "filter": {
                              "type": "string",
                              "description": "Optional. Field match expression used to filter the results.",
                              "location": "query"
                            },
                            "orderBy": {
                              "description": "Optional. Field by which to sort the results.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}/volumeBackups",
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/volumeBackups"
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "description": "Lists the Backups for a given BackupPlan.",
                      "path": "v1/{+parent}/backups",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried."
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Field match expression used to filter the results."
                        },
                        "parent": {
                          "description": "Required. The BackupPlan that contains the Backups to list. Format: `projects/*/locations/*/backupPlans/*`",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$"
                        },
                        "orderBy": {
                          "description": "Optional. Field by which to sort the results.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The value of next_page_token received from a previous `ListBackups` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListBackups` must match the call that provided the page token."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListBackupsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkebackup.projects.locations.backupPlans.backups.list"
                    },
                    "getIamPolicy": {
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkebackup.projects.locations.backupPlans.backups.getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$"
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      }
                    },
                    "delete": {
                      "id": "gkebackup.projects.locations.backupPlans.backups.delete",
                      "path": "v1/{+name}",
                      "description": "Deletes an existing Backup.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the Backup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*`"
                        },
                        "etag": {
                          "description": "Optional. If provided, this value must match the current value of the target Backup's etag field or the request is rejected.",
                          "type": "string",
                          "location": "query"
                        },
                        "force": {
                          "location": "query",
                          "description": "Optional. If set to true, any VolumeBackups below this Backup will also be deleted. Otherwise, the request will only succeed if the Backup has no VolumeBackups.",
                          "type": "boolean"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "setIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "id": "gkebackup.projects.locations.backupPlans.backups.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "get": {
                      "response": {
                        "$ref": "Backup"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "id": "gkebackup.projects.locations.backupPlans.backups.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieve the details of a single Backup.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Full name of the Backup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkebackup.projects.locations.backupPlans.backups.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    },
                    "create": {
                      "description": "Creates a Backup for the given BackupPlan.",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups",
                      "id": "gkebackup.projects.locations.backupPlans.backups.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Backup"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+parent}/backups",
                      "parameters": {
                        "backupId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The client-provided short name for the Backup resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Backups in this BackupPlan"
                        },
                        "parent": {
                          "description": "Required. The BackupPlan within which to create the Backup. Format: `projects/*/locations/*/backupPlans/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Output only. The fully qualified name of the Backup. `projects/*/locations/*/backupPlans/*/backups/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+/backups/[^/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Optional. This is used to specify the fields to be overwritten in the Backup targeted for update. The values for each of these updated fields will be taken from the `backup_plan` provided with this request. Field names are relative to the root of the resource. If no `update_mask` is provided, all fields in `backup` will be written to the target Backup resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `backup` are ignored and are not used to update the target Backup.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}/backups/{backupsId}",
                      "description": "Update a Backup.",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "Backup"
                      },
                      "path": "v1/{+name}",
                      "id": "gkebackup.projects.locations.backupPlans.backups.patch"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}",
                  "description": "Deletes an existing BackupPlan.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "gkebackup.projects.locations.backupPlans.delete",
                  "parameters": {
                    "etag": {
                      "description": "Optional. If provided, this value must match the current value of the target BackupPlan's etag field or the request is rejected.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "Required. Fully qualified BackupPlan name. Format: `projects/*/locations/*/backupPlans/*`",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$"
                    }
                  }
                },
                "getIamPolicy": {
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkebackup.projects.locations.backupPlans.getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:getIamPolicy"
                },
                "create": {
                  "id": "gkebackup.projects.locations.backupPlans.create",
                  "path": "v1/{+parent}/backupPlans",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The location within which to create the BackupPlan. Format: `projects/*/locations/*`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "backupPlanId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The client-provided short name for the BackupPlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of BackupPlans in this location"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "BackupPlan"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates a new BackupPlan in a given location."
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The location that contains the BackupPlans to list. Format: `projects/*/locations/*`"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The target number of results to return in a single response. If not specified, a default value will be chosen by the service. Note that the response may include a partial list and a caller should only rely on the response's next_page_token to determine if there are more instances left to be queried.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. Field by which to sort the results.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The value of next_page_token received from a previous `ListBackupPlans` call. Provide this to retrieve the subsequent page in a multi-page list of results. When paginating, all other parameters provided to `ListBackupPlans` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Optional. Field match expression used to filter the results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListBackupPlansResponse"
                  },
                  "path": "v1/{+parent}/backupPlans",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists BackupPlans in a given location.",
                  "id": "gkebackup.projects.locations.backupPlans.list"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkebackup.projects.locations.backupPlans.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkebackup.projects.locations.backupPlans.patch",
                  "request": {
                    "$ref": "BackupPlan"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Optional. This is used to specify the fields to be overwritten in the BackupPlan targeted for update. The values for each of these updated fields will be taken from the `backup_plan` provided with this request. Field names are relative to the root of the resource (e.g., `description`, `backup_config.include_volume_data`, etc.) If no `update_mask` is provided, all fields in `backup_plan` will be written to the target BackupPlan resource. Note that OUTPUT_ONLY and IMMUTABLE fields in `backup_plan` are ignored and are not used to update the target BackupPlan."
                    },
                    "name": {
                      "description": "Output only. The full name of the BackupPlan resource. Format: `projects/*/locations/*/backupPlans/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Update a BackupPlan.",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "gkebackup.projects.locations.backupPlans.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "BackupPlan"
                  },
                  "id": "gkebackup.projects.locations.backupPlans.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/backupPlans/[^/]+$",
                      "description": "Required. Fully qualified BackupPlan name. Format: `projects/*/locations/*/backupPlans/*`",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieve the details of a single BackupPlan.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/backupPlans/{backupPlansId}",
                  "path": "v1/{+name}"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "gkebackup.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkebackup.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "id": "gkebackup.projects.locations.operations.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "gkebackup.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "Backup for GKE is a managed Kubernetes workload backup and restore service for GKE clusters.",
  "revision": "20230925",
  "rootUrl": "https://gkebackup.googleapis.com/"
}

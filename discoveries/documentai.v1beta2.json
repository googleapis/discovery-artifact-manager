{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://documentai.googleapis.com/",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "protocol": "rest",
  "batchPath": "batch",
  "rootUrl": "https://documentai.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "documents": {
          "methods": {
            "process": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Processes a single document.",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1beta2Document"
              },
              "path": "v1beta2/{+parent}/documents:process",
              "flatPath": "v1beta2/projects/{projectsId}/documents:process",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
              },
              "id": "documentai.projects.documents.process"
            },
            "batchProcess": {
              "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
              },
              "path": "v1beta2/{+parent}/documents:batchProcess",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "documentai.projects.documents.batchProcess",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/documents:batchProcess"
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource.",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "GET",
              "id": "documentai.projects.operations.get",
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/operations/{operationsId}"
            }
          }
        },
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "path": "v1beta2/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "documentai.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  }
                }
              }
            },
            "documents": {
              "methods": {
                "process": {
                  "id": "documentai.projects.locations.documents.process",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta2Document"
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
                      "required": true
                    }
                  },
                  "path": "v1beta2/{+parent}/documents:process",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Processes a single document.",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:process",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "batchProcess": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "documentai.projects.locations.documents.batchProcess",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:batchProcess",
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "path": "v1beta2/{+parent}/documents:batchProcess"
                }
              }
            }
          }
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "type": "object",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "type": "object",
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "type": "object",
      "properties": {
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "deprecated": true
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview"
        },
        "parentIds": {
          "type": "array",
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "properties": {
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "type": "object",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the DisableProcessor method."
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "description": "The status of human review on a processed document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of human review on the processing request.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ]
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2TableExtractionParams": {
      "id": "GoogleCloudDocumentaiV1beta2TableExtractionParams",
      "properties": {
        "modelVersion": {
          "description": "Model version of the table extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model.",
          "type": "string"
        },
        "tableBoundHints": {
          "description": "Optional. Table bounding box hints that can be provided to complex cases which our algorithm cannot locate the table(s) in.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2TableBoundHint"
          },
          "type": "array"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable table extraction."
        },
        "headerHints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Reserved for future use."
        }
      },
      "type": "object",
      "description": "Parameters to control table extraction behavior."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse",
      "description": "Response of the batch update documents operation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "properties": {
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "description": "Dimension for the page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2TableBoundHint": {
      "id": "GoogleCloudDocumentaiV1beta2TableBoundHint",
      "type": "object",
      "description": "A hint for a table bounding box on the page for table parsing.",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Page number for multi-paged inputs this hint applies to. If not provided, this hint will apply to all pages by default. This value is 1-based."
        },
        "boundingBox": {
          "description": "Bounding box hint for a table on this page. The coordinates must be normalized to [0,1] and the bounding box must be an axis-aligned rectangle.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "properties": {
        "detectedDefects": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          },
          "description": "A list of detected defects.",
          "type": "array"
        },
        "qualityScore": {
          "type": "number",
          "format": "float",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
      "type": "object",
      "description": "Image quality scores for the page image."
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "description": "The revision reference specifies which revision on the document to read.",
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "type": "object",
      "properties": {
        "latestProcessorVersion": {
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
          "type": "string"
        },
        "revisionId": {
          "type": "string",
          "description": "Reads the revision given by the id."
        },
        "revisionCase": {
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "description": "Reads the revision by the predefined case.",
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "description": "Response of the delete documents operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId": {
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option.",
      "type": "object",
      "properties": {
        "docId": {
          "description": "Required. The id of the document.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId"
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId": {
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "Required. The Cloud Storage URI where the actual document is stored.",
          "type": "string"
        },
        "cwDocId": {
          "deprecated": true,
          "description": "Id of the document (indexed) managed by Content Warehouse.",
          "type": "string"
        }
      },
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "type": "object",
      "properties": {
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "trainingDatasetValidation": {
          "description": "The training dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata"
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The path to source docproto of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "description": "The status of the exporting of the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "The status of each individual document in the export process.",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "properties": {
        "languageCode": {
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "properties": {
        "status": {
          "description": "The validation status of import config.",
          "$ref": "GoogleRpcStatus"
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo": {
      "properties": {
        "pixelFontSize": {
          "type": "number",
          "format": "double",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`."
        },
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "letterSpacing": {
          "format": "double",
          "type": "number",
          "description": "Letter spacing in points."
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough."
        },
        "smallcaps": {
          "description": "Whether the text is in small caps.",
          "type": "boolean"
        },
        "fontWeight": {
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32",
          "type": "integer"
        },
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "subscript": {
          "description": "Whether the text is a subscript.",
          "type": "boolean"
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "fontSize": {
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Font and other text style attributes.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "description": "The response proto of ExportDocuments method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "orientation": {
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout.",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Visual element describing a layout unit on a page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "description": "Font size with unit.",
      "properties": {
        "size": {
          "type": "number",
          "format": "float",
          "description": "Font size for the text."
        },
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        },
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string",
          "deprecated": true
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started."
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        },
        "startIndex": {
          "format": "int64",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "type": "object",
      "properties": {
        "datasetErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of dataset errors."
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "type": "array"
        },
        "datasetErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training."
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "type": "object",
      "properties": {
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "textOffset": {
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64"
        },
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text.",
      "properties": {
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        },
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse": {
      "properties": {},
      "description": "Response of the import document operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest": {
      "type": "object",
      "description": "Request to process one document.",
      "properties": {
        "documentType": {
          "description": "Specifies a known document type for deeper structure detection. Valid values are currently \"general\" and \"invoice\". If not provided, \"general\"\\ is used as default. If any other value is given, the request is rejected.",
          "type": "string"
        },
        "formExtractionParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2FormExtractionParams",
          "description": "Controls form extraction behavior. If not specified, the system will decide reasonable defaults."
        },
        "ocrParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2OcrParams",
          "description": "Controls OCR behavior. If not specified, the system will decide reasonable defaults."
        },
        "entityExtractionParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2EntityExtractionParams",
          "description": "Controls entity extraction behavior. If not specified, the system will decide reasonable defaults."
        },
        "outputConfig": {
          "description": "The desired output location. This field is only needed in BatchProcessDocumentsRequest.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "parent": {
          "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
          "type": "string"
        },
        "inputConfig": {
          "description": "Required. Information about the input file.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        },
        "tableExtractionParams": {
          "description": "Controls table extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2TableExtractionParams"
        },
        "automlParams": {
          "description": "Controls AutoML model prediction behavior. AutoMlParams cannot be used together with other Params.",
          "$ref": "GoogleCloudDocumentaiV1beta2AutoMlParams"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        },
        "y": {
          "format": "float",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "mentionText": {
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        }
      },
      "description": "The desired input location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta1InputConfig"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "nameDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence."
        }
      },
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse",
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc."
    },
    "GoogleCloudDocumentaiV1beta2OcrParams": {
      "properties": {
        "languageHints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of languages to use for OCR. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Document processing returns an error if one or more of the specified languages is not one of the supported languages."
        }
      },
      "description": "Parameters to control Optical Character Recognition (OCR) behavior.",
      "id": "GoogleCloudDocumentaiV1beta2OcrParams",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "properties": {
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "description": "A list of visually detected form fields on the page."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          }
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "type": "array"
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          }
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          }
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
          "description": "Image quality scores."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          }
        },
        "pageNumber": {
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "format": "int32"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "description": "A page in a Document."
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float",
          "type": "number"
        },
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the UndeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "properties": {
        "outputGcsDestination": {
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "inputGcsSource": {
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started.",
          "type": "string"
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
        },
        "status": {
          "description": "The status processing the document.",
          "$ref": "GoogleRpcStatus"
        },
        "humanReviewOperation": {
          "type": "string",
          "deprecated": true,
          "description": "The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method."
        }
      },
      "type": "object",
      "description": "The status of a each individual document in the batch process."
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "properties": {
        "gcsUri": {
          "description": "Required. The Cloud Storage URI where the actual document is stored.",
          "type": "string"
        },
        "cwDocId": {
          "deprecated": true,
          "type": "string",
          "description": "Id of the document (indexed) managed by Content Warehouse."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. ",
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "type": "string",
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle"
    },
    "GoogleCloudDocumentaiV1beta2FormExtractionParams": {
      "description": "Parameters to control form extraction behavior.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2FormExtractionParams",
      "properties": {
        "keyValuePairHints": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2KeyValuePairHint"
          },
          "description": "Reserved for future use.",
          "type": "array"
        },
        "enabled": {
          "description": "Whether to enable form extraction.",
          "type": "boolean"
        },
        "modelVersion": {
          "type": "string",
          "description": "Model version of the form extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model. For custom form models, specify: \"custom/{model_name}\". Model name format is \"bucket_name/path/to/modeldir\" corresponding to \"gs://bucket_name/path/to/modeldir\" where annotated examples are stored."
        }
      }
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2KeyValuePairHint": {
      "properties": {
        "valueTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Type of the value. This is case-insensitive, and could be one of: ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER, ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will be ignored."
        },
        "key": {
          "description": "The key text for the hint.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2KeyValuePairHint",
      "type": "object",
      "description": "Reserved for future use."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol",
      "description": "A detected symbol.",
      "properties": {
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        }
      },
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "individualAutoLabelStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          },
          "description": "The list of individual auto-labeling statuses of the dataset documents."
        },
        "totalDocumentCount": {
          "description": "Total number of the auto-labeling documents.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "description": "Metadata of the auto-labeling documents operation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "properties": {
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of dataset errors."
        },
        "documentErrorCount": {
          "format": "int32",
          "description": "The total number of document errors.",
          "type": "integer"
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this table."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "headerRows": {
          "type": "array",
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table."
        }
      },
      "type": "object",
      "description": "A table representation similar to HTML table structure."
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "description": "Response message for the DeployProcessorVersion method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        },
        "automlModel": {
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "format": "float"
        }
      },
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both."
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "type": "string",
          "description": "The state of the operation.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "type": "object",
      "description": "The common metadata for long running operations."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "type": "object",
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo": {
      "type": "object",
      "properties": {
        "superscript": {
          "description": "Whether the text is a superscript.",
          "type": "boolean"
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "handwritten": {
          "description": "Whether the text is handwritten.",
          "type": "boolean"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "fontWeight": {
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32",
          "type": "integer"
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "letterSpacing": {
          "description": "Letter spacing in points.",
          "format": "double",
          "type": "number"
        },
        "smallcaps": {
          "description": "Whether the text is in small caps.",
          "type": "boolean"
        },
        "pixelFontSize": {
          "format": "double",
          "type": "number",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`."
        },
        "strikeout": {
          "description": "Whether the text is strikethrough.",
          "type": "boolean"
        },
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "fontSize": {
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes."
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat",
      "properties": {
        "totalDocumentCount": {
          "type": "integer",
          "description": "Total number of documents with the given dataset split type to be exported.",
          "format": "int32"
        },
        "splitType": {
          "description": "The dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ]
        }
      },
      "type": "object",
      "description": "The statistic representing a dataset split type for this export."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "headerRows": {
          "type": "array",
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          }
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Body rows of the table."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "properties": {
        "id": {
          "format": "int32",
          "deprecated": true,
          "type": "integer",
          "description": "The id of the parent provenance."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision."
        }
      },
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta1GcsSource",
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "description": "The long-running operation metadata for the CreateLabelerPool method.",
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "description": "Response message for BatchProcessDocuments.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "type": "object",
      "properties": {
        "styleInfo": {
          "description": "Text style attributes.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "properties": {
        "state": {
          "description": "The state of the operation.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "The common metadata for long running operations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "deprecated": true
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string",
          "description": "The state of the current batch processing."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "type": "object",
      "description": "The long-running operation metadata for UpdateLabelerPool.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if `validate_only` is true in the request."
        },
        "datasetInconsistencyType": {
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "type": "string",
          "description": "The type of the inconsistency of the dataset."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "description": "Resync status against inconsistency types on the dataset level."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image."
        },
        "width": {
          "description": "Width of the image in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "properties": {
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string"
        },
        "page": {
          "format": "int64",
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string",
          "deprecated": true
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        }
      },
      "type": "object",
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "type": "object",
      "properties": {
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        },
        "status": {
          "description": "The validation status of import config.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "type": "array"
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "type": "object",
      "description": "Response of the batch move documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "description": "Used only when Operation.done is false.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "questionId": {
          "type": "string",
          "description": "The Crowd Compute question ID."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the ReviewDocument method."
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "description": "Response message for the UndeployProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "type": "object",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "properties": {
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Image Quality Defects",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "properties": {
        "totalDocumentCount": {
          "description": "Total number of the documents that are qualified for importing.",
          "type": "integer",
          "format": "int32"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualImportStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          }
        },
        "importConfigValidationResults": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "type": "array",
          "description": "Validation statuses of the batch documents import config."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata",
      "description": "Metadata of the import document operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "properties": {
        "gcsUri": {
          "description": "The gcs_uri of the auto-labeling document, which uniquely identifies a dataset document.",
          "deprecated": true,
          "type": "string"
        },
        "documentId": {
          "description": "The document id of the auto-labeled document. This will replace the gcs_uri.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "status": {
          "description": "The status of the document auto-labeling.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "description": "The status of individual documents in the auto-labeling process.",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "properties": {
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata"
    },
    "GoogleCloudDocumentaiV1beta3GcsPrefix": {
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3GcsPrefix",
      "description": "Specifies all documents on Cloud Storage with a common prefix.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`."
        },
        "confidence": {
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig": {
      "id": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig",
      "description": "Configuration specific to the Document AI Warehouse-based implementation.",
      "properties": {
        "schema": {
          "type": "string",
          "description": "Output only. The schema in Document AI Warehouse associated with the dataset.",
          "readOnly": true
        },
        "collection": {
          "description": "Output only. The collection in Document AI Warehouse associated with the dataset.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`)."
        },
        "size": {
          "description": "Font size for the text.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "type": "object",
      "properties": {
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence.",
          "type": "array"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "type": "object",
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "properties": {},
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for DeleteLabelerPool."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "individualBatchUpdateStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse": {
      "description": "Response of the delete documents operation.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        }
      },
      "type": "object",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "description": "The response for TrainProcessorVersion."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "datasetErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "type": "array"
        },
        "documentErrors": {
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of dataset errors."
        },
        "documentErrorCount": {
          "description": "The total number of document errors.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleTypeTimeZone": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object",
      "id": "GoogleTypeTimeZone"
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "type": "object"
    },
    "GoogleTypeDateTime": {
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object",
      "properties": {
        "seconds": {
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0."
        }
      },
      "id": "GoogleTypeDateTime"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "type": "object",
      "description": "A detected barcode.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse",
      "description": "The response proto of AutoLabelDocuments method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse",
      "description": "Response message for the UndeployProcessorVersion method.",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "id": "GoogleCloudDocumentaiV1beta2Barcode",
      "type": "object",
      "properties": {
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "properties": {
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        }
      },
      "description": "A detected barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "description": "Human Review information of the document.",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "int32",
          "type": "integer"
        },
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "properties": {
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "type": "number",
          "format": "float",
          "description": "Page height."
        }
      },
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        },
        "rejectionReason": {
          "type": "string",
          "description": "The reason why the review is rejected by reviewer."
        },
        "state": {
          "description": "The state of the review operation.",
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "description": "Response message for the ReviewDocument method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2EntityExtractionParams": {
      "type": "object",
      "description": "Parameters to control entity extraction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2EntityExtractionParams",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable entity extraction."
        },
        "modelVersion": {
          "type": "string",
          "description": "Model version of the entity extraction. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements",
          "type": "array"
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Barcode",
      "properties": {
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        },
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "description": "A detected symbol.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists."
        }
      },
      "description": "Image Quality Defects",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "properties": {
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        },
        "textOffset": {
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string"
        },
        "shardCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of shards."
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of moving the document."
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        }
      },
      "description": "The status of each individual document in the batch move process.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
    },
    "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig": {
      "description": "Configuration specific to an unmanaged dataset.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId": {
      "properties": {
        "docId": {
          "description": "Required. The id of the document.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "properties": {
        "destDatasetType": {
          "description": "The destination dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "deprecated": true,
          "type": "string"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "destSplitType": {
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The destination dataset split type.",
          "type": "string"
        },
        "individualBatchMoveStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse",
      "description": "The response proto of ResyncDataset method."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "type": "object",
      "properties": {
        "errorDocumentCount": {
          "type": "integer",
          "description": "Total number of documents that failed to be deleted in storage.",
          "format": "int32"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualBatchDeleteStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "description": "The list of response details of each document."
        },
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of documents deleting from dataset.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse",
      "properties": {},
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus",
      "properties": {
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "status": {
          "description": "The status of updating the document in storage.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "The status of each individual document in the batch update process.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        },
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "type": "array"
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "type": "object",
      "properties": {
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "type": "array",
          "description": "Visual page layout for the Document."
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          },
          "description": "Placeholder. Revision history of this document.",
          "type": "array"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "description": "Labels for this document."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities.",
          "type": "array"
        },
        "textStyles": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "deprecated": true,
          "description": "Styles for the Document.text."
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "mimeType": {
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": "string"
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "description": "A cell representation inside the table.",
      "properties": {
        "colSpan": {
          "description": "How many columns this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "properties": {
        "detectedDefects": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          },
          "description": "A list of detected defects."
        },
        "qualityScore": {
          "format": "float",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores",
      "type": "object",
      "description": "Image quality scores for the page image."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "description": "Resync status for each document per inconsistency type.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if `validate_only` is true in the request."
        },
        "documentInconsistencyType": {
          "description": "The type of document inconsistency.",
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ],
          "type": "string",
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ]
        },
        "documentId": {
          "description": "The document identifier.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "description": "The destination processor version name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse",
      "description": "The response message for the ImportProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "properties": {
        "parent": {
          "deprecated": true,
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "parentIds": {
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        },
        "createTime": {
          "type": "string",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime"
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleTypePostalAddress": {
      "type": "object",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array"
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        },
        "organization": {
          "description": "Optional. The name of the organization at the address.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "type": "object",
      "description": "Response message for BatchProcessDocuments."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "properties": {
        "cols": {
          "format": "int32",
          "type": "integer",
          "description": "Number of columns in the matrix."
        },
        "rows": {
          "format": "int32",
          "type": "integer",
          "description": "Number of rows in the matrix."
        },
        "data": {
          "type": "string",
          "description": "The matrix data.",
          "format": "byte"
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "properties": {
        "revision": {
          "deprecated": true,
          "description": "The index of the revision that produced this element.",
          "type": "integer",
          "format": "int32"
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced.",
          "type": "array"
        },
        "type": {
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "type": "string",
          "description": "The type of provenance operation."
        },
        "id": {
          "deprecated": true,
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
    },
    "GoogleCloudDocumentaiV1beta2AutoMlParams": {
      "properties": {
        "model": {
          "type": "string",
          "description": "Resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2AutoMlParams",
      "description": "Parameters to control AutoML model prediction behavior."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualDocumentResyncStatuses": {
          "type": "array",
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          }
        },
        "datasetResyncStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          },
          "type": "array",
          "description": "The list of dataset resync statuses. Not checked when `dataset_documents` is specified in ResyncRequest."
        }
      },
      "description": "The metadata proto of ResyncDataset method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "properties": {
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "type": "object",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "properties": {
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        },
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "type": "object",
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage URI containing the output artifacts."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId",
      "properties": {
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        },
        "revisionRef": {
          "description": "Points to a specific revision of the document if set.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef"
        },
        "unmanagedDocId": {
          "description": "A document id within unmanaged dataset.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId"
        }
      },
      "description": "Document Identifier.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata"
    },
    "GoogleTypeColor": {
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "type": "object",
      "id": "GoogleTypeColor",
      "properties": {
        "blue": {
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "green": {
          "format": "float",
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "red": {
          "type": "number",
          "format": "float",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        },
        "alpha": {
          "type": "number",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "description": "The status of each individual document in the batch delete process.",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "status": {
          "description": "The status of deleting the document in storage.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "properties": {
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "integerValue": {
          "format": "int32",
          "description": "Integer value.",
          "type": "integer"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "floatValue": {
          "description": "Float value.",
          "format": "float",
          "type": "number"
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        }
      },
      "description": "Parsed and normalized entity value.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "properties": {
        "parents": {
          "description": "References to the original elements that are replaced.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          }
        },
        "type": {
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ]
        },
        "revision": {
          "format": "int32",
          "deprecated": true,
          "description": "The index of the revision that produced this element.",
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "deprecated": true,
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "splitExportStats": {
          "description": "The list of statistics for each dataset split type.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          },
          "type": "array"
        },
        "individualExportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata",
      "description": "Metadata of the batch export documents operation."
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "description": "The state of the operation."
        }
      },
      "description": "The common metadata for long running operations."
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "totalDocumentCount": {
          "description": "Total number of documents deleting from dataset.",
          "type": "integer",
          "format": "int32"
        },
        "individualBatchDeleteStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          }
        },
        "errorDocumentCount": {
          "description": "Total number of documents that failed to be deleted in storage.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "contents": {
          "type": "string",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "format": "byte"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "type": "object",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "type": "object",
      "properties": {
        "id": {
          "deprecated": true,
          "type": "integer",
          "description": "The id of the parent provenance.",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list."
        },
        "index": {
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "type": "object",
      "properties": {},
      "description": "Response message for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "deprecated": true,
          "description": "The history of this annotation.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse": {
      "properties": {
        "sampleTrainingStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of sampling documents in training split."
        },
        "sampleTestStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of sampling documents in test split."
        },
        "selectedDocuments": {
          "description": "The result of the sampling process.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse",
      "description": "Response of the sample documents operation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        },
        "rowSpan": {
          "format": "int32",
          "description": "How many rows this cell spans.",
          "type": "integer"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A cell representation inside the table.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest",
      "description": "Request to batch process documents as an asynchronous operation. The output is written to Cloud Storage as JSON in the [Document] format.",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. Individual requests for each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "properties": {},
      "description": "Response of the import document operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for VisualElement."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig": {
      "type": "object",
      "description": "Configuration specific to the Cloud Storage-based implementation.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig",
      "properties": {
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1beta3GcsPrefix",
          "description": "Required. The Cloud Storage URI (a directory) where the documents belonging to the dataset must be stored."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The common metadata about the operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata message associated with the ExportProcessorVersion operation."
    },
    "GoogleTypeMoney": {
      "properties": {
        "units": {
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string"
        },
        "nanos": {
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        }
      },
      "type": "object",
      "id": "GoogleTypeMoney",
      "description": "Represents an amount of money with its currency type."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "properties": {
        "mimeType": {
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.",
          "type": "string"
        },
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Width of the image in pixels."
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image in pixels."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "type": "object",
      "properties": {
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        },
        "type": {
          "format": "int32",
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html"
        },
        "rows": {
          "format": "int32",
          "description": "Number of rows in the matrix.",
          "type": "integer"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument": {
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "An internal identifier for document."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "properties": {
        "integerValue": {
          "description": "Integer value.",
          "type": "integer",
          "format": "int32"
        },
        "floatValue": {
          "type": "number",
          "format": "float",
          "description": "Float value."
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        }
      },
      "description": "Parsed and normalized entity value.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
    },
    "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig": {
      "description": "Configuration specific to spanner-based indexing.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "properties": {
        "lines": {
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          }
        },
        "symbols": {
          "type": "array",
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          }
        },
        "visualElements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "detectedBarcodes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes."
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          }
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          }
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          }
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "type": "object",
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "orientation": {
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "description": "The status of each individual document in the batch delete process.",
      "properties": {
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of deleting the document in storage."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for updating the human review configuration.",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "type": "object",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "type": "object",
      "properties": {
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
          "type": "string"
        },
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "textChanges": {
          "type": "array",
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          }
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array",
          "description": "Visual page layout for the Document."
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "deprecated": true
        },
        "mimeType": {
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": "string"
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "type": "array",
          "description": "Placeholder. Relationship among Document.entities."
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "id": "GoogleCloudDocumentaiV1beta1Document"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "description": "Response message for the ReviewDocument method.",
      "type": "object",
      "properties": {
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ],
          "type": "string",
          "description": "The state of the review operation."
        },
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of the documents that are qualified for importing."
        },
        "importConfigValidationResults": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "type": "array",
          "description": "Validation statuses of the batch documents import config."
        },
        "individualImportStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document."
        }
      },
      "type": "object",
      "description": "Metadata of the import document operation.",
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the EnableProcessor method."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "description": "The response message for the ImportProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3RevisionRef": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3RevisionRef",
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "latestProcessorVersion": {
          "type": "string",
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
        },
        "revisionCase": {
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "type": "string",
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "description": "Reads the revision by the predefined case."
        },
        "revisionId": {
          "type": "string",
          "description": "Reads the revision given by the id."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentId": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentId",
      "properties": {
        "unmanagedDocId": {
          "description": "A document id within unmanaged dataset.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId"
        },
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        },
        "revisionRef": {
          "$ref": "GoogleCloudDocumentaiV1beta3RevisionRef",
          "description": "Points to a specific revision of the document if set."
        }
      },
      "type": "object",
      "description": "Document Identifier."
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "description": "The desired output location and metadata.",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "type": "object",
      "description": "The status of human review on a processed document.",
      "properties": {
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "description": "The state of human review on the processing request.",
          "type": "string",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ]
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "properties": {
        "outputDocumentId": {
          "description": "The document id of imported document if it was successful, otherwise empty.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId"
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI of the document.",
          "type": "string"
        },
        "status": {
          "description": "The status of the importing of the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus",
      "type": "object",
      "description": "The status of each individual document in the import process."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "type": "object",
      "description": "The status of each individual document in the import process.",
      "properties": {
        "outputDocumentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of imported document if it was successful, otherwise empty."
        },
        "status": {
          "description": "The status of the importing of the document.",
          "$ref": "GoogleRpcStatus"
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI of the document."
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata",
      "description": "Metadata of the sample documents operation.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The metadata that represents a processor version being created.",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "type": "object",
      "description": "Response message for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta3Dataset": {
      "properties": {
        "gcsManagedConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig",
          "description": "Optional. User-managed Cloud Storage dataset configuration. Use this configuration if the dataset documents are stored under a user-managed Cloud Storage location."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNINITIALIZED",
            "INITIALIZING",
            "INITIALIZED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default unspecified enum, should not be used.",
            "Dataset has not been initialized.",
            "Dataset is being initialized.",
            "Dataset has been initialized."
          ],
          "description": "Required. State of the dataset. Ignored when updating dataset."
        },
        "spannerIndexingConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig",
          "description": "Optional. A lightweight indexing source with low latency and high reliability, but lacking advanced features like CMEK and content-based search."
        },
        "name": {
          "description": "Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset`",
          "type": "string"
        },
        "documentWarehouseConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig",
          "description": "Optional. Document AI Warehouse-based dataset configuration."
        },
        "unmanagedDatasetConfig": {
          "description": "Optional. Unmanaged dataset configuration. Use this configuration if the dataset documents are managed by the document service internally (not user-managed).",
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3Dataset",
      "type": "object",
      "description": "A singleton resource under a Processor which configures a collection of documents."
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    }
  },
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "canonicalName": "Document",
  "name": "documentai",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "ownerName": "Google",
  "version": "v1beta2",
  "revision": "20230923",
  "basePath": "",
  "title": "Cloud Document AI API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "documentai:v1beta2",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "fullyEncodeReservedExpansion": true,
  "version_module": true
}

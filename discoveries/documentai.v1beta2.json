{
  "rootUrl": "https://documentai.googleapis.com/",
  "title": "Cloud Document AI API",
  "basePath": "",
  "servicePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "ownerName": "Google",
  "schemas": {
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "description": "A detected token.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessor method."
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "properties": {
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64",
          "type": "string"
        },
        "shardCount": {
          "description": "Total number of shards.",
          "type": "string",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "type": "object",
      "properties": {
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "type": "number",
          "description": "Page height.",
          "format": "float"
        }
      },
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "description": "Parsed and normalized entity value.",
      "type": "object",
      "properties": {
        "integerValue": {
          "format": "int32",
          "type": "integer",
          "description": "Integer value."
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "floatValue": {
          "description": "Float value.",
          "format": "float",
          "type": "number"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "description": "Metadata of the auto-labeling documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "properties": {
        "individualAutoLabelStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          },
          "description": "The list of individual auto-labeling statuses of the dataset documents.",
          "type": "array"
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of the auto-labeling documents."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix",
      "properties": {
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        },
        "cols": {
          "type": "integer",
          "format": "int32",
          "description": "Number of columns in the matrix."
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "type": "object",
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "properties": {
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField value."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "type": "object",
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
      "properties": {
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "description": "The validation status of each import config. Status is set to errors if there is no documents to import in the import_config, or OK if the operation will try to proceed at least one document.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "description": "Resync status against inconsistency types on the dataset level.",
      "type": "object",
      "properties": {
        "datasetInconsistencyType": {
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "description": "The type of the inconsistency of the dataset.",
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if `validate_only` is true in the request.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        },
        "rowSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many rows this cell spans."
        }
      },
      "type": "object",
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "description": "The response proto of AutoLabelDocuments method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document."
        }
      },
      "type": "object",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "description": "The response message for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "type": "object",
      "properties": {
        "y": {
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image).",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        }
      }
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "type": "object",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "description": "The response for TrainProcessorVersion.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "description": "The destination processor version name.",
          "type": "string"
        }
      },
      "description": "The response message for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse",
      "description": "The response proto of ExportDocuments method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "properties": {
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        },
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        },
        "state": {
          "type": "string",
          "description": "The state of the review operation.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        }
      },
      "type": "object",
      "description": "Response message for the ReviewDocument method."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata for the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation.",
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        }
      },
      "description": "The common metadata for long running operations."
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        },
        "status": {
          "description": "The status of moving the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "The status of each individual document in the batch move process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "properties": {
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Barcode",
      "type": "object",
      "description": "Encodes the detailed information of a barcode."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "individualBatchMoveStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          }
        },
        "destDatasetType": {
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "description": "The destination dataset split type.",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "type": "string"
        },
        "destSplitType": {
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "description": "The destination dataset split type.",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2AutoMlParams": {
      "id": "GoogleCloudDocumentaiV1beta2AutoMlParams",
      "description": "Parameters to control AutoML model prediction behavior.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "description": "Response message for the UndeployProcessorVersion method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "description": "Detected language for a structural component.",
      "properties": {
        "languageCode": {
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected language. Range `[0, 1]`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          }
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          }
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
          "description": "Image quality scores."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the page."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          }
        },
        "detectedBarcodes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes."
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          },
          "description": "A list of visually detected symbols on the page.",
          "type": "array"
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "properties": {
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "The matrix data.",
          "type": "string",
          "format": "byte"
        },
        "type": {
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta1GcsSource",
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ]
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The path to source docproto of the document."
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "description": "The status of the exporting of the document.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus",
      "description": "The status of each individual document in the export process."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleTypeMoney": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "units": {
          "format": "int64",
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      },
      "id": "GoogleTypeMoney"
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "description": "Parsed and normalized entity value.",
      "properties": {
        "floatValue": {
          "format": "float",
          "type": "number",
          "description": "Float value."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "integerValue": {
          "description": "Integer value.",
          "type": "integer",
          "format": "int32"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "type": "array",
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "properties": {
        "startIndex": {
          "format": "int64",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string"
        },
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "type": "object"
    },
    "GoogleTypePostalAddress": {
      "properties": {
        "postalCode": {
          "type": "string",
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sublocality": {
          "type": "string",
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "sortingCode": {
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        }
      },
      "type": "object",
      "id": "GoogleTypePostalAddress",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "type": "object",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "type": "array",
          "description": "Responses for each individual document."
        }
      },
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete."
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      },
      "type": "object",
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2TableBoundHint": {
      "id": "GoogleCloudDocumentaiV1beta2TableBoundHint",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Bounding box hint for a table on this page. The coordinates must be normalized to [0,1] and the bounding box must be an axis-aligned rectangle."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Page number for multi-paged inputs this hint applies to. If not provided, this hint will apply to all pages by default. This value is 1-based."
        }
      },
      "description": "A hint for a table bounding box on the page for table parsing.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "properties": {
        "qualityScore": {
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "format": "float",
          "type": "number"
        },
        "detectedDefects": {
          "description": "A list of detected defects.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      },
      "description": "Image quality scores for the page image.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        }
      },
      "description": "The metadata that represents a processor version being created."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "properties": {
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string",
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        },
        "page": {
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string"
        }
      },
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        },
        "pagesPerShard": {
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo": {
      "properties": {
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "fontSize": {
          "type": "integer",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "format": "int32"
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "fontWeight": {
          "format": "int32",
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`."
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough."
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "pixelFontSize": {
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "format": "double",
          "type": "number"
        },
        "textColor": {
          "description": "Color of the text.",
          "$ref": "GoogleTypeColor"
        },
        "smallcaps": {
          "description": "Whether the text is in small caps.",
          "type": "boolean"
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "letterSpacing": {
          "format": "double",
          "description": "Letter spacing in points.",
          "type": "number"
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes.",
      "type": "object"
    },
    "GoogleTypeColor": {
      "properties": {
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number",
          "format": "float"
        },
        "red": {
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "blue": {
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "id": "GoogleTypeColor"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The gcs_uri of the auto-labeling document, which uniquely identifies a dataset document."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the document auto-labeling."
        }
      },
      "description": "The status of individual documents in the auto-labeling process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "properties": {},
      "description": "Response message for BatchProcessDocuments.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId": {
      "properties": {
        "docId": {
          "type": "string",
          "description": "Required. The id of the document."
        }
      },
      "type": "object",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option.",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "contents": {
          "type": "string",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "format": "byte"
        },
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiV1beta2FormExtractionParams": {
      "id": "GoogleCloudDocumentaiV1beta2FormExtractionParams",
      "description": "Parameters to control form extraction behavior.",
      "type": "object",
      "properties": {
        "keyValuePairHints": {
          "description": "Reserved for future use.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2KeyValuePairHint"
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable form extraction."
        },
        "modelVersion": {
          "description": "Model version of the form extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model. For custom form models, specify: \"custom/{model_name}\". Model name format is \"bucket_name/path/to/modeldir\" corresponding to \"gs://bucket_name/path/to/modeldir\" where annotated examples are stored.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for BatchProcessDocuments."
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "id": "GoogleCloudDocumentaiV1beta2Barcode",
      "type": "object",
      "properties": {
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        }
      }
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        },
        "state": {
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "type": "string",
          "description": "The state of human review on the processing request.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "type": "object",
      "description": "The status of human review on a processed document."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for DeleteLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "description": "The long-running operation metadata for the CreateLabelerPool method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "properties": {
        "textOffset": {
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string"
        },
        "shardCount": {
          "description": "Total number of shards.",
          "type": "string",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect",
      "description": "Image Quality Defects",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists."
        },
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        },
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        }
      },
      "description": "The desired input location and metadata.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1InputConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "properties": {
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "type": "integer",
          "format": "int32"
        },
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "documentErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of document errors."
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "properties": {
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`)."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object",
      "description": "Font size with unit."
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse": {
      "type": "object",
      "properties": {
        "selectedDocuments": {
          "description": "The result of the sampling process.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument"
          }
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse",
      "description": "Response of the sample documents operation."
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "description": "The response for TrainProcessorVersion."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "properties": {
        "headerRows": {
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Table."
        },
        "provenance": {
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "bodyRows": {
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A table representation similar to HTML table structure."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata",
      "type": "object",
      "description": "The metadata proto of ResyncDataset method.",
      "properties": {
        "datasetResyncStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          },
          "description": "The list of dataset resync statuses. Not checked when `dataset_documents` is specified in ResyncRequest.",
          "type": "array"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualDocumentResyncStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          },
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        },
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "properties": {},
      "description": "Response message for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "questionId": {
          "type": "string",
          "description": "The Crowd Compute question ID."
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "type": "object",
      "description": "Detected language for a structural component.",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number"
        },
        "languageCode": {
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "properties": {
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        }
      },
      "type": "object"
    },
    "GoogleTypeDate": {
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        }
      },
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata",
      "description": "Metadata of the import document operation.",
      "type": "object",
      "properties": {
        "individualImportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "totalDocumentCount": {
          "type": "integer",
          "description": "Total number of the documents that are qualified for importing.",
          "format": "int32"
        },
        "importConfigValidationResults": {
          "description": "Validation statuses of the batch documents import config.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "type": "array"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "type": "object",
      "description": "Response message for the ReviewDocument method.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ],
          "type": "string",
          "description": "The state of the review operation.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ]
        },
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        },
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "description": "Metadata of the sample documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse",
      "properties": {},
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "properties": {
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array",
          "description": "Visual page layout for the Document."
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
        },
        "entities": {
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "mimeType": {
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": "string"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "type": "array",
          "description": "Placeholder. Relationship among Document.entities."
        },
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          }
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array"
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      },
      "description": "Human Review information of the document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument": {
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "An internal identifier for document.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "type": "object",
      "description": "Response of the import document operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "properties": {
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "state": {
          "description": "Used only when Operation.done is false.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "description": "The common metadata for long running operations.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "properties": {
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "description": "Visual page layout for the Document.",
          "type": "array"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "revisions": {
          "type": "array",
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          }
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "description": "Labels for this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          }
        },
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        },
        "automlModel": {
          "type": "string",
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "format": "float"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        }
      },
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. ",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "description": "Document Identifier.",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId",
      "type": "object",
      "properties": {
        "unmanagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId",
          "description": "A document id within unmanaged dataset."
        },
        "revisionRef": {
          "description": "Points to a specific revision of the document if set.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef"
        },
        "gcsManagedDocId": {
          "description": "A document id within user-managed Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "description": "The long-running operation metadata for UpdateLabelerPool.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiV1beta2TableExtractionParams": {
      "type": "object",
      "properties": {
        "headerHints": {
          "type": "array",
          "description": "Optional. Reserved for future use.",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable table extraction."
        },
        "modelVersion": {
          "description": "Model version of the table extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model.",
          "type": "string"
        },
        "tableBoundHints": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2TableBoundHint"
          },
          "description": "Optional. Table bounding box hints that can be provided to complex cases which our algorithm cannot locate the table(s) in."
        }
      },
      "description": "Parameters to control table extraction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2TableExtractionParams"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "properties": {
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "layoutType": {
          "type": "string",
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ]
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        }
      },
      "description": "Represents a weak reference to a page element within a document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "properties": {
        "individualBatchDeleteStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "description": "The list of response details of each document."
        },
        "errorDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of documents that failed to be deleted in storage."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents deleting from dataset."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "properties": {
        "gcsUri": {
          "description": "Required. The Cloud Storage URI where the actual document is stored.",
          "type": "string"
        },
        "cwDocId": {
          "type": "string",
          "description": "Id of the document (indexed) managed by Content Warehouse."
        }
      },
      "type": "object",
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "content": {
          "description": "Raw byte content of the image.",
          "format": "byte",
          "type": "string"
        },
        "height": {
          "description": "Height of the image in pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "styleInfo": {
          "description": "Text style attributes.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo"
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "description": "The status of a each individual document in the batch process.",
      "properties": {
        "outputGcsDestination": {
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started."
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        }
      },
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "inputGcsSource": {
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method.",
          "type": "string"
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "outputGcsDestination": {
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "description": "The status of a each individual document in the batch process.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page.",
      "properties": {
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "width": {
          "type": "number",
          "format": "float",
          "description": "Page width."
        },
        "height": {
          "type": "number",
          "format": "float",
          "description": "Page height."
        }
      }
    },
    "GoogleTypeTimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "type": "object",
      "id": "GoogleTypeTimeZone",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "properties": {
        "type": {
          "description": "The type of provenance operation.",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "type": "integer",
          "format": "int32"
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "properties": {
        "revisionId": {
          "description": "Reads the revision given by the id.",
          "type": "string"
        },
        "latestProcessorVersion": {
          "type": "string",
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
        },
        "revisionCase": {
          "enumDescriptions": [
            "Unspecified case, fallback to read the LATEST_HUMAN_REVIEW.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "type": "string",
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "description": "Reads the revision by the predefined case."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "description": "The revision reference specifies which revision on the document to read.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse",
      "properties": {},
      "description": "The response proto of ResyncDataset method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "type": "object",
      "properties": {
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
          "description": "Font size."
        },
        "textDecoration": {
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. ",
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "description": "The status of human review on a processed document.",
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string",
          "description": "The state of human review on the processing request.",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "properties": {},
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).",
          "type": "string"
        },
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of deleting the document in storage."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "description": "The status of each individual document in the batch delete process.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata",
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "description": "A row of table cells.",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2EntityExtractionParams": {
      "id": "GoogleCloudDocumentaiV1beta2EntityExtractionParams",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether to enable entity extraction.",
          "type": "boolean"
        },
        "modelVersion": {
          "type": "string",
          "description": "Model version of the entity extraction. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model."
        }
      },
      "description": "Parameters to control entity extraction behavior."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "type": "object",
      "properties": {
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "description": "Response of the delete documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "description": "The desired output location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination",
          "description": "The Google Cloud Storage location to write the output to."
        },
        "pagesPerShard": {
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "parentIds": {
          "type": "array",
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          }
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create."
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        }
      },
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
      "type": "object",
      "properties": {
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          }
        },
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        }
      },
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "type": "object",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "properties": {
        "revision": {
          "description": "The index of the index into current revision's parent_ids list.",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "The id of the parent provenance.",
          "type": "integer"
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Table."
        },
        "provenance": {
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Body rows of the table."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "format": "float",
          "type": "number"
        },
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect",
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "type": "object",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "description": "Resync status for each document per inconsistency type.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if `validate_only` is true in the request.",
          "$ref": "GoogleRpcStatus"
        },
        "documentInconsistencyType": {
          "description": "The type of document inconsistency.",
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ],
          "type": "string",
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ]
        },
        "documentId": {
          "description": "The document identifier.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "individualProcessStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1."
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest",
      "description": "Request to batch process documents as an asynchronous operation. The output is written to Cloud Storage as JSON in the [Document] format.",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. Individual requests for each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse",
      "type": "object",
      "description": "Response message for the UndeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "type": "object",
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "properties": {
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parentIds": {
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "description": "Image quality scores for the page image.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
      "type": "object",
      "properties": {
        "qualityScore": {
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "format": "float",
          "type": "number"
        },
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
      "properties": {
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "type": "array"
        },
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of dataset errors."
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The common metadata about the operation."
        }
      },
      "type": "object",
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "type": "object",
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the revision that produced this element."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "description": "The type of provenance operation."
        },
        "id": {
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer"
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "properties": {
        "layout": {
          "description": "Layout for DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode"
        }
      },
      "description": "A detected barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "type": "object",
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse",
      "description": "Response of the batch move documents operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes.",
      "properties": {
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "textColor": {
          "description": "Color of the text.",
          "$ref": "GoogleTypeColor"
        },
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "bold": {
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`).",
          "type": "boolean"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the background."
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "fontWeight": {
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps."
        },
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough."
        },
        "fontSize": {
          "type": "integer",
          "format": "int32",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches)."
        },
        "letterSpacing": {
          "description": "Letter spacing in points.",
          "format": "double",
          "type": "number"
        },
        "pixelFontSize": {
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "format": "double",
          "type": "number"
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2OcrParams": {
      "properties": {
        "languageHints": {
          "description": "List of languages to use for OCR. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Document processing returns an error if one or more of the specified languages is not one of the supported languages.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OcrParams",
      "description": "Parameters to control Optical Character Recognition (OCR) behavior.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float"
        },
        "orientation": {
          "description": "Detected orientation for the Layout.",
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "properties": {
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          },
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "blocks": {
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          }
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedBarcodes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes.",
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          }
        },
        "symbols": {
          "type": "array",
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          }
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "tables": {
          "type": "array",
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          }
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "description": "The long-running operation metadata for the EnableProcessor method."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat",
      "properties": {
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of documents with the given dataset split type to be exported.",
          "type": "integer"
        },
        "splitType": {
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The dataset split type."
        }
      },
      "description": "The statistic representing a dataset split type for this export.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "description": "A form field detected on the page.",
      "properties": {
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for name together with confidence."
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest": {
      "properties": {
        "parent": {
          "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
          "type": "string"
        },
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig",
          "description": "Required. Information about the input file."
        },
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig",
          "description": "The desired output location. This field is only needed in BatchProcessDocumentsRequest."
        },
        "tableExtractionParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2TableExtractionParams",
          "description": "Controls table extraction behavior. If not specified, the system will decide reasonable defaults."
        },
        "documentType": {
          "description": "Specifies a known document type for deeper structure detection. Valid values are currently \"general\" and \"invoice\". If not provided, \"general\"\\ is used as default. If any other value is given, the request is rejected.",
          "type": "string"
        },
        "automlParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2AutoMlParams",
          "description": "Controls AutoML model prediction behavior. AutoMlParams cannot be used together with other Params."
        },
        "formExtractionParams": {
          "description": "Controls form extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2FormExtractionParams"
        },
        "entityExtractionParams": {
          "description": "Controls entity extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2EntityExtractionParams"
        },
        "ocrParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2OcrParams",
          "description": "Controls OCR behavior. If not specified, the system will decide reasonable defaults."
        }
      },
      "type": "object",
      "description": "Request to process one document.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
    },
    "GoogleTypeDateTime": {
      "type": "object",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "GoogleTypeDateTime",
      "properties": {
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "nanos": {
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32"
        },
        "timeZone": {
          "$ref": "GoogleTypeTimeZone",
          "description": "Time zone."
        },
        "minutes": {
          "type": "integer",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string",
          "format": "google-duration"
        },
        "day": {
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32"
        },
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "seconds": {
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "properties": {
        "revision": {
          "type": "integer",
          "description": "The index of the index into current revision's parent_ids list.",
          "format": "int32"
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        },
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "documentErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "documentErrorCount": {
          "description": "The total number of document errors.",
          "type": "integer",
          "format": "int32"
        },
        "datasetErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of dataset errors."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "type": "object",
      "description": "A detected symbol.",
      "properties": {
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "type": "object",
      "description": "A detected symbol.",
      "properties": {
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "properties": {
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata",
      "description": "The metadata that represents a processor version being created.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse",
      "properties": {},
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "type": "object",
      "description": "Response message for the UndeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2KeyValuePairHint": {
      "properties": {
        "valueTypes": {
          "description": "Type of the value. This is case-insensitive, and could be one of: ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER, ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will be ignored.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "key": {
          "description": "The key text for the hint.",
          "type": "string"
        }
      },
      "description": "Reserved for future use.",
      "id": "GoogleCloudDocumentaiV1beta2KeyValuePairHint",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "type": "object",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "state": {
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "type": "object",
      "description": "A detected barcode.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "type": "object",
      "description": "Response message associated with the ExportProcessorVersion operation."
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "type": "object",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        },
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        }
      },
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          }
        },
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "type": "object",
      "properties": {
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the importing of the document."
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI of the document.",
          "type": "string"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus",
      "description": "The status of each individual document in the import process."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "properties": {
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "type": "number"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        }
      },
      "type": "object",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata",
      "description": "Metadata of the batch export documents operation.",
      "properties": {
        "individualExportStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          }
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "splitExportStats": {
          "description": "The list of statistics for each dataset split type.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for updating the human review configuration."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "properties": {
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "type": "integer",
          "format": "int32"
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "type": "object",
      "description": "A cell representation inside the table."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "mimeType": {
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        }
      },
      "type": "object"
    }
  },
  "version": "v1beta2",
  "canonicalName": "Document",
  "name": "documentai",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "documents": {
          "methods": {
            "process": {
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1beta2/projects/{projectsId}/documents:process",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1beta2Document"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta2/{+parent}/documents:process",
              "httpMethod": "POST",
              "id": "documentai.projects.documents.process",
              "parameterOrder": [
                "parent"
              ],
              "description": "Processes a single document."
            },
            "batchProcess": {
              "path": "v1beta2/{+parent}/documents:batchProcess",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "documentai.projects.documents.batchProcess",
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "flatPath": "v1beta2/projects/{projectsId}/documents:batchProcess",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              }
            }
          }
        },
        "locations": {
          "resources": {
            "documents": {
              "methods": {
                "process": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "documentai.projects.locations.documents.process",
                  "description": "Processes a single document.",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:process",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta2/{+parent}/documents:process",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta2Document"
                  }
                },
                "batchProcess": {
                  "parameters": {
                    "parent": {
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:batchProcess",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
                  },
                  "path": "v1beta2/{+parent}/documents:batchProcess",
                  "id": "documentai.projects.locations.documents.batchProcess",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "id": "documentai.projects.locations.operations.get",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1beta2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "path": "v1beta2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "flatPath": "v1beta2/projects/{projectsId}/operations/{operationsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "id": "documentai.projects.operations.get",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "id": "documentai:v1beta2",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    }
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "revision": "20230609",
  "version_module": true,
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "baseUrl": "https://documentai.googleapis.com/"
}

{
  "schemas": {
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "type": "object",
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for delete processor version method.",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "properties": {
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor"
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          }
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "description": "An entity that could be a phrase in the text or a property belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "properties": {
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "description": "Revision history of this document.",
          "type": "array"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "entityRelations": {
          "description": "Relationship among Document.entities.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          }
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "type": "array",
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "content": {
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        }
      },
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality.",
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse",
      "properties": {},
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        }
      },
      "description": "The common metadata for long running operations.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "type": "object",
      "description": "The long running operation metadata for deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "properties": {
        "responses": {
          "description": "Responses for each individual document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          }
        }
      },
      "type": "object",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "properties": {
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "provenance": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "description": "The history of this annotation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for set default processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata",
      "description": "The long running operation metadata for the undeploy processor version method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2TableBoundHint": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2TableBoundHint",
      "properties": {
        "boundingBox": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Bounding box hint for a table on this page. The coordinates must be normalized to [0,1] and the bounding box must be an axis-aligned rectangle."
        },
        "pageNumber": {
          "description": "Optional. Page number for multi-paged inputs this hint applies to. If not provided, this hint will apply to all pages by default. This value is 1-based.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A hint for a table bounding box on the page for table parsing."
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "properties": {},
      "description": "Response message for batch process document method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "type": "object",
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method.",
          "type": "string"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "description": "The long running operation metadata for delete processor method."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "description": "The long running operation metadata for enable processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "description": "The long running operation metadata for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        },
        "gcsDestination": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output to."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "properties": {
        "index": {
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) on parent revision.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the [Document.revisions] identifying the parent revision.",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "description": "The id of the parent provenance.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "type": "object",
      "description": "Response of the batch move documents operation.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "properties": {
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata",
      "description": "The long running operation metadata for deploy processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for enable processor method."
    },
    "GoogleCloudDocumentaiV1beta2KeyValuePairHint": {
      "properties": {
        "valueTypes": {
          "description": "Type of the value. This is case-insensitive, and could be one of: ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER, ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will be ignored.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "key": {
          "type": "string",
          "description": "The key text for the hint."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2KeyValuePairHint",
      "type": "object",
      "description": "Reserved for future use."
    },
    "GoogleCloudDocumentaiV1beta2TableExtractionParams": {
      "id": "GoogleCloudDocumentaiV1beta2TableExtractionParams",
      "properties": {
        "tableBoundHints": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2TableBoundHint"
          },
          "type": "array",
          "description": "Optional. Table bounding box hints that can be provided to complex cases which our algorithm cannot locate the table(s) in."
        },
        "modelVersion": {
          "type": "string",
          "description": "Model version of the table extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model."
        },
        "enabled": {
          "description": "Whether to enable table extraction.",
          "type": "boolean"
        },
        "headerHints": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Reserved for future use.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Parameters to control table extraction behavior."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "type": "object",
      "properties": {},
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest": {
      "description": "Request to process one document.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "The desired output location. This field is only needed in BatchProcessDocumentsRequest.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "parent": {
          "type": "string",
          "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method."
        },
        "ocrParams": {
          "$ref": "GoogleCloudDocumentaiV1beta2OcrParams",
          "description": "Controls OCR behavior. If not specified, the system will decide reasonable defaults."
        },
        "documentType": {
          "type": "string",
          "description": "Specifies a known document type for deeper structure detection. Valid values are currently \"general\" and \"invoice\". If not provided, \"general\"\\ is used as default. If any other value is given, the request is rejected."
        },
        "tableExtractionParams": {
          "description": "Controls table extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2TableExtractionParams"
        },
        "formExtractionParams": {
          "description": "Controls form extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2FormExtractionParams"
        },
        "inputConfig": {
          "description": "Required. Information about the input file.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        },
        "entityExtractionParams": {
          "description": "Controls entity extraction behavior. If not specified, the system will decide reasonable defaults.",
          "$ref": "GoogleCloudDocumentaiV1beta2EntityExtractionParams"
        },
        "automlParams": {
          "description": "Controls AutoML model prediction behavior. AutoMlParams cannot be used together with other Params.",
          "$ref": "GoogleCloudDocumentaiV1beta2AutoMlParams"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for set default processor version method."
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing."
        }
      },
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "description": "Response message for review document method.",
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "labels": {
          "description": "Labels for this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          }
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "type": "array"
        },
        "textChanges": {
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "type": "array"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          },
          "description": "Revision history of this document."
        },
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array"
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Relationship among Document.entities.",
          "type": "array"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "properties": {
        "automlModel": {
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`",
          "type": "string"
        },
        "name": {
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence score between 0 and 1 for label assignment.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both."
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "individualProcessStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "state": {
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        }
      },
      "description": "The long running operation metadata for batch process method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "properties": {
        "colSpan": {
          "type": "integer",
          "description": "How many columns this cell spans.",
          "format": "int32"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "type": "object",
      "description": "A cell representation inside the table."
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "description": "The long running operation metadata for delete processor version method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        },
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Vertex"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest",
      "properties": {
        "requests": {
          "description": "Required. Individual requests for each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
          }
        }
      },
      "type": "object",
      "description": "Request to batch process documents as an asynchronous operation. The output is written to Cloud Storage as JSON in the [Document] format."
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        },
        "contents": {
          "type": "string",
          "format": "byte",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method."
        }
      },
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "description": "The desired input location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "description": "The long running operation metadata for CreateLabelerPool.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse",
      "description": "Response message for set default processor version method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse",
      "description": "Response message for the undeploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "type": "object",
      "description": "Human Review information of the document.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "description": "Text reference indexing into the Document.text.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        },
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "properties": {
        "index": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) on parent revision."
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the [Document.revisions] identifying the parent revision."
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the parent provenance."
        }
      },
      "type": "object",
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced."
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
          "description": "Font size."
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        }
      },
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long running operation metadata for review document method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "type": "object",
      "description": "Contains past or forward revisions of this document.",
      "properties": {
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parent": {
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that the revision was created."
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "id": {
          "description": "Id of the revision. Unique within the context of the document.",
          "type": "string"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "description": "The long running operation metadata for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "properties": {
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "floatValue": {
          "format": "float",
          "type": "number",
          "description": "Float value."
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective 'structured_value' fields may also be populated. Also not all the types of 'structured_value' will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "integerValue": {
          "format": "int32",
          "type": "integer",
          "description": "Integer value."
        }
      },
      "type": "object",
      "description": "Parsed and normalized entity value.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "properties": {
        "type": {
          "type": "string",
          "description": "Entity type from a schema e.g. `Address`."
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "format": "float"
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "mentionText": {
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`. If the entity is not present in the document, this field will be empty.",
          "type": "string"
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        }
      },
      "description": "An entity that could be a phrase in the text or a property belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "description": "The state of human review on the processing request."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "description": "The status of human review on a processed document."
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1GcsSource"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "description": "Response message for the deploy processor version method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "description": "A detected token.",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "properties": {
        "width": {
          "type": "number",
          "description": "Page width.",
          "format": "float"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "description": "Page height.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Dimension for the page."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "description": "A detected token.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "type": "object",
      "properties": {
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "floatValue": {
          "description": "Float value.",
          "type": "number",
          "format": "float"
        },
        "integerValue": {
          "type": "integer",
          "description": "Integer value.",
          "format": "int32"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective 'structured_value' fields may also be populated. Also not all the types of 'structured_value' will be normalized. For example, some processors may not generate float or int normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64"
        },
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "properties": {
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "type": "array"
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array"
        },
        "tables": {
          "type": "array",
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          }
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          }
        },
        "visualElements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this page."
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object",
      "description": "A page in a Document."
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "type": "object",
      "description": "Human Review information of the document.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "properties": {},
      "description": "Response of the delete documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "type": "object",
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "properties": {
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "type": "object",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "description": "Response message for the deploy processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2FormExtractionParams": {
      "id": "GoogleCloudDocumentaiV1beta2FormExtractionParams",
      "description": "Parameters to control form extraction behavior.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "description": "Model version of the form extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model. For custom form models, specify: “custom/{model_name}\". Model name format is \"bucket_name/path/to/modeldir\" corresponding to \"gs://bucket_name/path/to/modeldir\" where annotated examples are stored."
        },
        "enabled": {
          "description": "Whether to enable form extraction.",
          "type": "boolean"
        },
        "keyValuePairHints": {
          "description": "Reserved for future use.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2KeyValuePairHint"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "type": "object",
      "description": "The long running operation metadata for disable processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Body rows of the table.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Header rows of the table."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for delete processor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "description": "The long running operation metadata for disable processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for set default processor version method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "properties": {
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        },
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          }
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "type": "array"
        }
      },
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly"
    },
    "GoogleTypeDateTime": {
      "type": "object",
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and month."
        },
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "nanos": {
          "format": "int32",
          "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer"
        },
        "seconds": {
          "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Month of year. Must be from 1 to 12."
        },
        "minutes": {
          "description": "Required. Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string",
          "format": "google-duration"
        },
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year is 0, the DateTime is considered not to have a specific year. month and day must have valid, non-zero values. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "GoogleTypeDateTime"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleTypeColor": {
      "type": "object",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "id": "GoogleTypeColor",
      "properties": {
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "green": {
          "format": "float",
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "red": {
          "format": "float",
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        },
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig"
        },
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        }
      },
      "description": "Response to a single document processing request.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "type": "object",
      "description": "A row of table cells.",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "description": "A cell representation inside the table."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Paragraph."
        }
      },
      "type": "object",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "type": "object",
      "description": "The long running operation metadata for delete processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "type": "object",
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          },
          "type": "array",
          "description": "One or more references to visual page elements"
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table."
        },
        "headerRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "type": "object",
      "properties": {
        "cols": {
          "type": "integer",
          "format": "int32",
          "description": "Number of columns in the matrix."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The matrix data."
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "properties": {
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "type": "string",
          "format": "int64"
        },
        "textOffset": {
          "format": "int64",
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text."
        },
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "properties": {
        "createTime": {
          "description": "The time that the revision was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision. Unique within the context of the document."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "properties": {
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        },
        "nameDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for value together with confidence."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "type": "object",
      "description": "A form field detected on the page."
    },
    "GoogleTypeMoney": {
      "properties": {
        "nanos": {
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32"
        },
        "units": {
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "id": "GoogleTypeMoney"
    },
    "GoogleCloudDocumentaiV1beta2OcrParams": {
      "properties": {
        "languageHints": {
          "description": "List of languages to use for OCR. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Document processing returns an error if one or more of the specified languages is not one of the supported languages.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Parameters to control Optical Character Recognition (OCR) behavior.",
      "id": "GoogleCloudDocumentaiV1beta2OcrParams",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "properties": {
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "description": "Response message for set default processor version method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "description": "Text reference indexing into the Document.text.",
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        },
        "textSegments": {
          "type": "array",
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "properties": {
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].",
          "type": "number"
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "type": "object",
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for the deploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage URI containing the output artifacts."
        }
      },
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2AutoMlParams": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "Resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`."
        }
      },
      "description": "Parameters to control AutoML model prediction behavior.",
      "id": "GoogleCloudDocumentaiV1beta2AutoMlParams"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "type": "object",
      "description": "The status of a each individual document in the batch process.",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "properties": {
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        },
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Font size with unit.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          }
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "properties": {
        "state": {
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for updating the human review configuration."
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "type": "object",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "description": "Metadata of the import document operation.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "type": "object",
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "orientation": {
          "description": "Detected orientation for the Layout.",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "properties": {
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "type": "string"
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "type": "array",
          "description": "References to the original elements that are replaced."
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        }
      },
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string",
          "description": "The state of human review on the processing request."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method.",
          "type": "string"
        }
      },
      "description": "The status of human review on a processed document.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "type": "object",
      "description": "Response message for batch process document method.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "type": "object",
      "properties": {
        "layoutType": {
          "type": "string",
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ]
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].",
          "format": "float"
        },
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "properties": {
        "shardIndex": {
          "type": "string",
          "format": "int64",
          "description": "The 0-based index of this shard."
        },
        "shardCount": {
          "description": "Total number of shards.",
          "format": "int64",
          "type": "string"
        },
        "textOffset": {
          "format": "int64",
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text."
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "properties": {
        "datasetErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of dataset errors."
        },
        "documentErrorCount": {
          "format": "int32",
          "description": "The total number of document errors.",
          "type": "integer"
        },
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "type": "object",
      "description": "The long running operation metadata for batch process method.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation."
        }
      },
      "type": "object",
      "description": "The common metadata for long running operations."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "type": "object",
      "properties": {
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for disable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "type": "object",
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "properties": {
        "commonMetadata": {
          "description": "The common metadata about the operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "properties": {
        "height": {
          "description": "Height of the image in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        }
      },
      "description": "Rendered image contents for this page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata",
      "description": "The long running operation metadata for delete processor method."
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "description": "The long running operation metadata for deploy processor version method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "description": "The long running operation metadata for review document method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "Used only when Operation.done is false."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "relation": {
          "type": "string",
          "description": "Relationship description."
        }
      },
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object",
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        },
        "size": {
          "type": "number",
          "description": "Font size for the text.",
          "format": "float"
        }
      }
    },
    "GoogleTypeTimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      },
      "id": "GoogleTypeTimeZone",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page.",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        },
        "width": {
          "type": "number",
          "description": "Page width.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for set default processor version method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "description": "The common metadata for long running operations.",
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation."
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "type": "object",
      "description": "A page in a Document.",
      "properties": {
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          }
        },
        "pageNumber": {
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer"
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "type": "array"
        },
        "paragraphs": {
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          }
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          }
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this page."
        },
        "tokens": {
          "type": "array",
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          }
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          },
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "properties": {
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the revision that produced this element."
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "type": "array",
          "description": "References to the original elements that are replaced."
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        },
        "type": {
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "description": "The long running operation metadata for UpdateLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2EntityExtractionParams": {
      "properties": {
        "modelVersion": {
          "type": "string",
          "description": "Model version of the entity extraction. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model."
        },
        "enabled": {
          "description": "Whether to enable entity extraction.",
          "type": "boolean"
        }
      },
      "description": "Parameters to control entity extraction behavior.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2EntityExtractionParams"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "description": "Response of the import document operation.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document."
        }
      },
      "type": "object",
      "description": "Response message for review document method.",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse"
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "description": "The long running operation metadata for enable processor method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleTypePostalAddress": {
      "properties": {
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "addressLines": {
          "items": {
            "type": "string"
          },
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array"
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        }
      },
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "id": "GoogleTypePostalAddress",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "properties": {
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array",
          "description": "One or more references to visual page elements"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "description": "The long running operation metadata for DeleteLabelerPool.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "description": "Rendered image contents for this page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "type": "object",
      "properties": {
        "mimeType": {
          "description": "Encoding mime type for the image.",
          "type": "string"
        },
        "content": {
          "format": "byte",
          "description": "Raw byte content of the image.",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "description": "Width of the image in pixels.",
          "type": "integer"
        },
        "height": {
          "type": "integer",
          "description": "Height of the image in pixels.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsSource"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "properties": {
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for name together with confidence."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "type": "object",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "description": "The response for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "type": "array"
        },
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
    }
  },
  "rootUrl": "https://documentai.googleapis.com/",
  "version_module": true,
  "baseUrl": "https://documentai.googleapis.com/",
  "title": "Cloud Document AI API",
  "revision": "20211022",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "basePath": "",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v1beta2",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "name": "documentai",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "id": "documentai:v1beta2",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1beta2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "documentai.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "documents": {
              "methods": {
                "process": {
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1beta2Document"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:process",
                  "description": "Processes a single document.",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta2/{+parent}/documents:process",
                  "id": "documentai.projects.locations.documents.process"
                },
                "batchProcess": {
                  "path": "v1beta2/{+parent}/documents:batchProcess",
                  "id": "documentai.projects.locations.documents.batchProcess",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                      "location": "path"
                    }
                  },
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/documents:batchProcess",
                  "httpMethod": "POST"
                }
              }
            }
          }
        },
        "documents": {
          "methods": {
            "process": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDocumentaiV1beta2Document"
              },
              "httpMethod": "POST",
              "description": "Processes a single document.",
              "flatPath": "v1beta2/projects/{projectsId}/documents:process",
              "path": "v1beta2/{+parent}/documents:process",
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method."
                }
              },
              "id": "documentai.projects.documents.process",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "batchProcess": {
              "path": "v1beta2/{+parent}/documents:batchProcess",
              "httpMethod": "POST",
              "id": "documentai.projects.documents.batchProcess",
              "flatPath": "v1beta2/projects/{projectsId}/documents:batchProcess",
              "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "request": {
                "$ref": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/operations/{operationsId}",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "path": "v1beta2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string"
                }
              },
              "id": "documentai.projects.operations.get"
            }
          }
        }
      }
    }
  },
  "canonicalName": "Document",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    }
  },
  "servicePath": ""
}

{
  "canonicalName": "Dialogflow",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/dialogflow": {
          "description": "View, manage and query your Dialogflow agents"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "id": "dialogflow:v2",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/dialogflow/",
  "rootUrl": "https://dialogflow.googleapis.com/",
  "title": "Dialogflow API",
  "protocol": "rest",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig": {
      "description": "Configuration for the version.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig",
      "properties": {
        "version": {
          "type": "string",
          "description": "Required. Format: projects//locations//agents//flows//versions/."
        }
      }
    },
    "GoogleCloudDialogflowV2ExportAgentResponse": {
      "type": "object",
      "properties": {
        "agentContent": {
          "type": "string",
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte"
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent."
    },
    "GoogleCloudDialogflowV2KnowledgeOperationMetadata": {
      "id": "GoogleCloudDialogflowV2KnowledgeOperationMetadata",
      "type": "object",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "properties": {
        "state": {
          "description": "Output only. The current state of this operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig": {
      "id": "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig",
      "description": "The configuration for continuous tests.",
      "type": "object",
      "properties": {
        "enablePredeploymentRun": {
          "type": "boolean",
          "description": "Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false."
        },
        "testCases": {
          "description": "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableContinuousRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to ture, run once a day.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesResponse",
      "description": "The response message for TestCases.ExportTestCases.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Uncompressed raw byte content for test cases.",
          "format": "byte"
        },
        "gcsUri": {
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard": {
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "properties": {
        "imageDisplayOptions": {
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "type": "string",
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ]
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"
    },
    "GoogleCloudDialogflowV2FulfillmentFeature": {
      "properties": {
        "type": {
          "description": "The type of the feature that enabled for fulfillment.",
          "type": "string",
          "enumDescriptions": [
            "Feature type not specified.",
            "Fulfillment is enabled for SmallTalk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SMALLTALK"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2FulfillmentFeature",
      "description": "Whether fulfillment is enabled for the specific feature."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      },
      "type": "object",
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
    },
    "GoogleCloudDialogflowV2EntityType": {
      "id": "GoogleCloudDialogflowV2EntityType",
      "type": "object",
      "properties": {
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type."
        },
        "kind": {
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "description": "Required. Indicates the kind of entity type.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
        },
        "autoExpansionMode": {
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "type": "string"
        },
        "displayName": {
          "description": "Required. The name of the entity type.",
          "type": "string"
        }
      },
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview)."
    },
    "GoogleCloudDialogflowV2IntentMessageListSelectItem": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageListSelectItem",
      "properties": {
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the list item."
        }
      },
      "description": "An item in the list."
    },
    "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig",
      "description": "The configuration for continuous tests.",
      "properties": {
        "enableContinuousRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.",
          "type": "boolean"
        },
        "enablePredeploymentRun": {
          "description": "Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.",
          "type": "boolean"
        },
        "testCases": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`"
        }
      }
    },
    "GoogleCloudDialogflowCxV3AudioInput": {
      "description": "Represents the natural speech audio to be processed.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3AudioInput",
      "properties": {
        "config": {
          "$ref": "GoogleCloudDialogflowCxV3InputAudioConfig",
          "description": "Required. Instructs the speech recognizer how to process the speech audio."
        },
        "audio": {
          "format": "byte",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata",
      "description": "Metadata for ReloadDocument operation."
    },
    "GoogleCloudDialogflowCxV3IntentParameter": {
      "id": "GoogleCloudDialogflowCxV3IntentParameter",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts."
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        }
      },
      "description": "Represents an intent parameter.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageQuickReplies": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        },
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of quick replies.",
          "type": "array"
        }
      },
      "description": "The quick replies response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageQuickReplies"
    },
    "GoogleCloudDialogflowCxV3QueryInput": {
      "type": "object",
      "properties": {
        "dtmf": {
          "description": "The DTMF event to be handled.",
          "$ref": "GoogleCloudDialogflowCxV3DtmfInput"
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        },
        "audio": {
          "$ref": "GoogleCloudDialogflowCxV3AudioInput",
          "description": "The natural language speech audio to be processed."
        },
        "event": {
          "$ref": "GoogleCloudDialogflowCxV3EventInput",
          "description": "The event to be triggered."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3TextInput",
          "description": "The natural language text to be processed."
        },
        "intent": {
          "description": "The intent to be triggered.",
          "$ref": "GoogleCloudDialogflowCxV3IntentInput"
        }
      },
      "id": "GoogleCloudDialogflowCxV3QueryInput",
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. "
    },
    "GoogleCloudDialogflowCxV3beta1IntentInput": {
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentInput",
      "type": "object",
      "properties": {
        "intent": {
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput": {
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput",
      "properties": {
        "enableSentimentAnalysis": {
          "type": "boolean",
          "description": "Whether sentiment analysis is enabled."
        },
        "input": {
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput",
          "description": "Supports text input, event input, dtmf input in the test case."
        },
        "isWebhookEnabled": {
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.",
          "type": "boolean"
        },
        "injectedParameters": {
          "description": "Parameters that need to be injected into the conversation during intent detection.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "description": "The input from the human user."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestions": {
      "properties": {
        "suggestions": {
          "description": "Required. The list of suggested replies.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions",
      "type": "object",
      "description": "The collection of suggestions."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess": {
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess",
      "properties": {
        "metadata": {
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      }
    },
    "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata": {
      "type": "object",
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "id": "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata",
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse": {
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse",
      "description": "Response message for Documents.ImportDocuments."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings": {
      "type": "object",
      "properties": {
        "dropVirtualAgentMessages": {
          "type": "boolean",
          "description": "If set to true, all messages from virtual agent are dropped."
        },
        "dropIvrMessages": {
          "description": "If set to true, all messages from ivr stage are dropped.",
          "type": "boolean"
        },
        "dropHandoffMessages": {
          "description": "If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped.",
          "type": "boolean"
        }
      },
      "description": "Settings that determine how to filter recent conversation context when generating suggestions.",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings"
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse",
      "description": "Response message for Documents.ImportDocuments.",
      "type": "object",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse": {
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse",
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The collection of updated or created entity types."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ConversationTurnUserInput": {
      "id": "GoogleCloudDialogflowCxV3ConversationTurnUserInput",
      "description": "The input from the human user.",
      "properties": {
        "isWebhookEnabled": {
          "type": "boolean",
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled."
        },
        "input": {
          "$ref": "GoogleCloudDialogflowCxV3QueryInput",
          "description": "Supports text input, event input, dtmf input in the test case."
        },
        "enableSentimentAnalysis": {
          "description": "Whether sentiment analysis is enabled.",
          "type": "boolean"
        },
        "injectedParameters": {
          "description": "Parameters that need to be injected into the conversation during intent detection.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata",
      "type": "object",
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1ImportFlowResponse": {
      "properties": {
        "flow": {
          "description": "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportFlowResponse",
      "type": "object",
      "description": "The response message for Flows.ImportFlow."
    },
    "GoogleCloudDialogflowV2EventInput": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        },
        "name": {
          "description": "Required. The unique identifier of the event.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2EventInput",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`."
    },
    "GoogleRpcStatus": {
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow": {
      "description": "Row of TableCard.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow",
      "type": "object",
      "properties": {
        "dividerAfter": {
          "description": "Optional. Whether to add a visual divider after this row.",
          "type": "boolean"
        },
        "cells": {
          "description": "Optional. List of cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfo": {
      "properties": {
        "parameterInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Represents form information.",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfo"
    },
    "GoogleCloudDialogflowV2beta1WebhookResponse": {
      "id": "GoogleCloudDialogflowV2beta1WebhookResponse",
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "properties": {
        "source": {
          "type": "string",
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller."
        },
        "payload": {
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "followupEventInput": {
          "$ref": "GoogleCloudDialogflowV2beta1EventInput",
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields."
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "type": "array"
        },
        "liveAgentHandoff": {
          "description": "Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
          "type": "boolean"
        },
        "fulfillmentMessages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller."
        },
        "fulfillmentText": {
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.",
          "type": "string"
        },
        "sessionEntityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SessionEntityType"
          },
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ExportFlowResponse": {
      "id": "GoogleCloudDialogflowCxV3ExportFlowResponse",
      "description": "The response message for Flows.ExportFlow.",
      "properties": {
        "flowContent": {
          "description": "Uncompressed raw byte content for flow.",
          "type": "string",
          "format": "byte"
        },
        "flowUri": {
          "type": "string",
          "description": "The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrasePart": {
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrasePart",
      "properties": {
        "userDefined": {
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.",
          "type": "boolean"
        },
        "entityType": {
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        },
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        }
      }
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest": {
      "properties": {
        "entityTypeBatchInline": {
          "description": "The collection of entity types to update or create.",
          "$ref": "GoogleCloudDialogflowV2EntityTypeBatch"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Optional. The mask to control which fields get updated."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        },
        "entityTypeBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing entity types to update or create. The file format can either be a serialized proto (of EntityBatch type) or a JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest",
      "description": "The request message for EntityTypes.BatchUpdateEntityTypes."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardRow": {
      "properties": {
        "dividerAfter": {
          "type": "boolean",
          "description": "Optional. Whether to add a visual divider after this row."
        },
        "cells": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
          },
          "type": "array",
          "description": "Optional. List of cells that make up this row."
        }
      },
      "description": "Row of TableCard.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
    },
    "GoogleCloudDialogflowCxV3beta1TestConfig": {
      "id": "GoogleCloudDialogflowCxV3beta1TestConfig",
      "properties": {
        "trackingParameters": {
          "description": "Session parameters to be compared when calculating differences.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "flow": {
          "type": "string",
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`."
        }
      },
      "description": "Represents configurations for a test case.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart",
      "type": "object",
      "description": "Represents a part of a training phrase.",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        },
        "userDefined": {
          "type": "boolean",
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true."
        },
        "entityType": {
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCases": {
      "properties": {
        "cases": {
          "description": "A list of cascading if-else conditions.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          }
        }
      },
      "type": "object",
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContent": {
      "properties": {
        "mediaObjects": {
          "description": "Required. List of media objects.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          }
        },
        "mediaType": {
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "type": "string",
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "description": "Optional. What type of media is the content (ie \"audio\")."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContent",
      "description": "The media content card for Actions on Google."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRoute": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRoute",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique identifier of this transition route."
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first."
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        }
      },
      "type": "object",
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
    },
    "GoogleCloudDialogflowV2DetectIntentResponse": {
      "description": "The message returned from the DetectIntent method.",
      "id": "GoogleCloudDialogflowV2DetectIntentResponse",
      "type": "object",
      "properties": {
        "webhookStatus": {
          "description": "Specifies the status of the webhook request.",
          "$ref": "GoogleRpcStatus"
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "The config used by the speech synthesizer to generate the output audio."
        },
        "responseId": {
          "description": "The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.",
          "type": "string"
        },
        "outputAudio": {
          "type": "string",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.",
          "format": "byte"
        },
        "queryResult": {
          "description": "The selected results of the conversational query or event processing. See `alternative_query_results` for additional potential results.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for ImportDocuments operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion": {
      "properties": {
        "destinationName": {
          "description": "Required. The name of the app or site this chip is linking to.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip."
        }
      },
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "id": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Participant": {
      "description": "Represents a conversation participant (human agent, virtual agent, end-user).",
      "properties": {
        "name": {
          "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.",
          "type": "string"
        },
        "sipRecordingMediaLabel": {
          "description": "Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.",
          "type": "string"
        },
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "type": "string",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "description": "Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable."
        }
      },
      "id": "GoogleCloudDialogflowV2Participant",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SuggestArticlesRequest": {
      "id": "GoogleCloudDialogflowV2SuggestArticlesRequest",
      "properties": {
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
        },
        "contextSize": {
          "format": "int32",
          "description": "Max number of messages prior to and including latest_message to use as context when compiling the suggestion. By default 20 and at most 50.",
          "type": "integer"
        }
      },
      "description": "The request message for Participants.SuggestArticles.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2OutputAudioConfig": {
      "type": "object",
      "properties": {
        "audioEncoding": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ],
          "description": "Required. Audio encoding of the synthesized audio content.",
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ]
        },
        "sampleRateHertz": {
          "description": "The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
          "type": "integer",
          "format": "int32"
        },
        "synthesizeSpeechConfig": {
          "$ref": "GoogleCloudDialogflowV2SynthesizeSpeechConfig",
          "description": "Configuration of how speech should be synthesized."
        }
      },
      "id": "GoogleCloudDialogflowV2OutputAudioConfig",
      "description": "Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContent": {
      "type": "object",
      "description": "The media content card for Actions on Google.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
      "properties": {
        "mediaObjects": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          },
          "description": "Required. List of media objects."
        },
        "mediaType": {
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesMetadata",
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseError"
          },
          "type": "array",
          "description": "Errors for failed test cases."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The uri to open on the user device"
        }
      },
      "description": "Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "description": "Browsing carousel tile",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "type": "object",
      "properties": {
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "footer": {
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.",
          "type": "string"
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata": {
      "description": "Metadata for ReloadDocument operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrase": {
      "properties": {
        "repeatCount": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates how many times this example was added to the intent."
        },
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          },
          "type": "array"
        },
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrase",
      "type": "object",
      "description": "Represents an example that the agent is trained on to identify the intent."
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse": {
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse",
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
          },
          "description": "The test case results. The detailed conversation turns are empty in this response.",
          "type": "array"
        }
      },
      "description": "The response message for TestCases.BatchRunTestCases.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Intent": {
      "id": "GoogleCloudDialogflowV2Intent",
      "properties": {
        "defaultResponsePlatforms": {
          "items": {
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "GOOGLE_HANGOUTS"
            ],
            "enumDescriptions": [
              "Default platform.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Google Hangouts."
            ],
            "type": "string"
          },
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "type": "array"
        },
        "followupIntentInfo": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          },
          "type": "array",
          "description": "Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output."
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
        },
        "events": {
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "messages": {
          "type": "array",
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          }
        },
        "rootFollowupIntentName": {
          "readOnly": true,
          "description": "Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "isFallback": {
          "type": "boolean",
          "description": "Optional. Indicates whether this is a fallback intent."
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
        },
        "parentFollowupIntentName": {
          "description": "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "webhookState": {
          "type": "string",
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ]
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "priority": {
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer",
          "format": "int32"
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrase"
          },
          "description": "Optional. The collection of examples that the agent is trained on.",
          "type": "array"
        },
        "parameters": {
          "description": "Optional. The collection of parameters associated with the intent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentParameter"
          }
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        }
      },
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial": {
      "description": "Opens the user's default dialer app with the specified phone number but does not dial automatically.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "description": "Required. Carousel items.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequest": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequest",
      "type": "object",
      "properties": {
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
        },
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        },
        "detectIntentResponseId": {
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.",
          "type": "string"
        },
        "triggerIntent": {
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "sessionInfo": {
          "description": "Information about session status.",
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo"
        },
        "intentInfo": {
          "description": "Information about the last matched intent.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo"
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;"
        },
        "languageCode": {
          "type": "string",
          "description": "The language code specified in the original request."
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult"
        },
        "payload": {
          "description": "Custom data set in QueryParameters.payload.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "pageInfo": {
          "description": "Information about page status.",
          "$ref": "GoogleCloudDialogflowCxV3PageInfo"
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        }
      },
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases."
    },
    "GoogleCloudDialogflowV2beta1MessageAnnotation": {
      "type": "object",
      "description": "Represents the result of annotation for the message.",
      "properties": {
        "containEntities": {
          "type": "boolean",
          "description": "Required. Indicates whether the text message contains entities."
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          },
          "type": "array",
          "description": "Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1MessageAnnotation"
    },
    "GoogleCloudLocationLocation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudLocationLocation",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "GoogleCloudDialogflowV2EntityTypeBatch": {
      "id": "GoogleCloudDialogflowV2EntityTypeBatch",
      "description": "This message is a wrapper around a collection of entity types.",
      "type": "object",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "A collection of entity types.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2ListKnowledgeBasesResponse": {
      "id": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "knowledgeBases": {
          "type": "array",
          "description": "The list of knowledge bases.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
          }
        }
      },
      "description": "Response message for KnowledgeBases.ListKnowledgeBases."
    },
    "GoogleCloudDialogflowCxV3beta1TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      },
      "description": "Represents the natural language text to be processed.",
      "id": "GoogleCloudDialogflowCxV3beta1TextInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Environment": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Environment",
      "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "testCasesConfig": {
          "description": "The test cases config for continuous tests of this environment.",
          "$ref": "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
        },
        "versionConfigs": {
          "description": "Required. A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
          },
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Update time of this environment.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "The name of the environment. Format: `projects//locations//agents//environments/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.",
          "readOnly": true,
          "type": "boolean"
        },
        "audio": {
          "type": "string",
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "format": "byte"
        },
        "uri": {
          "type": "string",
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it."
        }
      },
      "description": "Represents one segment of audio."
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase",
      "type": "object",
      "properties": {
        "caseContent": {
          "type": "array",
          "description": "A list of case content.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          }
        },
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        }
      },
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "type": "object",
      "properties": {
        "urlTypeHint": {
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "type": "string",
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser."
        },
        "url": {
          "type": "string",
          "description": "Required. URL"
        }
      },
      "description": "Actions on Google action to open a given url.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowCxV3TransitionRoute": {
      "id": "GoogleCloudDialogflowCxV3TransitionRoute",
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "type": "object",
      "properties": {
        "condition": {
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique identifier of this transition route."
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio": {
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "properties": {
        "segments": {
          "type": "array",
          "description": "Segments this audio response is composed of.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio"
    },
    "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
      "id": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
      "type": "object",
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2beta1Sentiment"
        }
      }
    },
    "GoogleCloudDialogflowCxV3Environment": {
      "type": "object",
      "properties": {
        "versionConfigs": {
          "description": "Required. A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
          },
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
          "type": "string"
        },
        "testCasesConfig": {
          "$ref": "GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig",
          "description": "The test cases config for continuous tests of this environment."
        },
        "description": {
          "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "name": {
          "description": "The name of the environment. Format: `projects//locations//agents//environments/`.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Update time of this environment.",
          "readOnly": true
        }
      },
      "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
      "id": "GoogleCloudDialogflowCxV3Environment"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio": {
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "type": "object",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
    },
    "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput": {
      "description": "The output from the virtual agent.",
      "id": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "Response error from the agent in the test result. If set, other output is empty."
        },
        "diagnosticInfo": {
          "description": "Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "differences": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestRunDifference"
          }
        },
        "sessionParameters": {
          "type": "object",
          "description": "The session parameters available to the bot at this point.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "textResponses": {
          "description": "The text responses from the agent for the turn.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
          }
        },
        "currentPage": {
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Page"
        },
        "triggeredIntent": {
          "description": "The Intent that triggered the response. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Intent"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1QueryResult": {
      "id": "GoogleCloudDialogflowV2beta1QueryResult",
      "type": "object",
      "properties": {
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "type": "number",
          "format": "float"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request."
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "type": "number",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult."
        },
        "cancelsSlotFilling": {
          "type": "boolean",
          "description": "Indicates whether the conversational query triggers a cancellation for slot filling."
        },
        "webhookPayload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object"
        },
        "diagnosticInfo": {
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowV2beta1Intent",
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "outputContexts": {
          "type": "array",
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "description": "The collection of rich messages to present to the user.",
          "type": "array"
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "knowledgeAnswers": {
          "description": "The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.",
          "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswers"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        }
      },
      "description": "Represents the result of conversational query or event processing."
    },
    "GoogleCloudDialogflowV2IntentMessageImage": {
      "description": "The image response message.",
      "properties": {
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        },
        "accessibilityText": {
          "type": "string",
          "description": "Optional. A text description of the image to be used for accessibility, e.g., screen readers."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageImage"
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig": {
      "type": "object",
      "properties": {
        "organizationId": {
          "description": "Required. The organization ID of the Salesforce account.",
          "type": "string"
        },
        "deploymentId": {
          "description": "Required. Live Agent deployment ID.",
          "type": "string"
        },
        "endpointDomain": {
          "type": "string",
          "description": "Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com."
        },
        "buttonId": {
          "type": "string",
          "description": "Required. Live Agent chat button ID."
        }
      },
      "description": "Configuration specific to Salesforce Live Agent.",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig"
    },
    "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction": {
      "id": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction",
      "type": "object",
      "description": "Setting a parameter value.",
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "value": {
          "type": "any",
          "description": "The new value of the parameter. A null value clears the parameter."
        }
      }
    },
    "GoogleCloudDialogflowV2ArticleAnswer": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The article URI."
        },
        "title": {
          "type": "string",
          "description": "The article title."
        },
        "confidence": {
          "description": "Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "snippets": {
          "type": "array",
          "description": "Article snippets.",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object"
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ArticleAnswer",
      "description": "Represents article answer."
    },
    "GoogleCloudDialogflowV2CompleteConversationRequest": {
      "properties": {},
      "type": "object",
      "description": "The request message for Conversations.CompleteConversation.",
      "id": "GoogleCloudDialogflowV2CompleteConversationRequest"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata"
    },
    "GoogleCloudDialogflowV2NotificationConfig": {
      "id": "GoogleCloudDialogflowV2NotificationConfig",
      "description": "Defines notification behavior.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. Notification works for phone calls, if this topic either is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. Format: `projects//locations//topics/`."
        },
        "messageFormat": {
          "enumDescriptions": [
            "If it is unspeified, PROTO will be used.",
            "Pubsub message will be serialized proto.",
            "Pubsub message will be json."
          ],
          "description": "Format of message.",
          "type": "string",
          "enum": [
            "MESSAGE_FORMAT_UNSPECIFIED",
            "PROTO",
            "JSON"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ExportAgentResponse": {
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "id": "GoogleCloudDialogflowV2beta1ExportAgentResponse",
      "properties": {
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Zip compressed raw byte content for agent."
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2OutputAudio": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2OutputAudio",
      "properties": {
        "audio": {
          "format": "byte",
          "type": "string",
          "description": "The natural language speech audio."
        },
        "config": {
          "description": "Instructs the speech synthesizer how to generate the speech audio.",
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig"
        }
      },
      "description": "Represents the natural language speech audio to be played to the end user."
    },
    "GoogleCloudDialogflowV2SynthesizeSpeechConfig": {
      "description": "Configuration of how speech should be synthesized.",
      "type": "object",
      "properties": {
        "voice": {
          "description": "Optional. The desired voice of the synthesized audio.",
          "$ref": "GoogleCloudDialogflowV2VoiceSelectionParams"
        },
        "effectsProfileId": {
          "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "speakingRate": {
          "type": "number",
          "format": "double",
          "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error."
        },
        "pitch": {
          "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
          "type": "number",
          "format": "double"
        },
        "volumeGainDb": {
          "format": "double",
          "type": "number",
          "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that."
        }
      },
      "id": "GoogleCloudDialogflowV2SynthesizeSpeechConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCard": {
      "type": "object",
      "properties": {
        "subtitle": {
          "description": "Optional. Subtitle to the title.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "description": "Optional. List of buttons for the card."
        },
        "columnProperties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          },
          "description": "Optional. Display properties for the columns in this table."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the card."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          },
          "description": "Optional. Rows in this table of data."
        }
      },
      "description": "Table card for Actions on Google.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCard"
    },
    "GoogleCloudDialogflowV2ValidationError": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ValidationError",
      "description": "Represents a single validation error.",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "The detailed error message."
        },
        "severity": {
          "description": "The severity of the error.",
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "The agent doesn't follow Dialogflow best practices.",
            "The agent may not behave as expected.",
            "The agent may experience partial failures.",
            "The agent may completely fail."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR",
            "CRITICAL"
          ]
        },
        "entries": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The names of the entries that the error is associated with. Format: - \"projects//agent\", if the error is associated with the entire agent. - \"projects//agent/intents/\", if the error is associated with certain intents. - \"projects//agent/intents//trainingPhrases/\", if the error is associated with certain intent training phrases. - \"projects//agent/intents//parameters/\", if the error is associated with certain intent parameters. - \"projects//agent/entities/\", if the error is associated with certain entities."
        }
      }
    },
    "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "type": "array",
          "description": "Required. The entities to update or create."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Optional. The mask to control which fields get updated.",
          "type": "string"
        }
      },
      "description": "The request message for EntityTypes.BatchUpdateEntities."
    },
    "GoogleCloudDialogflowCxV3beta1DeployFlowMetadata": {
      "description": "Metadata returned for the Environments.DeployFlow long running operation.",
      "id": "GoogleCloudDialogflowCxV3beta1DeployFlowMetadata",
      "properties": {
        "testErrors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          },
          "description": "Errors of running deployment tests.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3EventHandler": {
      "id": "GoogleCloudDialogflowCxV3EventHandler",
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "properties": {
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of this event handler."
        },
        "event": {
          "type": "string",
          "description": "Required. The name of the event to handle."
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentParameter": {
      "properties": {
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        },
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "prompts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "defaultValue": {
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`.",
          "type": "string"
        }
      },
      "description": "Represents intent parameters.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentParameter"
    },
    "GoogleCloudDialogflowV2ListEntityTypesResponse": {
      "id": "GoogleCloudDialogflowV2ListEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The list of agent entity types. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "The response message for EntityTypes.ListEntityTypes.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Intent": {
      "properties": {
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          },
          "type": "array",
          "description": "The collection of training phrases the agent is trained on to identify the intent."
        },
        "isFallback": {
          "type": "boolean",
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the intent, unique within the agent."
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer"
        },
        "description": {
          "type": "string",
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentParameter"
          },
          "type": "array",
          "description": "The collection of parameters associated with the intent."
        }
      },
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3Intent"
    },
    "GoogleCloudDialogflowV2IntentMessageText": {
      "type": "object",
      "description": "The text response message.",
      "properties": {
        "text": {
          "description": "Optional. The collection of the agent's responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageText"
    },
    "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult": {
      "description": "Represents the result of sentiment analysis.",
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent",
      "properties": {
        "media": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia",
          "description": "Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set."
        },
        "title": {
          "description": "Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set.",
          "type": "string"
        },
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "description": "Optional. List of suggestions to include in the card.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Rich Business Messaging (RBM) Card content"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource": {
      "properties": {
        "knowledgeBases": {
          "items": {
            "type": "string"
          },
          "description": "Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, at most 5 knowledge bases are supported.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource",
      "description": "Knowledge base source settings. Supported features: ARTICLE_SUGGESTION, FAQ.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton",
      "type": "object",
      "properties": {
        "title": {
          "description": "Required. The title of the button.",
          "type": "string"
        },
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
        }
      },
      "description": "The button object that appears at the bottom of a card."
    },
    "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest": {
      "properties": {
        "entityValues": {
          "description": "Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with `projects/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest",
      "description": "The request message for EntityTypes.BatchDeleteEntities.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig": {
      "type": "object",
      "properties": {
        "model": {
          "description": "Conversation model resource name. Format: `projects//conversationModels/`.",
          "type": "string"
        }
      },
      "description": "Custom conversation models used in agent assist feature. Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE, SMART_REPLY.",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig"
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesMetadata": {
      "properties": {},
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesMetadata"
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfig": {
      "properties": {
        "livePersonConfig": {
          "description": "Uses LivePerson (https://www.liveperson.com).",
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig"
        },
        "salesforceLiveAgentConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig",
          "description": "Uses Salesforce Live Agent."
        }
      },
      "description": "Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfig"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponse": {
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponse",
      "properties": {
        "ssml": {
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.",
          "type": "string"
        },
        "displayText": {
          "type": "string",
          "description": "Optional. The text to display."
        },
        "textToSpeech": {
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.",
          "type": "string"
        }
      },
      "description": "The simple response message containing speech or text.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1QueryInput": {
      "properties": {
        "dtmf": {
          "description": "The DTMF event to be handled.",
          "$ref": "GoogleCloudDialogflowCxV3beta1DtmfInput"
        },
        "event": {
          "$ref": "GoogleCloudDialogflowCxV3beta1EventInput",
          "description": "The event to be triggered."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TextInput",
          "description": "The natural language text to be processed."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1IntentInput",
          "description": "The intent to be triggered."
        },
        "audio": {
          "$ref": "GoogleCloudDialogflowCxV3beta1AudioInput",
          "description": "The natural language speech audio to be processed."
        },
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        }
      },
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1QueryInput"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "description": "Actions on Google action to open a given url.",
      "properties": {
        "url": {
          "description": "Required. URL",
          "type": "string"
        },
        "urlTypeHint": {
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCardButton": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCardButton",
      "description": "Optional. Contains information about a button.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        },
        "postback": {
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2Conversation": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "$ref": "GoogleCloudDialogflowV2ConversationPhoneNumber",
          "readOnly": true,
          "description": "Output only. It will not be empty if the conversation is to be connected over telephony."
        },
        "endTime": {
          "description": "Output only. The time the conversation was finished.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the conversation was started.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`.",
          "readOnly": true,
          "type": "string"
        },
        "conversationProfile": {
          "description": "Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`.",
          "type": "string"
        },
        "conversationStage": {
          "description": "The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.",
          "enumDescriptions": [
            "Unknown. Should never be used after a conversation is successfully created.",
            "The conversation should return virtual agent responses into the conversation.",
            "The conversation should not provide responses, just listen and provide suggestions."
          ],
          "type": "string",
          "enum": [
            "CONVERSATION_STAGE_UNSPECIFIED",
            "VIRTUAL_AGENT_STAGE",
            "HUMAN_ASSIST_STAGE"
          ]
        },
        "lifecycleState": {
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "COMPLETED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unknown.",
            "Conversation is currently open for media analysis.",
            "Conversation has been completed."
          ],
          "description": "Output only. The current state of the Conversation.",
          "type": "string"
        }
      },
      "description": "Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions.",
      "id": "GoogleCloudDialogflowV2Conversation"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        },
        "repeatCount": {
          "description": "Indicates how many times this example was added to the intent.",
          "format": "int32",
          "type": "integer"
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
        }
      }
    },
    "GoogleCloudDialogflowCxV3DtmfInput": {
      "type": "object",
      "properties": {
        "digits": {
          "type": "string",
          "description": "The dtmf digits."
        },
        "finishDigit": {
          "type": "string",
          "description": "The finish digit (if any)."
        }
      },
      "description": "Represents the input for dtmf event.",
      "id": "GoogleCloudDialogflowCxV3DtmfInput"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata": {
      "type": "object",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string",
          "description": "Required. Output only. The current state of this operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "readOnly": true
        }
      },
      "id": "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata"
    },
    "GoogleCloudDialogflowV2AnswerRecord": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2AnswerRecord",
      "properties": {
        "answerFeedback": {
          "$ref": "GoogleCloudDialogflowV2AnswerFeedback",
          "description": "Required. The AnswerFeedback for this record. You can set this with AnswerRecords.UpdateAnswerRecord in order to give us feedback about this answer."
        },
        "agentAssistantRecord": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2AgentAssistantRecord",
          "description": "Output only. The record for human agent assistant."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`."
        }
      },
      "description": "Answer records are records to manage answer history and feedbacks for Dialogflow. Currently, answer record includes: - human agent assistant article suggestion - human agent assistant faq article It doesn't include: - `DetectIntent` intent matching - `DetectIntent` knowledge Answer records are not related to the conversation history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in the console. Records are created when there's a human agent assistant suggestion generated. A typical workflow for customers provide feedback to an answer is: 1. For human agent assistant, customers get suggestion via ListSuggestions API. Together with the answers, AnswerRecord.name are returned to the customers. 2. The customer uses the AnswerRecord.name to call the UpdateAnswerRecord method to send feedback about a specific answer that they believe is wrong."
    },
    "GoogleCloudDialogflowV2beta1IntentParameter": {
      "properties": {
        "isList": {
          "description": "Optional. Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        },
        "defaultValue": {
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "prompts": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "type": "array"
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentParameter",
      "type": "object",
      "description": "Represents intent parameters."
    },
    "GoogleCloudDialogflowCxV3FormParameterFillBehavior": {
      "id": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
      "description": "Configuration for how the filling of a parameter should be handled.",
      "type": "object",
      "properties": {
        "initialPromptFulfillment": {
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "repromptEventHandlers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          },
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
        }
      }
    },
    "GoogleCloudDialogflowCxV3DeployFlowMetadata": {
      "properties": {
        "testErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "description": "Errors of running deployment tests."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3DeployFlowMetadata",
      "description": "Metadata returned for the Environments.DeployFlow long running operation."
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent": {
      "type": "object",
      "description": "The list of messages or conditional cases to activate for this case.",
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent",
      "properties": {
        "message": {
          "description": "Returned message.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
        },
        "additionalCases": {
          "description": "Additional cases to be evaluated.",
          "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
      "type": "object",
      "description": "Transfers the call in Telephony Gateway.",
      "properties": {
        "phoneNumber": {
          "description": "Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2WebhookResponse": {
      "properties": {
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array",
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller."
        },
        "fulfillmentText": {
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object"
        },
        "outputContexts": {
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array"
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "source": {
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.",
          "type": "string"
        },
        "followupEventInput": {
          "$ref": "GoogleCloudDialogflowV2EventInput",
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields."
        }
      },
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "type": "object",
      "id": "GoogleCloudDialogflowV2WebhookResponse"
    },
    "GoogleCloudDialogflowCxV3Page": {
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).",
      "id": "GoogleCloudDialogflowCxV3Page",
      "type": "object",
      "properties": {
        "transitionRouteGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`."
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        },
        "transitionRoutes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          },
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
        },
        "entryFulfillment": {
          "description": "The fulfillment to call when the session is entering the page.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          },
          "type": "array",
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input."
        },
        "displayName": {
          "description": "Required. The human-readable name of the page, unique within the agent.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3EnvironmentVersionConfig": {
      "id": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig",
      "type": "object",
      "properties": {
        "version": {
          "description": "Required. Format: projects//locations//agents//flows//versions/.",
          "type": "string"
        }
      },
      "description": "Configuration for the version."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText",
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        },
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse": {
      "type": "object",
      "description": "The simple response message containing speech or text.",
      "properties": {
        "ssml": {
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.",
          "type": "string"
        },
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        },
        "textToSpeech": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
    },
    "GoogleCloudDialogflowV2ConversationProfile": {
      "id": "GoogleCloudDialogflowV2ConversationProfile",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Human readable name for this profile. Max length 1024 bytes."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Create time of the conversation profile.",
          "readOnly": true
        },
        "notificationConfig": {
          "description": "Configuration for publishing conversation lifecycle events.",
          "$ref": "GoogleCloudDialogflowV2NotificationConfig"
        },
        "sttConfig": {
          "$ref": "GoogleCloudDialogflowV2SpeechToTextConfig",
          "description": "Settings for speech transcription."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Update time of the conversation profile.",
          "format": "google-datetime"
        },
        "loggingConfig": {
          "description": "Configuration for logging conversation lifecycle events.",
          "$ref": "GoogleCloudDialogflowV2LoggingConfig"
        },
        "languageCode": {
          "type": "string",
          "description": "Language which represents the conversationProfile. If unspecified, the default language code en-us applies. Users need to create a ConversationProfile for each language they want to support."
        },
        "automatedAgentConfig": {
          "$ref": "GoogleCloudDialogflowV2AutomatedAgentConfig",
          "description": "Configuration for an automated agent to use with this profile."
        },
        "humanAgentAssistantConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfig",
          "description": "Configuration for agent assistance to use with this profile."
        },
        "newMessageEventNotificationConfig": {
          "$ref": "GoogleCloudDialogflowV2NotificationConfig",
          "description": "Configuration for publishing new message events. Event will be sent in format of ConversationEvent"
        },
        "humanAgentHandoffConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfig",
          "description": "Configuration for connecting to a live agent. Currently, this feature is not general available, please contact Google to get access."
        }
      },
      "type": "object",
      "description": "Defines the services to connect to incoming Dialogflow conversations."
    },
    "GoogleCloudDialogflowV2AutomatedAgentReply": {
      "id": "GoogleCloudDialogflowV2AutomatedAgentReply",
      "type": "object",
      "properties": {
        "allowCancellation": {
          "description": "Indicates whether the partial automated agent reply is interruptible when a later reply message arrives. e.g. if the agent specified some music as partial response, it can be cancelled.",
          "type": "boolean"
        },
        "detectIntentResponse": {
          "description": "Response of the Dialogflow Sessions.DetectIntent call.",
          "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
        },
        "automatedAgentReplyType": {
          "enumDescriptions": [
            "Not specified. This should never happen.",
            "Partial reply. e.g. Aggregated responses in a `Fulfillment` that enables `return_partial_response` can be returned as partial reply. WARNING: partial reply is not eligible for barge-in.",
            "Final reply."
          ],
          "type": "string",
          "enum": [
            "AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED",
            "PARTIAL",
            "FINAL"
          ],
          "description": "AutomatedAgentReply type."
        }
      },
      "description": "Represents a response from an automated agent."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig": {
      "properties": {
        "featureConfigs": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
          },
          "type": "array",
          "description": "Configuration of different suggestion features. One feature can have only one config."
        },
        "groupSuggestionResponses": {
          "type": "boolean",
          "description": "If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse."
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig",
      "type": "object",
      "description": "Detail human agent assistant config."
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply": {
      "properties": {
        "postbackData": {
          "type": "string",
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic."
        },
        "text": {
          "description": "Suggested reply text.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
    },
    "GoogleCloudDialogflowV2ListDocumentsResponse": {
      "id": "GoogleCloudDialogflowV2ListDocumentsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "documents": {
          "description": "The list of documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Document"
          },
          "type": "array"
        }
      },
      "description": "Response message for Documents.ListDocuments."
    },
    "GoogleCloudDialogflowV2SearchAgentsResponse": {
      "description": "The response message for Agents.SearchAgents.",
      "properties": {
        "agents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "type": "array",
          "description": "The list of agents. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowV2SearchAgentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCard": {
      "type": "object",
      "description": "The basic card message. Useful for displaying information.",
      "properties": {
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image for the card."
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "description": "Optional. The collection of card buttons.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
    },
    "GoogleCloudDialogflowV2KnowledgeBase": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2KnowledgeBase",
      "properties": {
        "languageCode": {
          "description": "Language which represents the KnowledgeBase. When the KnowledgeBase is created/updated, expect this to be present for non en-us languages. When unspecified, the default language code en-us applies.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`."
        },
        "displayName": {
          "description": "Required. The display name of the knowledge base. The name must be 1024 bytes or less; otherwise, the creation request fails.",
          "type": "string"
        }
      },
      "description": "A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`."
    },
    "GoogleCloudDialogflowCxV3beta1Intent": {
      "id": "GoogleCloudDialogflowCxV3beta1Intent",
      "properties": {
        "trainingPhrases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          },
          "description": "The collection of training phrases the agent is trained on to identify the intent."
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentParameter"
          },
          "description": "The collection of parameters associated with the intent.",
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the intent, unique within the agent.",
          "type": "string"
        },
        "description": {
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.",
          "type": "string"
        },
        "isFallback": {
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.",
          "type": "boolean"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent."
        },
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests."
        }
      },
      "type": "object",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
    },
    "GoogleCloudDialogflowV2beta1FaqAnswer": {
      "properties": {
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1FaqAnswer",
      "type": "object",
      "description": "Represents answer from \"frequently asked questions\"."
    },
    "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true,
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string"
        }
      },
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        },
        "languageCode": {
          "description": "Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        }
      },
      "description": "Represents the natural language text to be processed.",
      "id": "GoogleCloudDialogflowV2TextInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment": {
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request."
        },
        "audio": {
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Represents one segment of audio."
    },
    "GoogleCloudDialogflowV2TextToSpeechSettings": {
      "properties": {
        "outputAudioEncoding": {
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ],
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ],
          "description": "Required. Audio encoding of the synthesized audio content.",
          "type": "string"
        },
        "synthesizeSpeechConfigs": {
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          },
          "type": "object",
          "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig."
        },
        "sampleRateHertz": {
          "format": "int32",
          "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
          "type": "integer"
        },
        "enableTextToSpeech": {
          "type": "boolean",
          "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained."
        }
      },
      "type": "object",
      "description": "Instructs the speech synthesizer on how to generate the output audio content.",
      "id": "GoogleCloudDialogflowV2TextToSpeechSettings"
    },
    "GoogleCloudDialogflowV2beta1IntentMessage": {
      "type": "object",
      "description": "Corresponds to the `Response` field in the Dialogflow console.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessage",
      "properties": {
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
          "description": "Returns a voice or text-only response for Actions on Google."
        },
        "payload": {
          "description": "A custom platform-specific response.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "quickReplies": {
          "description": "Displays quick replies.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
        },
        "telephonySynthesizeSpeech": {
          "description": "Synthesizes speech in Telephony Gateway.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech"
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "rbmCarouselRichCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
          "description": "Rich Business Messaging (RBM) carousel rich card response."
        },
        "suggestions": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions",
          "description": "Displays suggestion chips for Actions on Google."
        },
        "image": {
          "description": "Displays an image.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageText",
          "description": "Returns a text response."
        },
        "telephonyTransferCall": {
          "description": "Transfers the call in Telephony Gateway.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall"
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
          "description": "Displays a list card for Actions on Google."
        },
        "rbmText": {
          "description": "Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
        },
        "basicCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
          "description": "Displays a basic card for Actions on Google."
        },
        "rbmStandaloneRichCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard",
          "description": "Standalone Rich Business Messaging (RBM) rich card response."
        },
        "mediaContent": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
          "description": "The media content card for Actions on Google."
        },
        "card": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCard",
          "description": "Displays a card."
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "TELEPHONY",
            "GOOGLE_HANGOUTS"
          ],
          "type": "string",
          "description": "Optional. The platform that this message is intended for.",
          "enumDescriptions": [
            "Not specified.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Telephony Gateway.",
            "Google Hangouts."
          ]
        },
        "linkOutSuggestion": {
          "description": "Displays a link out suggestion chip for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion"
        },
        "telephonyPlayAudio": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
          "description": "Plays audio from a file in Telephony Gateway."
        },
        "tableCard": {
          "description": "Table card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCard"
        },
        "carouselSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
          "description": "Displays a carousel card for Actions on Google."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentBatch": {
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "A collection of intents.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentBatch",
      "description": "This message is a wrapper around a collection of intents."
    },
    "GoogleCloudDialogflowV2beta1Sentiment": {
      "type": "object",
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "properties": {
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        },
        "magnitude": {
          "format": "float",
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1Sentiment"
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersRequest": {
      "type": "object",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest",
      "properties": {
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
        },
        "contextSize": {
          "type": "integer",
          "format": "int32",
          "description": "Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageText": {
      "properties": {
        "text": {
          "description": "Required. A collection of text responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageText",
      "description": "The text response message.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowV2beta1ImportDocumentsResponse",
      "type": "object",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "type": "array",
          "description": "Includes details about skipped documents or any other warnings.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageColumnProperties": {
      "description": "Column properties for TableCard.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageColumnProperties",
      "properties": {
        "header": {
          "type": "string",
          "description": "Required. Column heading."
        },
        "horizontalAlignment": {
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech": {
      "description": "Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
      "type": "object",
      "properties": {
        "ssml": {
          "description": "The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).",
          "type": "string"
        },
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantEvent": {
      "properties": {
        "participant": {
          "type": "string",
          "description": "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow."
        },
        "conversation": {
          "type": "string",
          "description": "The conversation this notification refers to. Format: `projects//conversations/`."
        },
        "suggestionResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          },
          "description": "The suggestion results payload that this notification refers to."
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantEvent",
      "description": "Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell": {
      "description": "Cell of TableCardRow.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse": {
      "type": "object",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityType"
          },
          "type": "array",
          "description": "The collection of updated or created entity types."
        }
      },
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse"
    },
    "GoogleCloudDialogflowCxV3FormParameter": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FormParameter",
      "properties": {
        "fillBehavior": {
          "$ref": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
          "description": "Required. Defines fill behavior for the parameter."
        },
        "displayName": {
          "description": "Required. The human-readable name of the parameter, unique within the form.",
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        },
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        }
      },
      "description": "Represents a form parameter."
    },
    "GoogleCloudDialogflowV2SpeechContext": {
      "description": "Hints for the speech recognizer to help with recognition in a specific conversation state.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2SpeechContext",
      "properties": {
        "boost": {
          "type": "number",
          "description": "Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will increase the probability that the phrases in this context are recognized over similar sounding phrases. * If the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that you use boosts in the range (0, 20] and that you find a value that fits your use case with binary search.",
          "format": "float"
        },
        "phrases": {
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. This list can be used to: * improve accuracy for words and phrases you expect the user to say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer vocabulary * ... See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/quotas) for usage limits.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2OriginalDetectIntentRequest": {
      "id": "GoogleCloudDialogflowV2OriginalDetectIntentRequest",
      "type": "object",
      "properties": {
        "payload": {
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "source": {
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.",
          "type": "string"
        },
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        }
      },
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageImage": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageImage",
      "type": "object",
      "description": "The image response message.",
      "properties": {
        "accessibilityText": {
          "type": "string",
          "description": "A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect."
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1AudioInput": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "GoogleCloudDialogflowCxV3beta1InputAudioConfig",
          "description": "Required. Instructs the speech recognizer how to process the speech audio."
        },
        "audio": {
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Represents the natural speech audio to be processed.",
      "id": "GoogleCloudDialogflowCxV3beta1AudioInput"
    },
    "GoogleCloudDialogflowCxV3beta1IntentParameter": {
      "id": "GoogleCloudDialogflowCxV3beta1IntentParameter",
      "description": "Represents an intent parameter.",
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "id": {
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.",
          "type": "string"
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1EventInput": {
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      },
      "description": "Represents the event to trigger.",
      "id": "GoogleCloudDialogflowCxV3beta1EventInput",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCard": {
      "properties": {
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle to the title."
        },
        "image": {
          "description": "Optional. Image which should be displayed on the card.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. List of buttons for the card.",
          "type": "array"
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the card."
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
          },
          "description": "Optional. Rows in this table of data."
        },
        "columnProperties": {
          "description": "Optional. Display properties for the columns in this table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageColumnProperties"
          }
        }
      },
      "description": "Table card for Actions on Google.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCard"
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseResult": {
      "properties": {
        "testResult": {
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "type": "string",
          "description": "Whether the test case passed in the agent environment.",
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ]
        },
        "conversationTurns": {
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "testTime": {
          "description": "The time that the test was run.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Represents a result from running a test case in an agent environment.",
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseResult",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3InputAudioConfig": {
      "properties": {
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        },
        "sampleRateHertz": {
          "type": "integer",
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "format": "int32"
        },
        "audioEncoding": {
          "description": "Required. Audio encoding of the audio content to process.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "type": "string"
        },
        "modelVariant": {
          "description": "Optional. Which variant of the Speech model to use.",
          "type": "string",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ]
        },
        "phraseHints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details."
        },
        "model": {
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.",
          "type": "string"
        },
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3InputAudioConfig",
      "type": "object",
      "description": "Instructs the speech recognizer on how to process the audio content."
    },
    "GoogleCloudDialogflowV2QueryInput": {
      "description": "Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text,. 3. An event that specifies which intent to trigger.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2QueryInput",
      "properties": {
        "event": {
          "description": "The event to be processed.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        },
        "audioConfig": {
          "description": "Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowV2InputAudioConfig"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2TextInput",
          "description": "The natural language text to be processed."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsResponse": {
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases": {
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases",
      "properties": {
        "cases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          },
          "type": "array",
          "description": "A list of cascading if-else conditions."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ListSessionEntityTypesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "type": "array",
          "description": "The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "description": "The response message for SessionEntityTypes.ListSessionEntityTypes."
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of media card."
        },
        "largeImage": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image to display above media content."
        },
        "icon": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        },
        "contentUrl": {
          "description": "Required. Url where the media is stored.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject",
      "description": "Response media object for media content card.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1EntityTypeEntity": {
      "id": "GoogleCloudDialogflowV2beta1EntityTypeEntity",
      "properties": {
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
        },
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        }
      },
      "type": "object",
      "description": "An **entity entry** for an associated entity type."
    },
    "GoogleCloudDialogflowV2SessionEntityType": {
      "id": "GoogleCloudDialogflowV2SessionEntityType",
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        },
        "entities": {
          "description": "Required. The collection of entities associated with this session entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "type": "array"
        },
        "entityOverrideMode": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "type": "string",
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ]
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata",
      "description": "Metadata for ImportDocuments operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse": {
      "type": "object",
      "properties": {
        "smartReplyAnswers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          },
          "description": "Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig."
        },
        "contextSize": {
          "format": "int32",
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation."
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        }
      },
      "description": "The response message for Participants.SuggestSmartReplies.",
      "id": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
    },
    "GoogleCloudDialogflowV2ConversationPhoneNumber": {
      "description": "Represents a phone number for telephony integration. It allows for connecting a particular conversation over telephony.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The phone number to connect to this conversation."
        }
      },
      "id": "GoogleCloudDialogflowV2ConversationPhoneNumber",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswers": {
      "properties": {
        "answers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          },
          "type": "array",
          "description": "A list of answers from Knowledge Connector."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
      "description": "Represents the result of querying a Knowledge base."
    },
    "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1Page": {
      "properties": {
        "transitionRouteGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the page, unique within the agent."
        },
        "transitionRoutes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          },
          "type": "array",
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
        },
        "entryFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the session is entering the page."
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "type": "array"
        },
        "name": {
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).",
      "id": "GoogleCloudDialogflowCxV3beta1Page"
    },
    "GoogleCloudDialogflowV2TrainAgentRequest": {
      "description": "The request message for Agents.TrainAgent.",
      "properties": {},
      "id": "GoogleCloudDialogflowV2TrainAgentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1DtmfInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1DtmfInput",
      "description": "Represents the input for dtmf event.",
      "properties": {
        "digits": {
          "type": "string",
          "description": "The dtmf digits."
        },
        "finishDigit": {
          "description": "The finish digit (if any).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult": {
      "description": "Represents the result of sentiment analysis.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult",
      "type": "object",
      "properties": {
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata",
      "description": "Metadata for DeleteDocument operation."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo",
      "description": "Represents intent information communicated to the webhook.",
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "parameters": {
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo": {
      "properties": {
        "parentFollowupIntentName": {
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "followupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
        }
      },
      "description": "Represents a single followup intent in the chain.",
      "id": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse",
      "description": "The response message for TestCases.ExportTestCases.",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Uncompressed raw byte content for test cases."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageText": {
      "properties": {
        "text": {
          "description": "Optional. The collection of the agent's responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The text response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageText"
    },
    "GoogleCloudDialogflowV2RestoreAgentRequest": {
      "description": "The request message for Agents.RestoreAgent.",
      "properties": {
        "agentContent": {
          "format": "byte",
          "type": "string",
          "description": "Zip compressed raw byte content for agent."
        },
        "agentUri": {
          "description": "The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2RestoreAgentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata": {
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata",
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurn": {
      "type": "object",
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.",
      "properties": {
        "userInput": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput",
          "description": "The user input."
        },
        "virtualAgentOutput": {
          "description": "The virtual agent output.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageText": {
      "properties": {
        "text": {
          "description": "Required. A collection of text responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
    },
    "GoogleCloudDialogflowV2ExportAgentRequest": {
      "id": "GoogleCloudDialogflowV2ExportAgentRequest",
      "description": "The request message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "description": "Required. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "type": "object",
      "id": "GoogleCloudLocationListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageListSelect": {
      "description": "The card for presenting a list of options to select from.",
      "type": "object",
      "properties": {
        "subtitle": {
          "description": "Optional. Subtitle of the list.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. The overall title of the list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageListSelectItem"
          },
          "description": "Required. List items."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageListSelect"
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig": {
      "type": "object",
      "description": "Configuration specific to LivePerson (https://www.liveperson.com).",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig",
      "properties": {
        "accountNumber": {
          "type": "string",
          "description": "Required. Account number of the LivePerson account to connect. This is the account number you input at the login page."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      },
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3Form": {
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.",
      "properties": {
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FormParameter"
          },
          "description": "Parameters to collect from the user.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3Form",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse": {
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse",
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Intent"
          },
          "description": "The collection of updated or created intents.",
          "type": "array"
        }
      },
      "description": "The response message for Intents.BatchUpdateIntents.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Context": {
      "properties": {
        "parameters": {
          "type": "object",
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "lifespanCount": {
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
          "type": "string"
        }
      },
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "type": "object",
      "id": "GoogleCloudDialogflowV2Context"
    },
    "GoogleCloudDialogflowCxV3TestConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestConfig",
      "description": "Represents configurations for a test case.",
      "properties": {
        "flow": {
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "trackingParameters": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Session parameters to be compared when calculating differences."
        }
      }
    },
    "GoogleCloudDialogflowV2AnalyzeContentResponse": {
      "id": "GoogleCloudDialogflowV2AnalyzeContentResponse",
      "type": "object",
      "properties": {
        "humanAgentSuggestionResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          },
          "type": "array",
          "description": "The suggestions for most recent human agent. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.human_agent_suggestion_config."
        },
        "dtmfParameters": {
          "$ref": "GoogleCloudDialogflowV2DtmfParameters",
          "description": "Indicates the parameters of DTMF."
        },
        "automatedAgentReply": {
          "description": "Only set if a Dialogflow automated agent has responded. Note that: AutomatedAgentReply.detect_intent_response.output_audio and AutomatedAgentReply.detect_intent_response.output_audio_config are always empty, use reply_audio instead.",
          "$ref": "GoogleCloudDialogflowV2AutomatedAgentReply"
        },
        "replyText": {
          "description": "The output text content. This field is set if the automated agent responded with text to show to the user.",
          "type": "string"
        },
        "endUserSuggestionResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          },
          "description": "The suggestions for end user. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.end_user_suggestion_config."
        },
        "replyAudio": {
          "$ref": "GoogleCloudDialogflowV2OutputAudio",
          "description": "The audio data bytes encoded as specified in the request. This field is set if: - `reply_audio_config` was specified in the request, or - The automated agent responded with audio to play to the user. In such case, `reply_audio.config` contains settings used to synthesize the speech. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        },
        "message": {
          "description": "Message analyzed by CCAI.",
          "$ref": "GoogleCloudDialogflowV2Message"
        }
      },
      "description": "The response message for Participants.AnalyzeContent."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff"
    },
    "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart": {
      "properties": {
        "parameterId": {
          "type": "string",
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase."
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      },
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardCell": {
      "description": "Cell of TableCardRow.",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardCell",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata",
      "type": "object",
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.",
      "properties": {}
    },
    "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse": {
      "id": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse",
      "type": "object",
      "properties": {
        "mergeBehavior": {
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "description": "Merge behavior for `messages`.",
          "type": "string",
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ]
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user."
        }
      },
      "description": "Represents a fulfillment response to the user."
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          },
          "description": "The test errors.",
          "type": "array"
        }
      },
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on.",
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase",
      "properties": {
        "parts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          },
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this training phrase."
        },
        "type": {
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "type": "string",
          "description": "Required. The type of the training phrase.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ]
        },
        "timesAddedCount": {
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ImportAgentRequest": {
      "description": "The request message for Agents.ImportAgent.",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with \"gs://\"."
        }
      },
      "id": "GoogleCloudDialogflowV2ImportAgentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata": {
      "properties": {
        "state": {
          "description": "Required. Output only. The current state of this operation.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ]
        }
      },
      "type": "object",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1TestRunDifference": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        },
        "type": {
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ],
          "description": "The type of diff.",
          "type": "string",
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TestRunDifference",
      "description": "The description of differences between original and replayed agent output."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
      "type": "object",
      "description": "Plays audio from a file in Telephony Gateway.",
      "properties": {
        "audioUri": {
          "description": "Required. URI to a Google Cloud Storage object containing the audio to play, e.g., \"gs://bucket/object\". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1EventInput": {
      "id": "GoogleCloudDialogflowV2beta1EventInput",
      "type": "object",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
      "properties": {
        "name": {
          "description": "Required. The unique identifier of the event.",
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction": {
      "description": "Opens the given URI.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ImportFlowResponse": {
      "id": "GoogleCloudDialogflowCxV3ImportFlowResponse",
      "description": "The response message for Flows.ImportFlow.",
      "properties": {
        "flow": {
          "type": "string",
          "description": "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2AgentAssistantRecord": {
      "description": "Represents a record of a human agent assist answer.",
      "type": "object",
      "properties": {
        "faqAnswer": {
          "readOnly": true,
          "description": "Output only. The FAQ answer.",
          "$ref": "GoogleCloudDialogflowV2FaqAnswer"
        },
        "articleSuggestionAnswer": {
          "description": "Output only. The article suggestion answer.",
          "$ref": "GoogleCloudDialogflowV2ArticleAnswer",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDialogflowV2AgentAssistantRecord"
    },
    "GoogleCloudDialogflowV2SuggestionResult": {
      "id": "GoogleCloudDialogflowV2SuggestionResult",
      "type": "object",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "properties": {
        "suggestFaqAnswersResponse": {
          "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse",
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER."
        },
        "error": {
          "description": "Error status if the request failed.",
          "$ref": "GoogleRpcStatus"
        },
        "suggestArticlesResponse": {
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.",
          "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion",
      "properties": {
        "reply": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply",
          "description": "Predefined replies for user to select instead of typing"
        },
        "action": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction",
          "description": "Predefined client side actions that user can choose"
        }
      },
      "description": "Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri)."
    },
    "GoogleCloudDialogflowV2DocumentReloadStatus": {
      "description": "The status of a reload attempt.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2DocumentReloadStatus",
      "properties": {
        "time": {
          "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of a reload attempt or the initial load."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput": {
      "description": "The output from the virtual agent.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Response error from the agent in the test result. If set, other output is empty.",
          "$ref": "GoogleRpcStatus"
        },
        "differences": {
          "readOnly": true,
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestRunDifference"
          },
          "type": "array"
        },
        "sessionParameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The session parameters available to the bot at this point.",
          "type": "object"
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Page",
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set."
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage."
        },
        "textResponses": {
          "description": "The text responses from the agent for the turn.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          }
        },
        "triggeredIntent": {
          "description": "The Intent that triggered the response. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput"
    },
    "GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata",
      "description": "Metadata returned for the Environments.RunContinuousTest long running operation.",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Errors for failed test cases.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseError"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata": {
      "description": "Metadata for ImportDocuments operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowV2ListConversationProfilesResponse": {
      "properties": {
        "conversationProfiles": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2ConversationProfile"
          },
          "type": "array",
          "description": "The list of project conversation profiles. There is a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ListConversationProfilesResponse",
      "type": "object",
      "description": "The response message for ConversationProfiles.ListConversationProfiles."
    },
    "GoogleCloudDialogflowCxV3DeployFlowResponse": {
      "id": "GoogleCloudDialogflowCxV3DeployFlowResponse",
      "description": "The response message for Environments.DeployFlow.",
      "type": "object",
      "properties": {
        "deployment": {
          "type": "string",
          "description": "The name of the flow version Deployment. Format: `projects//locations//agents// environments//deployments/`."
        },
        "environment": {
          "description": "The updated environment where the flow is deployed.",
          "$ref": "GoogleCloudDialogflowCxV3Environment"
        }
      }
    },
    "GoogleCloudDialogflowV2ListMessagesResponse": {
      "id": "GoogleCloudDialogflowV2ListMessagesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Message"
          },
          "type": "array",
          "description": "The list of messages. There will be a maximum number of items returned based on the page_size field in the request. `messages` is sorted by `create_time` in descending order."
        }
      },
      "description": "The response message for Conversations.ListMessages.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse",
      "description": "The response message for TestCases.ImportTestCases.",
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ExportAgentResponse": {
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest."
        },
        "agentContent": {
          "type": "string",
          "description": "Uncompressed raw byte content for agent.",
          "format": "byte"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ExportAgentResponse",
      "type": "object",
      "description": "The response message for Agents.ExportAgent."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequest",
      "type": "object",
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases.",
      "properties": {
        "messages": {
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array"
        },
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        },
        "intentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
          "description": "Information about the last matched intent."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo",
          "description": "Information about session status."
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo",
          "description": "Information about page status."
        },
        "detectIntentResponseId": {
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.",
          "type": "string"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
        },
        "languageCode": {
          "type": "string",
          "description": "The language code specified in the original request."
        },
        "payload": {
          "description": "Custom data set in QueryParameters.payload.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        }
      },
      "description": "Specifies an audio clip to be played by the client as part of the response."
    },
    "GoogleCloudDialogflowV2DtmfParameters": {
      "type": "object",
      "description": "The message in the response that indicates the parameters of DTMF.",
      "id": "GoogleCloudDialogflowV2DtmfParameters",
      "properties": {
        "acceptsDtmfInput": {
          "description": "Indicates whether DTMF input can be handled in the next request.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1WebhookRequest": {
      "type": "object",
      "properties": {
        "alternativeQueryResults": {
          "description": "Alternative query results from KnowledgeService.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
          }
        },
        "session": {
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,",
          "type": "string"
        },
        "originalDetectIntentRequest": {
          "$ref": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call."
        },
        "queryResult": {
          "$ref": "GoogleCloudDialogflowV2beta1QueryResult",
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`."
        },
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`."
        }
      },
      "description": "The request message for a webhook call.",
      "id": "GoogleCloudDialogflowV2beta1WebhookRequest"
    },
    "GoogleCloudDialogflowV2beta1Message": {
      "id": "GoogleCloudDialogflowV2beta1Message",
      "description": "Represents a message posted into a conversation.",
      "properties": {
        "content": {
          "description": "Required. The message content.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the message was created in Contact Center AI."
        },
        "messageAnnotation": {
          "readOnly": true,
          "description": "Output only. The annotation for the message.",
          "$ref": "GoogleCloudDialogflowV2beta1MessageAnnotation"
        },
        "name": {
          "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "participant": {
          "type": "string",
          "description": "Output only. The participant that sends this message.",
          "readOnly": true
        },
        "participantRole": {
          "readOnly": true,
          "description": "Output only. The role of the participant.",
          "type": "string",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ]
        },
        "sendTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The time when the message was sent."
        },
        "sentimentAnalysis": {
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "description": "Output only. The sentiment analysis result for the message.",
          "readOnly": true
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2AgentAssistantFeedback": {
      "description": "Detail feedback of Agent Assist result.",
      "id": "GoogleCloudDialogflowV2AgentAssistantFeedback",
      "properties": {
        "documentCorrectness": {
          "enum": [
            "DOCUMENT_CORRECTNESS_UNSPECIFIED",
            "INCORRECT",
            "CORRECT"
          ],
          "enumDescriptions": [
            "Document correctness unspecified.",
            "Information in document is incorrect.",
            "Information in document is correct."
          ],
          "description": "Optional. Whether or not the information in the document is correct. For example: * Query: \"Can I return the package in 2 days once received?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * Ground truth: \"No return or exchange is allowed.\" * [document_correctness]: INCORRECT",
          "type": "string"
        },
        "documentEfficiency": {
          "type": "string",
          "enumDescriptions": [
            "Document efficiency unspecified.",
            "Document is inefficient.",
            "Document is efficient."
          ],
          "enum": [
            "DOCUMENT_EFFICIENCY_UNSPECIFIED",
            "INEFFICIENT",
            "EFFICIENT"
          ],
          "description": "Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT."
        },
        "answerRelevance": {
          "type": "string",
          "enumDescriptions": [
            "Answer relevance unspecified.",
            "Answer is irrelevant to query.",
            "Answer is relevant to query."
          ],
          "enum": [
            "ANSWER_RELEVANCE_UNSPECIFIED",
            "IRRELEVANT",
            "RELEVANT"
          ],
          "description": "Optional. Whether or not the suggested answer is relevant. For example: * Query: \"Can I change my mailing address?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * answer_relevance: AnswerRelevance.IRRELEVANT"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
      "description": "Opens the device's location chooser so the user can pick a location to send back to the agent."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse": {
      "description": "Represents a fulfillment response to the user.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
      "properties": {
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user."
        },
        "mergeBehavior": {
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "description": "Merge behavior for `messages`.",
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestRunDifference": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestRunDifference",
      "description": "The description of differences between original and replayed agent output.",
      "properties": {
        "description": {
          "description": "A description of the diff, showing the actual output vs expected output.",
          "type": "string"
        },
        "type": {
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ],
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "type": "string",
          "description": "The type of diff."
        }
      }
    },
    "GoogleCloudDialogflowV2ListEnvironmentsResponse": {
      "description": "The response message for Environments.ListEnvironments.",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Environment"
          },
          "description": "The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowV2ListEnvironmentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia",
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "112 DP.",
            "168 DP.",
            "264 DP. Not available for rich card carousels when the card width is set to small."
          ],
          "enum": [
            "HEIGHT_UNSPECIFIED",
            "SHORT",
            "MEDIUM",
            "TALL"
          ],
          "description": "Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored."
        },
        "thumbnailUri": {
          "description": "Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.",
          "type": "string"
        },
        "fileUri": {
          "description": "Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.",
          "type": "string"
        }
      },
      "description": "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm"
    },
    "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata": {
      "type": "object",
      "description": "Metadata for CreateDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowV2FulfillmentGenericWebService": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Optional. The password for HTTP Basic authentication."
        },
        "requestHeaders": {
          "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "username": {
          "description": "Optional. The user name for HTTP Basic authentication.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol."
        },
        "isCloudFunction": {
          "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false. is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowV2FulfillmentGenericWebService",
      "description": "Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers. More information could be found at: https://cloud.google.com/dialogflow/docs/fulfillment-configure."
    },
    "GoogleCloudDialogflowCxV3ContinuousTestResult": {
      "type": "object",
      "description": "Represents a result from running a test case in an agent environment.",
      "properties": {
        "testCaseResults": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of individual test case results names in this continuous test run."
        },
        "runTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time when the continuous testing run starts."
        },
        "result": {
          "enum": [
            "AGGREGATED_TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "All the tests passed.",
            "At least one test did not pass."
          ],
          "description": "The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."
        },
        "name": {
          "type": "string",
          "description": "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ContinuousTestResult"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard",
      "properties": {
        "cardContent": {
          "description": "Required. Card content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
        },
        "cardOrientation": {
          "type": "string",
          "enum": [
            "CARD_ORIENTATION_UNSPECIFIED",
            "HORIZONTAL",
            "VERTICAL"
          ],
          "description": "Required. Orientation of the card.",
          "enumDescriptions": [
            "Not specified.",
            "Horizontal layout.",
            "Vertical layout."
          ]
        },
        "thumbnailImageAlignment": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Thumbnail preview is left-aligned.",
            "Thumbnail preview is right-aligned."
          ],
          "enum": [
            "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED",
            "LEFT",
            "RIGHT"
          ],
          "description": "Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout."
        }
      },
      "type": "object",
      "description": "Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout."
    },
    "GoogleCloudDialogflowV2ListConversationsResponse": {
      "id": "GoogleCloudDialogflowV2ListConversationsResponse",
      "properties": {
        "conversations": {
          "description": "The list of conversations. There will be a maximum number of items returned based on the page_size field in the request.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Conversation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "The response message for Conversations.ListConversations.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2EntityTypeEntity": {
      "id": "GoogleCloudDialogflowV2EntityTypeEntity",
      "type": "object",
      "description": "An **entity entry** for an associated entity type.",
      "properties": {
        "synonyms": {
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3RunContinuousTestMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunContinuousTestMetadata",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "type": "array"
        }
      },
      "description": "Metadata returned for the Environments.RunContinuousTest long running operation."
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse": {
      "type": "object",
      "description": "The response message for TestCases.RunTestCase.",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse",
      "properties": {
        "result": {
          "description": "The result.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
        }
      }
    },
    "GoogleCloudDialogflowV2Fulfillment": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2Fulfillment",
      "properties": {
        "features": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2FulfillmentFeature"
          },
          "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
          "type": "array"
        },
        "displayName": {
          "description": "Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.",
          "type": "string"
        },
        "genericWebService": {
          "description": "Configuration for a generic web service.",
          "$ref": "GoogleCloudDialogflowV2FulfillmentGenericWebService"
        },
        "enabled": {
          "description": "Optional. Whether fulfillment is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.",
          "type": "string"
        }
      },
      "description": "By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview)."
    },
    "GoogleCloudDialogflowV2beta1SessionEntityType": {
      "type": "object",
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "id": "GoogleCloudDialogflowV2beta1SessionEntityType",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Required. The collection of entities associated with this session entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          }
        },
        "entityOverrideMode": {
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition."
        },
        "name": {
          "description": "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent": {
      "description": "The list of messages or conditional cases to activate for this case.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent",
      "properties": {
        "additionalCases": {
          "description": "Additional cases to be evaluated.",
          "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
        },
        "message": {
          "description": "Returned message.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
        }
      }
    },
    "GoogleCloudDialogflowCxV3RunTestCaseMetadata": {
      "type": "object",
      "properties": {},
      "description": "Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseMetadata"
    },
    "GoogleCloudDialogflowV2beta1EntityType": {
      "id": "GoogleCloudDialogflowV2beta1EntityType",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`"
        },
        "kind": {
          "type": "string",
          "description": "Required. Indicates the kind of entity type.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ]
        },
        "autoExpansionMode": {
          "type": "string",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type."
        },
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2Document": {
      "properties": {
        "enableAutoReload": {
          "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.",
          "type": "boolean"
        },
        "contentUri": {
          "description": "The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.",
          "type": "string"
        },
        "name": {
          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. The MIME type of this document."
        },
        "knowledgeTypes": {
          "items": {
            "type": "string",
            "enum": [
              "KNOWLEDGE_TYPE_UNSPECIFIED",
              "FAQ",
              "EXTRACTIVE_QA",
              "ARTICLE_SUGGESTION"
            ],
            "enumDescriptions": [
              "The type is unspecified or arbitrary.",
              "The document content contains question and answer pairs as either HTML or CSV. Typical FAQ HTML formats are parsed accurately, but unusual formats may fail to be parsed. CSV must have questions in the first column and answers in the second, with no header. Because of this explicit format, they are always parsed accurately.",
              "Documents for which unstructured text is extracted and used for question answering.",
              "The entire document content as a whole can be used for query results. Only for Contact Center Solutions on Dialogflow."
            ]
          },
          "description": "Required. The knowledge type of document content.",
          "type": "array"
        },
        "rawContent": {
          "format": "byte",
          "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.",
          "type": "string"
        },
        "latestReloadStatus": {
          "readOnly": true,
          "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.",
          "$ref": "GoogleCloudDialogflowV2DocumentReloadStatus"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes."
        }
      },
      "id": "GoogleCloudDialogflowV2Document",
      "type": "object",
      "description": "A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`."
    },
    "GoogleCloudDialogflowCxV3beta1Fulfillment": {
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "id": "GoogleCloudDialogflowCxV3beta1Fulfillment",
      "type": "object",
      "properties": {
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user."
        },
        "tag": {
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.",
          "type": "string"
        },
        "webhook": {
          "type": "string",
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`."
        },
        "returnPartialResponses": {
          "type": "boolean",
          "description": "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
        },
        "conditionalCases": {
          "description": "Conditional cases for this fulfillment.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          },
          "type": "array"
        },
        "setParameterActions": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          },
          "description": "Set parameter values before executing the webhook.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest": {
      "properties": {
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "type": "object"
        },
        "version": {
          "type": "string",
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific."
        },
        "source": {
          "type": "string",
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers."
        }
      },
      "type": "object",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "id": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText": {
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        },
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        },
        "ssml": {
          "type": "string",
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCard": {
      "properties": {
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          },
          "type": "array"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCard",
      "type": "object",
      "description": "The card response message."
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsRequest": {
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest",
      "properties": {
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        },
        "intentView": {
          "type": "string",
          "enum": [
            "INTENT_VIEW_UNSPECIFIED",
            "INTENT_VIEW_FULL"
          ],
          "description": "Optional. The resource view to apply to the returned intent.",
          "enumDescriptions": [
            "Training phrases field is not populated in the response.",
            "All fields are populated."
          ]
        },
        "intentBatchInline": {
          "description": "The collection of intents to update or create.",
          "$ref": "GoogleCloudDialogflowV2IntentBatch"
        },
        "intentBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        },
        "updateMask": {
          "type": "string",
          "description": "Optional. The mask to control which fields get updated.",
          "format": "google-fieldmask"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestError": {
      "description": "Error info for running a test.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test."
        },
        "testCase": {
          "type": "string",
          "description": "The test case resource name."
        },
        "testTime": {
          "description": "The timestamp when the test was completed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TestError"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponses": {
      "type": "object",
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
      "properties": {
        "simpleResponses": {
          "description": "Required. The list of simple responses.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2EnvironmentHistoryEntry": {
      "id": "GoogleCloudDialogflowV2EnvironmentHistoryEntry",
      "properties": {
        "description": {
          "type": "string",
          "description": "The developer-provided description for this environment history entry."
        },
        "agentVersion": {
          "type": "string",
          "description": "The agent version loaded into this environment history entry."
        },
        "createTime": {
          "description": "The creation time of this environment history entry.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Represents an environment history entry."
    },
    "GoogleCloudDialogflowCxV3beta1FormParameter": {
      "id": "GoogleCloudDialogflowCxV3beta1FormParameter",
      "type": "object",
      "description": "Represents a form parameter.",
      "properties": {
        "required": {
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "fillBehavior": {
          "$ref": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
          "description": "Required. Defines fill behavior for the parameter."
        },
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
      "type": "object",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this."
        }
      },
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
    },
    "GoogleCloudDialogflowV2AutomatedAgentConfig": {
      "description": "Defines the Automated Agent to connect to a conversation.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2AutomatedAgentConfig",
      "properties": {
        "agent": {
          "description": "Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as the conversation or you need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API Service Agent` role in this project. Format: `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment is used. Refer to [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2#google.cloud.dialogflow.v2.DetectIntentRequest) for more details.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo": {
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "type": "string",
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ]
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "justCollected": {
          "type": "boolean",
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn."
        },
        "required": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents parameter information."
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestions": {
      "properties": {
        "suggestions": {
          "description": "Required. The list of suggested replies.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestion"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The collection of suggestions.",
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestions"
    },
    "GoogleCloudDialogflowV2beta1SuggestArticlesResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
      "type": "object",
      "properties": {
        "articleAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1ArticleAnswer"
          },
          "description": "Output only. Articles ordered by score in descending order.",
          "type": "array"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The response message for Participants.SuggestArticles."
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesResponse": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesResponse",
      "type": "object",
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
        }
      },
      "description": "The response message for TestCases.ImportTestCases."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource",
      "properties": {
        "agent": {
          "type": "string",
          "description": "Required. The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: `projects//locations//agent`. When multiple agents are allowed in the same Dialogflow project."
        }
      },
      "description": "Dialogflow source setting. Supported feature: DIALOGFLOW_ASSIST."
    },
    "GoogleCloudDialogflowCxV3beta1SessionInfo": {
      "properties": {
        "parameters": {
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "type": "object",
          "additionalProperties": {
            "type": "any"
          }
        },
        "session": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1SessionInfo",
      "description": "Represents session information communicated to and from the webhook."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3RunTestCaseResponse": {
      "description": "The response message for TestCases.RunTestCase.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseResponse",
      "properties": {
        "result": {
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult",
          "description": "The result."
        }
      }
    },
    "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "properties": {
        "state": {
          "description": "Required. Output only. The current state of this operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCard": {
      "properties": {
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. The collection of card buttons."
        },
        "formattedText": {
          "type": "string",
          "description": "Required, unless image is present. The body text of the card."
        },
        "image": {
          "description": "Optional. The image for the card.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCard",
      "description": "The basic card message. Useful for displaying information."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion": {
      "properties": {
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        },
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        }
      },
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisResult": {
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "id": "GoogleCloudDialogflowV2SentimentAnalysisResult",
      "properties": {
        "queryTextSentiment": {
          "$ref": "GoogleCloudDialogflowV2Sentiment",
          "description": "The sentiment analysis result for `query_text`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2QueryResult": {
      "id": "GoogleCloudDialogflowV2QueryResult",
      "type": "object",
      "description": "Represents the result of conversational query or event processing.",
      "properties": {
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "webhookPayload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object"
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
        },
        "webhookSource": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "speechRecognitionConfidence": {
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
          "type": "number",
          "format": "float"
        },
        "cancelsSlotFilling": {
          "description": "Indicates whether the conversational query triggers a cancellation for slot filling.",
          "type": "boolean"
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult"
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "parameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
          "type": "array"
        },
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "format": "float",
          "type": "number"
        },
        "intent": {
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.",
          "$ref": "GoogleCloudDialogflowV2Intent"
        },
        "fulfillmentMessages": {
          "type": "array",
          "description": "The collection of rich messages to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase": {
      "type": "object",
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.",
      "properties": {
        "caseContent": {
          "description": "A list of case content.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          }
        },
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses": {
      "properties": {
        "simpleResponses": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          },
          "description": "Required. The list of simple responses.",
          "type": "array"
        }
      },
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses"
    },
    "GoogleCloudDialogflowV2Agent": {
      "properties": {
        "matchMode": {
          "enum": [
            "MATCH_MODE_UNSPECIFIED",
            "MATCH_MODE_HYBRID",
            "MATCH_MODE_ML_ONLY"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Best for agents with a small number of examples in intents and/or wide use of templates syntax and composite entities.",
            "Can be used for agents with a large number of examples in intents, especially the ones using @sys.any or very large custom entities."
          ],
          "type": "string",
          "description": "Optional. Determines how intents are detected from user queries."
        },
        "defaultLanguageCode": {
          "description": "Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The project of this agent. Format: `projects/`."
        },
        "description": {
          "description": "Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "classificationThreshold": {
          "format": "float",
          "description": "Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.",
          "type": "number"
        },
        "displayName": {
          "description": "Required. The name of this agent.",
          "type": "string"
        },
        "apiVersion": {
          "description": "Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Legacy V1 API.",
            "V2 API.",
            "V2beta1 API."
          ],
          "enum": [
            "API_VERSION_UNSPECIFIED",
            "API_VERSION_V1",
            "API_VERSION_V2",
            "API_VERSION_V2_BETA_1"
          ]
        },
        "enableLogging": {
          "type": "boolean",
          "description": "Optional. Determines whether this agent should log conversation queries."
        },
        "supportedLanguageCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of all languages supported by this agent (except for the `default_language_code`)."
        },
        "timeZone": {
          "type": "string",
          "description": "Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris."
        },
        "avatarUri": {
          "type": "string",
          "description": "Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration."
        },
        "tier": {
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Trial Edition, previously known as Standard Edition.",
            "Essentials Edition, previously known as Enterprise Essential Edition.",
            "Essentials Edition (same as TIER_ENTERPRISE), previously known as Enterprise Plus Edition."
          ],
          "description": "Optional. The agent tier. If not specified, TIER_STANDARD is assumed.",
          "type": "string",
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_STANDARD",
            "TIER_ENTERPRISE",
            "TIER_ENTERPRISE_PLUS"
          ]
        }
      },
      "description": "A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system. For more information about agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview). ",
      "type": "object",
      "id": "GoogleCloudDialogflowV2Agent"
    },
    "GoogleCloudDialogflowV2beta1SmartReplyAnswer": {
      "properties": {
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        },
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "confidence": {
          "format": "float",
          "description": "Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SmartReplyAnswer",
      "description": "Represents a smart reply answer.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart": {
      "properties": {
        "parameterId": {
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      },
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowV2ValidationResult": {
      "description": "Represents the output of agent validation.",
      "properties": {
        "validationErrors": {
          "description": "Contains all validation errors.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2ValidationError"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ValidationResult"
    },
    "GoogleCloudDialogflowV2beta1SuggestionResult": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SuggestionResult",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "properties": {
        "suggestSmartRepliesResponse": {
          "description": "SuggestSmartRepliesResponse if request is for SMART_REPLY.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
        },
        "suggestFaqAnswersResponse": {
          "$ref": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER."
        },
        "suggestArticlesResponse": {
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Error status if the request failed."
        }
      }
    },
    "GoogleCloudDialogflowV2BatchCreateEntitiesRequest": {
      "type": "object",
      "description": "The request message for EntityTypes.BatchCreateEntities.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Required. The entities to create.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction",
      "properties": {}
    },
    "GoogleCloudDialogflowV2ListAnswerRecordsResponse": {
      "id": "GoogleCloudDialogflowV2ListAnswerRecordsResponse",
      "description": "Response message for AnswerRecords.ListAnswerRecords.",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Or empty if there are no more results. Pass this value in the ListAnswerRecordsRequest.page_token field in the subsequent call to `ListAnswerRecords` method to retrieve the next page of results.",
          "type": "string"
        },
        "answerRecords": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnswerRecord"
          },
          "type": "array",
          "description": "The list of answer records."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig",
      "type": "object",
      "properties": {
        "enableEntityExtraction": {
          "description": "Enable entity extraction in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Currently, this feature is not general available, please contact Google to get access.",
          "type": "boolean"
        },
        "enableSentimentAnalysis": {
          "description": "Enable sentiment analysis in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For Participants.StreamingAnalyzeContent method, result will be in StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.",
          "type": "boolean"
        }
      },
      "description": "Configuration for analyses to run on each conversation message."
    },
    "GoogleCloudDialogflowCxV3beta1ContinuousTestResult": {
      "id": "GoogleCloudDialogflowCxV3beta1ContinuousTestResult",
      "description": "Represents a result from running a test case in an agent environment.",
      "properties": {
        "runTime": {
          "description": "Time when the continuous testing run starts.",
          "format": "google-datetime",
          "type": "string"
        },
        "testCaseResults": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of individual test case results names in this continuous test run."
        },
        "name": {
          "description": "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`.",
          "type": "string"
        },
        "result": {
          "type": "string",
          "enum": [
            "AGGREGATED_TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "All the tests passed.",
            "At least one test did not pass."
          ],
          "description": "The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ArticleAnswer": {
      "id": "GoogleCloudDialogflowV2beta1ArticleAnswer",
      "description": "Represents article answer.",
      "properties": {
        "uri": {
          "description": "The article URI.",
          "type": "string"
        },
        "snippets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Article snippets."
        },
        "metadata": {
          "type": "object",
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        },
        "title": {
          "description": "The article title.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCardButton": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Optional. The text to show on the button.",
          "type": "string"
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "description": "Contains information about a button.",
      "id": "GoogleCloudDialogflowV2IntentMessageCardButton"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestion": {
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The text shown the in the suggestion chip."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestion"
    },
    "GoogleCloudDialogflowV2ListVersionsResponse": {
      "description": "The response message for Versions.ListVersions.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "versions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Version"
          },
          "type": "array",
          "description": "The list of agent versions. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListVersionsResponse"
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentResponse": {
      "properties": {
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest.",
          "type": "string"
        },
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for agent."
        }
      },
      "description": "The response message for Agents.ExportAgent.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentResponse"
    },
    "GoogleCloudDialogflowCxV3IntentInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentInput",
      "properties": {
        "intent": {
          "type": "string",
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
        }
      },
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing."
    },
    "GoogleCloudDialogflowV2SuggestionFeature": {
      "id": "GoogleCloudDialogflowV2SuggestionFeature",
      "description": "The type of Human Agent Assistant API suggestion to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ"
          ],
          "type": "string",
          "description": "Type of Human Agent Assistant API feature to request.",
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model.",
            "Run FAQ model."
          ]
        }
      }
    },
    "GoogleCloudDialogflowV2beta1Context": {
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "id": "GoogleCloudDialogflowV2beta1Context",
      "properties": {
        "parameters": {
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
        },
        "lifespanCount": {
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo",
      "properties": {
        "tag": {
          "description": "Always present. The tag used to identify which fulfillment is being called.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents fulfillment information communicated to the webhook."
    },
    "GoogleCloudDialogflowV2SuggestArticlesResponse": {
      "type": "object",
      "properties": {
        "contextSize": {
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "articleAnswers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2ArticleAnswer"
          },
          "description": "Articles ordered by score in descending order."
        }
      },
      "description": "The response message for Participants.SuggestArticles.",
      "id": "GoogleCloudDialogflowV2SuggestArticlesResponse"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfig": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfig",
      "properties": {
        "endUserSuggestionConfig": {
          "description": "Configuration for agent assistance of end user participant. Currently, this feature is not general available, please contact Google to get access.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
        },
        "notificationConfig": {
          "description": "Pub/Sub topic on which to publish new agent assistant events.",
          "$ref": "GoogleCloudDialogflowV2NotificationConfig"
        },
        "humanAgentSuggestionConfig": {
          "description": "Configuration for agent assistance of human agent participant.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
        },
        "messageAnalysisConfig": {
          "description": "Configuration for message analysis.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig"
        }
      },
      "type": "object",
      "description": "Defines the Human Agent Assist to connect to a conversation."
    },
    "GoogleCloudDialogflowCxV3ResponseMessage": {
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "type": "object",
      "properties": {
        "outputAudioText": {
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText"
        },
        "playAudio": {
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Returns a response containing a custom, platform-specific payload."
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
        },
        "endInteraction": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction",
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response."
        },
        "conversationSuccess": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess",
          "description": "Indicates that the conversation succeeded."
        },
        "liveAgentHandoff": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff",
          "description": "Hands off conversation to a human agent."
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessage"
    },
    "GoogleCloudDialogflowV2Message": {
      "description": "Represents a message posted into a conversation.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2Message",
      "properties": {
        "languageCode": {
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "participantRole": {
          "description": "Output only. The role of the participant.",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "messageAnnotation": {
          "$ref": "GoogleCloudDialogflowV2MessageAnnotation",
          "description": "Output only. The annotation for the message.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the message was created."
        },
        "content": {
          "description": "Required. The message content.",
          "type": "string"
        },
        "participant": {
          "type": "string",
          "description": "Output only. The participant that sends this message.",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowV2Environment": {
      "id": "GoogleCloudDialogflowV2Environment",
      "description": "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
          "readOnly": true
        },
        "textToSpeechSettings": {
          "description": "Optional. Text to speech settings for this environment.",
          "$ref": "GoogleCloudDialogflowV2TextToSpeechSettings"
        },
        "description": {
          "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "type": "string"
        },
        "fulfillment": {
          "$ref": "GoogleCloudDialogflowV2Fulfillment",
          "description": "Optional. The fulfillment settings to use for this environment."
        },
        "state": {
          "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "STOPPED",
            "LOADING",
            "RUNNING"
          ],
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Stopped.",
            "Loading.",
            "Running."
          ],
          "type": "string"
        },
        "agentVersion": {
          "description": "Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest",
      "properties": {
        "entityTypeNames": {
          "description": "Required. The names entity types to delete. All names must point to the same agent as `parent`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "The request message for EntityTypes.BatchDeleteEntityTypes."
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo": {
      "properties": {
        "parameterInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          },
          "type": "array",
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
      "description": "Represents form information."
    },
    "GoogleCloudDialogflowCxV3TestError": {
      "id": "GoogleCloudDialogflowCxV3TestError",
      "type": "object",
      "description": "Error info for running a test.",
      "properties": {
        "status": {
          "description": "The status associated with the test.",
          "$ref": "GoogleRpcStatus"
        },
        "testTime": {
          "format": "google-datetime",
          "description": "The timestamp when the test was completed.",
          "type": "string"
        },
        "testCase": {
          "description": "The test case resource name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmText": {
      "properties": {
        "rbmSuggestion": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "description": "Optional. One or more suggestions to show to the user.",
          "type": "array"
        },
        "text": {
          "description": "Required. Text sent and displayed to the user.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmText",
      "type": "object",
      "description": "Rich Business Messaging (RBM) text response with suggestions."
    },
    "GoogleCloudDialogflowCxV3beta1InputAudioConfig": {
      "type": "object",
      "properties": {
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        },
        "phraseHints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details."
        },
        "modelVariant": {
          "type": "string",
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "description": "Optional. Which variant of the Speech model to use.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ]
        },
        "audioEncoding": {
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "type": "string",
          "description": "Required. Audio encoding of the audio content to process.",
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ]
        },
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "sampleRateHertz": {
          "type": "integer",
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "format": "int32"
        },
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        }
      },
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "id": "GoogleCloudDialogflowCxV3beta1InputAudioConfig"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource": {
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`. Currently, at most 5 documents are supported."
        }
      },
      "description": "Document source settings. Supported features: SMART_REPLY, SMART_COMPOSE.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource"
    },
    "GoogleCloudDialogflowV2ListParticipantsResponse": {
      "properties": {
        "participants": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Participant"
          },
          "description": "The list of participants. There is a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results or empty if there are no more results in the list."
        }
      },
      "description": "The response message for Participants.ListParticipants.",
      "id": "GoogleCloudDialogflowV2ListParticipantsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsResponse": {
      "type": "object",
      "properties": {
        "intents": {
          "description": "The collection of updated or created intents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "type": "array"
        }
      },
      "description": "The response message for Intents.BatchUpdateIntents.",
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsResponse"
    },
    "GoogleCloudDialogflowCxV3WebhookResponse": {
      "properties": {
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        },
        "fulfillmentResponse": {
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse"
        },
        "payload": {
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookResponse",
      "description": "The response message for a webhook call."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        },
        "synonyms": {
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Additional info about the select item for when it is triggered in a dialog."
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrase": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "description": "Required. The type of the training phrase."
        },
        "timesAddedCount": {
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Output only. The unique identifier of this training phrase.",
          "type": "string"
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrase",
      "description": "Represents an example that the agent is trained on."
    },
    "GoogleCloudDialogflowV2SpeechToTextConfig": {
      "description": "Configures speech transcription for ConversationProfile.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2SpeechToTextConfig",
      "properties": {
        "speechModelVariant": {
          "type": "string",
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "description": "Optional. The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest and StreamingAnalyzeContentRequest request.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction": {
      "properties": {},
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard": {
      "properties": {
        "items": {
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "type": "array"
        },
        "imageDisplayOptions": {
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "type": "string",
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel"
    },
    "GoogleCloudDialogflowV2ConversationEvent": {
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "type": "object",
      "properties": {
        "errorStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL."
        },
        "newMessagePayload": {
          "$ref": "GoogleCloudDialogflowV2Message",
          "description": "Payload of NEW_MESSAGE event."
        },
        "type": {
          "description": "The type of the event that this notification refers to.",
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "type": "string"
        },
        "conversation": {
          "type": "string",
          "description": "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
        }
      },
      "id": "GoogleCloudDialogflowV2ConversationEvent"
    },
    "GoogleCloudDialogflowCxV3SessionInfo": {
      "id": "GoogleCloudDialogflowCxV3SessionInfo",
      "description": "Represents session information communicated to and from the webhook.",
      "type": "object",
      "properties": {
        "session": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names."
        }
      }
    },
    "GoogleCloudDialogflowV2DetectIntentRequest": {
      "id": "GoogleCloudDialogflowV2DetectIntentRequest",
      "description": "The request to detect user's intent.",
      "properties": {
        "inputAudio": {
          "format": "byte",
          "description": "The natural language speech audio to be processed. This field should be populated iff `query_input` is set to an input audio config. A single request can contain up to 1 minute of speech audio data.",
          "type": "string"
        },
        "outputAudioConfig": {
          "description": "Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level speech synthesizer is not configured, no output audio is generated.",
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig"
        },
        "outputAudioConfigMask": {
          "format": "google-fieldmask",
          "description": "Mask for output_audio_config indicating which settings in this request-level config should override speech synthesizer settings defined at agent-level. If unspecified or empty, output_audio_config replaces the agent-level config in its entirety.",
          "type": "string"
        },
        "queryInput": {
          "description": "Required. The input specification. It can be set to: 1. an audio config which instructs the speech recognizer how to process the speech audio, 2. a conversational query in the form of text, or 3. an event that specifies which intent to trigger.",
          "$ref": "GoogleCloudDialogflowV2QueryInput"
        },
        "queryParams": {
          "description": "The parameters of this query.",
          "$ref": "GoogleCloudDialogflowV2QueryParameters"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportFlowResponse": {
      "properties": {
        "flowContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for flow."
        },
        "flowUri": {
          "description": "The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportFlowResponse",
      "description": "The response message for Flows.ExportFlow."
    },
    "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation."
    },
    "GoogleCloudDialogflowV2QueryParameters": {
      "type": "object",
      "description": "Represents the parameters of the conversational query.",
      "properties": {
        "sentimentAnalysisRequestConfig": {
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig",
          "description": "Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed."
        },
        "payload": {
          "type": "object",
          "description": "This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "timeZone": {
          "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.",
          "type": "string"
        },
        "webhookHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc."
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.",
          "type": "array"
        },
        "resetContexts": {
          "description": "Specifies whether to delete all contexts in the current session before the new ones are activated.",
          "type": "boolean"
        },
        "contexts": {
          "type": "array",
          "description": "The collection of contexts to be activated before this query is executed.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "geoLocation": {
          "$ref": "GoogleTypeLatLng",
          "description": "The geo location of this conversational query."
        }
      },
      "id": "GoogleCloudDialogflowV2QueryParameters"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponse": {
      "description": "The response message for a webhook call.",
      "properties": {
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "payload": {
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        },
        "pageInfo": {
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCard": {
      "id": "GoogleCloudDialogflowV2IntentMessageCard",
      "type": "object",
      "properties": {
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons."
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        }
      },
      "description": "The card response message."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter.",
      "properties": {
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        },
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction": {
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
      "description": "Opens the given URI.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata": {
      "description": "Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata"
    },
    "GoogleCloudDialogflowV2InputAudioConfig": {
      "properties": {
        "model": {
          "type": "string",
          "description": "Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "enableWordInfo": {
          "description": "If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.",
          "type": "boolean"
        },
        "sampleRateHertz": {
          "type": "integer",
          "description": "Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "format": "int32"
        },
        "disableNoSpeechRecognizedEvent": {
          "description": "Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.",
          "type": "boolean"
        },
        "singleUtterance": {
          "description": "If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance.",
          "type": "boolean"
        },
        "modelVariant": {
          "description": "Which variant of the Speech model to use.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "type": "string",
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ]
        },
        "phraseHints": {
          "description": "A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [speech_contexts]() instead. If you specify both [phrase_hints]() and [speech_contexts](), Dialogflow will treat the [phrase_hints]() as a single additional [SpeechContext]().",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "audioEncoding": {
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "description": "Required. Audio encoding of the audio content to process.",
          "type": "string"
        },
        "speechContexts": {
          "description": "Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SpeechContext"
          }
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        }
      },
      "type": "object",
      "description": "Instructs the speech recognizer how to process the audio content.",
      "id": "GoogleCloudDialogflowV2InputAudioConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject": {
      "description": "Response media object for media content card.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        },
        "largeImage": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image to display above media content."
        },
        "contentUrl": {
          "type": "string",
          "description": "Required. Url where the media is stored."
        },
        "icon": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        },
        "name": {
          "type": "string",
          "description": "Required. Name of media card."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1ConversationEvent": {
      "properties": {
        "conversation": {
          "type": "string",
          "description": "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
        },
        "errorStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "description": "Required. The type of the event that this notification refers to.",
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "type": "string"
        },
        "newMessagePayload": {
          "$ref": "GoogleCloudDialogflowV2beta1Message",
          "description": "Payload of NEW_MESSAGE event."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1ConversationEvent",
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings": {
      "properties": {
        "noSmalltalk": {
          "description": "Do not trigger if last utterance is small talk.",
          "type": "boolean"
        },
        "onlyEndUser": {
          "type": "boolean",
          "description": "Only trigger suggestion if participant role of last utterance is END_USER."
        }
      },
      "description": "Settings of suggestion trigger.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings"
    },
    "GoogleCloudDialogflowV2LoggingConfig": {
      "description": "Defines logging behavior for conversation lifecycle events.",
      "properties": {
        "enableStackdriverLogging": {
          "type": "boolean",
          "description": "Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2LoggingConfig"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig": {
      "description": "Configures the types of sentiment analysis to perform.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig",
      "properties": {
        "analyzeQueryTextSentiment": {
          "description": "Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentFollowupIntentInfo": {
      "id": "GoogleCloudDialogflowV2IntentFollowupIntentInfo",
      "description": "Represents a single followup intent in the chain.",
      "properties": {
        "followupIntentName": {
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio": {
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          },
          "description": "Segments this audio response is composed of."
        }
      },
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessage": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "properties": {
        "mixedAudio": {
          "readOnly": true,
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio"
        },
        "payload": {
          "description": "Returns a response containing a custom, platform-specific payload.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "outputAudioText": {
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
        },
        "endInteraction": {
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText",
          "description": "Returns a text response."
        },
        "playAudio": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way."
        },
        "liveAgentHandoff": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
          "description": "Hands off conversation to a human agent."
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessage": {
      "id": "GoogleCloudDialogflowV2IntentMessage",
      "description": "A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).",
      "properties": {
        "basicCard": {
          "description": "The basic card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCard"
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
          "description": "The voice and text-only responses for Actions on Google."
        },
        "carouselSelect": {
          "description": "The carousel card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
        },
        "platform": {
          "enumDescriptions": [
            "Default platform.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Google Hangouts."
          ],
          "description": "Optional. The platform that this message is intended for.",
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "GOOGLE_HANGOUTS"
          ]
        },
        "suggestions": {
          "description": "The suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestions"
        },
        "listSelect": {
          "description": "The list card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageListSelect"
        },
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "image": {
          "description": "The image response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "linkOutSuggestion": {
          "description": "The link out suggestion chip for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "card": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageCard",
          "description": "The card response."
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A custom platform-specific response."
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContent"
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
          "description": "The quick replies response."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageText",
          "description": "The text response."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "id": "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestCase": {
      "id": "GoogleCloudDialogflowCxV3TestCase",
      "description": "Represents a test case.",
      "properties": {
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3TestConfig",
          "description": "Config for the test case."
        },
        "testCaseConversationTurns": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "type": "array"
        },
        "lastTestResult": {
          "description": "The latest test result.",
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
        },
        "notes": {
          "type": "string",
          "description": "Additional freeform notes about the test case. Limit of 400 characters."
        },
        "creationTime": {
          "readOnly": true,
          "description": "Output only. When the test was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      },
      "id": "GoogleCloudDialogflowCxV3TextInput",
      "description": "Represents the natural language text to be processed.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook."
        },
        "justCollected": {
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.",
          "type": "boolean"
        },
        "required": {
          "type": "boolean",
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "state": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "type": "string",
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ]
        }
      },
      "description": "Represents parameter information.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3EventInput": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "Name of the event."
        }
      },
      "id": "GoogleCloudDialogflowCxV3EventInput",
      "description": "Represents the event to trigger."
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem": {
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image to display."
        },
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The body text of the card."
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem",
      "description": "An item in the carousel.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Version": {
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The developer-provided description of this version."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
          "type": "string"
        },
        "versionNumber": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The sequential number of this version. This field is read-only which means it cannot be set by create and update methods."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The status of this version. This field is read-only and cannot be set by create and update methods.",
          "enum": [
            "VERSION_STATUS_UNSPECIFIED",
            "IN_PROGRESS",
            "READY",
            "FAILED"
          ],
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Version is not ready to serve (e.g. training is in progress).",
            "Version is ready to serve.",
            "Version training failed."
          ]
        }
      },
      "description": "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).",
      "type": "object",
      "id": "GoogleCloudDialogflowV2Version"
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseError": {
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseError",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status associated with the test case.",
          "$ref": "GoogleRpcStatus"
        },
        "testCase": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCase",
          "description": "The test case."
        }
      },
      "description": "Error info for importing a test."
    },
    "GoogleCloudDialogflowV2AnswerFeedback": {
      "type": "object",
      "description": "Represents feedback the customer has about the quality & correctness of a certain answer in a conversation.",
      "properties": {
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false."
        },
        "clickTime": {
          "description": "Time when the answer/item was clicked.",
          "type": "string",
          "format": "google-datetime"
        },
        "agentAssistantDetailFeedback": {
          "$ref": "GoogleCloudDialogflowV2AgentAssistantFeedback",
          "description": "Detail feedback of agent assist suggestions."
        },
        "correctnessLevel": {
          "type": "string",
          "description": "The correctness level of the specific answer.",
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ]
        },
        "displayTime": {
          "type": "string",
          "description": "Time when the answer/item was displayed.",
          "format": "google-datetime"
        },
        "clicked": {
          "description": "Indicates whether the answer/item was clicked by the human agent or not. Default to false.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowV2AnswerFeedback"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButton": {
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButton",
      "type": "object",
      "description": "The button object that appears at the bottom of a card.",
      "properties": {
        "title": {
          "description": "Required. The title of the button.",
          "type": "string"
        },
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
        }
      }
    },
    "GoogleCloudDialogflowCxV3RunContinuousTestResponse": {
      "description": "The response message for Environments.RunContinuousTest.",
      "properties": {
        "continuousTestResult": {
          "description": "The result for a continuous test run.",
          "$ref": "GoogleCloudDialogflowCxV3ContinuousTestResult"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunContinuousTestResponse"
    },
    "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior": {
      "properties": {
        "initialPromptFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter."
        },
        "repromptEventHandlers": {
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "type": "array"
        }
      },
      "description": "Configuration for how the filling of a parameter should be handled.",
      "id": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Fulfillment": {
      "id": "GoogleCloudDialogflowCxV3Fulfillment",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified."
        },
        "setParameterActions": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          },
          "type": "array",
          "description": "Set parameter values before executing the webhook."
        },
        "conditionalCases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          },
          "description": "Conditional cases for this fulfillment."
        },
        "returnPartialResponses": {
          "type": "boolean",
          "description": "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
        },
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array"
        },
        "webhook": {
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
    },
    "GoogleCloudDialogflowV2FaqAnswer": {
      "id": "GoogleCloudDialogflowV2FaqAnswer",
      "type": "object",
      "description": "Represents answer from \"frequently asked questions\".",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`."
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem",
      "type": "object",
      "properties": {
        "info": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        },
        "title": {
          "description": "Required. The title of the list item.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image to display."
        }
      },
      "description": "An item in the list."
    },
    "GoogleCloudDialogflowCxV3ConversationTurn": {
      "id": "GoogleCloudDialogflowCxV3ConversationTurn",
      "properties": {
        "userInput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnUserInput",
          "description": "The user input."
        },
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        }
      },
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "description": "Browsing carousel tile",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "type": "object",
      "properties": {
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        },
        "openUriAction": {
          "description": "Required. Action to present to the user.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
        },
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2Sentiment": {
      "type": "object",
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float",
          "type": "number"
        }
      },
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "id": "GoogleCloudDialogflowV2Sentiment"
    },
    "GoogleCloudDialogflowV2MessageAnnotation": {
      "properties": {
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnnotatedMessagePart"
          },
          "type": "array",
          "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        },
        "containEntities": {
          "description": "Indicates whether the text message contains entities.",
          "type": "boolean"
        }
      },
      "description": "Represents the result of annotation for the message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2MessageAnnotation"
    },
    "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata": {
      "description": "Metadata for ReloadDocument operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1AnnotatedMessagePart": {
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "type": "object",
      "properties": {
        "entityType": {
          "description": "Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
          "type": "string"
        },
        "formattedValue": {
          "type": "any",
          "description": "Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "text": {
          "type": "string",
          "description": "Required. A part of a message possibly annotated with an entity."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
    },
    "GoogleCloudDialogflowCxV3PageInfo": {
      "properties": {
        "currentPage": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
        },
        "formInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form.",
          "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfo"
        }
      },
      "description": "Represents page information communicated to and from the webhook.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3PageInfo"
    },
    "GoogleCloudDialogflowV2VoiceSelectionParams": {
      "description": "Description of which voice to use for speech synthesis.",
      "id": "GoogleCloudDialogflowV2VoiceSelectionParams",
      "type": "object",
      "properties": {
        "ssmlGender": {
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "SSML_VOICE_GENDER_MALE",
            "SSML_VOICE_GENDER_FEMALE",
            "SSML_VOICE_GENDER_NEUTRAL"
          ],
          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified gender, which means that the client doesn't care which gender the selected voice will have.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice."
          ]
        },
        "name": {
          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2BatchDeleteIntentsRequest": {
      "properties": {
        "intents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "Required. The collection of intents to delete. Only intent `name` must be filled in."
        }
      },
      "description": "The request message for Intents.BatchDeleteIntents.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelect": {
      "description": "The card for presenting a carousel of options to select from.",
      "type": "object",
      "properties": {
        "items": {
          "description": "Required. Carousel items.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
    },
    "GoogleCloudDialogflowV2IntentMessageSelectItemInfo": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        },
        "synonyms": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "type": "array"
        }
      },
      "description": "Additional info about the select item for when it is triggered in a dialog."
    },
    "GoogleCloudDialogflowV2ListIntentsResponse": {
      "id": "GoogleCloudDialogflowV2ListIntentsResponse",
      "type": "object",
      "description": "The response message for Intents.ListIntents.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "intents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "The list of agent intents. There will be a maximum number of items returned based on the page_size field in the request."
        }
      }
    },
    "GoogleCloudDialogflowV2ReloadDocumentRequest": {
      "description": "Request message for Documents.ReloadDocument.",
      "type": "object",
      "properties": {
        "contentUri": {
          "type": "string",
          "description": "Optional. The path of gcs source file for reloading document content. For now, only gcs uri is supported. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`."
        }
      },
      "id": "GoogleCloudDialogflowV2ReloadDocumentRequest"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction": {
      "description": "Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.",
      "type": "object",
      "properties": {
        "openUrl": {
          "description": "Suggested client side action: Open a URI on device",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
        },
        "postbackData": {
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic.",
          "type": "string"
        },
        "dial": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
          "description": "Suggested client side action: Dial a phone number"
        },
        "text": {
          "type": "string",
          "description": "Text to display alongside the action."
        },
        "shareLocation": {
          "description": "Suggested client side action: Share user location",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
    },
    "GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse": {
      "description": "The response message for Environments.RunContinuousTest.",
      "id": "GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse",
      "properties": {
        "continuousTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ContinuousTestResult",
          "description": "The result for a continuous test run."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction": {
      "type": "object",
      "description": "Setting a parameter value.",
      "properties": {
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        },
        "parameter": {
          "description": "Display name of the parameter.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo": {
      "description": "Represents intent information communicated to the webhook.",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "parameters": {
          "type": "object",
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          }
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "displayName": {
          "description": "Always present. The display name of the last matched intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem": {
      "properties": {
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        }
      },
      "description": "An item in the carousel.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
    },
    "GoogleCloudDialogflowCxV3TestCaseError": {
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test case."
        },
        "testCase": {
          "$ref": "GoogleCloudDialogflowCxV3TestCase",
          "description": "The test case."
        }
      },
      "description": "Error info for importing a test.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestCaseError"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties": {
      "type": "object",
      "properties": {
        "horizontalAlignment": {
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ]
        },
        "header": {
          "type": "string",
          "description": "Required. Column heading."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties",
      "description": "Column properties for TableCard."
    },
    "GoogleCloudDialogflowV2AnalyzeContentRequest": {
      "id": "GoogleCloudDialogflowV2AnalyzeContentRequest",
      "type": "object",
      "description": "The request message for Participants.AnalyzeContent.",
      "properties": {
        "queryParams": {
          "description": "Parameters for a Dialogflow virtual-agent query.",
          "$ref": "GoogleCloudDialogflowV2QueryParameters"
        },
        "replyAudioConfig": {
          "description": "Speech synthesis configuration. The speech synthesis settings for a virtual agent that may be configured for the associated conversation profile are not used when calling AnalyzeContent. If this configuration is not supplied, speech synthesis is disabled.",
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig"
        },
        "requestId": {
          "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.",
          "type": "string"
        },
        "textInput": {
          "$ref": "GoogleCloudDialogflowV2TextInput",
          "description": "The natural language text to be processed."
        },
        "eventInput": {
          "description": "An input event to send to Dialogflow.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestCaseResult": {
      "id": "GoogleCloudDialogflowCxV3TestCaseResult",
      "description": "Represents a result from running a test case in an agent environment.",
      "properties": {
        "conversationTurns": {
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          },
          "type": "array"
        },
        "testTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the test was run."
        },
        "name": {
          "type": "string",
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
        },
        "environment": {
          "type": "string",
          "description": "Environment where the test was run. If not set, it indicates the draft environment."
        },
        "testResult": {
          "description": "Whether the test case passed in the agent environment.",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "type": "string",
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig": {
      "description": "Config for suggestion query.",
      "type": "object",
      "properties": {
        "dialogflowQuerySource": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource",
          "description": "Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST."
        },
        "knowledgeBaseQuerySource": {
          "description": "Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource"
        },
        "documentQuerySource": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource",
          "description": "Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE."
        },
        "contextFilterSettings": {
          "description": "Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings"
        },
        "maxResults": {
          "description": "Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.",
          "type": "integer",
          "format": "int32"
        },
        "confidenceThreshold": {
          "description": "Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it defaults to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies": {
      "description": "The quick replies response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        },
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of quick replies.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleTypeLatLng": {
      "type": "object",
      "id": "GoogleTypeLatLng",
      "properties": {
        "latitude": {
          "type": "number",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double"
        }
      },
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges."
    },
    "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "type": "object",
      "properties": {
        "faqAnswers": {
          "description": "Output only. Answers extracted from FAQ documents.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1FaqAnswer"
          }
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
      "description": "Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead.",
      "properties": {
        "cardContents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          },
          "description": "Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.",
          "type": "array"
        },
        "cardWidth": {
          "enumDescriptions": [
            "Not specified.",
            "120 DP. Note that tall media cannot be used.",
            "232 DP."
          ],
          "enum": [
            "CARD_WIDTH_UNSPECIFIED",
            "SMALL",
            "MEDIUM"
          ],
          "description": "Required. The width of the cards in the carousel.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1PageInfo": {
      "type": "object",
      "description": "Represents page information communicated to and from the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfo",
      "properties": {
        "currentPage": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
        },
        "formInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo"
        }
      }
    },
    "GoogleCloudDialogflowV2ListContextsResponse": {
      "properties": {
        "contexts": {
          "type": "array",
          "description": "The list of contexts. There will be a maximum number of items returned based on the page_size field in the request.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "The response message for Contexts.ListContexts.",
      "id": "GoogleCloudDialogflowV2ListContextsResponse"
    },
    "GoogleCloudDialogflowCxV3beta1EventHandler": {
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "properties": {
        "event": {
          "type": "string",
          "description": "Required. The name of the event to handle."
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this event handler.",
          "type": "string"
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1EventHandler",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1DeployFlowResponse": {
      "description": "The response message for Environments.DeployFlow.",
      "id": "GoogleCloudDialogflowCxV3beta1DeployFlowResponse",
      "type": "object",
      "properties": {
        "environment": {
          "description": "The updated environment where the flow is deployed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Environment"
        },
        "deployment": {
          "description": "The name of the flow version deployment. Format: `projects//locations//agents// environments//deployments/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2AnnotatedMessagePart": {
      "properties": {
        "formattedValue": {
          "type": "any",
          "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "text": {
          "type": "string",
          "description": "A part of a message possibly annotated with an entity."
        },
        "entityType": {
          "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2AnnotatedMessagePart",
      "type": "object",
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter.",
      "properties": {
        "resolvedValue": {
          "description": "Always present. Structured value for the parameter extracted from user utterance.",
          "type": "any"
        },
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer",
      "description": "An answer from Knowledge Connector.",
      "properties": {
        "faqQuestion": {
          "type": "string",
          "description": "The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise."
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.",
          "type": "string"
        },
        "matchConfidence": {
          "format": "float",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.",
          "type": "number"
        },
        "matchConfidenceLevel": {
          "description": "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.",
          "enumDescriptions": [
            "Not specified.",
            "Indicates that the confidence is low.",
            "Indicates our confidence is medium.",
            "Indicates our confidence is high."
          ],
          "enum": [
            "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document that answers this conversational query.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1Intent": {
      "properties": {
        "isFallback": {
          "description": "Optional. Indicates whether this is a fallback intent.",
          "type": "boolean"
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`"
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mlEnabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
        },
        "parentFollowupIntentName": {
          "description": "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "defaultResponsePlatforms": {
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "items": {
            "type": "string",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "TELEPHONY",
              "GOOGLE_HANGOUTS"
            ],
            "enumDescriptions": [
              "Not specified.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Telephony Gateway.",
              "Google Hangouts."
            ]
          },
          "type": "array"
        },
        "messages": {
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "parameters": {
          "description": "Optional. The collection of parameters associated with the intent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentParameter"
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests."
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "followupIntentInfo": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          },
          "type": "array",
          "description": "Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output."
        },
        "webhookState": {
          "type": "string",
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ]
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        },
        "rootFollowupIntentName": {
          "description": "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`.",
          "type": "string",
          "readOnly": true
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "trainingPhrases": {
          "description": "Optional. The collection of examples that the agent is trained on.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          },
          "type": "array"
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        }
      },
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "id": "GoogleCloudDialogflowV2beta1Intent",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelect": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
      "properties": {
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          },
          "description": "Required. List items."
        },
        "subtitle": {
          "description": "Optional. Subtitle of the list.",
          "type": "string"
        }
      },
      "description": "The card for presenting a list of options to select from."
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "description": "The test case results. The detailed conversation turns are empty in this response.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse",
      "description": "The response message for TestCases.BatchRunTestCases."
    },
    "GoogleCloudDialogflowCxV3beta1Form": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Form",
      "properties": {
        "parameters": {
          "type": "array",
          "description": "Parameters to collect from the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FormParameter"
          }
        }
      },
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session."
    },
    "GoogleCloudDialogflowCxV3beta1TestCase": {
      "description": "Represents a test case.",
      "properties": {
        "notes": {
          "type": "string",
          "description": "Additional freeform notes about the test case. Limit of 400 characters."
        },
        "lastTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult",
          "description": "The latest test result."
        },
        "tags": {
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestConfig",
          "description": "Config for the test case."
        },
        "testCaseConversationTurns": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "creationTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the test was created."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestCase",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersResponse": {
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse",
      "type": "object",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "properties": {
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "faqAnswers": {
          "description": "Answers extracted from FAQ documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FaqAnswer"
          },
          "type": "array"
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig": {
      "description": "Config for suggestion features.",
      "properties": {
        "enableEventBasedSuggestion": {
          "type": "boolean",
          "description": "Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST."
        },
        "queryConfig": {
          "description": "Configs of query.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig"
        },
        "suggestionFeature": {
          "description": "The suggestion feature.",
          "$ref": "GoogleCloudDialogflowV2SuggestionFeature"
        },
        "conversationModelConfig": {
          "description": "Configs of custom conversation model.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig"
        },
        "suggestionTriggerSettings": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings",
          "description": "Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION and FAQ will use this field."
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo": {
      "properties": {
        "tag": {
          "description": "Always present. The tag used to identify which fulfillment is being called.",
          "type": "string"
        }
      },
      "description": "Represents fulfillment information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowV2EnvironmentHistory": {
      "properties": {
        "entries": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EnvironmentHistoryEntry"
          },
          "description": "Output only. The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "description": "Output only. Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "readOnly": true,
          "type": "string"
        },
        "parent": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the environment this history is for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
        }
      },
      "description": "The response message for Environments.GetEnvironmentHistory.",
      "id": "GoogleCloudDialogflowV2EnvironmentHistory",
      "type": "object"
    },
    "GoogleCloudDialogflowV2WebhookRequest": {
      "properties": {
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`."
        },
        "originalDetectIntentRequest": {
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.",
          "$ref": "GoogleCloudDialogflowV2OriginalDetectIntentRequest"
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
        }
      },
      "id": "GoogleCloudDialogflowV2WebhookRequest",
      "type": "object",
      "description": "The request message for a webhook call."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestion": {
      "type": "object",
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
    },
    "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent": {
      "description": "Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation.",
      "id": "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent",
      "properties": {
        "conversation": {
          "type": "string",
          "description": "The conversation this notification refers to. Format: `projects//conversations/`."
        },
        "suggestionResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SuggestionResult"
          },
          "description": "The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true."
        },
        "participant": {
          "description": "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "baseUrl": "https://dialogflow.googleapis.com/",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "methods": {
        "getAgent": {
          "description": "Retrieves the specified agent.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The project that the agent to fetch is associated with. Format: `projects/`."
            }
          },
          "flatPath": "v2/projects/{projectsId}/agent",
          "id": "dialogflow.projects.getAgent",
          "path": "v2/{+parent}/agent",
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          }
        },
        "deleteAgent": {
          "id": "dialogflow.projects.deleteAgent",
          "description": "Deletes the specified agent.",
          "path": "v2/{+parent}/agent",
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "type": "string",
              "location": "path",
              "pattern": "^projects/[^/]+$",
              "description": "Required. The project that the agent to delete is associated with. Format: `projects/`.",
              "required": true
            }
          },
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "httpMethod": "DELETE",
          "flatPath": "v2/projects/{projectsId}/agent"
        },
        "setAgent": {
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "description": "Required. The project of this agent. Format: `projects/`.",
              "required": true,
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "type": "string"
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "Optional. The mask to control which fields get updated.",
              "format": "google-fieldmask"
            }
          },
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "id": "dialogflow.projects.setAgent",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "flatPath": "v2/projects/{projectsId}/agent",
          "httpMethod": "POST",
          "path": "v2/{+parent}/agent",
          "description": "Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
          "request": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          }
        }
      },
      "resources": {
        "knowledgeBases": {
          "methods": {
            "create": {
              "id": "dialogflow.projects.knowledgeBases.create",
              "path": "v2/{+parent}/knowledgeBases",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases",
              "description": "Creates a knowledge base.",
              "request": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                  "required": true,
                  "type": "string"
                },
                "force": {
                  "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "path": "v2/{+name}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "description": "Deletes the specified knowledge base.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.knowledgeBases.delete",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}"
            },
            "list": {
              "httpMethod": "GET",
              "description": "Returns the list of all knowledge bases of the specified agent.",
              "path": "v2/{+parent}/knowledgeBases",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous list request.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.knowledgeBases.list",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.",
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v2/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "id": "dialogflow.projects.knowledgeBases.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}",
              "description": "Retrieves the specified knowledge base."
            },
            "patch": {
              "request": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}",
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.knowledgeBases.patch",
              "path": "v2/{+name}",
              "description": "Updates the specified knowledge base.",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`."
                }
              }
            }
          },
          "resources": {
            "documents": {
              "methods": {
                "reload": {
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                  "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "dialogflow.projects.knowledgeBases.documents.reload",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                  },
                  "path": "v2/{+name}:reload"
                },
                "create": {
                  "description": "Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.knowledgeBases.documents.create",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                      "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/documents",
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents",
                  "httpMethod": "POST"
                },
                "delete": {
                  "id": "dialogflow.projects.knowledgeBases.documents.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v2/{+name}",
                  "description": "Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "required": true
                    }
                  }
                },
                "patch": {
                  "id": "dialogflow.projects.knowledgeBases.documents.patch",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "description": "Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/documents",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns the list of all documents of the knowledge base.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                      "required": true,
                      "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`.",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents",
                  "id": "dialogflow.projects.knowledgeBases.documents.list"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.knowledgeBases.documents.get",
                  "description": "Retrieves the specified document."
                }
              }
            }
          }
        },
        "conversations": {
          "resources": {
            "messages": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListMessagesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/messages",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds \u003e 1551790877964485` or `create_time \u003e 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/messages",
                  "description": "Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds \u003e [first item's create_time of previous request]` and empty page_token.",
                  "id": "dialogflow.projects.conversations.messages.list"
                }
              }
            },
            "participants": {
              "resources": {
                "suggestions": {
                  "methods": {
                    "suggestArticles": {
                      "path": "v2/{+parent}/suggestions:suggestArticles",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "dialogflow.projects.conversations.participants.suggestions.suggestArticles",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Gets suggested articles for a participant based on specific historical messages.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestArticles",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SuggestArticlesRequest"
                      },
                      "httpMethod": "POST"
                    },
                    "suggestFaqAnswers": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                          "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Gets suggested faq answers for a participant based on specific historical messages.",
                      "id": "dialogflow.projects.conversations.participants.suggestions.suggestFaqAnswers",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestFaqAnswers",
                      "path": "v2/{+parent}/suggestions:suggestFaqAnswers",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest"
                      }
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "description": "Creates a new participant in a conversation.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.conversations.participants.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`.",
                      "pattern": "^projects/[^/]+/conversations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "path": "v2/{+parent}/participants",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/conversations/[^/]+$",
                      "type": "string",
                      "description": "Required. The conversation to list all participants from. Format: `projects//locations//conversations/`.",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.conversations.participants.list",
                  "description": "Returns the list of all participants in the specified conversation.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListParticipantsResponse"
                  },
                  "path": "v2/{+parent}/participants",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "id": "dialogflow.projects.conversations.participants.patch",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "description": "Updates the specified participant.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.",
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The mask to specify which fields to update.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH"
                },
                "analyzeContent": {
                  "id": "dialogflow.projects.conversations.participants.analyzeContent",
                  "description": "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                  "path": "v2/{+participant}:analyzeContent",
                  "parameters": {
                    "participant": {
                      "required": true,
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "description": "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2AnalyzeContentRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2AnalyzeContentResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}:analyzeContent",
                  "parameterOrder": [
                    "participant"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.conversations.participants.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the participant. Format: `projects//locations//conversations//participants/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "description": "Retrieves a conversation participant.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                }
              }
            }
          },
          "methods": {
            "complete": {
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}:complete",
              "request": {
                "$ref": "GoogleCloudDialogflowV2CompleteConversationRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "description": "Completes the specified conversation. Finished conversations are purged from the database after 30 days.",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}:complete",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/conversations/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`.",
                  "required": true
                }
              },
              "id": "dialogflow.projects.conversations.complete"
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/projects/{projectsId}/conversations",
              "description": "Returns the list of all conversations in the specified project.",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListConversationsResponse"
              },
              "path": "v2/{+parent}/conversations",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Optional. The next_page_token value returned from a previous list request.",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `\u003e`, or `\u003c`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = \"COMPLETED\"` For more information about filtering, see [API Filtering](https://aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                },
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. The project from which to list all conversation. Format: `projects//locations/`.",
                  "location": "path"
                }
              },
              "id": "dialogflow.projects.conversations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "id": "dialogflow.projects.conversations.get",
              "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}",
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the conversation. Format: `projects//locations//conversations/`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/conversations/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "description": "Retrieves the specific conversation.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "create": {
              "path": "v2/{+parent}/conversations",
              "parameters": {
                "conversationId": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula \"a-zA-Z*\" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness."
                },
                "parent": {
                  "description": "Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v2/projects/{projectsId}/conversations",
              "httpMethod": "POST",
              "id": "dialogflow.projects.conversations.create",
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage."
            }
          }
        },
        "locations": {
          "methods": {
            "setAgent": {
              "description": "Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
              "path": "v2/{+parent}/agent",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "id": "dialogflow.projects.locations.setAgent",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The project of this agent. Format: `projects/`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. The mask to control which fields get updated.",
                  "format": "google-fieldmask"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              }
            },
            "getAgent": {
              "httpMethod": "GET",
              "id": "dialogflow.projects.locations.getAgent",
              "path": "v2/{+parent}/agent",
              "description": "Retrieves the specified agent.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to fetch is associated with. Format: `projects/`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              }
            },
            "deleteAgent": {
              "path": "v2/{+parent}/agent",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The project that the agent to delete is associated with. Format: `projects/`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "description": "Deletes the specified agent.",
              "id": "dialogflow.projects.locations.deleteAgent",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "httpMethod": "DELETE"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "dialogflow.projects.locations.get",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location."
                }
              }
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer"
                }
              },
              "flatPath": "v2/projects/{projectsId}/locations",
              "path": "v2/{+name}/locations",
              "id": "dialogflow.projects.locations.list"
            }
          },
          "resources": {
            "answerRecords": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2AnswerRecord"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates the specified answer record.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2AnswerRecord"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The mask to control which fields get updated.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/answerRecords/{answerRecordsId}",
                  "id": "dialogflow.projects.locations.answerRecords.patch"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/answerRecords",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/answerRecords",
                  "description": "Returns the list of all answer records in the specified project in reverse chronological order.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Filters to restrict results to specific answer records. Filter on answer record type. Currently predicates on `type` is supported, valid values are `ARTICLE_ANSWER`, `FAQ_ANSWER`. For more information about filtering, see [API Filtering](https://aip.dev/160)."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListAnswerRecordsResponse"
                  },
                  "id": "dialogflow.projects.locations.answerRecords.list"
                }
              }
            },
            "agent": {
              "methods": {
                "import": {
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The project that the agent to import is associated with. Format: `projects/`.",
                      "location": "path"
                    }
                  },
                  "description": "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:import",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.agent.import",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ImportAgentRequest"
                  },
                  "path": "v2/{+parent}/agent:import"
                },
                "search": {
                  "description": "Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2SearchAgentsResponse"
                  },
                  "id": "dialogflow.projects.locations.agent.search",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:search",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project to list agents from. Format: `projects/`."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/agent:search"
                },
                "updateFulfillment": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  },
                  "description": "Updates the fulfillment.",
                  "id": "dialogflow.projects.locations.agent.updateFulfillment",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/fulfillment",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/fulfillment$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  },
                  "path": "v2/{+name}"
                },
                "train": {
                  "description": "Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The project that the agent to train is associated with. Format: `projects/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2TrainAgentRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:train",
                  "id": "dialogflow.projects.locations.agent.train",
                  "path": "v2/{+parent}/agent:train"
                },
                "export": {
                  "id": "dialogflow.projects.locations.agent.export",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ExportAgentRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/agent:export",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The project that the agent to export is associated with. Format: `projects/`.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:export"
                },
                "restore": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.agent.restore",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The project that the agent to restore is associated with. Format: `projects/`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2RestoreAgentRequest"
                  },
                  "description": "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "path": "v2/{+parent}/agent:restore",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:restore"
                },
                "getValidationResult": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ValidationResult"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/agent/validationResult",
                  "description": "Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/validationResult",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.agent.getValidationResult",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project that the agent is associated with. Format: `projects/`."
                    },
                    "languageCode": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                    }
                  }
                },
                "getFulfillment": {
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/fulfillment",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  },
                  "httpMethod": "GET",
                  "description": "Retrieves the fulfillment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/fulfillment$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.agent.getFulfillment"
                }
              },
              "resources": {
                "versions": {
                  "methods": {
                    "patch": {
                      "description": "Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable properties of the version resource.",
                      "id": "dialogflow.projects.locations.agent.versions.patch",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "description": "Required. The mask to control which fields get updated.",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListVersionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "path": "v2/{+parent}/versions",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Returns the list of all versions of the specified agent.",
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.locations.agent.versions.list"
                    },
                    "create": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions",
                      "path": "v2/{+parent}/versions",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.versions.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates an agent version. The new version points to the agent instance in the \"default\" environment.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE",
                      "id": "dialogflow.projects.locations.agent.versions.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Delete the specified agent version."
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.agent.versions.get",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the specified agent version.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "languageCode": {
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The agent to create a entity type for. Format: `projects//agent`.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes",
                      "path": "v2/{+parent}/entityTypes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "httpMethod": "POST",
                      "description": "Creates an entity type in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "id": "dialogflow.projects.locations.agent.entityTypes.create"
                    },
                    "list": {
                      "path": "v2/{+parent}/entityTypes",
                      "httpMethod": "GET",
                      "description": "Returns the list of all entity types in the specified agent.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "description": "Required. The agent to list all entity types from. Format: `projects//agent`.",
                          "type": "string"
                        },
                        "languageCode": {
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListEntityTypesResponse"
                      },
                      "id": "dialogflow.projects.locations.agent.entityTypes.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "batchUpdate": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the agent to update or create entity types in. Format: `projects//agent`.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "description": "Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes:batchUpdate",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dialogflow.projects.locations.agent.entityTypes.batchUpdate",
                      "path": "v2/{+parent}/entityTypes:batchUpdate",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agent.entityTypes.delete",
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`."
                        }
                      }
                    },
                    "batchDelete": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.entityTypes.batchDelete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/entityTypes:batchDelete",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes:batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "parameters": {
                        "languageCode": {
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "description": "Required. The name of the entity type. Format: `projects//agent/entityTypes/`.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agent.entityTypes.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "description": "Retrieves the specified entity type.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}",
                      "path": "v2/{+name}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "languageCode": {
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Optional. The mask to control which fields get updated.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "id": "dialogflow.projects.locations.agent.entityTypes.patch",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "httpMethod": "PATCH",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}"
                    }
                  },
                  "resources": {
                    "entities": {
                      "methods": {
                        "batchDelete": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchDelete",
                          "path": "v2/{+parent}/entities:batchDelete",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`."
                            }
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchDelete",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
                          },
                          "description": "Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "POST"
                        },
                        "batchCreate": {
                          "httpMethod": "POST",
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchCreate",
                          "description": "Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchCreate",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "parent": {
                              "description": "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v2/{+parent}/entities:batchCreate",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "batchUpdate": {
                          "path": "v2/{+parent}/entities:batchUpdate",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "description": "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). ",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchUpdate",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchUpdate"
                        }
                      }
                    }
                  }
                },
                "intents": {
                  "methods": {
                    "batchDelete": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
                      },
                      "description": "Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents:batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/intents:batchDelete",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.intents.batchDelete",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "patch": {
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                          "type": "string",
                          "required": true
                        },
                        "intentView": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ]
                        },
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Optional. The mask to control which fields get updated.",
                          "type": "string"
                        },
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "description": "Updates the specified intent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "httpMethod": "PATCH",
                      "id": "dialogflow.projects.locations.agent.intents.patch",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.agent.intents.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "description": "Retrieves the specified intent.",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "parameters": {
                        "intentView": {
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "location": "query"
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the intent. Format: `projects//agent/intents/`.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "batchUpdate": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.intents.batchUpdate",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/intents:batchUpdate",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
                      },
                      "description": "Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents:batchUpdate",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the agent to update or create intents in. Format: `projects//agent`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "path": "v2/{+parent}/intents",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "languageCode": {
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "type": "string"
                        },
                        "intentView": {
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "location": "query",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agent.intents.list",
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents",
                      "description": "Returns the list of all intents in the specified agent.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "v2/{+parent}/intents",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "description": "Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to create a intent for. Format: `projects//agent`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path"
                        },
                        "intentView": {
                          "location": "query",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "type": "string",
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ]
                        },
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agent.intents.create"
                    },
                    "delete": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Format: `projects//agent/intents/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$"
                        }
                      },
                      "id": "dialogflow.projects.locations.agent.intents.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "description": "Deletes the specified intent and its direct or indirect followup intents. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
                    }
                  }
                },
                "environments": {
                  "resources": {
                    "users": {
                      "resources": {
                        "sessions": {
                          "methods": {
                            "detectIntent": {
                              "httpMethod": "POST",
                              "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                              },
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                              },
                              "id": "dialogflow.projects.locations.agent.environments.users.sessions.detectIntent",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}:detectIntent",
                              "parameters": {
                                "session": {
                                  "type": "string",
                                  "required": true,
                                  "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "path": "v2/{+session}:detectIntent",
                              "parameterOrder": [
                                "session"
                              ]
                            },
                            "deleteContexts": {
                              "description": "Deletes all active contexts in the specified session.",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "parameters": {
                                "parent": {
                                  "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "type": "string",
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "id": "dialogflow.projects.locations.agent.environments.users.sessions.deleteContexts",
                              "parameterOrder": [
                                "parent"
                              ],
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+parent}/contexts",
                              "httpMethod": "DELETE"
                            }
                          },
                          "resources": {
                            "entityTypes": {
                              "methods": {
                                "delete": {
                                  "path": "v2/{+name}",
                                  "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "parameters": {
                                    "name": {
                                      "location": "path",
                                      "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "required": true,
                                      "type": "string"
                                    }
                                  },
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "response": {
                                    "$ref": "GoogleProtobufEmpty"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.delete",
                                  "httpMethod": "DELETE",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                                },
                                "list": {
                                  "httpMethod": "GET",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "parameters": {
                                    "parent": {
                                      "type": "string",
                                      "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "location": "path",
                                      "required": true
                                    },
                                    "pageToken": {
                                      "description": "Optional. The next_page_token value returned from a previous list request.",
                                      "type": "string",
                                      "location": "query"
                                    },
                                    "pageSize": {
                                      "format": "int32",
                                      "type": "integer",
                                      "location": "query",
                                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                                    }
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.list",
                                  "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                                  "path": "v2/{+parent}/entityTypes",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                                  }
                                },
                                "get": {
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.get",
                                  "httpMethod": "GET",
                                  "path": "v2/{+name}",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string",
                                      "location": "path",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                    }
                                  },
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                                },
                                "create": {
                                  "parameters": {
                                    "parent": {
                                      "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "location": "path",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "type": "string"
                                    }
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "path": "v2/{+parent}/entityTypes",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.create",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "httpMethod": "POST",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes"
                                },
                                "patch": {
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "path": "v2/{+name}",
                                  "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "httpMethod": "PATCH",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.patch",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                                  "parameters": {
                                    "updateMask": {
                                      "format": "google-fieldmask",
                                      "description": "Optional. The mask to control which fields get updated.",
                                      "location": "query",
                                      "type": "string"
                                    },
                                    "name": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "type": "string",
                                      "location": "path",
                                      "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                                      "required": true
                                    }
                                  },
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "parameterOrder": [
                                    "name"
                                  ]
                                }
                              }
                            },
                            "contexts": {
                              "methods": {
                                "delete": {
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "parameters": {
                                    "name": {
                                      "location": "path",
                                      "required": true,
                                      "type": "string",
                                      "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                    }
                                  },
                                  "response": {
                                    "$ref": "GoogleProtobufEmpty"
                                  },
                                  "httpMethod": "DELETE",
                                  "path": "v2/{+name}",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.delete",
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "description": "Deletes the specified context."
                                },
                                "patch": {
                                  "httpMethod": "PATCH",
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.patch",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "description": "Updates the specified context.",
                                  "path": "v2/{+name}",
                                  "parameters": {
                                    "updateMask": {
                                      "description": "Optional. The mask to control which fields get updated.",
                                      "location": "query",
                                      "format": "google-fieldmask",
                                      "type": "string"
                                    },
                                    "name": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                      "required": true,
                                      "location": "path",
                                      "type": "string",
                                      "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
                                    }
                                  }
                                },
                                "list": {
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "path": "v2/{+parent}/contexts",
                                  "httpMethod": "GET",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.list",
                                  "parameters": {
                                    "pageSize": {
                                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                      "location": "query",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "parent": {
                                      "type": "string",
                                      "location": "path",
                                      "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "required": true
                                    },
                                    "pageToken": {
                                      "type": "string",
                                      "location": "query",
                                      "description": "Optional. The next_page_token value returned from a previous list request."
                                    }
                                  },
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "description": "Returns the list of all contexts in the specified session."
                                },
                                "create": {
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.create",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "path": "v2/{+parent}/contexts",
                                  "description": "Creates a context. If the specified context already exists, overrides the context.",
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "parameters": {
                                    "parent": {
                                      "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "location": "path",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "type": "string"
                                    }
                                  },
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "httpMethod": "POST",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  }
                                },
                                "get": {
                                  "description": "Retrieves the specified context.",
                                  "parameters": {
                                    "name": {
                                      "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "location": "path",
                                      "required": true,
                                      "type": "string",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                    }
                                  },
                                  "httpMethod": "GET",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.get",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "path": "v2/{+name}",
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "intents": {
                      "methods": {
                        "list": {
                          "parameters": {
                            "intentView": {
                              "description": "Optional. The resource view to apply to the returned intent.",
                              "type": "string",
                              "location": "query",
                              "enum": [
                                "INTENT_VIEW_UNSPECIFIED",
                                "INTENT_VIEW_FULL"
                              ],
                              "enumDescriptions": [
                                "Training phrases field is not populated in the response.",
                                "All fields are populated."
                              ]
                            },
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous list request.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "format": "int32"
                            },
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                              "location": "path",
                              "description": "Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.",
                              "required": true
                            },
                            "languageCode": {
                              "location": "query",
                              "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                              "type": "string"
                            }
                          },
                          "path": "v2/{+parent}/intents",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/intents",
                          "id": "dialogflow.projects.locations.agent.environments.intents.list",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Returns the list of all intents in the specified agent.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "getHistory": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/history",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$"
                        }
                      },
                      "description": "Gets the history of the specified environment.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EnvironmentHistory"
                      },
                      "path": "v2/{+parent}/history",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agent.environments.getHistory"
                    },
                    "delete": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "description": "Deletes the specified agent environment.",
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                          "required": true
                        }
                      },
                      "id": "dialogflow.projects.locations.agent.environments.delete"
                    },
                    "patch": {
                      "description": "Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment continues serving the previous version of the agent. After the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use \"-\" as Environment ID in environment name to update an agent version in the default environment. WARNING: this will negate all recent changes to the draft agent and can't be undone. You may want to save the draft agent to a version before calling this method.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
                        },
                        "updateMask": {
                          "type": "string",
                          "description": "Required. The mask to control which fields get updated.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "allowLoadToDraftAndDiscardChanges": {
                          "type": "boolean",
                          "description": "Optional. This field is used to prevent accidental overwrite of the default environment, which is an operation that cannot be undone. To confirm that the caller desires this overwrite, this field must be explicitly set to true when updating the default environment (environment ID = `-`).",
                          "location": "query"
                        }
                      },
                      "httpMethod": "PATCH",
                      "id": "dialogflow.projects.locations.agent.environments.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Retrieves the specified agent environment.",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agent.environments.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      }
                    },
                    "list": {
                      "description": "Returns the list of all non-default environments of the specified agent.",
                      "id": "dialogflow.projects.locations.agent.environments.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListEnvironmentsResponse"
                      },
                      "path": "v2/{+parent}/environments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "description": "Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/environments",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments",
                      "id": "dialogflow.projects.locations.agent.environments.create",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "environmentId": {
                          "location": "query",
                          "description": "Required. The unique id of the new environment.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "description": "Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "httpMethod": "POST",
                      "description": "Creates an agent environment."
                    }
                  }
                },
                "sessions": {
                  "resources": {
                    "contexts": {
                      "methods": {
                        "patch": {
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.patch",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "path": "v2/{+name}",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "httpMethod": "PATCH",
                          "parameters": {
                            "updateMask": {
                              "description": "Optional. The mask to control which fields get updated.",
                              "location": "query",
                              "format": "google-fieldmask",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                              "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Updates the specified context."
                        },
                        "list": {
                          "path": "v2/{+parent}/contexts",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.list",
                          "parameters": {
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous list request.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                          },
                          "description": "Returns the list of all contexts in the specified session.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "create": {
                          "path": "v2/{+parent}/contexts",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true
                            }
                          },
                          "description": "Creates a context. If the specified context already exists, overrides the context.",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.create",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "path": "v2/{+name}",
                          "description": "Deletes the specified context.",
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.delete",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          }
                        },
                        "get": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                              "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                            }
                          },
                          "description": "Retrieves the specified context.",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.get",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v2/{+name}"
                        }
                      }
                    },
                    "entityTypes": {
                      "methods": {
                        "delete": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "path": "v2/{+name}",
                          "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.delete",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "DELETE"
                        },
                        "create": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "path": "v2/{+parent}/entityTypes",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.create"
                        },
                        "get": {
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.get",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true
                            }
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v2/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                          },
                          "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer"
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "type": "string",
                              "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "Optional. The next_page_token value returned from a previous list request.",
                              "type": "string"
                            }
                          },
                          "path": "v2/{+parent}/entityTypes",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes",
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.list"
                        },
                        "patch": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                              "location": "path",
                              "required": true
                            },
                            "updateMask": {
                              "description": "Optional. The mask to control which fields get updated.",
                              "type": "string",
                              "format": "google-fieldmask",
                              "location": "query"
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.patch",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "path": "v2/{+name}",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                        }
                      }
                    }
                  },
                  "methods": {
                    "deleteContexts": {
                      "path": "v2/{+parent}/contexts",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$"
                        }
                      },
                      "id": "dialogflow.projects.locations.agent.sessions.deleteContexts",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Deletes all active contexts in the specified session.",
                      "httpMethod": "DELETE"
                    },
                    "detectIntent": {
                      "id": "dialogflow.projects.locations.agent.sessions.detectIntent",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "session": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}:detectIntent",
                      "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                      },
                      "path": "v2/{+session}:detectIntent",
                      "parameterOrder": [
                        "session"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "id": "dialogflow.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v2/{+name}:cancel",
                  "httpMethod": "POST"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "dialogflow.projects.locations.operations.get"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "path": "v2/{+name}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  }
                }
              }
            },
            "conversationProfiles": {
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "description": "Retrieves the specified conversation profile.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`.",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.locations.conversationProfiles.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  }
                },
                "patch": {
                  "path": "v2/{+name}",
                  "description": "Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                      "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The mask to control which fields to update.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "id": "dialogflow.projects.locations.conversationProfiles.patch",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListConversationProfilesResponse"
                  },
                  "description": "Returns the list of all conversation profiles in the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles",
                  "id": "dialogflow.projects.locations.conversationProfiles.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The project to list all conversation profiles from. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+parent}/conversationProfiles",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "description": "Deletes the specified conversation profile.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$"
                    }
                  },
                  "id": "dialogflow.projects.locations.conversationProfiles.delete"
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The project to create a conversation profile for. Format: `projects//locations/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "path": "v2/{+parent}/conversationProfiles",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles",
                  "httpMethod": "POST",
                  "id": "dialogflow.projects.locations.conversationProfiles.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                }
              }
            },
            "conversations": {
              "methods": {
                "complete": {
                  "path": "v2/{+name}:complete",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2CompleteConversationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "id": "dialogflow.projects.locations.conversations.complete",
                  "description": "Completes the specified conversation. Finished conversations are purged from the database after 30 days.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:complete"
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "path": "v2/{+parent}/conversations",
                  "id": "dialogflow.projects.locations.conversations.create",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "parameters": {
                    "conversationId": {
                      "description": "Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula \"a-zA-Z*\" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage."
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "id": "dialogflow.projects.locations.conversations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the conversation. Format: `projects//locations//conversations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves the specific conversation.",
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListConversationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.conversations.list",
                  "description": "Returns the list of all conversations in the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project from which to list all conversation. Format: `projects//locations/`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `\u003e`, or `\u003c`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = \"COMPLETED\"` For more information about filtering, see [API Filtering](https://aip.dev/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/conversations",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "messages": {
                  "methods": {
                    "list": {
                      "path": "v2/{+parent}/messages",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/messages",
                      "id": "dialogflow.projects.locations.conversations.messages.list",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "filter": {
                          "description": "Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds \u003e 1551790877964485` or `create_time \u003e 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds \u003e [first item's create_time of previous request]` and empty page_token.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListMessagesResponse"
                      }
                    }
                  }
                },
                "participants": {
                  "resources": {
                    "suggestions": {
                      "methods": {
                        "suggestFaqAnswers": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
                          },
                          "id": "dialogflow.projects.locations.conversations.participants.suggestions.suggestFaqAnswers",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestFaqAnswers",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Gets suggested faq answers for a participant based on specific historical messages.",
                          "path": "v2/{+parent}/suggestions:suggestFaqAnswers"
                        },
                        "suggestArticles": {
                          "description": "Gets suggested articles for a participant based on specific historical messages.",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestArticles",
                          "id": "dialogflow.projects.locations.conversations.participants.suggestions.suggestArticles",
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse"
                          },
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`."
                            }
                          },
                          "path": "v2/{+parent}/suggestions:suggestArticles",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SuggestArticlesRequest"
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "id": "dialogflow.projects.locations.conversations.participants.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the participant. Format: `projects//locations//conversations//participants/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Retrieves a conversation participant.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET"
                    },
                    "analyzeContent": {
                      "description": "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "id": "dialogflow.projects.locations.conversations.participants.analyzeContent",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2AnalyzeContentResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}:analyzeContent",
                      "httpMethod": "POST",
                      "path": "v2/{+participant}:analyzeContent",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2AnalyzeContentRequest"
                      },
                      "parameters": {
                        "participant": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "participant"
                      ]
                    },
                    "list": {
                      "id": "dialogflow.projects.locations.conversations.participants.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListParticipantsResponse"
                      },
                      "path": "v2/{+parent}/participants",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The conversation to list all participants from. Format: `projects//locations//conversations/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "description": "Returns the list of all participants in the specified conversation.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants"
                    },
                    "create": {
                      "path": "v2/{+parent}/participants",
                      "description": "Creates a new participant in a conversation.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`."
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "id": "dialogflow.projects.locations.conversations.participants.create",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      }
                    },
                    "patch": {
                      "id": "dialogflow.projects.locations.conversations.participants.patch",
                      "description": "Updates the specified participant.",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "Required. The mask to specify which fields to update.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}",
                      "httpMethod": "PATCH"
                    }
                  }
                }
              }
            },
            "knowledgeBases": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.knowledgeBases.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/knowledgeBases",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100."
                    },
                    "parent": {
                      "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query"
                    }
                  },
                  "description": "Returns the list of all knowledge bases of the specified agent.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases"
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}",
                  "description": "Deletes the specified knowledge base.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "dialogflow.projects.locations.knowledgeBases.delete",
                  "path": "v2/{+name}"
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}",
                  "parameters": {
                    "name": {
                      "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                      "format": "google-fieldmask"
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "description": "Updates the specified knowledge base.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.knowledgeBases.patch"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "id": "dialogflow.projects.locations.knowledgeBases.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a knowledge base.",
                  "path": "v2/{+parent}/knowledgeBases"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.knowledgeBases.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Retrieves the specified knowledge base.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}"
                }
              },
              "resources": {
                "documents": {
                  "methods": {
                    "list": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents",
                      "path": "v2/{+parent}/documents",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`.",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request."
                        }
                      },
                      "description": "Returns the list of all documents of the knowledge base.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                      },
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "path": "v2/{+name}",
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.patch",
                      "description": "Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "create": {
                      "path": "v2/{+parent}/documents",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.create",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$"
                        }
                      }
                    },
                    "reload": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                      "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.",
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.reload",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}:reload"
                    },
                    "delete": {
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                          "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "description": "Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)",
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "get": {
                      "description": "Retrieves the specified document.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.get"
                    }
                  }
                }
              }
            }
          }
        },
        "agent": {
          "methods": {
            "train": {
              "id": "dialogflow.projects.agent.train",
              "request": {
                "$ref": "GoogleCloudDialogflowV2TrainAgentRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "path": "v2/{+parent}/agent:train",
              "flatPath": "v2/projects/{projectsId}/agent:train",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to train is associated with. Format: `projects/`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                }
              }
            },
            "search": {
              "flatPath": "v2/projects/{projectsId}/agent:search",
              "description": "Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "path": "v2/{+parent}/agent:search",
              "response": {
                "$ref": "GoogleCloudDialogflowV2SearchAgentsResponse"
              },
              "id": "dialogflow.projects.agent.search",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The project to list agents from. Format: `projects/`.",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous list request."
                }
              }
            },
            "import": {
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The project that the agent to import is associated with. Format: `projects/`."
                }
              },
              "path": "v2/{+parent}/agent:import",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.agent.import",
              "request": {
                "$ref": "GoogleCloudDialogflowV2ImportAgentRequest"
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
              "flatPath": "v2/projects/{projectsId}/agent:import"
            },
            "updateFulfillment": {
              "description": "Updates the fulfillment.",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "pattern": "^projects/[^/]+/agent/fulfillment$",
                  "type": "string",
                  "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "id": "dialogflow.projects.agent.updateFulfillment",
              "request": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment"
            },
            "getValidationResult": {
              "parameters": {
                "languageCode": {
                  "type": "string",
                  "description": "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The project that the agent is associated with. Format: `projects/`.",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/agent/validationResult",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ValidationResult"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "description": "Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.",
              "id": "dialogflow.projects.agent.getValidationResult",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/agent/validationResult"
            },
            "getFulfillment": {
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment",
              "httpMethod": "GET",
              "description": "Retrieves the fulfillment.",
              "path": "v2/{+name}",
              "id": "dialogflow.projects.agent.getFulfillment",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/agent/fulfillment$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              }
            },
            "export": {
              "flatPath": "v2/projects/{projectsId}/agent:export",
              "id": "dialogflow.projects.agent.export",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse",
              "httpMethod": "POST",
              "path": "v2/{+parent}/agent:export",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The project that the agent to export is associated with. Format: `projects/`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2ExportAgentRequest"
              }
            },
            "restore": {
              "id": "dialogflow.projects.agent.restore",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to restore is associated with. Format: `projects/`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2RestoreAgentRequest"
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v2/projects/{projectsId}/agent:restore",
              "path": "v2/{+parent}/agent:restore"
            }
          },
          "resources": {
            "intents": {
              "methods": {
                "batchUpdate": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the agent to update or create intents in. Format: `projects//agent`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/intents:batchUpdate",
                  "description": "Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchUpdate",
                  "id": "dialogflow.projects.agent.intents.batchUpdate"
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents",
                  "description": "Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/intents",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.intents.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The agent to create a intent for. Format: `projects//agent`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    },
                    "intentView": {
                      "type": "string",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "description": "Optional. The resource view to apply to the returned intent."
                    },
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  }
                },
                "batchDelete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchDelete",
                  "id": "dialogflow.projects.agent.intents.batchDelete",
                  "description": "Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "path": "v2/{+parent}/intents:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`."
                    }
                  }
                },
                "patch": {
                  "id": "dialogflow.projects.agent.intents.patch",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Optional. The mask to control which fields get updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "intentView": {
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "type": "string",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ]
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Updates the specified intent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "parameters": {
                    "intentView": {
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "type": "string",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "location": "query",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ]
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The name of the intent. Format: `projects//agent/intents/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "location": "path"
                    },
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "dialogflow.projects.agent.intents.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves the specified intent."
                },
                "delete": {
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes the specified intent and its direct or indirect followup intents. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Format: `projects//agent/intents/`.",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$"
                    }
                  },
                  "id": "dialogflow.projects.agent.intents.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/agent/intents",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/intents",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                  },
                  "parameters": {
                    "intentView": {
                      "location": "query",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "type": "string",
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ]
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    },
                    "languageCode": {
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.",
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Returns the list of all intents in the specified agent.",
                  "id": "dialogflow.projects.agent.intents.list"
                }
              }
            },
            "versions": {
              "methods": {
                "create": {
                  "path": "v2/{+parent}/versions",
                  "flatPath": "v2/projects/{projectsId}/agent/versions",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "pattern": "^projects/[^/]+/agent$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "description": "Creates an agent version. The new version points to the agent instance in the \"default\" environment.",
                  "id": "dialogflow.projects.agent.versions.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "description": "Retrieves the specified agent version.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.agent.versions.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "delete": {
                  "id": "dialogflow.projects.agent.versions.delete",
                  "path": "v2/{+name}",
                  "description": "Delete the specified agent version.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$"
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/agent/versions",
                  "id": "dialogflow.projects.agent.versions.list",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListVersionsResponse"
                  },
                  "description": "Returns the list of all versions of the specified agent.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/versions"
                },
                "patch": {
                  "id": "dialogflow.projects.agent.versions.patch",
                  "description": "Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable properties of the version resource.",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The mask to control which fields get updated.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$",
                      "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
                    }
                  }
                }
              }
            },
            "sessions": {
              "resources": {
                "contexts": {
                  "methods": {
                    "list": {
                      "path": "v2/{+parent}/contexts",
                      "description": "Returns the list of all contexts in the specified session.",
                      "id": "dialogflow.projects.agent.sessions.contexts.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "location": "path"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "description": "Creates a context. If the specified context already exists, overrides the context.",
                      "id": "dialogflow.projects.agent.sessions.contexts.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v2/{+parent}/contexts",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}",
                      "description": "Deletes the specified context.",
                      "id": "dialogflow.projects.agent.sessions.contexts.delete",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}"
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.agent.sessions.contexts.get",
                      "description": "Retrieves the specified context.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "path": "v2/{+name}"
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates the specified context.",
                      "path": "v2/{+name}",
                      "id": "dialogflow.projects.agent.sessions.contexts.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                          "type": "string"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The mask to control which fields get updated."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "httpMethod": "PATCH"
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "Optional. The mask to control which fields get updated.",
                          "format": "google-fieldmask",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.patch",
                      "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                    },
                    "create": {
                      "path": "v2/{+parent}/entityTypes",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.create",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "type": "string",
                          "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      }
                    },
                    "delete": {
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.delete",
                      "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                        }
                      },
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.agent.sessions.entityTypes.get",
                      "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "httpMethod": "GET"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "required": true,
                          "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "path": "v2/{+parent}/entityTypes",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "deleteContexts": {
                  "path": "v2/{+parent}/contexts",
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Deletes all active contexts in the specified session.",
                  "id": "dialogflow.projects.agent.sessions.deleteContexts",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "detectIntent": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "session"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}:detectIntent",
                  "parameters": {
                    "session": {
                      "type": "string",
                      "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                  },
                  "id": "dialogflow.projects.agent.sessions.detectIntent",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+session}:detectIntent",
                  "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
                }
              }
            },
            "environments": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "id": "dialogflow.projects.agent.environments.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "description": "Retrieves the specified agent environment.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "description": "Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+name}"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "description": "Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "description": "Deletes the specified agent environment.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "dialogflow.projects.agent.environments.delete"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "location": "path"
                    },
                    "environmentId": {
                      "location": "query",
                      "description": "Required. The unique id of the new environment.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/environments",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "id": "dialogflow.projects.agent.environments.create",
                  "description": "Creates an agent environment.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/environments"
                },
                "getHistory": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EnvironmentHistory"
                  },
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.agent.environments.getHistory",
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/history",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/history",
                  "description": "Gets the history of the specified environment."
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEnvironmentsResponse"
                  },
                  "path": "v2/{+parent}/environments",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true,
                      "description": "Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Returns the list of all non-default environments of the specified agent.",
                  "id": "dialogflow.projects.agent.environments.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "location": "path",
                      "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`.",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The mask to control which fields get updated."
                    },
                    "allowLoadToDraftAndDiscardChanges": {
                      "description": "Optional. This field is used to prevent accidental overwrite of the default environment, which is an operation that cannot be undone. To confirm that the caller desires this overwrite, this field must be explicitly set to true when updating the default environment (environment ID = `-`).",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "description": "Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment continues serving the previous version of the agent. After the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use \"-\" as Environment ID in environment name to update an agent version in the default environment. WARNING: this will negate all recent changes to the draft agent and can't be undone. You may want to save the draft agent to a version before calling this method.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "id": "dialogflow.projects.agent.environments.patch"
                }
              },
              "resources": {
                "users": {
                  "resources": {
                    "sessions": {
                      "methods": {
                        "deleteContexts": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true,
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                            }
                          },
                          "description": "Deletes all active contexts in the specified session.",
                          "path": "v2/{+parent}/contexts",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                          "id": "dialogflow.projects.agent.environments.users.sessions.deleteContexts",
                          "httpMethod": "DELETE"
                        },
                        "detectIntent": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                          },
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                          },
                          "parameterOrder": [
                            "session"
                          ],
                          "id": "dialogflow.projects.agent.environments.users.sessions.detectIntent",
                          "path": "v2/{+session}:detectIntent",
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}:detectIntent",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                          "parameters": {
                            "session": {
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                              "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                              "location": "path",
                              "type": "string",
                              "required": true
                            }
                          }
                        }
                      },
                      "resources": {
                        "entityTypes": {
                          "methods": {
                            "list": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                              },
                              "path": "v2/{+parent}/entityTypes",
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.list",
                              "httpMethod": "GET",
                              "parameters": {
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "Optional. The next_page_token value returned from a previous list request."
                                },
                                "parent": {
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "location": "path"
                                },
                                "pageSize": {
                                  "location": "query",
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                                }
                              }
                            },
                            "get": {
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "required": true,
                                  "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$"
                                }
                              },
                              "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.get",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+name}",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ]
                            },
                            "patch": {
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "httpMethod": "PATCH",
                              "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "parameterOrder": [
                                "name"
                              ],
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.patch",
                              "path": "v2/{+name}",
                              "parameters": {
                                "name": {
                                  "type": "string",
                                  "location": "path",
                                  "required": true,
                                  "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$"
                                },
                                "updateMask": {
                                  "format": "google-fieldmask",
                                  "description": "Optional. The mask to control which fields get updated.",
                                  "location": "query",
                                  "type": "string"
                                }
                              },
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              }
                            },
                            "delete": {
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "parameters": {
                                "name": {
                                  "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "type": "string",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "path": "v2/{+name}",
                              "httpMethod": "DELETE",
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.delete",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                            },
                            "create": {
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "path": "v2/{+parent}/entityTypes",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.create",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "parameterOrder": [
                                "parent"
                              ],
                              "parameters": {
                                "parent": {
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "type": "string",
                                  "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "location": "path",
                                  "required": true
                                }
                              },
                              "httpMethod": "POST",
                              "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                            }
                          }
                        },
                        "contexts": {
                          "methods": {
                            "patch": {
                              "httpMethod": "PATCH",
                              "parameters": {
                                "name": {
                                  "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                                  "type": "string",
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                },
                                "updateMask": {
                                  "type": "string",
                                  "format": "google-fieldmask",
                                  "location": "query",
                                  "description": "Optional. The mask to control which fields get updated."
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.patch",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "description": "Updates the specified context.",
                              "path": "v2/{+name}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}"
                            },
                            "delete": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.delete",
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "type": "string",
                                  "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                }
                              },
                              "path": "v2/{+name}",
                              "description": "Deletes the specified context.",
                              "httpMethod": "DELETE",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              }
                            },
                            "create": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.create",
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "parameters": {
                                "parent": {
                                  "location": "path",
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+parent}/contexts",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "httpMethod": "POST",
                              "description": "Creates a context. If the specified context already exists, overrides the context."
                            },
                            "list": {
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "path": "v2/{+parent}/contexts",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "GET",
                              "parameters": {
                                "pageSize": {
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                                },
                                "pageToken": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. The next_page_token value returned from a previous list request."
                                },
                                "parent": {
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "required": true
                                }
                              },
                              "description": "Returns the list of all contexts in the specified session.",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts"
                            },
                            "get": {
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.get",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "description": "Retrieves the specified context.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "path": "v2/{+name}",
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "required": true,
                                  "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "intents": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/intents",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment.",
                          "pattern": "^projects/[^/]+/agent/environments/[^/]+$"
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "location": "query"
                        },
                        "intentView": {
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "dialogflow.projects.agent.environments.intents.list",
                      "description": "Returns the list of all intents in the specified agent.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/intents"
                    }
                  }
                }
              }
            },
            "knowledgeBases": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "description": "Updates the specified knowledge base.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                      "required": true,
                      "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}",
                  "id": "dialogflow.projects.agent.knowledgeBases.patch"
                },
                "create": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path",
                      "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/knowledgeBases",
                  "description": "Creates a knowledge base.",
                  "id": "dialogflow.projects.agent.knowledgeBases.create",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns the list of all knowledge bases of the specified agent.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    }
                  },
                  "id": "dialogflow.projects.agent.knowledgeBases.list",
                  "path": "v2/{+parent}/knowledgeBases"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.knowledgeBases.get",
                  "description": "Retrieves the specified knowledge base.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+name}"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "dialogflow.projects.agent.knowledgeBases.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                      "type": "string"
                    }
                  },
                  "description": "Deletes the specified knowledge base.",
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}"
                }
              },
              "resources": {
                "documents": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`."
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Retrieves the specified document.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.get"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/documents",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                          "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                          "type": "integer"
                        }
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.list",
                      "description": "Returns the list of all documents of the knowledge base."
                    },
                    "reload": {
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.",
                      "path": "v2/{+name}:reload",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.reload",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents",
                      "path": "v2/{+parent}/documents",
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.delete"
                    },
                    "patch": {
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "description": "Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "path": "v2/{+name}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$"
                        }
                      }
                    }
                  }
                }
              }
            },
            "entityTypes": {
              "resources": {
                "entities": {
                  "methods": {
                    "batchCreate": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchCreate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "POST",
                      "path": "v2/{+parent}/entities:batchCreate",
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchCreate",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "batchDelete": {
                      "description": "Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchDelete",
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`.",
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v2/{+parent}/entities:batchDelete",
                      "httpMethod": "POST"
                    },
                    "batchUpdate": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchUpdate",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
                      },
                      "description": "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). ",
                      "path": "v2/{+parent}/entities:batchUpdate",
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchUpdate"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.agent.entityTypes.get",
                  "description": "Retrieves the specified entity type.",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "parameters": {
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the entity type. Format: `projects//agent/entityTypes/`.",
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "required": true
                    }
                  }
                },
                "list": {
                  "id": "dialogflow.projects.agent.entityTypes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/entityTypes",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes",
                  "description": "Returns the list of all entity types in the specified agent.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The agent to list all entity types from. Format: `projects//agent`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    },
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEntityTypesResponse"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "id": "dialogflow.projects.agent.entityTypes.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+name}",
                  "description": "Updates the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.",
                      "location": "path"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The mask to control which fields get updated.",
                      "format": "google-fieldmask"
                    },
                    "languageCode": {
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "id": "dialogflow.projects.agent.entityTypes.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`."
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Deletes the specified entity type. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "batchDelete": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
                  },
                  "description": "Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.entityTypes.batchDelete",
                  "path": "v2/{+parent}/entityTypes:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchDelete"
                },
                "create": {
                  "path": "v2/{+parent}/entityTypes",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "description": "Creates an entity type in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The agent to create a entity type for. Format: `projects//agent`."
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.entityTypes.create"
                },
                "batchUpdate": {
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchUpdate",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "description": "Required. The name of the agent to update or create entity types in. Format: `projects//agent`.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).",
                  "id": "dialogflow.projects.agent.entityTypes.batchUpdate",
                  "path": "v2/{+parent}/entityTypes:batchUpdate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        },
        "conversationProfiles": {
          "methods": {
            "delete": {
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`."
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "description": "Deletes the specified conversation profile.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "id": "dialogflow.projects.conversationProfiles.delete",
              "path": "v2/{+name}",
              "httpMethod": "DELETE"
            },
            "get": {
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "path": "v2/{+name}",
              "description": "Retrieves the specified conversation profile.",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`.",
                  "required": true,
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.conversationProfiles.get",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              }
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous list request.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The project to list all conversation profiles from. Format: `projects//locations/`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v2/projects/{projectsId}/conversationProfiles",
              "parameterOrder": [
                "parent"
              ],
              "description": "Returns the list of all conversation profiles in the specified project.",
              "id": "dialogflow.projects.conversationProfiles.list",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListConversationProfilesResponse"
              },
              "path": "v2/{+parent}/conversationProfiles",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "patch": {
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The mask to control which fields to update."
                },
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$",
                  "location": "path",
                  "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.",
                  "required": true
                }
              },
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "description": "Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
              "request": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "path": "v2/{+name}",
              "id": "dialogflow.projects.conversationProfiles.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "description": "Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/projects/{projectsId}/conversationProfiles",
              "id": "dialogflow.projects.conversationProfiles.create",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The project to create a conversation profile for. Format: `projects//locations/`.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v2/{+parent}/conversationProfiles"
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/operations",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The name of the operation's parent resource.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The standard list page size.",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The standard list page token.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                }
              },
              "path": "v2/{+name}/operations",
              "id": "dialogflow.projects.operations.list"
            },
            "cancel": {
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}:cancel",
              "httpMethod": "POST",
              "id": "dialogflow.projects.operations.cancel",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The name of the operation resource to be cancelled."
                }
              },
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}:cancel"
            },
            "get": {
              "path": "v2/{+name}",
              "id": "dialogflow.projects.operations.get",
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
            }
          }
        },
        "answerRecords": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "GoogleCloudDialogflowV2AnswerRecord"
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2AnswerRecord"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/answerRecords/{answerRecordsId}",
              "id": "dialogflow.projects.answerRecords.patch",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "description": "Required. The mask to control which fields get updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "name": {
                  "pattern": "^projects/[^/]+/answerRecords/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`."
                }
              },
              "description": "Updates the specified answer record.",
              "path": "v2/{+name}"
            },
            "list": {
              "id": "dialogflow.projects.answerRecords.list",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListAnswerRecordsResponse"
              },
              "flatPath": "v2/projects/{projectsId}/answerRecords",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`.",
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "description": "Required. Filters to restrict results to specific answer records. Filter on answer record type. Currently predicates on `type` is supported, valid values are `ARTICLE_ANSWER`, `FAQ_ANSWER`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "description": "Returns the list of all answer records in the specified project in reverse chronological order.",
              "path": "v2/{+parent}/answerRecords",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        }
      }
    }
  },
  "description": "Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).",
  "mtlsRootUrl": "https://dialogflow.mtls.googleapis.com/",
  "version_module": true,
  "revision": "20211022",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v2",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "basePath": "",
  "servicePath": "",
  "name": "dialogflow"
}

{
  "canonicalName": "Recaptcha Enterprise",
  "resources": {
    "projects": {
      "resources": {
        "relatedaccountgroups": {
          "resources": {
            "memberships": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse"
                  },
                  "id": "recaptchaenterprise.projects.relatedaccountgroups.memberships.list",
                  "path": "v1/{+parent}/memberships",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get memberships in a group of related accounts.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListRelatedAccountGroupMemberships` call. When paginating, all other parameters provided to `ListRelatedAccountGroupMemberships` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of accounts to return. The service might return fewer than this value. If unspecified, at most 50 accounts are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/relatedaccountgroups/[^/]+$",
                      "description": "Required. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}`.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/relatedaccountgroups/{relatedaccountgroupsId}/memberships"
                }
              }
            }
          },
          "methods": {
            "list": {
              "path": "v1/{+parent}/relatedaccountgroups",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse"
              },
              "httpMethod": "GET",
              "id": "recaptchaenterprise.projects.relatedaccountgroups.list",
              "description": "List groups of related accounts.",
              "flatPath": "v1/projects/{projectsId}/relatedaccountgroups",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to list related account groups from, in the format \"projects/{project}\".",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A page token, received from a previous `ListRelatedAccountGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRelatedAccountGroups` must match the call that provided the page token."
                },
                "pageSize": {
                  "description": "Optional. The maximum number of groups to return. The service might return fewer than this value. If unspecified, at most 50 groups are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "relatedaccountgroupmemberships": {
          "methods": {
            "search": {
              "parameters": {
                "project": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the project to search related account group memberships from. Specify the project name in the following format: \"projects/{project}\"."
                }
              },
              "flatPath": "v1/projects/{projectsId}/relatedaccountgroupmemberships:search",
              "id": "recaptchaenterprise.projects.relatedaccountgroupmemberships.search",
              "parameterOrder": [
                "project"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest"
              },
              "httpMethod": "POST",
              "description": "Search group memberships related to a given account.",
              "path": "v1/{+project}/relatedaccountgroupmemberships:search",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse"
              }
            }
          }
        },
        "assessments": {
          "methods": {
            "annotate": {
              "parameterOrder": [
                "name"
              ],
              "description": "Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
              },
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the Assessment, in the format \"projects/{project}/assessments/{assessment}\".",
                  "location": "path",
                  "pattern": "^projects/[^/]+/assessments/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "recaptchaenterprise.projects.assessments.annotate",
              "path": "v1/{+name}:annotate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/assessments/{assessmentsId}:annotate",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "path": "v1/{+parent}/assessments",
              "flatPath": "v1/projects/{projectsId}/assessments",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              },
              "description": "Creates an Assessment of the likelihood an event is legitimate.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in which the assessment will be created, in the format \"projects/{project}\".",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "recaptchaenterprise.projects.assessments.create",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              }
            }
          }
        },
        "keys": {
          "methods": {
            "retrieveLegacySecretKey": {
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}:retrieveLegacySecretKey",
              "parameterOrder": [
                "key"
              ],
              "httpMethod": "GET",
              "id": "recaptchaenterprise.projects.keys.retrieveLegacySecretKey",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse"
              },
              "description": "Returns the secret key related to the specified public key. You must use the legacy secret key only in a 3rd party integration with legacy reCAPTCHA.",
              "parameters": {
                "key": {
                  "description": "Required. The public key name linked to the requested secret key in the format \"projects/{project}/keys/{key}\".",
                  "type": "string",
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+key}:retrieveLegacySecretKey"
            },
            "delete": {
              "description": "Deletes the specified key.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "id": "recaptchaenterprise.projects.keys.delete",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "description": "Required. The name of the key to be deleted, in the format \"projects/{project}/keys/{key}\".",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "description": "Optional. The maximum number of keys to return. Default is 10. Max limit is 1000.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the project that contains the keys that will be listed, in the format \"projects/{project}\"."
                },
                "pageToken": {
                  "type": "string",
                  "description": "Optional. The next_page_token value returned from a previous. ListKeysRequest, if any.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse"
              },
              "id": "recaptchaenterprise.projects.keys.list",
              "path": "v1/{+parent}/keys",
              "flatPath": "v1/projects/{projectsId}/keys",
              "description": "Returns the list of all keys that belong to a project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "recaptchaenterprise.projects.keys.get",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "description": "Returns the specified key.",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the requested key, in the format \"projects/{project}/keys/{key}\".",
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              }
            },
            "getMetrics": {
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the requested metrics, in the format \"projects/{project}/keys/{key}/metrics\".",
                  "pattern": "^projects/[^/]+/keys/[^/]+/metrics$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Metrics"
              },
              "description": "Get some aggregated metrics for a Key. This data can be used to build dashboards.",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}/metrics",
              "id": "recaptchaenterprise.projects.keys.getMetrics"
            },
            "migrate": {
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest"
              },
              "id": "recaptchaenterprise.projects.keys.migrate",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the key to be migrated, in the format \"projects/{project}/keys/{key}\".",
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a key is migrated, it can be used from either product. SiteVerify requests are billed as CreateAssessment calls. You must be authenticated as one of the current owners of the reCAPTCHA Site Key, and your user must have the reCAPTCHA Enterprise Admin IAM role in the destination project.",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}:migrate",
              "path": "v1/{+name}:migrate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "description": "Updates the specified key.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Optional. The mask to control which fields of the key get updated. If the mask is not present, all fields will be updated.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource name for the Key in the format \"projects/{project}/keys/{key}\".",
                  "required": true
                }
              },
              "id": "recaptchaenterprise.projects.keys.patch",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              }
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/keys",
              "id": "recaptchaenterprise.projects.keys.create",
              "description": "Creates a new reCAPTCHA Enterprise key.",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the project in which the key will be created, in the format \"projects/{project}\".",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/keys"
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "documentationLink": "https://cloud.google.com/recaptcha-enterprise/",
  "discoveryVersion": "v1",
  "rootUrl": "https://recaptchaenterprise.googleapis.com/",
  "version": "v1",
  "basePath": "",
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://recaptchaenterprise.mtls.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Help protect your website from fraudulent activity, spam, and abuse without creating friction.",
  "id": "recaptchaenterprise:v1",
  "title": "reCAPTCHA Enterprise API",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "name": "recaptchaenterprise",
  "schemas": {
    "GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo": {
      "id": "GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the account that is being verified. Deprecated. Customers should now provide the hashed account ID field in Event."
        },
        "endpoints": {
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo"
          },
          "description": "Endpoints that can be used for identity verification.",
          "type": "array"
        },
        "languageCode": {
          "type": "string",
          "description": "Language code preference for the verification message, set as a IETF BCP 47 language code."
        },
        "latestVerificationResult": {
          "enumDescriptions": [
            "No information about the latest account verification.",
            "The user was successfully verified. This means the account verification challenge was successfully completed.",
            "The user failed the verification challenge.",
            "The site is not properly onboarded to use the account verification feature.",
            "The recipient is not allowed for account verification. This can occur during integration but should not occur in production.",
            "The recipient has already been sent too many verification codes in a short amount of time.",
            "The verification flow could not be completed due to a critical internal error.",
            "The client has exceeded their two factor request quota for this period of time.",
            "The request cannot be processed at the time because of an incident. This bypass can be restricted to a problematic destination email domain, a customer, or could affect the entire service.",
            "The request parameters do not match with the token provided and cannot be processed."
          ],
          "readOnly": true,
          "description": "Output only. Result of the latest account verification challenge.",
          "type": "string",
          "enum": [
            "RESULT_UNSPECIFIED",
            "SUCCESS_USER_VERIFIED",
            "ERROR_USER_NOT_VERIFIED",
            "ERROR_SITE_ONBOARDING_INCOMPLETE",
            "ERROR_RECIPIENT_NOT_ALLOWED",
            "ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED",
            "ERROR_CRITICAL_INTERNAL",
            "ERROR_CUSTOMER_QUOTA_EXHAUSTED",
            "ERROR_VERIFICATION_BYPASSED",
            "ERROR_VERDICT_MISMATCH"
          ]
        }
      },
      "description": "Information about account verification, used for identity verification.",
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1Metrics": {
      "type": "object",
      "properties": {
        "challengeMetrics": {
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics"
          },
          "type": "array",
          "description": "Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data."
        },
        "startTime": {
          "type": "string",
          "description": "Inclusive start time aligned to a day (UTC).",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the metrics, in the format \"projects/{project}/keys/{key}/metrics\"."
        },
        "scoreMetrics": {
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreMetrics"
          },
          "type": "array",
          "description": "Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1Metrics",
      "description": "Metrics for a single Key."
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudRecaptchaenterpriseV1TestingOptions": {
      "properties": {
        "testingChallenge": {
          "description": "For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.",
          "enumDescriptions": [
            "Perform the normal risk analysis and return either nocaptcha or a challenge depending on risk and trust factors.",
            "Challenge requests for this key always return a nocaptcha, which does not require a solution.",
            "Challenge requests for this key always return an unsolvable challenge."
          ],
          "enum": [
            "TESTING_CHALLENGE_UNSPECIFIED",
            "NOCAPTCHA",
            "UNSOLVABLE_CHALLENGE"
          ],
          "type": "string"
        },
        "testingScore": {
          "description": "All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1TestingOptions",
      "type": "object",
      "description": "Options for user acceptance testing."
    },
    "GoogleCloudRecaptchaenterpriseV1IOSKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings",
      "properties": {
        "allowAllBundleIds": {
          "type": "boolean",
          "description": "If set to true, allowed_bundle_ids are not enforced."
        },
        "allowedBundleIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "iOS bundle ids of apps allowed to use the key. Example: 'com.companyname.productname.appname'"
        }
      },
      "type": "object",
      "description": "Settings specific to keys that can be used by iOS apps."
    },
    "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest": {
      "id": "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest",
      "description": "The request message to search related account group memberships.",
      "type": "object",
      "properties": {
        "pageToken": {
          "description": "Optional. A page token, received from a previous `SearchRelatedAccountGroupMemberships` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchRelatedAccountGroupMemberships` must match the call that provided the page token.",
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "description": "Optional. The maximum number of groups to return. The service might return fewer than this value. If unspecified, at most 50 groups are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
          "type": "integer"
        },
        "hashedAccountId": {
          "format": "byte",
          "description": "Optional. The unique stable hashed user identifier we should search connections to. The identifier should correspond to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest": {
      "type": "object",
      "description": "The migrate key request message.",
      "id": "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest",
      "properties": {
        "skipBillingCheck": {
          "type": "boolean",
          "description": "Optional. If true, skips the billing check. A reCAPTCHA Enterprise key or migrated key behaves differently than a reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid any disruption of your usage, we check that a billing account is present. If your usage of reCAPTCHA is under the free quota, you can safely skip the billing check and proceed with the migration. See https://cloud.google.com/recaptcha-enterprise/docs/billing-information."
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1ScoreMetrics": {
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1ScoreMetrics",
      "properties": {
        "actionMetrics": {
          "description": "Action-based metrics. The map key is the action name which specified by the site owners at time of the \"execute\" client-side call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
          }
        },
        "overallMetrics": {
          "description": "Aggregated score metrics for all traffic.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
        }
      },
      "description": "Metrics related to scoring."
    },
    "GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse": {
      "id": "GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse",
      "description": "Secret key is used only in legacy reCAPTCHA. It must be used in a 3rd party integration with legacy reCAPTCHA.",
      "type": "object",
      "properties": {
        "legacySecretKey": {
          "description": "The secret key (also known as shared secret) authorizes communication between your application backend and the reCAPTCHA Enterprise server to create an assessment. The secret key needs to be kept safe for security purposes.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo": {
      "properties": {
        "lastVerificationTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp of the last successful verification for the endpoint, if any."
        },
        "requestToken": {
          "readOnly": true,
          "description": "Output only. Token to provide to the client to trigger endpoint verification. It must be used within 15 minutes.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number for which to trigger a verification request. Should be given in E.164 format.",
          "type": "string"
        },
        "emailAddress": {
          "description": "Email address for which to trigger a verification request.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo",
      "description": "Information about a verification endpoint that can be used for 2FA."
    },
    "GoogleCloudRecaptchaenterpriseV1TokenProperties": {
      "type": "object",
      "properties": {
        "androidPackageName": {
          "description": "The name of the Android package with which the token was generated (Android keys only).",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "The hostname of the page on which the token was generated (Web keys only)."
        },
        "action": {
          "description": "Action name provided at token generation.",
          "type": "string"
        },
        "createTime": {
          "description": "The timestamp corresponding to the generation of the token.",
          "type": "string",
          "format": "google-datetime"
        },
        "valid": {
          "description": "Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).",
          "type": "boolean"
        },
        "invalidReason": {
          "enumDescriptions": [
            "Default unspecified type.",
            "If the failure reason was not accounted for.",
            "The provided user verification token was malformed.",
            "The user verification token had expired.",
            "The user verification had already been seen.",
            "The user verification token was not present.",
            "A retriable error (such as network failure) occurred on the browser. Could easily be simulated by an attacker."
          ],
          "type": "string",
          "enum": [
            "INVALID_REASON_UNSPECIFIED",
            "UNKNOWN_INVALID_REASON",
            "MALFORMED",
            "EXPIRED",
            "DUPE",
            "MISSING",
            "BROWSER_ERROR"
          ],
          "description": "Reason associated with the response when valid = false."
        },
        "iosBundleId": {
          "type": "string",
          "description": "The ID of the iOS bundle with which the token was generated (iOS keys only)."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1TokenProperties"
    },
    "GoogleCloudRecaptchaenterpriseV1WafSettings": {
      "properties": {
        "wafFeature": {
          "enum": [
            "WAF_FEATURE_UNSPECIFIED",
            "CHALLENGE_PAGE",
            "SESSION_TOKEN",
            "ACTION_TOKEN"
          ],
          "enumDescriptions": [
            "Undefined feature.",
            "Redirects suspicious traffic to reCAPTCHA.",
            "Use reCAPTCHA session-tokens to protect the whole user session on the site's domain.",
            "Use reCAPTCHA action-tokens to protect user actions."
          ],
          "description": "Required. The WAF feature for which this key is enabled.",
          "type": "string"
        },
        "wafService": {
          "enumDescriptions": [
            "Undefined WAF",
            "Cloud Armor"
          ],
          "type": "string",
          "enum": [
            "WAF_SERVICE_UNSPECIFIED",
            "CA"
          ],
          "description": "Required. The WAF service that uses this key."
        }
      },
      "description": "Settings specific to keys that can be used for WAF (Web Application Firewall).",
      "id": "GoogleCloudRecaptchaenterpriseV1WafSettings",
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1ListKeysResponse": {
      "id": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse",
      "type": "object",
      "description": "Response to request to list keys in a project.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results. It is set to empty if no keys remain in results."
        },
        "keys": {
          "description": "Key details.",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1RiskAnalysis": {
      "description": "Risk analysis result for an event.",
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis",
      "properties": {
        "score": {
          "type": "number",
          "description": "Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).",
          "format": "float"
        },
        "reasons": {
          "description": "Reasons contributing to the risk analysis verdict.",
          "items": {
            "enum": [
              "CLASSIFICATION_REASON_UNSPECIFIED",
              "AUTOMATION",
              "UNEXPECTED_ENVIRONMENT",
              "TOO_MUCH_TRAFFIC",
              "UNEXPECTED_USAGE_PATTERNS",
              "LOW_CONFIDENCE_SCORE"
            ],
            "type": "string",
            "enumDescriptions": [
              "Default unspecified type.",
              "Interactions matched the behavior of an automated agent.",
              "The event originated from an illegitimate environment.",
              "Traffic volume from the event source is higher than normal.",
              "Interactions with the site were significantly different than expected patterns.",
              "Too little traffic has been received from this site thus far to generate quality risk analysis."
            ]
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics": {
      "properties": {
        "nocaptchaCount": {
          "format": "int64",
          "description": "Count of nocaptchas (successful verification without a challenge) issued.",
          "type": "string"
        },
        "pageloadCount": {
          "description": "Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.",
          "format": "int64",
          "type": "string"
        },
        "failedCount": {
          "description": "Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered.",
          "format": "int64",
          "type": "string"
        },
        "passedCount": {
          "format": "int64",
          "description": "Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics",
      "description": "Metrics related to challenges.",
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{related_account_group}`."
        }
      },
      "type": "object",
      "description": "A group of related accounts.",
      "id": "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup"
    },
    "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse": {
      "description": "The response to a `ListRelatedAccountGroupMemberships` call.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "relatedAccountGroupMemberships": {
          "description": "The memberships listed by the query.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse"
    },
    "GoogleCloudRecaptchaenterpriseV1Event": {
      "type": "object",
      "properties": {
        "hashedAccountId": {
          "description": "Optional. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.",
          "format": "byte",
          "type": "string"
        },
        "userAgent": {
          "type": "string",
          "description": "Optional. The user agent present in the request from the user's device related to this event."
        },
        "token": {
          "description": "Optional. The user response token provided by the reCAPTCHA client-side integration on your site.",
          "type": "string"
        },
        "expectedAction": {
          "description": "Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.",
          "type": "string"
        },
        "userIpAddress": {
          "type": "string",
          "description": "Optional. The IP address in the request from the user's device related to this event."
        },
        "siteKey": {
          "description": "Optional. The site key that was used to invoke reCAPTCHA on your site and generate the token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1Event"
    },
    "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings": {
      "properties": {
        "allowAllPackageNames": {
          "type": "boolean",
          "description": "If set to true, allowed_package_names are not enforced."
        },
        "allowedPackageNames": {
          "description": "Android package names of apps allowed to use the key. Example: 'com.companyname.appname'",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings",
      "description": "Settings specific to keys that can be used by Android apps."
    },
    "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse": {
      "description": "The response to a `SearchRelatedAccountGroupMemberships` call.",
      "id": "GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse",
      "type": "object",
      "properties": {
        "relatedAccountGroupMemberships": {
          "type": "array",
          "description": "The queried memberships.",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1ScoreDistribution": {
      "type": "object",
      "description": "Score distribution.",
      "properties": {
        "scoreBuckets": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object",
          "description": "Map key is score value multiplied by 100. The scores are discrete values between [0, 1]. The maximum number of buckets is on order of a few dozen, but typically much lower (ie. 10)."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest": {
      "properties": {
        "reasons": {
          "description": "Optional. Optional reasons for the annotation that will be assigned to the Event.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Default unspecified reason.",
              "Indicates that the transaction had a chargeback issued with no other details. When possible, specify the type by using CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.",
              "Indicates that the transaction had a chargeback issued related to an alleged unauthorized transaction from the cardholder's perspective (for example, the card number was stolen).",
              "Indicates that the transaction had a chargeback issued related to the cardholder having provided their card details but allegedly not being satisfied with the purchase (for example, misrepresentation, attempted cancellation).",
              "Indicates that the completed payment transaction was refunded by the seller.",
              "Indicates that the completed payment transaction was determined to be fraudulent by the seller, and was cancelled and refunded as a result.",
              "Indicates that the payment transaction was accepted, and the user was charged.",
              "Indicates that the payment transaction was declined, for example due to invalid card details.",
              "Indicates the transaction associated with the assessment is suspected of being fraudulent based on the payment method, billing details, shipping address or other transaction information.",
              "Indicates that the user was served a 2FA challenge. An old assessment with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that has not been overwritten with `PASSED_TWO_FACTOR` is treated as an abandoned 2FA flow. This is equivalent to `FAILED_TWO_FACTOR`.",
              "Indicates that the user passed a 2FA challenge.",
              "Indicates that the user failed a 2FA challenge.",
              "Indicates the user provided the correct password.",
              "Indicates the user provided an incorrect password.",
              "Indicates that the user sent unwanted and abusive messages to other users of the platform, such as spam, scams, phishing, or social engineering."
            ],
            "enum": [
              "REASON_UNSPECIFIED",
              "CHARGEBACK",
              "CHARGEBACK_FRAUD",
              "CHARGEBACK_DISPUTE",
              "REFUND",
              "REFUND_FRAUD",
              "TRANSACTION_ACCEPTED",
              "TRANSACTION_DECLINED",
              "PAYMENT_HEURISTICS",
              "INITIATED_TWO_FACTOR",
              "PASSED_TWO_FACTOR",
              "FAILED_TWO_FACTOR",
              "CORRECT_PASSWORD",
              "INCORRECT_PASSWORD",
              "SOCIAL_SPAM"
            ],
            "type": "string"
          }
        },
        "hashedAccountId": {
          "type": "string",
          "description": "Optional. Unique stable hashed user identifier to apply to the assessment. This is an alternative to setting the hashed_account_id in CreateAssessment, for example when the account identifier is not yet known in the initial request. It is recommended that the identifier is hashed using hmac-sha256 with stable secret.",
          "format": "byte"
        },
        "annotation": {
          "description": "Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.",
          "type": "string",
          "enum": [
            "ANNOTATION_UNSPECIFIED",
            "LEGITIMATE",
            "FRAUDULENT",
            "PASSWORD_CORRECT",
            "PASSWORD_INCORRECT"
          ],
          "enumDescriptions": [
            "Default unspecified type.",
            "Provides information that the event turned out to be legitimate.",
            "Provides information that the event turned out to be fraudulent.",
            "Provides information that the event was related to a login event in which the user typed the correct password. Deprecated, prefer indicating CORRECT_PASSWORD through the reasons field instead.",
            "Provides information that the event was related to a login event in which the user typed the incorrect password. Deprecated, prefer indicating INCORRECT_PASSWORD through the reasons field instead."
          ]
        }
      },
      "type": "object",
      "description": "The request message to annotate an Assessment.",
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
    },
    "GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment": {
      "type": "object",
      "description": "Account defender risk assessment.",
      "id": "GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment",
      "properties": {
        "labels": {
          "items": {
            "enumDescriptions": [
              "Default unspecified type.",
              "The request matches a known good profile for the user.",
              "The request is potentially a suspicious login event and must be further verified either through multi-factor authentication or another system.",
              "The request matched a profile that previously had suspicious account creation behavior. This can mean that this is a fake account.",
              "The account in the request has a high number of related accounts. It does not necessarily imply that the account is bad but can require further investigation."
            ],
            "enum": [
              "ACCOUNT_DEFENDER_LABEL_UNSPECIFIED",
              "PROFILE_MATCH",
              "SUSPICIOUS_LOGIN_ACTIVITY",
              "SUSPICIOUS_ACCOUNT_CREATION",
              "RELATED_ACCOUNTS_NUMBER_HIGH"
            ],
            "type": "string"
          },
          "description": "Labels for this request.",
          "type": "array"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership": {
      "id": "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership",
      "description": "A membership in a group of related accounts.",
      "properties": {
        "hashedAccountId": {
          "type": "string",
          "description": "The unique stable hashed user identifier of the member. The identifier corresponds to a `hashed_account_id` provided in a previous `CreateAssessment` or `AnnotateAssessment` call.",
          "format": "byte"
        },
        "name": {
          "type": "string",
          "description": "Required. The resource name for this membership in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`."
        }
      },
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1WebKeySettings": {
      "description": "Settings specific to keys that can be used by websites.",
      "properties": {
        "integrationType": {
          "description": "Required. Describes how this key is integrated with the website.",
          "enum": [
            "INTEGRATION_TYPE_UNSPECIFIED",
            "SCORE",
            "CHECKBOX",
            "INVISIBLE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified. This is not a valid IntegrationType, one of the other types must be specified instead.",
            "Only used to produce scores. It doesn't display the \"I'm not a robot\" checkbox and never shows captcha challenges.",
            "Displays the \"I'm not a robot\" checkbox and may show captcha challenges after it is checked.",
            "Doesn't display the \"I'm not a robot\" checkbox, but may show captcha challenges after risk analysis."
          ]
        },
        "allowedDomains": {
          "items": {
            "type": "string"
          },
          "description": "Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: 'example.com' or 'subdomain.example.com'",
          "type": "array"
        },
        "allowAmpTraffic": {
          "description": "If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.",
          "type": "boolean"
        },
        "allowAllDomains": {
          "type": "boolean",
          "description": "If set to true, it means allowed_domains will not be enforced."
        },
        "challengeSecurityPreference": {
          "enum": [
            "CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED",
            "USABILITY",
            "BALANCE",
            "SECURITY"
          ],
          "description": "Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.",
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified.",
            "Key tends to show fewer and easier challenges.",
            "Key tends to show balanced (in amount and difficulty) challenges.",
            "Key tends to show more and harder challenges."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1WebKeySettings",
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification": {
      "properties": {
        "reencryptedUserCredentialsHash": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.",
          "format": "byte"
        },
        "lookupHashPrefix": {
          "type": "string",
          "format": "byte",
          "description": "Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix."
        },
        "encryptedUserCredentialsHash": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`."
        },
        "encryptedLeakMatchPrefixes": {
          "description": "Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`",
          "type": "array",
          "readOnly": true,
          "items": {
            "format": "byte",
            "type": "string"
          }
        }
      },
      "description": "Private password leak verification info.",
      "id": "GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification",
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse": {
      "description": "The response to a `ListRelatedAccountGroups` call.",
      "properties": {
        "relatedAccountGroups": {
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup"
          },
          "description": "The groups of related accounts listed by the query.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse"
    },
    "GoogleCloudRecaptchaenterpriseV1Key": {
      "description": "A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.",
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1Key",
      "properties": {
        "androidSettings": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings",
          "description": "Settings for keys that can be used by Android apps."
        },
        "labels": {
          "description": "See Creating and managing labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the Key in the format \"projects/{project}/keys/{key}\"."
        },
        "testingOptions": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1TestingOptions",
          "description": "Options for user acceptance testing."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The timestamp corresponding to the creation of this Key.",
          "type": "string"
        },
        "wafSettings": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1WafSettings",
          "description": "Settings for WAF"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name of this key. Modifiable by user."
        },
        "webSettings": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1WebKeySettings",
          "description": "Settings for keys that can be used by websites."
        },
        "iosSettings": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings",
          "description": "Settings for keys that can be used by iOS apps."
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse": {
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse",
      "type": "object",
      "description": "Empty response for AnnotateAssessment.",
      "properties": {}
    },
    "GoogleCloudRecaptchaenterpriseV1Assessment": {
      "id": "GoogleCloudRecaptchaenterpriseV1Assessment",
      "type": "object",
      "properties": {
        "riskAnalysis": {
          "description": "Output only. The risk analysis result for the event being assessed.",
          "readOnly": true,
          "$ref": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis"
        },
        "tokenProperties": {
          "readOnly": true,
          "$ref": "GoogleCloudRecaptchaenterpriseV1TokenProperties",
          "description": "Output only. Properties of the provided event token."
        },
        "event": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1Event",
          "description": "The event being assessed."
        },
        "accountDefenderAssessment": {
          "description": "Assessment returned by account defender when a hashed_account_id is provided.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment"
        },
        "accountVerification": {
          "description": "Account verification information for identity verification. The assessment event must include a token and site key to use this feature.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo"
        },
        "privatePasswordLeakVerification": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification",
          "description": "The private password leak verification field contains the parameters that are used to to check for leaks privately without sharing user credentials."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name for the Assessment in the format \"projects/{project}/assessments/{assessment}\"."
        }
      },
      "description": "A recaptcha assessment resource."
    }
  },
  "baseUrl": "https://recaptchaenterprise.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "revision": "20221212",
  "ownerDomain": "google.com"
}

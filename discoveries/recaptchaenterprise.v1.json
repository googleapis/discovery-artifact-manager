{
  "discoveryVersion": "v1",
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "name": "recaptchaenterprise",
  "fullyEncodeReservedExpansion": true,
  "description": "",
  "protocol": "rest",
  "schemas": {
    "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest": {
      "properties": {},
      "description": "The migrate key request message.",
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest"
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse",
      "description": "Empty response for AnnotateAssessment."
    },
    "GoogleCloudRecaptchaenterpriseV1Key": {
      "description": "A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Human-readable display name of this key. Modifiable by user."
        },
        "name": {
          "description": "The resource name for the Key in the format \"projects/{project}/keys/{key}\".",
          "type": "string"
        },
        "androidSettings": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings",
          "description": "Settings for keys that can be used by Android apps."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "See Creating and managing labels."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The timestamp corresponding to the creation of this Key.",
          "type": "string"
        },
        "webSettings": {
          "description": "Settings for keys that can be used by websites.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1WebKeySettings"
        },
        "testingOptions": {
          "description": "Options for user acceptance testing.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1TestingOptions"
        },
        "iosSettings": {
          "description": "Settings for keys that can be used by iOS apps.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1Key"
    },
    "GoogleCloudRecaptchaenterpriseV1RiskAnalysis": {
      "description": "Risk analysis result for an event.",
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic)."
        },
        "reasons": {
          "items": {
            "enum": [
              "CLASSIFICATION_REASON_UNSPECIFIED",
              "AUTOMATION",
              "UNEXPECTED_ENVIRONMENT",
              "TOO_MUCH_TRAFFIC",
              "UNEXPECTED_USAGE_PATTERNS",
              "LOW_CONFIDENCE_SCORE"
            ],
            "type": "string",
            "enumDescriptions": [
              "Default unspecified type.",
              "Interactions matched the behavior of an automated agent.",
              "The event originated from an illegitimate environment.",
              "Traffic volume from the event source is higher than normal.",
              "Interactions with the site were significantly different than expected patterns.",
              "Too little traffic has been received from this site thus far to generate quality risk analysis."
            ]
          },
          "description": "Reasons contributing to the risk analysis verdict.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis"
    },
    "GoogleCloudRecaptchaenterpriseV1ScoreMetrics": {
      "properties": {
        "actionMetrics": {
          "additionalProperties": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution"
          },
          "description": "Action-based metrics. The map key is the action name which specified by the site owners at time of the \"execute\" client-side call. Populated only for SCORE keys.",
          "type": "object"
        },
        "overallMetrics": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution",
          "description": "Aggregated score metrics for all traffic."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1ScoreMetrics",
      "type": "object",
      "description": "Metrics related to scoring."
    },
    "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics": {
      "description": "Metrics related to challenges.",
      "id": "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics",
      "properties": {
        "pageloadCount": {
          "description": "Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.",
          "type": "string",
          "format": "int64"
        },
        "failedCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered."
        },
        "nocaptchaCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of nocaptchas (successful verification without a challenge) issued."
        },
        "passedCount": {
          "description": "Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1IOSKeySettings": {
      "properties": {
        "allowedBundleIds": {
          "items": {
            "type": "string"
          },
          "description": "iOS bundle ids of apps allowed to use the key. Example: 'com.companyname.productname.appname'",
          "type": "array"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings",
      "description": "Settings specific to keys that can be used by iOS apps.",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1TokenProperties": {
      "id": "GoogleCloudRecaptchaenterpriseV1TokenProperties",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp corresponding to the generation of the token."
        },
        "valid": {
          "type": "boolean",
          "description": "Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment)."
        },
        "action": {
          "type": "string",
          "description": "Action name provided at token generation."
        },
        "hostname": {
          "description": "The hostname of the page on which the token was generated.",
          "type": "string"
        },
        "invalidReason": {
          "type": "string",
          "enum": [
            "INVALID_REASON_UNSPECIFIED",
            "UNKNOWN_INVALID_REASON",
            "MALFORMED",
            "EXPIRED",
            "DUPE",
            "MISSING",
            "BROWSER_ERROR"
          ],
          "enumDescriptions": [
            "Default unspecified type.",
            "If the failure reason was not accounted for.",
            "The provided user verification token was malformed.",
            "The user verification token had expired.",
            "The user verification had already been seen.",
            "The user verification token was not present.",
            "A retriable error (such as network failure) occurred on the browser. Could easily be simulated by an attacker."
          ],
          "description": "Reason associated with the response when valid = false."
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest": {
      "properties": {
        "reasons": {
          "type": "array",
          "description": "Optional. Optional reasons for the annotation that will be assigned to the Event.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default unspecified reason.",
              "Indicates a chargeback for fraud was issued for the transaction associated with the assessment.",
              "Indicates the transaction associated with the assessment is suspected of being fraudulent based on the payment method, billing details, shipping address or other transaction information.",
              "Indicates that the user passed a 2FA challenge.",
              "Indicates that the user failed a 2FA challenge.",
              "Indicates the user provided the correct password.",
              "Indicates the user provided an incorrect password."
            ],
            "enum": [
              "REASON_UNSPECIFIED",
              "CHARGEBACK",
              "PAYMENT_HEURISTICS",
              "PASSED_TWO_FACTOR",
              "FAILED_TWO_FACTOR",
              "CORRECT_PASSWORD",
              "INCORRECT_PASSWORD"
            ]
          }
        },
        "annotation": {
          "description": "Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.",
          "enum": [
            "ANNOTATION_UNSPECIFIED",
            "LEGITIMATE",
            "FRAUDULENT",
            "PASSWORD_CORRECT",
            "PASSWORD_INCORRECT"
          ],
          "enumDescriptions": [
            "Default unspecified type.",
            "Provides information that the event turned out to be legitimate.",
            "Provides information that the event turned out to be fraudulent.",
            "Provides information that the event was related to a login event in which the user typed the correct password. Deprecated, prefer indicating CORRECT_PASSWORD through the reasons field instead.",
            "Provides information that the event was related to a login event in which the user typed the incorrect password. Deprecated, prefer indicating INCORRECT_PASSWORD through the reasons field instead."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest",
      "type": "object",
      "description": "The request message to annotate an Assessment."
    },
    "GoogleCloudRecaptchaenterpriseV1Metrics": {
      "id": "GoogleCloudRecaptchaenterpriseV1Metrics",
      "type": "object",
      "description": "Metrics for a single Key.",
      "properties": {
        "startTime": {
          "description": "Inclusive start time aligned to a day (UTC).",
          "type": "string",
          "format": "google-datetime"
        },
        "challengeMetrics": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ChallengeMetrics"
          },
          "description": "Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data."
        },
        "scoreMetrics": {
          "type": "array",
          "description": "Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data.",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1ScoreMetrics"
          }
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1ScoreDistribution": {
      "id": "GoogleCloudRecaptchaenterpriseV1ScoreDistribution",
      "properties": {
        "scoreBuckets": {
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Map key is score value multiplied by 100. The scores are discrete values between [0, 1]. The maximum number of buckets is on order of a few dozen, but typically much lower (ie. 10).",
          "type": "object"
        }
      },
      "type": "object",
      "description": "Score distribution."
    },
    "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings",
      "properties": {
        "allowedPackageNames": {
          "description": "Android package names of apps allowed to use the key. Example: 'com.companyname.appname'",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Settings specific to keys that can be used by Android apps."
    },
    "GoogleCloudRecaptchaenterpriseV1WebKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1WebKeySettings",
      "description": "Settings specific to keys that can be used by websites.",
      "properties": {
        "allowAllDomains": {
          "description": "If set to true, it means allowed_domains will not be enforced.",
          "type": "boolean"
        },
        "allowAmpTraffic": {
          "type": "boolean",
          "description": "Required. Whether this key can be used on AMP (Accelerated Mobile Pages) websites. This can only be set for the SCORE integration type."
        },
        "allowedDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: 'example.com' or 'subdomain.example.com'"
        },
        "challengeSecurityPreference": {
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified.",
            "Key tends to show fewer and easier challenges.",
            "Key tends to show balanced (in amount and difficulty) challenges.",
            "Key tends to show more and harder challenges."
          ],
          "type": "string",
          "enum": [
            "CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED",
            "USABILITY",
            "BALANCE",
            "SECURITY"
          ],
          "description": "Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE."
        },
        "integrationType": {
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified. This is not a valid IntegrationType, one of the other types must be specified instead.",
            "Only used to produce scores. It doesn't display the \"I'm not a robot\" checkbox and never shows captcha challenges.",
            "Displays the \"I'm not a robot\" checkbox and may show captcha challenges after it is checked.",
            "Doesn't display the \"I'm not a robot\" checkbox, but may show captcha challenges after risk analysis."
          ],
          "type": "string",
          "enum": [
            "INTEGRATION_TYPE_UNSPECIFIED",
            "SCORE",
            "CHECKBOX",
            "INVISIBLE"
          ],
          "description": "Required. Describes how this key is integrated with the website."
        }
      },
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1Event": {
      "id": "GoogleCloudRecaptchaenterpriseV1Event",
      "properties": {
        "expectedAction": {
          "type": "string",
          "description": "Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise."
        },
        "userAgent": {
          "type": "string",
          "description": "Optional. The user agent present in the request from the user's device related to this event."
        },
        "token": {
          "type": "string",
          "description": "Optional. The user response token provided by the reCAPTCHA client-side integration on your site."
        },
        "siteKey": {
          "description": "Optional. The site key that was used to invoke reCAPTCHA on your site and generate the token.",
          "type": "string"
        },
        "userIpAddress": {
          "type": "string",
          "description": "Optional. The IP address in the request from the user's device related to this event."
        }
      },
      "type": "object"
    },
    "GoogleCloudRecaptchaenterpriseV1TestingOptions": {
      "type": "object",
      "properties": {
        "testingChallenge": {
          "enumDescriptions": [
            "Perform the normal risk analysis and return either nocaptcha or a challenge depending on risk and trust factors.",
            "Challenge requests for this key will always return a nocaptcha, which does not require a solution.",
            "Challenge requests for this key will always return an unsolvable challenge."
          ],
          "enum": [
            "TESTING_CHALLENGE_UNSPECIFIED",
            "NOCAPTCHA",
            "CHALLENGE"
          ],
          "type": "string",
          "description": "For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE."
        },
        "testingScore": {
          "type": "number",
          "format": "float",
          "description": "All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1TestingOptions",
      "description": "Options for user acceptance testing."
    },
    "GoogleCloudRecaptchaenterpriseV1ListKeysResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results. It is set to empty if no keys remain in results."
        },
        "keys": {
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
          },
          "type": "array",
          "description": "Key details."
        }
      },
      "id": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse",
      "type": "object",
      "description": "Response to request to list keys in a project."
    },
    "GoogleCloudRecaptchaenterpriseV1Assessment": {
      "id": "GoogleCloudRecaptchaenterpriseV1Assessment",
      "description": "A recaptcha assessment resource.",
      "type": "object",
      "properties": {
        "event": {
          "$ref": "GoogleCloudRecaptchaenterpriseV1Event",
          "description": "The event being assessed."
        },
        "tokenProperties": {
          "readOnly": true,
          "description": "Output only. Properties of the provided event token.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1TokenProperties"
        },
        "riskAnalysis": {
          "readOnly": true,
          "$ref": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis",
          "description": "Output only. The risk analysis result for the event being assessed."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for the Assessment in the format \"projects/{project}/assessments/{assessment}\".",
          "readOnly": true
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "keys": {
          "methods": {
            "migrate": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a key is migrated, it can be used from either product. SiteVerify requests are billed as CreateAssessment calls. You must be authenticated as one of the current owners of the reCAPTCHA Site Key, and your user must have the reCAPTCHA Enterprise Admin IAM role in the destination project.",
              "path": "v1/{+name}:migrate",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "description": "Required. The name of the key to be migrated, in the format \"projects/{project}/keys/{key}\"."
                }
              },
              "id": "recaptchaenterprise.projects.keys.migrate",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}:migrate",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              }
            },
            "get": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the requested key, in the format \"projects/{project}/keys/{key}\".",
                  "required": true,
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "recaptchaenterprise.projects.keys.get",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "description": "Returns the specified key.",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              }
            },
            "patch": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/keys/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "The resource name for the Key in the format \"projects/{project}/keys/{key}\".",
                  "location": "path"
                },
                "updateMask": {
                  "description": "Optional. The mask to control which fields of the key get updated. If the mask is not present, all fields will be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "id": "recaptchaenterprise.projects.keys.patch",
              "description": "Updates the specified key.",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "id": "recaptchaenterprise.projects.keys.delete",
              "description": "Deletes the specified key.",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the key to be deleted, in the format \"projects/{project}/keys/{key}\".",
                  "type": "string",
                  "pattern": "^projects/[^/]+/keys/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "getMetrics": {
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "description": "Get some aggregated metrics for a Key. This data can be used to build dashboards.",
              "parameterOrder": [
                "name"
              ],
              "id": "recaptchaenterprise.projects.keys.getMetrics",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/keys/[^/]+/metrics$",
                  "description": "Required. The name of the requested metrics, in the format \"projects/{project}/keys/{key}/metrics\".",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}/metrics",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Metrics"
              }
            },
            "create": {
              "flatPath": "v1/projects/{projectsId}/keys",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "path": "v1/{+parent}/keys",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in which the key will be created, in the format \"projects/{project}\".",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "id": "recaptchaenterprise.projects.keys.create",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "description": "Creates a new reCAPTCHA Enterprise key."
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse"
              },
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "Optional. The maximum number of keys to return. Default is 10. Max limit is 1000.",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the project that contains the keys that will be listed, in the format \"projects/{project}\"."
                },
                "pageToken": {
                  "description": "Optional. The next_page_token value returned from a previous. ListKeysRequest, if any.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Returns the list of all keys that belong to a project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/keys",
              "id": "recaptchaenterprise.projects.keys.list",
              "flatPath": "v1/projects/{projectsId}/keys"
            }
          }
        },
        "assessments": {
          "methods": {
            "create": {
              "description": "Creates an Assessment of the likelihood an event is legitimate.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in which the assessment will be created, in the format \"projects/{project}\".",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              },
              "flatPath": "v1/projects/{projectsId}/assessments",
              "path": "v1/{+parent}/assessments",
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "recaptchaenterprise.projects.assessments.create"
            },
            "annotate": {
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse"
              },
              "id": "recaptchaenterprise.projects.assessments.annotate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/assessments/{assessmentsId}:annotate",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}:annotate",
              "description": "Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/assessments/[^/]+$",
                  "type": "string",
                  "description": "Required. The resource name of the Assessment, in the format \"projects/{project}/assessments/{assessment}\".",
                  "required": true,
                  "location": "path"
                }
              }
            }
          }
        }
      }
    }
  },
  "id": "recaptchaenterprise:v1",
  "canonicalName": "Recaptcha Enterprise",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "version_module": true,
  "title": "reCAPTCHA Enterprise API",
  "batchPath": "batch",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "rootUrl": "https://recaptchaenterprise.googleapis.com/",
  "documentationLink": "https://cloud.google.com/recaptcha-enterprise/",
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20210514",
  "version": "v1",
  "mtlsRootUrl": "https://recaptchaenterprise.mtls.googleapis.com/",
  "baseUrl": "https://recaptchaenterprise.googleapis.com/"
}

{
  "description": "An API for managing Drive Labels",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "id": "drivelabels:v2beta",
  "version": "v2beta",
  "documentationLink": "https://developers.google.com/drive/labels",
  "revision": "20230428",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://drivelabels.googleapis.com/",
  "ownerDomain": "google.com",
  "schemas": {
    "GoogleAppsDriveLabelsV2betaListLimits": {
      "id": "GoogleAppsDriveLabelsV2betaListLimits",
      "description": "Limits for list-variant of a Field type.",
      "properties": {
        "maxEntries": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of values allowed for the Field type."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse": {
      "type": "object",
      "properties": {},
      "description": "Response following Field enable.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest": {
      "properties": {
        "updateMask": {
          "description": "The fields that should be updated. At least one field must be specified. The root `label_properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "properties": {
          "description": "Required. Label properties to update.",
          "$ref": "GoogleAppsDriveLabelsV2betaLabelProperties"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest",
      "type": "object",
      "description": "Updates basic properties of a Label."
    },
    "GoogleAppsDriveLabelsV2betaBadgeColors": {
      "id": "GoogleAppsDriveLabelsV2betaBadgeColors",
      "properties": {
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "readOnly": true,
          "description": "Output only. Badge background that pairs with the foreground."
        },
        "soloColor": {
          "$ref": "GoogleTypeColor",
          "description": "Output only. Color that can be used for text without a background.",
          "readOnly": true
        },
        "foregroundColor": {
          "description": "Output only. Badge foreground that pairs with the background.",
          "$ref": "GoogleTypeColor",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The color derived from BadgeConfig and changed to the closest recommended supported color."
    },
    "GoogleAppsDriveLabelsV2betaDateLimits": {
      "properties": {
        "maxValue": {
          "description": "Maximum value for the date Field type.",
          "$ref": "GoogleTypeDate"
        },
        "minValue": {
          "description": "Minimum value for the date Field type.",
          "$ref": "GoogleTypeDate"
        }
      },
      "description": "Limits for date Field type.",
      "id": "GoogleAppsDriveLabelsV2betaDateLimits",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest": {
      "properties": {
        "choice": {
          "description": "Required. The Choice to create.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice"
        },
        "fieldId": {
          "type": "string",
          "description": "Required. The Selection Field in which a Choice will be created."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest",
      "description": "Request to create a Selection Choice."
    },
    "GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities": {
      "description": "The capabilities related to this field when editing the field.",
      "id": "GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities",
      "properties": {
        "canDelete": {
          "type": "boolean",
          "description": "Whether the user can delete this field. The user must have permission and the field must be deprecated."
        },
        "canDisable": {
          "description": "Whether the user can disable this field. The user must have permission and this field must not already be disabled.",
          "type": "boolean"
        },
        "canUpdate": {
          "description": "Whether the user can change this field.",
          "type": "boolean"
        },
        "canEnable": {
          "description": "Whether the user can enable this field. The user must have permission and this field must be disabled.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice": {
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time this choice was created.",
          "format": "google-datetime"
        },
        "updater": {
          "description": "Output only. The user who updated this choice last.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo"
        },
        "lockStatus": {
          "description": "Output only. The LockStatus of this choice.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaLockStatus"
        },
        "schemaCapabilities": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities",
          "readOnly": true,
          "description": "Output only. The capabilities related to this option when editing the option."
        },
        "appliedCapabilities": {
          "description": "Output only. The capabilities related to this choice on applied metadata.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities",
          "readOnly": true
        },
        "displayHints": {
          "description": "Output only. UI display hints for rendering a choice.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints"
        },
        "publishTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time this choice was published. This value has no meaning when the choice is not published.",
          "format": "google-datetime"
        },
        "disabler": {
          "description": "Output only. The user who disabled this choice. This value has no meaning when the option is not disabled.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo"
        },
        "lifecycle": {
          "readOnly": true,
          "description": "Output only. Lifecycle of the choice.",
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycle"
        },
        "id": {
          "type": "string",
          "description": "The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`."
        },
        "disableTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled.",
          "readOnly": true
        },
        "publisher": {
          "description": "Output only. The user who published this choice. This value has no meaning when the choice is not published.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this choice was updated last.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "creator": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "readOnly": true,
          "description": "Output only. The user who created this choice."
        },
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties",
          "description": "Basic properties of the choice."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice",
      "type": "object",
      "description": "Selection field choice."
    },
    "GoogleAppsDriveLabelsV2betaDisableLabelRequest": {
      "type": "object",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string"
        },
        "disabledPolicy": {
          "description": "Disabled policy to use.",
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy"
        },
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
          "type": "string"
        },
        "writeControl": {
          "$ref": "GoogleAppsDriveLabelsV2betaWriteControl",
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins."
        }
      },
      "description": "Request to deprecate a published Label.",
      "id": "GoogleAppsDriveLabelsV2betaDisableLabelRequest"
    },
    "GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest": {
      "properties": {
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        },
        "view": {
          "description": "When specified, only certain fields belonging to the indicated view will be returned.",
          "enumDescriptions": [
            "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
            "All possible fields."
          ],
          "enum": [
            "LABEL_VIEW_BASIC",
            "LABEL_VIEW_FULL"
          ],
          "type": "string"
        },
        "copyMode": {
          "description": "Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.",
          "enumDescriptions": [
            "Copy mode unspecified.",
            "The applied label and field values are not copied by default when the Drive item it's applied to is copied.",
            "The applied label and field values are always copied when the Drive item it's applied to is copied. Only admins can use this mode.",
            "The applied label and field values are copied if the label is appliable by the user making the copy."
          ],
          "type": "string",
          "enum": [
            "COPY_MODE_UNSPECIFIED",
            "DO_NOT_COPY",
            "ALWAYS_COPY",
            "COPY_APPLIABLE"
          ]
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest",
      "description": "Request to update the `CopyMode` of the given Label. Changes to this policy are not revisioned, do not require publishing, and take effect immediately. \\",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse",
      "type": "object",
      "description": "Response following Choice delete.",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest",
      "type": "object",
      "description": "Request to update a Choice properties.",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        },
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties",
          "description": "Required. The Choice properties to update."
        },
        "id": {
          "type": "string",
          "description": "Required. The Choice to update."
        },
        "fieldId": {
          "description": "Required. The Selection Field to update.",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaLabelProperties": {
      "description": "Basic properties of the label.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaLabelProperties",
      "properties": {
        "description": {
          "description": "The description of the label.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the label."
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse": {
      "description": "Response following update to Field properties.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse",
      "properties": {
        "priority": {
          "format": "int32",
          "type": "integer",
          "description": "The priority of the updated field. The priority may change from what was specified to assure contiguous priorities between fields (1-n)."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse",
      "description": "Response following Choice enable.",
      "properties": {},
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse",
      "description": "Response following update to Selection Choice properties.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the updated choice. The priority may change from what was specified to assure contiguous priorities between choices (1-n)."
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaWriteControl": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaWriteControl",
      "properties": {
        "requiredRevisionId": {
          "type": "string",
          "description": "The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error."
        }
      },
      "description": "Provides control over how write requests are executed. When not specified, the last write wins."
    },
    "GoogleAppsDriveLabelsV2betaLabel": {
      "description": "A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.",
      "type": "object",
      "properties": {
        "learnMoreUri": {
          "description": "Custom URL to present to users to allow them to learn more about this label and how it should be used.",
          "type": "string"
        },
        "lifecycle": {
          "description": "Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycle"
        },
        "id": {
          "type": "string",
          "description": "Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`",
          "readOnly": true
        },
        "schemaCapabilities": {
          "description": "Output only. The capabilities the user has on this label.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities"
        },
        "appliedLabelPolicy": {
          "description": "Output only. Behavior of this label when it's applied to Drive items.",
          "$ref": "GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy",
          "readOnly": true
        },
        "appliedCapabilities": {
          "readOnly": true,
          "description": "Output only. The capabilities related to this label on applied metadata.",
          "$ref": "GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities"
        },
        "creator": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "description": "Output only. The user who created this label.",
          "readOnly": true
        },
        "properties": {
          "description": "Required. The basic properties of the label.",
          "$ref": "GoogleAppsDriveLabelsV2betaLabelProperties"
        },
        "lockStatus": {
          "description": "Output only. The LockStatus of this label.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaLockStatus"
        },
        "revisionId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`"
        },
        "publisher": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "description": "Output only. The user who published this label. This value has no meaning when the label is not published.",
          "readOnly": true
        },
        "revisionCreateTime": {
          "description": "Output only. The time this label revision was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "displayHints": {
          "$ref": "GoogleAppsDriveLabelsV2betaLabelDisplayHints",
          "readOnly": true,
          "description": "Output only. UI display hints for rendering the label."
        },
        "createTime": {
          "description": "Output only. The time this label was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "publishTime": {
          "description": "Output only. The time this label was published. This value has no meaning when the label is not published.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaField"
          },
          "description": "List of fields in descending priority order.",
          "type": "array"
        },
        "customer": {
          "type": "string",
          "description": "Output only. The customer this label belongs to. For example: \"customers/123abc789.\"",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.",
          "type": "string"
        },
        "labelType": {
          "description": "Required. The type of label.",
          "type": "string",
          "enum": [
            "LABEL_TYPE_UNSPECIFIED",
            "SHARED",
            "ADMIN",
            "GOOGLE_APP"
          ],
          "enumDescriptions": [
            "Unknown label type.",
            "Shared labels may be shared with users to apply to Drive items.",
            "Admin-owned label. Only creatable and editable by admins. Supports some additional admin-only features.",
            "A label owned by an internal Google application rather than a customer. These labels are read-only."
          ]
        },
        "revisionCreator": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "description": "Output only. The user who created this label revision."
        },
        "disabler": {
          "readOnly": true,
          "description": "Output only. The user who disabled this label. This value has no meaning when the label is not disabled.",
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo"
        },
        "disableTime": {
          "type": "string",
          "description": "Output only. The time this label was disabled. This value has no meaning when the label is not disabled.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaLabel"
    },
    "GoogleAppsDriveLabelsV2betaField": {
      "properties": {
        "publisher": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "readOnly": true,
          "description": "Output only. The user who published this field. This value has no meaning when the field is not published."
        },
        "lockStatus": {
          "$ref": "GoogleAppsDriveLabelsV2betaLockStatus",
          "description": "Output only. The LockStatus of this field.",
          "readOnly": true
        },
        "disabler": {
          "description": "Output only. The user who disabled this field. This value has no meaning when the field is not disabled.",
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "readOnly": true
        },
        "textOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldTextOptions",
          "description": "Text field options."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time this field was updated.",
          "readOnly": true,
          "type": "string"
        },
        "integerOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldIntegerOptions",
          "description": "Integer field options."
        },
        "creator": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "description": "Output only. The user who created this field."
        },
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldProperties",
          "description": "The basic properties of the field."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`"
        },
        "lifecycle": {
          "readOnly": true,
          "description": "Output only. The lifecycle of this field.",
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycle"
        },
        "updater": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo",
          "description": "Output only. The user who modified this field.",
          "readOnly": true
        },
        "queryKey": {
          "readOnly": true,
          "description": "Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, \"`{query_key}` \u003e 2001-01-01\".",
          "type": "string"
        },
        "schemaCapabilities": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities",
          "description": "Output only. The capabilities this user has when editing this field.",
          "readOnly": true
        },
        "selectionOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptions",
          "description": "Selection field options."
        },
        "appliedCapabilities": {
          "description": "Output only. The capabilities this user has on this field and its value when the label is applied on Drive items.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities",
          "readOnly": true
        },
        "disableTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this field was disabled. This value has no meaning when the field is not disabled."
        },
        "displayHints": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldDisplayHints",
          "readOnly": true,
          "description": "Output only. UI display hints for rendering a field."
        },
        "createTime": {
          "description": "Output only. The time this field was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "dateOptions": {
          "description": "Date field options.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldDateOptions"
        },
        "userOptions": {
          "description": "User field options.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldUserOptions"
        }
      },
      "description": "Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaField"
    },
    "GoogleAppsDriveLabelsV2betaFieldDateOptions": {
      "type": "object",
      "properties": {
        "maxValue": {
          "description": "Output only. Maximum valid value (year, month, day).",
          "$ref": "GoogleTypeDate",
          "readOnly": true
        },
        "dateFormatType": {
          "enumDescriptions": [
            "Date format unspecified.",
            "Includes full month name. For example, January 12, 1999 (MMMM d, y)",
            "Short, numeric, representation. For example, 12/13/99 (M/d/yy)"
          ],
          "enum": [
            "DATE_FORMAT_UNSPECIFIED",
            "LONG_DATE",
            "SHORT_DATE"
          ],
          "type": "string",
          "description": "Localized date formatting option. Field values are rendered in this format according to their locale."
        },
        "minValue": {
          "$ref": "GoogleTypeDate",
          "readOnly": true,
          "description": "Output only. Minimum valid value (year, month, day)."
        },
        "dateFormat": {
          "readOnly": true,
          "description": "Output only. ICU date format.",
          "type": "string"
        }
      },
      "description": "Options for the date field type.",
      "id": "GoogleAppsDriveLabelsV2betaFieldDateOptions"
    },
    "GoogleAppsDriveLabelsV2betaSelectionLimits": {
      "properties": {
        "maxDisplayNameLength": {
          "format": "int32",
          "description": "Maximum length for display name.",
          "type": "integer"
        },
        "maxIdLength": {
          "type": "integer",
          "description": "Maximum ID length for a selection options.",
          "format": "int32"
        },
        "maxChoices": {
          "description": "The max number of choices.",
          "format": "int32",
          "type": "integer"
        },
        "listLimits": {
          "$ref": "GoogleAppsDriveLabelsV2betaListLimits",
          "description": "Limits for list-variant of a Field type."
        },
        "maxDeletedChoices": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum number of deleted choices."
        }
      },
      "description": "Limits for selection Field type.",
      "id": "GoogleAppsDriveLabelsV2betaSelectionLimits",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse": {
      "type": "object",
      "description": "Response following Field disable.",
      "properties": {},
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest": {
      "description": "Request to delete the Field.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. ID of the Field to delete.",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest": {
      "description": "Updates one or more Label Permissions.",
      "id": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest",
      "type": "object",
      "properties": {
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the UpdateLabelPermissionRequest messages must either be empty or match this field."
        },
        "requests": {
          "type": "array",
          "description": "Required. The request message specifying the resources to update.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest"
          }
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse": {
      "description": "Response for listing the permissions on a Label.",
      "properties": {
        "labelPermissions": {
          "type": "array",
          "description": "Label permissions.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token of the next page in the response."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse"
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities",
      "properties": {
        "canSelect": {
          "type": "boolean",
          "description": "Whether the user can select this choice on an item."
        },
        "canRead": {
          "type": "boolean",
          "description": "Whether the user can read related applied metadata on items."
        },
        "canSearch": {
          "description": "Whether the user can use this choice in search queries.",
          "type": "boolean"
        }
      },
      "description": "The capabilities related to this choice on applied metadata."
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest": {
      "description": "Request to create a Field within a Label.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Required. Field to create.",
          "$ref": "GoogleAppsDriveLabelsV2betaField"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse": {
      "type": "object",
      "description": "Response following Choice disable.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse": {
      "description": "Response following update to Label properties.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2betaLabelDisplayHints": {
      "id": "GoogleAppsDriveLabelsV2betaLabelDisplayHints",
      "description": "UI display hints for rendering the label.",
      "properties": {
        "shownInApply": {
          "type": "boolean",
          "description": "This label should be shown in the apply menu when applying values to a Drive item."
        },
        "hiddenInSearch": {
          "type": "boolean",
          "description": "This label should be hidden in the search menu when searching for Drive items."
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the label should be shown in the UI as disabled."
        },
        "priority": {
          "format": "int64",
          "description": "Order to display label in a list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest": {
      "properties": {
        "selectionOptions": {
          "description": "Update field to Selection.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptions"
        },
        "longTextOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldLongTextOptions",
          "description": "Update field to Long Text."
        },
        "dateOptions": {
          "description": "Update field to Date.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldDateOptions"
        },
        "id": {
          "type": "string",
          "description": "Required. The Field to update."
        },
        "userOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldUserOptions",
          "description": "Update field to User."
        },
        "updateMask": {
          "description": "The fields that should be updated. At least one field must be specified. The root of `type_options` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "integerOptions": {
          "description": "Update field to Integer.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldIntegerOptions"
        },
        "textOptions": {
          "description": "Update field to Text.",
          "$ref": "GoogleAppsDriveLabelsV2betaFieldTextOptions"
        }
      },
      "description": "Request to change the type of a Field.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities": {
      "type": "object",
      "description": "The capabilities related to this field on applied metadata.",
      "properties": {
        "canWrite": {
          "description": "Whether the user can set this field on Drive items.",
          "type": "boolean"
        },
        "canSearch": {
          "description": "Whether the user can search for Drive items referencing this field.",
          "type": "boolean"
        },
        "canRead": {
          "type": "boolean",
          "description": "Whether the user can read related applied metadata on items."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities"
    },
    "GoogleAppsDriveLabelsV2betaLabelPermission": {
      "properties": {
        "group": {
          "type": "string",
          "description": "Group resource name."
        },
        "person": {
          "description": "Person resource name.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified."
        },
        "role": {
          "enumDescriptions": [
            "Unknown role.",
            "A reader can read the label and associated metadata applied to Drive items.",
            "An applier can write associated metadata on Drive items in which they also have write access to. Implies `READER`.",
            "An organizer can pin this label in shared drives they manage and add new appliers to the label.",
            "Editors can make any update including deleting the label which also deletes the associated Drive item metadata. Implies `APPLIER`."
          ],
          "type": "string",
          "description": "The role the principal should have.",
          "enum": [
            "LABEL_ROLE_UNSPECIFIED",
            "READER",
            "APPLIER",
            "ORGANIZER",
            "EDITOR"
          ]
        },
        "name": {
          "type": "string",
          "description": "Resource name of this permission."
        },
        "audience": {
          "description": "Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaLabelPermission",
      "type": "object",
      "description": "The permission that applies to a principal (user, group, audience) on a label."
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints": {
      "properties": {
        "hiddenInSearch": {
          "description": "This option should be hidden in the search menu when searching for Drive items.",
          "type": "boolean"
        },
        "darkBadgeColors": {
          "description": "The dark-mode color to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`.",
          "$ref": "GoogleAppsDriveLabelsV2betaBadgeColors"
        },
        "badgeColors": {
          "$ref": "GoogleAppsDriveLabelsV2betaBadgeColors",
          "description": "The colors to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`."
        },
        "badgePriority": {
          "type": "string",
          "format": "int64",
          "description": "The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority."
        },
        "shownInApply": {
          "description": "This option should be shown in the apply menu when applying values to a Drive item.",
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the option should be shown in the UI as disabled."
        }
      },
      "type": "object",
      "description": "UI display hints for rendering an option.",
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints"
    },
    "GoogleAppsDriveLabelsV2betaPublishLabelRequest": {
      "id": "GoogleAppsDriveLabelsV2betaPublishLabelRequest",
      "properties": {
        "writeControl": {
          "$ref": "GoogleAppsDriveLabelsV2betaWriteControl",
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins."
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
          "type": "string"
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        }
      },
      "description": "Request to publish a label.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaUserLimits": {
      "type": "object",
      "description": "Limits for Field.Type.USER.",
      "id": "GoogleAppsDriveLabelsV2betaUserLimits",
      "properties": {
        "listLimits": {
          "description": "Limits for list-variant of a Field type.",
          "$ref": "GoogleAppsDriveLabelsV2betaListLimits"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse": {
      "id": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "Required. Permissions updated.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
          },
          "type": "array"
        }
      },
      "description": "Response for updating one or more Label Permissions."
    },
    "GoogleAppsDriveLabelsV2betaFieldUserOptions": {
      "type": "object",
      "description": "Options for the user field type.",
      "id": "GoogleAppsDriveLabelsV2betaFieldUserOptions",
      "properties": {
        "listOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldListOptions",
          "description": "When specified, indicates that this field supports a list of values. Once the field is published, this cannot be changed."
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaLockStatus": {
      "description": "Contains information about whether a label component should be considered locked.",
      "id": "GoogleAppsDriveLabelsV2betaLockStatus",
      "type": "object",
      "properties": {
        "locked": {
          "description": "Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaFieldListOptions": {
      "id": "GoogleAppsDriveLabelsV2betaFieldListOptions",
      "properties": {
        "maxEntries": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum number of entries permitted."
        }
      },
      "description": "Options for a multi-valued variant of an associated field type.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaListLabelLocksResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token of the next page in the response."
        },
        "labelLocks": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelLock"
          },
          "description": "LabelLocks.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response to a ListLabelLocksRequest.",
      "id": "GoogleAppsDriveLabelsV2betaListLabelLocksResponse"
    },
    "GoogleAppsDriveLabelsV2betaFieldLimits": {
      "properties": {
        "longTextLimits": {
          "description": "Long text Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2betaLongTextLimits"
        },
        "selectionLimits": {
          "description": "Selection Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2betaSelectionLimits"
        },
        "maxDisplayNameLength": {
          "format": "int32",
          "type": "integer",
          "description": "Limits for Field title."
        },
        "dateLimits": {
          "description": "Date Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2betaDateLimits"
        },
        "integerLimits": {
          "description": "Integer Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2betaIntegerLimits"
        },
        "maxIdLength": {
          "description": "Max length for the id.",
          "format": "int32",
          "type": "integer"
        },
        "maxDescriptionLength": {
          "format": "int32",
          "type": "integer",
          "description": "Limits for Field description, also called help text."
        },
        "userLimits": {
          "$ref": "GoogleAppsDriveLabelsV2betaUserLimits",
          "description": "User Field limits."
        },
        "textLimits": {
          "$ref": "GoogleAppsDriveLabelsV2betaTextLimits",
          "description": "The relevant limits for the specified Field.Type. Text Field limits."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaFieldLimits",
      "description": "Field constants governing the structure of a Field; such as, the maximum title length, minimum and maximum field values or length, etc.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest",
      "description": "Request to disable a Choice.",
      "properties": {
        "fieldId": {
          "description": "Required. The Selection Field in which a Choice will be disabled.",
          "type": "string"
        },
        "updateMask": {
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "disabledPolicy": {
          "description": "Required. The disabled policy to update.",
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy"
        },
        "id": {
          "description": "Required. Choice to disable.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLabelLimits": {
      "type": "object",
      "description": "Label constraints governing the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "maxFields": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of Fields allowed within the label."
        },
        "maxTitleLength": {
          "description": "The maximum number of characters allowed for the title.",
          "type": "integer",
          "format": "int32"
        },
        "maxDeletedFields": {
          "description": "The maximum number of published Fields that can be deleted.",
          "format": "int32",
          "type": "integer"
        },
        "maxDescriptionLength": {
          "description": "The maximum number of characters allowed for the description.",
          "format": "int32",
          "type": "integer"
        },
        "maxDraftRevisions": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of draft revisions that will be kept before deleting old drafts."
        },
        "fieldLimits": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldLimits",
          "description": "The limits for Fields."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaLabelLimits"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest": {
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        },
        "id": {
          "description": "Required. Key of the Field to disable.",
          "type": "string"
        },
        "disabledPolicy": {
          "description": "Required. Field Disabled Policy.",
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy"
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest",
      "description": "Request to disable the Field."
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaFieldDisplayHints": {
      "type": "object",
      "description": "UI display hints for rendering a field.",
      "id": "GoogleAppsDriveLabelsV2betaFieldDisplayHints",
      "properties": {
        "shownInApply": {
          "type": "boolean",
          "description": "This field should be shown in the apply menu when applying values to a Drive item."
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the field should be shown in the UI as disabled."
        },
        "hiddenInSearch": {
          "description": "This field should be hidden in the search menu when searching for Drive items.",
          "type": "boolean"
        },
        "required": {
          "type": "boolean",
          "description": "Whether the field should be shown as required in the UI."
        }
      }
    },
    "GoogleTypeColor": {
      "id": "GoogleTypeColor",
      "properties": {
        "alpha": {
          "type": "number",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "format": "float"
        },
        "blue": {
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "green": {
          "format": "float",
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "red": {
          "format": "float",
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "type": "number"
        }
      },
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLongTextLimits": {
      "id": "GoogleAppsDriveLabelsV2betaLongTextLimits",
      "properties": {
        "maxLength": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum length allowed for a long text Field type."
        },
        "minLength": {
          "description": "Minimum length allowed for a long text Field type.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Limits for long text Field type.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaEnableLabelRequest": {
      "properties": {
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        },
        "writeControl": {
          "$ref": "GoogleAppsDriveLabelsV2betaWriteControl",
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins."
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used."
        }
      },
      "description": "Request to enable a label.",
      "id": "GoogleAppsDriveLabelsV2betaEnableLabelRequest",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaFieldProperties": {
      "id": "GoogleAppsDriveLabelsV2betaFieldProperties",
      "properties": {
        "required": {
          "description": "Whether the field should be marked as required.",
          "type": "boolean"
        },
        "insertBeforeField": {
          "description": "Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display text to show in the UI identifying this field."
        }
      },
      "type": "object",
      "description": "The basic properties of the field."
    },
    "GoogleAppsDriveLabelsV2betaFieldTextOptions": {
      "id": "GoogleAppsDriveLabelsV2betaFieldTextOptions",
      "type": "object",
      "description": "Options for the Text field type.",
      "properties": {
        "minLength": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The minimum valid length of values for the text field."
        },
        "maxLength": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The maximum valid length of values for the text field.",
          "readOnly": true
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaFieldIntegerOptions": {
      "description": "Options for the Integer field type.",
      "id": "GoogleAppsDriveLabelsV2betaFieldIntegerOptions",
      "properties": {
        "maxValue": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The maximum valid value for the integer field.",
          "readOnly": true
        },
        "minValue": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The minimum valid value for the integer field.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLabelLock": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaLabelLock",
      "description": "A Lock that can be applied to a Label, Field, or Choice.",
      "properties": {
        "creator": {
          "readOnly": true,
          "description": "Output only. The user whose credentials were used to create the LabelLock. This will not be present if no user was responsible for creating the LabelLock.",
          "$ref": "GoogleAppsDriveLabelsV2betaUserInfo"
        },
        "deleteTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. A timestamp indicating when this LabelLock was scheduled for deletion. This will be present only if this LabelLock is in the DELETING state.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of this LabelLock."
        },
        "choiceId": {
          "type": "string",
          "description": "The ID of the Selection Field Choice that should be locked. If present, `field_id` must also be present."
        },
        "state": {
          "enumDescriptions": [
            "Unknown state.",
            "The LabelLock is active and is being enforced by the server.",
            "The LabelLock is being deleted. The LabelLock will continue to be enforced by the server until it has been fully removed."
          ],
          "description": "Output only. This LabelLock's state.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING"
          ],
          "readOnly": true
        },
        "fieldId": {
          "description": "The ID of the Field that should be locked. Empty if the whole Label should be locked.",
          "type": "string"
        },
        "capabilities": {
          "description": "Output only. The user's capabilities on this LabelLock.",
          "$ref": "GoogleAppsDriveLabelsV2betaLabelLockCapabilities",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time this LabelLock was created.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaLifecycle": {
      "properties": {
        "disabledPolicy": {
          "$ref": "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy",
          "description": "The policy that governs how to show a disabled label, field, or selection choice."
        },
        "state": {
          "description": "Output only. The state of the object associated with this lifecycle.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "UNPUBLISHED_DRAFT",
            "PUBLISHED",
            "DISABLED",
            "DELETED"
          ],
          "enumDescriptions": [
            "Unknown State.",
            "The initial state of an object. Once published, the object can never return to this state. Once an object is published, certain kinds of changes are no longer permitted.",
            "The object has been published. The object might have unpublished draft changes as indicated by `has_unpublished_changes`.",
            "The object has been published and has since been disabled. The object might have unpublished draft changes as indicated by `has_unpublished_changes`.",
            "The object has been deleted."
          ]
        },
        "hasUnpublishedChanges": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the object associated with this lifecycle has unpublished changes."
        }
      },
      "description": "The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -\u003e `PUBLISHED` * `UNPUBLISHED_DRAFT` -\u003e (Deleted) * `PUBLISHED` -\u003e `DISABLED` * `DISABLED` -\u003e `PUBLISHED` * `DISABLED` -\u003e (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaLifecycle"
    },
    "GoogleAppsDriveLabelsV2betaFieldLongTextOptions": {
      "id": "GoogleAppsDriveLabelsV2betaFieldLongTextOptions",
      "properties": {
        "maxLength": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. The maximum valid length of values for the text field.",
          "readOnly": true
        },
        "minLength": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "Output only. The minimum valid length of values for the text field."
        }
      },
      "type": "object",
      "description": "Options the Long Text field type."
    },
    "GoogleAppsDriveLabelsV2betaBadgeConfig": {
      "properties": {
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "The color of the badge. When not specified, no badge is rendered. The background, foreground, and solo (light and dark mode) colors set here are changed in the Drive UI into the closest recommended supported color."
        },
        "priorityOverride": {
          "type": "string",
          "format": "int64",
          "description": "Override the default global priority of this badge. When set to 0, the default priority heuristic is used."
        }
      },
      "type": "object",
      "description": "Badge status of the label.",
      "id": "GoogleAppsDriveLabelsV2betaBadgeConfig"
    },
    "GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest": {
      "description": "Updates a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaUpdateLabelPermissionRequest",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent Label resource name."
        },
        "labelPermission": {
          "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission",
          "description": "Required. The permission to create or update on the Label."
        },
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse",
      "description": "Response following update to Field type.",
      "properties": {},
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse": {
      "description": "Response following Field create.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse",
      "properties": {
        "id": {
          "description": "The field of the created field. When left blank in a create request, a key will be autogenerated and can be identified here.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The priority of the created field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).",
          "type": "integer"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaIntegerLimits": {
      "properties": {
        "minValue": {
          "type": "string",
          "description": "Minimum value for an integer Field type.",
          "format": "int64"
        },
        "maxValue": {
          "description": "Maximum value for an integer Field type.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaIntegerLimits",
      "description": "Limits for integer Field type.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest": {
      "type": "object",
      "description": "Deletes a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
      "properties": {
        "name": {
          "description": "Required. Label Permission resource name.",
          "type": "string"
        },
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest"
    },
    "GoogleAppsDriveLabelsV2betaLabelLockCapabilities": {
      "id": "GoogleAppsDriveLabelsV2betaLabelLockCapabilities",
      "properties": {
        "canViewPolicy": {
          "type": "boolean",
          "description": "True if the user is authorized to view the policy."
        }
      },
      "description": "A description of a user's capabilities on a LabelLock.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse",
      "type": "object",
      "properties": {
        "updateSelectionChoiceProperties": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse",
          "description": "Updates a Choice within a Selection Field."
        },
        "createField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse",
          "description": "Creates a new Field."
        },
        "updateLabel": {
          "description": "Updated basic properties of a Label.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateLabelPropertiesResponse"
        },
        "disableSelectionChoice": {
          "description": "Disables a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableSelectionChoiceResponse"
        },
        "disableField": {
          "description": "Disables Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDisableFieldResponse"
        },
        "updateField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse",
          "description": "Updates basic properties of a Field."
        },
        "enableField": {
          "description": "Enables Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableFieldResponse"
        },
        "deleteField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse",
          "description": "Deletes a Field from the label."
        },
        "createSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse",
          "description": "Creates a new selection list option to add to a Selection Field."
        },
        "deleteSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteSelectionChoiceResponse",
          "description": "Deletes a Choice from a Selection Field."
        },
        "enableSelectionChoice": {
          "description": "Enables a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseEnableSelectionChoiceResponse"
        },
        "updateFieldType": {
          "description": "Update Field type and/or type options.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldTypeResponse"
        }
      },
      "description": "A single response from an update."
    },
    "GoogleAppsDriveLabelsV2betaUserCapabilities": {
      "properties": {
        "canCreateAdminLabels": {
          "type": "boolean",
          "description": "Output only. Whether the user is allowed to create new admin labels.",
          "readOnly": true
        },
        "canAdministrateLabels": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the user is an administrator for the shared labels feature."
        },
        "canCreateSharedLabels": {
          "description": "Output only. Whether the user is allowed to create new shared labels.",
          "readOnly": true,
          "type": "boolean"
        },
        "canAccessLabelManager": {
          "type": "boolean",
          "description": "Output only. Whether the user is allowed access to the label manager.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name for the user capabilities."
        }
      },
      "description": "The capabilities of a user.",
      "id": "GoogleAppsDriveLabelsV2betaUserCapabilities",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties": {
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties",
      "properties": {
        "badgeConfig": {
          "$ref": "GoogleAppsDriveLabelsV2betaBadgeConfig",
          "description": "The badge configuration for this choice. When set, the label that owns this choice is considered a \"badged label\"."
        },
        "insertBeforeChoice": {
          "type": "string",
          "description": "Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display text to show in the UI identifying this field."
        },
        "description": {
          "description": "The description of this label.",
          "type": "string"
        }
      },
      "description": "Basic properties of the choice.",
      "type": "object"
    },
    "GoogleTypeDate": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate",
      "type": "object",
      "properties": {
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest": {
      "description": "Request to enable the Field.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. ID of the Field to enable."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest"
    },
    "GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest": {
      "description": "Deletes one of more Label Permissions.",
      "properties": {
        "requests": {
          "type": "array",
          "description": "Required. The request message specifying the resources to update.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaDeleteLabelPermissionRequest"
          }
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the DeleteLabelPermissionRequest messages must either be empty or match this field."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaUserInfo": {
      "properties": {
        "person": {
          "description": "The identifier for this user that can be used with the People API to get more information. For example, people/12345678.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaUserInfo",
      "type": "object",
      "description": "Information about a user."
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest": {
      "description": "Request to enable a Choice.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. Choice to enable.",
          "type": "string"
        },
        "fieldId": {
          "description": "Required. The Selection Field in which a Choice will be enabled.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest": {
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized Field labels when `include_label_in_response` is `true`.",
          "type": "string"
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        },
        "view": {
          "type": "string",
          "enum": [
            "LABEL_VIEW_BASIC",
            "LABEL_VIEW_FULL"
          ],
          "enumDescriptions": [
            "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
            "All possible fields."
          ],
          "description": "When specified, only certain fields belonging to the indicated view will be returned."
        },
        "writeControl": {
          "description": "Provides control over how write requests are executed.",
          "$ref": "GoogleAppsDriveLabelsV2betaWriteControl"
        },
        "requests": {
          "type": "array",
          "description": "A list of updates to apply to the Label. Requests will be applied in the order they are specified.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest"
          }
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest",
      "description": "The set of requests for updating aspects of a Label. If any request is not valid, no requests will be applied.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities": {
      "type": "object",
      "description": "The capabilities related to this label when editing the label.",
      "id": "GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities",
      "properties": {
        "canEnable": {
          "description": "Whether the user can enable this label. The user must have permission and this label must be disabled.",
          "type": "boolean"
        },
        "canDisable": {
          "description": "Whether the user can disable this label. The user must have permission and this label must not already be disabled.",
          "type": "boolean"
        },
        "canDelete": {
          "type": "boolean",
          "description": "Whether the user can delete this label. The user must have permission and the label must be disabled."
        },
        "canUpdate": {
          "description": "Whether the user can change this label.",
          "type": "boolean"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse": {
      "type": "object",
      "description": "Response following Field delete.",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseDeleteFieldResponse",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest",
      "description": "Request to update Field properties.",
      "properties": {
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldProperties",
          "description": "Required. Basic Field properties."
        },
        "id": {
          "description": "Required. The Field to update.",
          "type": "string"
        },
        "updateMask": {
          "description": "The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestRequest",
      "properties": {
        "updateSelectionChoiceProperties": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest",
          "description": "Update a Choice properties within a Selection Field."
        },
        "createField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateFieldRequest",
          "description": "Creates a new Field."
        },
        "deleteField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteFieldRequest",
          "description": "Deletes a Field from the label."
        },
        "updateField": {
          "description": "Updates basic properties of a Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldPropertiesRequest"
        },
        "updateFieldType": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateFieldTypeRequest",
          "description": "Update Field type and/or type options."
        },
        "enableField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableFieldRequest",
          "description": "Enables the Field."
        },
        "updateLabel": {
          "description": "Updates the Label properties.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestUpdateLabelPropertiesRequest"
        },
        "deleteSelectionChoice": {
          "description": "Delete a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest"
        },
        "createSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestCreateSelectionChoiceRequest",
          "description": "Creates Choice within a Selection field."
        },
        "enableSelectionChoice": {
          "description": "Enable a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestEnableSelectionChoiceRequest"
        },
        "disableField": {
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableFieldRequest",
          "description": "Disables the Field."
        },
        "disableSelectionChoice": {
          "description": "Disable a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDisableSelectionChoiceRequest"
        }
      },
      "type": "object",
      "description": "A single kind of update to apply to a Label."
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities": {
      "description": "The capabilities related to this choice when editing the choice.",
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities",
      "properties": {
        "canUpdate": {
          "type": "boolean",
          "description": "Whether the user can update this choice."
        },
        "canDisable": {
          "description": "Whether the user can disable this choice.",
          "type": "boolean"
        },
        "canEnable": {
          "description": "Whether the user can enable this choice.",
          "type": "boolean"
        },
        "canDelete": {
          "type": "boolean",
          "description": "Whether the user can delete this choice."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse"
          },
          "description": "The reply of the updates. This maps 1:1 with the updates, although responses to some requests may be empty."
        },
        "updatedLabel": {
          "$ref": "GoogleAppsDriveLabelsV2betaLabel",
          "description": "The label after updates were applied. This is only set if [BatchUpdateLabelResponse2.include_label_in_response] is `true` and there were no errors."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse",
      "description": "Response for Label update."
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest": {
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequestDeleteSelectionChoiceRequest",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Choice to delete."
        },
        "fieldId": {
          "type": "string",
          "description": "Required. The Selection Field from which a Choice will be deleted."
        }
      },
      "type": "object",
      "description": "Request to delete a Choice."
    },
    "GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy": {
      "id": "GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy",
      "properties": {
        "copyMode": {
          "enum": [
            "COPY_MODE_UNSPECIFIED",
            "DO_NOT_COPY",
            "ALWAYS_COPY",
            "COPY_APPLIABLE"
          ],
          "description": "Indicates how the applied label and field values should be copied when a Drive item is copied.",
          "type": "string",
          "enumDescriptions": [
            "Copy mode unspecified.",
            "The applied label and field values are not copied by default when the Drive item it's applied to is copied.",
            "The applied label and field values are always copied when the Drive item it's applied to is copied. Only admins can use this mode.",
            "The applied label and field values are copied if the label is appliable by the user making the copy."
          ]
        }
      },
      "description": "Behavior of this label when it's applied to Drive items.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy": {
      "description": "The policy that governs how to treat a disabled label, field, or selection choice in different contexts.",
      "properties": {
        "showInApply": {
          "type": "boolean",
          "description": "Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI."
        },
        "hideInSearch": {
          "type": "boolean",
          "description": "Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities": {
      "id": "GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities",
      "description": "The capabilities a user has on this label's applied metadata.",
      "type": "object",
      "properties": {
        "canRemove": {
          "type": "boolean",
          "description": "Whether the user can remove this label from items."
        },
        "canRead": {
          "description": "Whether the user can read applied metadata related to this label.",
          "type": "boolean"
        },
        "canApply": {
          "description": "Whether the user can apply this label to items.",
          "type": "boolean"
        }
      }
    },
    "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse": {
      "properties": {
        "fieldId": {
          "description": "The server-generated id of the field.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The server-generated ID of the created choice within the Field"
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse",
      "description": "Response following Selection Choice create."
    },
    "GoogleAppsDriveLabelsV2betaListLabelsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token of the next page in the response."
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "description": "Labels."
        }
      },
      "description": "Response for listing Labels.",
      "id": "GoogleAppsDriveLabelsV2betaListLabelsResponse"
    },
    "GoogleAppsDriveLabelsV2betaFieldSelectionOptions": {
      "properties": {
        "listOptions": {
          "$ref": "GoogleAppsDriveLabelsV2betaFieldListOptions",
          "description": "When specified, indicates this field supports a list of values. Once the field is published, this cannot be changed."
        },
        "choices": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice"
          },
          "type": "array",
          "description": "The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`."
        }
      },
      "id": "GoogleAppsDriveLabelsV2betaFieldSelectionOptions",
      "type": "object",
      "description": "Options for the selection field type."
    },
    "GoogleAppsDriveLabelsV2betaTextLimits": {
      "description": "Limits for text Field type.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2betaTextLimits",
      "properties": {
        "minLength": {
          "description": "Minimum length allowed for a text Field type.",
          "format": "int32",
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "description": "Maximum length allowed for a text Field type.",
          "type": "integer"
        }
      }
    }
  },
  "rootUrl": "https://drivelabels.googleapis.com/",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "canonicalName": "Drive Labels",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "basePath": "",
  "mtlsRootUrl": "https://drivelabels.mtls.googleapis.com/",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "name": "drivelabels",
  "resources": {
    "limits": {
      "methods": {
        "getLabel": {
          "flatPath": "v2beta/limits/label",
          "description": "Get the constraints on the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.",
          "parameters": {
            "name": {
              "type": "string",
              "location": "query",
              "description": "Required. Label revision resource name Must be: \"limits/label\""
            }
          },
          "path": "v2beta/limits/label",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelLimits"
          },
          "id": "drivelabels.limits.getLabel"
        }
      }
    },
    "labels": {
      "methods": {
        "enable": {
          "description": "Enable a disabled Label and restore it to its published state. This will result in a new published revision based on the current disabled published revision. If there is an existing disabled draft revision, a new revision will be created based on that draft and will be enabled.",
          "id": "drivelabels.labels.enable",
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaEnableLabelRequest"
          },
          "flatPath": "v2beta/labels/{labelsId}:enable",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "description": "Required. Label resource name.",
              "required": true,
              "pattern": "^labels/[^/]+$"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "path": "v2beta/{+name}:enable"
        },
        "delete": {
          "path": "v2beta/{+name}",
          "description": "Permanently deletes a Label and related metadata on Drive Items. Once deleted, the Label and related Drive item metadata will be deleted. Only draft Labels, and disabled Labels may be deleted.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "flatPath": "v2beta/labels/{labelsId}",
          "id": "drivelabels.labels.delete",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "description": "Required. Label resource name.",
              "required": true
            },
            "writeControl.requiredRevisionId": {
              "type": "string",
              "location": "query",
              "description": "The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error."
            },
            "useAdminAccess": {
              "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
              "type": "boolean",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GoogleProtobufEmpty"
          }
        },
        "list": {
          "parameters": {
            "customer": {
              "description": "The customer to scope this list request to. For example: \"customers/abcd1234\". If unset, will return all labels within the current customer.",
              "type": "string",
              "location": "query"
            },
            "languageCode": {
              "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.",
              "location": "query",
              "type": "string"
            },
            "view": {
              "location": "query",
              "enumDescriptions": [
                "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
                "All possible fields."
              ],
              "description": "When specified, only certain fields belonging to the indicated view are returned.",
              "type": "string",
              "enum": [
                "LABEL_VIEW_BASIC",
                "LABEL_VIEW_FULL"
              ]
            },
            "pageToken": {
              "description": "The token of the page to return.",
              "type": "string",
              "location": "query"
            },
            "publishedOnly": {
              "type": "boolean",
              "location": "query",
              "description": "Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`)."
            },
            "pageSize": {
              "description": "Maximum number of labels to return per page. Default: 50. Max: 200.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "minimumRole": {
              "location": "query",
              "description": "Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.",
              "enum": [
                "LABEL_ROLE_UNSPECIFIED",
                "READER",
                "APPLIER",
                "ORGANIZER",
                "EDITOR"
              ],
              "type": "string",
              "enumDescriptions": [
                "Unknown role.",
                "A reader can read the label and associated metadata applied to Drive items.",
                "An applier can write associated metadata on Drive items in which they also have write access to. Implies `READER`.",
                "An organizer can pin this label in shared drives they manage and add new appliers to the label.",
                "Editors can make any update including deleting the label which also deletes the associated Drive item metadata. Implies `APPLIER`."
              ]
            },
            "useAdminAccess": {
              "location": "query",
              "description": "Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.",
              "type": "boolean"
            }
          },
          "id": "drivelabels.labels.list",
          "flatPath": "v2beta/labels",
          "path": "v2beta/labels",
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaListLabelsResponse"
          },
          "description": "List labels."
        },
        "updateLabelCopyMode": {
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest"
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "description": "Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do not require publishing, and take effect immediately.",
          "flatPath": "v2beta/labels/{labelsId}:updateLabelCopyMode",
          "path": "v2beta/{+name}:updateLabelCopyMode",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "description": "Required. The resource name of the Label to update.",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ],
          "id": "drivelabels.labels.updateLabelCopyMode",
          "httpMethod": "POST"
        },
        "disable": {
          "path": "v2beta/{+name}:disable",
          "description": "Disable a published Label. Disabling a Label will result in a new disabled published revision based on the current published revision. If there is a draft revision, a new disabled draft revision will be created based on the latest draft revision. Older draft revisions will be deleted. Once disabled, a label may be deleted with `DeleteLabel`.",
          "flatPath": "v2beta/labels/{labelsId}:disable",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaDisableLabelRequest"
          },
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "description": "Required. Label resource name."
            }
          },
          "id": "drivelabels.labels.disable",
          "httpMethod": "POST"
        },
        "updatePermissions": {
          "path": "v2beta/{+parent}/permissions",
          "parameters": {
            "useAdminAccess": {
              "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
              "location": "query",
              "type": "boolean"
            },
            "parent": {
              "type": "string",
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "description": "Required. The parent Label resource name.",
              "required": true
            }
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
          },
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
          },
          "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
          "httpMethod": "PATCH",
          "id": "drivelabels.labels.updatePermissions",
          "flatPath": "v2beta/labels/{labelsId}/permissions",
          "parameterOrder": [
            "parent"
          ]
        },
        "get": {
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`",
              "location": "path",
              "pattern": "^labels/[^/]+$"
            },
            "view": {
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
                "All possible fields."
              ],
              "enum": [
                "LABEL_VIEW_BASIC",
                "LABEL_VIEW_FULL"
              ],
              "description": "When specified, only certain fields belonging to the indicated view are returned."
            },
            "useAdminAccess": {
              "type": "boolean",
              "description": "Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access.",
              "location": "query"
            },
            "languageCode": {
              "type": "string",
              "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Get a label by its resource name. Resource name may be any of: * `labels/{id}` - See `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the label. * `labels/{id}@published` - Gets the current published revision of the label. * `labels/{id}@{revision_id}` - Gets the label at the specified revision ID.",
          "path": "v2beta/{+name}",
          "id": "drivelabels.labels.get",
          "httpMethod": "GET",
          "flatPath": "v2beta/labels/{labelsId}"
        },
        "publish": {
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "drivelabels.labels.publish",
          "description": "Publish all draft changes to the Label. Once published, the Label may not return to its draft state. See `google.apps.drive.labels.v2.Lifecycle` for more information. Publishing a Label will result in a new published revision. All previous draft revisions will be deleted. Previous published revisions will be kept but are subject to automated deletion as needed. Once published, some changes are no longer permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the Label will be rejected. For example, the following changes to a Label will be rejected after the Label is published: * The label cannot be directly deleted. It must be disabled first, then deleted. * Field.FieldType cannot be changed. * Changes to Field validation options cannot reject something that was previously accepted. * Reducing the max entries.",
          "flatPath": "v2beta/labels/{labelsId}:publish",
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaPublishLabelRequest"
          },
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Required. Label resource name.",
              "type": "string",
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "required": true
            }
          },
          "path": "v2beta/{+name}:publish"
        },
        "delta": {
          "description": "Updates a single Label by applying a set of update requests resulting in a new draft revision. The batch update is all-or-nothing: If any of the update requests are invalid, no changes are applied. The resulting draft revision must be published before the changes may be used with Drive Items.",
          "httpMethod": "POST",
          "id": "drivelabels.labels.delta",
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelRequest"
          },
          "flatPath": "v2beta/labels/{labelsId}:delta",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "pattern": "^labels/[^/]+$",
              "type": "string",
              "description": "Required. The resource name of the Label to update."
            }
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponse"
          },
          "path": "v2beta/{+name}:delta"
        },
        "create": {
          "httpMethod": "POST",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "description": "Creates a new Label.",
          "parameterOrder": [],
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2betaLabel"
          },
          "id": "drivelabels.labels.create",
          "path": "v2beta/labels",
          "flatPath": "v2beta/labels",
          "parameters": {
            "useAdminAccess": {
              "type": "boolean",
              "description": "Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access.",
              "location": "query"
            },
            "languageCode": {
              "location": "query",
              "type": "string",
              "description": "The BCP-47 language code to use for evaluating localized Field labels in response. When not specified, values in the default configured language will be used."
            }
          }
        }
      },
      "resources": {
        "locks": {
          "methods": {
            "list": {
              "path": "v2beta/{+parent}/locks",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2betaListLabelLocksResponse"
              },
              "description": "Lists the LabelLocks on a Label.",
              "flatPath": "v2beta/labels/{labelsId}/locks",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The token of the page to return.",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^labels/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. Label on which Locks are applied. Format: labels/{label}"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "Maximum number of Locks to return per page. Default: 100. Max: 200.",
                  "type": "integer"
                }
              },
              "id": "drivelabels.labels.locks.list",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET"
            }
          }
        },
        "revisions": {
          "resources": {
            "permissions": {
              "methods": {
                "batchUpdate": {
                  "path": "v2beta/{+parent}/permissions:batchUpdate",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest"
                  },
                  "id": "drivelabels.labels.revisions.permissions.batchUpdate",
                  "description": "Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$"
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
                  },
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions",
                  "path": "v2beta/{+parent}/permissions",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "description": "Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}",
                      "required": true,
                      "location": "path"
                    },
                    "useAdminAccess": {
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "drivelabels.labels.revisions.permissions.create"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^labels/[^/]+/revisions/[^/]+/permissions/[^/]+$",
                      "description": "Required. Label Permission resource name.",
                      "required": true,
                      "type": "string"
                    },
                    "useAdminAccess": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
                    }
                  },
                  "description": "Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions/{permissionsId}",
                  "id": "drivelabels.labels.revisions.permissions.delete",
                  "path": "v2beta/{+name}"
                },
                "batchDelete": {
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest"
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions:batchDelete",
                  "id": "drivelabels.labels.revisions.permissions.batchDelete",
                  "path": "v2beta/{+parent}/permissions:batchDelete"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The token of the page to return.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of permissions to return per page. Default: 50. Max: 200.",
                      "type": "integer",
                      "location": "query"
                    },
                    "useAdminAccess": {
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "required": true,
                      "description": "Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse"
                  },
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions",
                  "description": "Lists a Label's permissions.",
                  "path": "v2beta/{+parent}/permissions",
                  "id": "drivelabels.labels.revisions.permissions.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "locks": {
              "methods": {
                "list": {
                  "description": "Lists the LabelLocks on a Label.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2beta/{+parent}/locks",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The token of the page to return.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Maximum number of Locks to return per page. Default: 100. Max: 200.",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Label on which Locks are applied. Format: labels/{label}",
                      "location": "path",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$"
                    }
                  },
                  "id": "drivelabels.labels.revisions.locks.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2betaListLabelLocksResponse"
                  },
                  "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/locks"
                }
              }
            }
          },
          "methods": {
            "updatePermissions": {
              "flatPath": "v2beta/labels/{labelsId}/revisions/{revisionsId}/permissions",
              "httpMethod": "PATCH",
              "id": "drivelabels.labels.revisions.updatePermissions",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "useAdminAccess": {
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                  "type": "boolean"
                },
                "parent": {
                  "pattern": "^labels/[^/]+/revisions/[^/]+$",
                  "description": "Required. The parent Label resource name.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "path": "v2beta/{+parent}/permissions",
              "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
              },
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
              }
            }
          }
        },
        "permissions": {
          "methods": {
            "batchUpdate": {
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsResponse"
              },
              "id": "drivelabels.labels.permissions.batchUpdate",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2beta/labels/{labelsId}/permissions:batchUpdate",
              "parameters": {
                "parent": {
                  "description": "Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                  "pattern": "^labels/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2betaBatchUpdateLabelPermissionsRequest"
              },
              "path": "v2beta/{+parent}/permissions:batchUpdate",
              "description": "Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing."
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "useAdminAccess": {
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                  "type": "boolean"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Maximum number of permissions to return per page. Default: 50. Max: 200.",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}",
                  "pattern": "^labels/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The token of the page to return."
                }
              },
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2betaListLabelPermissionsResponse"
              },
              "flatPath": "v2beta/labels/{labelsId}/permissions",
              "path": "v2beta/{+parent}/permissions",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists a Label's permissions.",
              "id": "drivelabels.labels.permissions.list"
            },
            "delete": {
              "path": "v2beta/{+name}",
              "id": "drivelabels.labels.permissions.delete",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v2beta/labels/{labelsId}/permissions/{permissionsId}",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Label Permission resource name.",
                  "required": true,
                  "pattern": "^labels/[^/]+/permissions/[^/]+$",
                  "type": "string"
                },
                "useAdminAccess": {
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                  "type": "boolean",
                  "location": "query"
                }
              },
              "httpMethod": "DELETE"
            },
            "create": {
              "path": "v2beta/{+parent}/permissions",
              "flatPath": "v2beta/labels/{labelsId}/permissions",
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2betaLabelPermission"
              },
              "parameters": {
                "parent": {
                  "pattern": "^labels/[^/]+$",
                  "description": "Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "useAdminAccess": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
                }
              },
              "id": "drivelabels.labels.permissions.create",
              "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing."
            },
            "batchDelete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "id": "drivelabels.labels.permissions.batchDelete",
              "httpMethod": "POST",
              "description": "Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "flatPath": "v2beta/labels/{labelsId}/permissions:batchDelete",
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2betaBatchDeleteLabelPermissionsRequest"
              },
              "path": "v2beta/{+parent}/permissions:batchDelete",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^labels/[^/]+$"
                }
              }
            }
          }
        }
      }
    },
    "users": {
      "methods": {
        "getCapabilities": {
          "parameterOrder": [
            "name"
          ],
          "id": "drivelabels.users.getCapabilities",
          "httpMethod": "GET",
          "flatPath": "v2beta/users/{usersId}/capabilities",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2betaUserCapabilities"
          },
          "path": "v2beta/{+name}",
          "description": "Gets the user capabilities.",
          "parameters": {
            "customer": {
              "type": "string",
              "location": "query",
              "description": "The customer to scope this request to. For example: \"customers/abcd1234\". If unset, will return settings within the current customer."
            },
            "name": {
              "pattern": "^users/[^/]+/capabilities$",
              "location": "path",
              "type": "string",
              "description": "Required. The resource name of the user. Only \"users/me/capabilities\" is supported.",
              "required": true
            }
          }
        }
      }
    }
  },
  "title": "Drive Labels API"
}

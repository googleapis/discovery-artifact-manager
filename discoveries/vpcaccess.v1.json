{
  "version_module": true,
  "schemas": {
    "Connector": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "Invalid state.",
            "Connector is deployed and ready to receive traffic.",
            "An Insert operation is in progress. Transient condition.",
            "A Delete operation is in progress. Transient condition.",
            "Connector is in a bad state, manual deletion recommended.",
            "The connector is being updated."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "CREATING",
            "DELETING",
            "ERROR",
            "UPDATING"
          ],
          "description": "Output only. State of the VPC access connector.",
          "type": "string"
        },
        "connectedProjects": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. List of projects using the connector.",
          "type": "array"
        },
        "subnet": {
          "description": "The subnet in which to house the VPC Access Connector.",
          "$ref": "Subnet"
        },
        "name": {
          "description": "The resource name in the format `projects/*/locations/*/connectors/*`.",
          "type": "string"
        },
        "maxThroughput": {
          "format": "int32",
          "description": "Maximum throughput of the connector in Mbps. Default is 300, max is 1000.",
          "type": "integer"
        },
        "maxInstances": {
          "format": "int32",
          "description": "Maximum value of instances in autoscaling group underlying the connector.",
          "type": "integer"
        },
        "machineType": {
          "type": "string",
          "description": "Machine type of VM Instance underlying connector. Default is e2-micro"
        },
        "minInstances": {
          "format": "int32",
          "description": "Minimum value of instances in autoscaling group underlying the connector.",
          "type": "integer"
        },
        "network": {
          "description": "Name of a VPC network.",
          "type": "string"
        },
        "minThroughput": {
          "format": "int32",
          "type": "integer",
          "description": "Minimum throughput of the connector in Mbps. Default and min is 200."
        },
        "ipCidrRange": {
          "description": "The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Connector",
      "description": "Definition of a Serverless VPC Access connector."
    },
    "Subnet": {
      "id": "Subnet",
      "properties": {
        "name": {
          "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued."
        }
      },
      "type": "object",
      "description": "The subnet in which to house the connector"
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the operation completed.",
          "type": "string"
        },
        "method": {
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1.Connectors.CreateConnector.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata for google.longrunning.Operation."
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "type": "object",
      "id": "Location"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "OperationMetadataV1Beta1": {
      "id": "OperationMetadataV1Beta1",
      "description": "Metadata for google.longrunning.Operation.",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when the operation completed."
        },
        "method": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1beta1.Connectors.CreateConnector."
        },
        "createTime": {
          "description": "Output only. Time when the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1.",
          "type": "string"
        }
      }
    },
    "ListConnectorsResponse": {
      "id": "ListConnectorsResponse",
      "description": "Response for listing Serverless VPC Access connectors.",
      "properties": {
        "connectors": {
          "items": {
            "$ref": "Connector"
          },
          "type": "array",
          "description": "List of Serverless VPC Access connectors."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object"
    },
    "OperationMetadataV1Alpha1": {
      "description": "Metadata for google.longrunning.Operation.",
      "properties": {
        "insertTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when the operation was created.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the resource that this operation is acting on e.g. projects/my-project/locations/us-central1/connectors/v1."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time when the operation completed."
        },
        "method": {
          "readOnly": true,
          "description": "Output only. Method that initiated the operation e.g. google.cloud.vpcaccess.v1alpha1.Connectors.CreateConnector.",
          "type": "string"
        }
      },
      "id": "OperationMetadataV1Alpha1",
      "type": "object"
    }
  },
  "discoveryVersion": "v1",
  "revision": "20230427",
  "rootUrl": "https://vpcaccess.googleapis.com/",
  "id": "vpcaccess:v1",
  "batchPath": "batch",
  "title": "Serverless VPC Access API",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "connectors": {
              "methods": {
                "create": {
                  "parameters": {
                    "connectorId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The ID to use for this connector."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The project and location in which the configuration should be created, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Connector"
                  },
                  "description": "Creates a Serverless VPC Access connector, returns an operation.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/connectors",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vpcaccess.projects.locations.connectors.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors"
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "vpcaccess.projects.locations.connectors.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of a Serverless VPC Access connector to get.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Connector"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "id": "vpcaccess.projects.locations.connectors.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of functions to return per call.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Continuation token.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The project and location from which the routes should be listed."
                    }
                  },
                  "description": "Lists Serverless VPC Access connectors.",
                  "response": {
                    "$ref": "ListConnectorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/connectors",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Connector"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "vpcaccess.projects.locations.connectors.patch",
                  "description": "Updates a Serverless VPC Access connector, returns an operation.",
                  "parameters": {
                    "updateMask": {
                      "description": "The fields to update on the entry group. If absent or empty, all modifiable fields are updated.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The resource name in the format `projects/*/locations/*/connectors/*`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.",
                  "id": "vpcaccess.projects.locations.connectors.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of a Serverless VPC Access connector to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectors/{connectorsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "vpcaccess.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "vpcaccess.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "vpcaccess.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "API for managing VPC access connectors.",
  "basePath": "",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "canonicalName": "Serverless VPC Access",
  "name": "vpcaccess",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://vpcaccess.googleapis.com/",
  "protocol": "rest",
  "mtlsRootUrl": "https://vpcaccess.mtls.googleapis.com/",
  "servicePath": "",
  "ownerName": "Google",
  "version": "v1",
  "documentationLink": "https://cloud.google.com/vpc/docs/configure-serverless-vpc-access",
  "fullyEncodeReservedExpansion": true
}

{
  "batchPath": "batch/drive/v2",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "drive:v2",
  "parameters": {
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "schemas": {
    "Drive": {
      "description": "Representation of a shared drive.",
      "properties": {
        "colorRgb": {
          "type": "string",
          "description": "The color of this shared drive as an RGB hex string. It can only be set on a `drive.drives.update` request that does not set `themeId`."
        },
        "kind": {
          "default": "drive#drive",
          "type": "string",
          "description": "Output only. This is always `drive#drive`"
        },
        "orgUnitId": {
          "type": "string",
          "description": "Output only. The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`."
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canDownload": {
              "type": "boolean",
              "description": "Output only. Whether the current user can download files in this shared drive."
            },
            "canCopy": {
              "type": "boolean",
              "description": "Output only. Whether the current user can copy files in this shared drive."
            },
            "canRename": {
              "type": "boolean",
              "description": "Output only. Whether the current user can rename files or folders in this shared drive."
            },
            "canRenameDrive": {
              "description": "Output only. Whether the current user can rename this shared drive.",
              "type": "boolean"
            },
            "canResetDriveRestrictions": {
              "description": "Output only. Whether the current user can reset the shared drive restrictions to defaults.",
              "type": "boolean"
            },
            "canManageMembers": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add members to this shared drive or remove them or change their role."
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeDriveMembersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canShare": {
              "type": "boolean",
              "description": "Output only. Whether the current user can share files or folders in this shared drive."
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of files in this shared drive.",
              "type": "boolean"
            },
            "canEdit": {
              "type": "boolean",
              "description": "Output only. Whether the current user can edit files in this shared drive"
            },
            "canAddChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add children to folders in this shared drive."
            },
            "canDeleteDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive."
            },
            "canTrashChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can trash children from folders in this shared drive."
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on files in this shared drive.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children from folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive."
            },
            "canChangeDriveBackground": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the background of this shared drive."
            }
          },
          "description": "Output only. Capabilities the current user has on this shared drive."
        },
        "backgroundImageLink": {
          "description": "Output only. A short-lived link to this shared drive's background image.",
          "type": "string"
        },
        "id": {
          "description": "Output only. The ID of this shared drive which is also the ID of the top level folder of this shared drive.",
          "type": "string"
        },
        "restrictions": {
          "type": "object",
          "properties": {
            "domainUsersOnly": {
              "description": "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.",
              "type": "boolean"
            },
            "adminManagedRestrictions": {
              "description": "Whether administrative privileges on this shared drive are required to modify restrictions.",
              "type": "boolean"
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "type": "boolean",
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders."
            },
            "driveMembersOnly": {
              "description": "Whether access to items inside this shared drive is restricted to its members.",
              "type": "boolean"
            },
            "copyRequiresWriterPermission": {
              "type": "boolean",
              "description": "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this shared drive."
            }
          },
          "description": "A set of restrictions that apply to this shared drive or items inside this shared drive."
        },
        "createdDate": {
          "description": "The time at which the shared drive was created (RFC 3339 date-time).",
          "format": "date-time",
          "type": "string"
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on `drive.drives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "properties": {
            "xCoordinate": {
              "format": "float",
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "type": "number"
            },
            "width": {
              "format": "float",
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
              "type": "number"
            },
            "id": {
              "type": "string",
              "description": "The ID of an image file in Google Drive to use for the background image."
            },
            "yCoordinate": {
              "format": "float",
              "type": "number",
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image."
            }
          },
          "type": "object"
        },
        "hidden": {
          "description": "Whether the shared drive is hidden from default view.",
          "type": "boolean"
        },
        "name": {
          "annotations": {
            "required": [
              "drive.drives.insert"
            ]
          },
          "type": "string",
          "description": "The name of this shared drive."
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `driveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.drives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Drive"
    },
    "Permission": {
      "id": "Permission",
      "description": "A permission for a file.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "Output only. A link back to this permission.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored."
        },
        "pendingOwner": {
          "type": "boolean",
          "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive."
        },
        "expirationDate": {
          "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
          "format": "date-time",
          "type": "string"
        },
        "domain": {
          "description": "Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
          "type": "string"
        },
        "photoLink": {
          "type": "string",
          "description": "Output only. A link to the profile photo, if available."
        },
        "view": {
          "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. The name for this permission."
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions."
        },
        "permissionDetails": {
          "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
          "type": "array",
          "items": {
            "properties": {
              "permissionType": {
                "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                "type": "string"
              },
              "additionalRoles": {
                "items": {
                  "type": "string"
                },
                "description": "Output only. Additional roles for this user. Only `commenter` is currently possible, though more may be supported in the future.",
                "type": "array"
              },
              "inheritedFrom": {
                "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                "type": "string"
              },
              "role": {
                "type": "string",
                "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `reader`"
              },
              "inherited": {
                "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "readOnly": true
        },
        "kind": {
          "default": "drive#permission",
          "description": "Output only. This is always `drive#permission`.",
          "type": "string"
        },
        "withLink": {
          "type": "boolean",
          "description": "Whether the link is required for this permission."
        },
        "teamDrivePermissionDetails": {
          "items": {
            "properties": {
              "additionalRoles": {
                "description": "Output only. Deprecated: Use `permissionDetails/additionalRoles` instead.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "deprecated": true
              },
              "role": {
                "type": "string",
                "deprecated": true,
                "description": "Output only. Deprecated: Use `permissionDetails/role` instead."
              },
              "inherited": {
                "type": "boolean",
                "description": "Output only. Deprecated: Use `permissionDetails/inherited` instead.",
                "deprecated": true
              },
              "inheritedFrom": {
                "deprecated": true,
                "type": "string",
                "description": "Output only. Deprecated: Use `permissionDetails/inheritedFrom` instead."
              },
              "teamDrivePermissionType": {
                "type": "string",
                "deprecated": true,
                "description": "Output only. Deprecated: Use `permissionDetails/permissionType` instead."
              }
            },
            "type": "object"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Deprecated: Use `permissionDetails` instead.",
          "deprecated": true
        },
        "role": {
          "type": "string",
          "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          }
        },
        "additionalRoles": {
          "description": "Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Output only. The ETag of the permission.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored."
        },
        "emailAddress": {
          "description": "Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
          "type": "string"
        },
        "authKey": {
          "description": "Output only. Deprecated.",
          "deprecated": true,
          "type": "string"
        }
      }
    },
    "DriveList": {
      "type": "object",
      "id": "DriveList",
      "description": "A list of shared drives.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "items": {
            "$ref": "Drive"
          }
        },
        "kind": {
          "description": "This is always `drive#driveList`",
          "type": "string",
          "default": "drive#driveList"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      }
    },
    "PermissionId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The permission ID."
        },
        "kind": {
          "description": "This is always `drive#permissionId`.",
          "default": "drive#permissionId",
          "type": "string"
        }
      },
      "description": "An ID for a user or group as seen in Permission items.",
      "type": "object",
      "id": "PermissionId"
    },
    "ChildReference": {
      "id": "ChildReference",
      "type": "object",
      "properties": {
        "id": {
          "annotations": {
            "required": [
              "drive.children.insert"
            ]
          },
          "type": "string",
          "description": "The ID of the child."
        },
        "selfLink": {
          "description": "Output only. A link back to this reference.",
          "type": "string"
        },
        "childLink": {
          "description": "Output only. A link to the child.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "drive#childReference",
          "description": "Output only. This is always `drive#childReference`."
        }
      },
      "description": "A reference to a folder's child."
    },
    "LabelList": {
      "description": "A list of labels applied to a file.",
      "type": "object",
      "id": "LabelList",
      "properties": {
        "kind": {
          "description": "This is always `drive#labelList`",
          "type": "string",
          "default": "drive#labelList"
        },
        "items": {
          "description": "The list of labels.",
          "type": "array",
          "items": {
            "$ref": "Label"
          }
        },
        "nextPageToken": {
          "description": "The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        }
      }
    },
    "FileList": {
      "id": "FileList",
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        },
        "items": {
          "items": {
            "$ref": "File"
          },
          "type": "array",
          "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "incompleteSearch": {
          "description": "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"drive\".",
          "type": "boolean"
        },
        "nextPageToken": {
          "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of files."
        },
        "kind": {
          "description": "This is always `drive#fileList`.",
          "default": "drive#fileList",
          "type": "string"
        }
      },
      "description": "A list of files.",
      "type": "object"
    },
    "ModifyLabelsRequest": {
      "properties": {
        "labelModifications": {
          "items": {
            "$ref": "LabelModification"
          },
          "description": "The list of modifications to apply to the labels on the file.",
          "type": "array"
        },
        "kind": {
          "description": "This is always `drive#modifyLabelsRequest`.",
          "type": "string",
          "default": "drive#modifyLabelsRequest"
        }
      },
      "id": "ModifyLabelsRequest",
      "type": "object",
      "description": "A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail atomically."
    },
    "ModifyLabelsResponse": {
      "properties": {
        "modifiedLabels": {
          "description": "The list of labels which were added or updated by the request.",
          "type": "array",
          "items": {
            "$ref": "Label"
          }
        },
        "kind": {
          "default": "drive#modifyLabelsResponse",
          "type": "string",
          "description": "This is always `drive#modifyLabelsResponse`"
        }
      },
      "type": "object",
      "id": "ModifyLabelsResponse",
      "description": "Response to a ModifyLabels request. This contains only those labels which were added or updated by the request."
    },
    "About": {
      "description": "An item with user information and settings.",
      "id": "About",
      "properties": {
        "isCurrentAppInstalled": {
          "type": "boolean",
          "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
        },
        "largestChangeId": {
          "format": "int64",
          "description": "The largest change id.",
          "type": "string"
        },
        "permissionId": {
          "type": "string",
          "description": "The current user's ID as visible in the permissions collection."
        },
        "teamDriveThemes": {
          "type": "array",
          "description": "Deprecated: Use `driveThemes` instead.",
          "items": {
            "properties": {
              "id": {
                "deprecated": true,
                "description": "Deprecated: Use `driveThemes/id` instead.",
                "type": "string"
              },
              "backgroundImageLink": {
                "description": "Deprecated: Use `driveThemes/backgroundImageLink` instead.",
                "type": "string",
                "deprecated": true
              },
              "colorRgb": {
                "description": "Deprecated: Use `driveThemes/colorRgb` instead.",
                "type": "string",
                "deprecated": true
              }
            },
            "type": "object"
          },
          "deprecated": true
        },
        "rootFolderId": {
          "description": "The id of the root folder.",
          "type": "string"
        },
        "domainSharingPolicy": {
          "type": "string",
          "description": "The domain sharing policy for the current user. Possible values are: * `allowed` * `allowedWithWarning` * `incomingOnly` * `disallowed`"
        },
        "driveThemes": {
          "description": "A list of themes that are supported for shared drives.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "backgroundImageLink": {
                "description": "A link to this theme's background image.",
                "type": "string"
              },
              "id": {
                "description": "The ID of the theme.",
                "type": "string"
              },
              "colorRgb": {
                "description": "The color of this theme as an RGB hex string.",
                "type": "string"
              }
            }
          }
        },
        "remainingChangeIds": {
          "type": "string",
          "description": "The number of remaining change ids, limited to no more than 2500.",
          "format": "int64"
        },
        "languageCode": {
          "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this item."
        },
        "canCreateDrives": {
          "description": "Whether the user can create shared drives.",
          "type": "boolean"
        },
        "maxUploadSizes": {
          "type": "array",
          "items": {
            "properties": {
              "size": {
                "description": "The max upload size for this type.",
                "format": "int64",
                "type": "string"
              },
              "type": {
                "description": "The file type.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "List of max upload sizes for each file type. The most specific type takes precedence."
        },
        "canCreateTeamDrives": {
          "deprecated": true,
          "type": "boolean",
          "description": "Deprecated: Use `canCreateDrives` instead."
        },
        "kind": {
          "type": "string",
          "default": "drive#about",
          "description": "This is always `drive#about`."
        },
        "quotaType": {
          "type": "string",
          "description": "The type of the user's storage quota. Possible values are: * `LIMITED` * `UNLIMITED`"
        },
        "quotaBytesUsed": {
          "description": "The number of quota bytes used by Google Drive.",
          "type": "string",
          "format": "int64"
        },
        "features": {
          "items": {
            "properties": {
              "featureName": {
                "type": "string",
                "description": "The name of the feature."
              },
              "featureRate": {
                "description": "The request limit rate for this feature, in queries per second.",
                "type": "number",
                "format": "double"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "List of additional features enabled on this account."
        },
        "exportFormats": {
          "description": "The allowable export formats.",
          "type": "array",
          "items": {
            "properties": {
              "targets": {
                "items": {
                  "type": "string"
                },
                "description": "The possible content types to convert to.",
                "type": "array"
              },
              "source": {
                "description": "The content type to convert from.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "quotaBytesByService": {
          "description": "The amount of storage quota used by different Google services.",
          "items": {
            "type": "object",
            "properties": {
              "serviceName": {
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS.",
                "type": "string"
              },
              "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
              }
            }
          },
          "type": "array"
        },
        "quotaBytesTotal": {
          "description": "The total number of quota bytes. This is only relevant when quotaType is LIMITED.",
          "type": "string",
          "format": "int64"
        },
        "importFormats": {
          "description": "The allowable import formats.",
          "type": "array",
          "items": {
            "properties": {
              "targets": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The possible content types to convert to."
              },
              "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
              }
            },
            "type": "object"
          }
        },
        "additionalRoleInfo": {
          "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
          "items": {
            "type": "object",
            "properties": {
              "roleSets": {
                "type": "array",
                "items": {
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The supported additional roles with the primary role."
                    },
                    "primaryRole": {
                      "type": "string",
                      "description": "A primary permission role."
                    }
                  },
                  "type": "object"
                },
                "description": "The supported additional roles per primary role."
              },
              "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
              }
            }
          },
          "type": "array"
        },
        "quotaBytesUsedAggregate": {
          "format": "int64",
          "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
          "type": "string"
        },
        "user": {
          "$ref": "User",
          "description": "The authenticated user."
        },
        "name": {
          "type": "string",
          "description": "The name of the current user."
        },
        "folderColorPalette": {
          "type": "array",
          "description": "The palette of allowable folder colors as RGB hex strings.",
          "items": {
            "type": "string"
          }
        },
        "quotaBytesUsedInTrash": {
          "description": "The number of quota bytes used by trashed items.",
          "format": "int64",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this comment."
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when this comment or any of its replies were last modified."
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this comment was first created.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.comments.insert",
              "drive.comments.patch",
              "drive.comments.update"
            ]
          },
          "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content."
        },
        "context": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The MIME type of the context snippet.",
              "type": "string"
            },
            "value": {
              "type": "string",
              "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
            }
          },
          "description": "The context of the file which is being commented on."
        },
        "kind": {
          "default": "drive#comment",
          "description": "Output only. This is always `drive#comment`.",
          "type": "string"
        },
        "fileTitle": {
          "description": "Output only. The title of the file which this comment is addressing.",
          "type": "string"
        },
        "fileId": {
          "description": "Output only. The file which this comment is addressing.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
        },
        "anchor": {
          "description": "A region of the document represented as a JSON string. For details on defining anchor properties, refer to [Add comments and replies](https://developers.google.com/drive/api/v2/manage-comments).",
          "type": "string"
        },
        "htmlContent": {
          "description": "Output only. HTML formatted content for this comment.",
          "type": "string"
        },
        "replies": {
          "type": "array",
          "description": "Output only. Replies to this post.",
          "items": {
            "$ref": "CommentReply"
          }
        },
        "status": {
          "type": "string",
          "description": "Output only. The status of this comment. Status can be changed by posting a reply to a comment with the desired status. * `open` - The comment is still open. * `resolved` - The comment has been resolved by one of its replies."
        },
        "author": {
          "description": "Output only. The author of the comment. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "commentId": {
          "description": "Output only. The ID of the comment.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Comment",
      "description": "A comment on a file in Google Drive."
    },
    "User": {
      "type": "object",
      "description": "Information about a Drive user.",
      "properties": {
        "kind": {
          "type": "string",
          "default": "drive#user",
          "description": "Output only. This is always `drive#user`."
        },
        "emailAddress": {
          "type": "string",
          "description": "Output only. The email address of the user."
        },
        "picture": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Output Only. A URL that points to a profile picture of this user."
            }
          },
          "description": "Output only. The user's profile picture."
        },
        "displayName": {
          "description": "Output only. A plain text displayable name for this user.",
          "type": "string"
        },
        "permissionId": {
          "description": "Output only. The user's ID as visible in the permissions collection.",
          "type": "string"
        },
        "isAuthenticatedUser": {
          "description": "Output only. Whether this user is the same as the authenticated user for whom the request was made.",
          "type": "boolean"
        }
      },
      "id": "User"
    },
    "GeneratedIds": {
      "type": "object",
      "id": "GeneratedIds",
      "description": "A list of generated IDs which can be provided in insert requests",
      "properties": {
        "ids": {
          "type": "array",
          "description": "The IDs generated for the requesting user in the specified space.",
          "items": {
            "type": "string"
          }
        },
        "space": {
          "type": "string",
          "description": "The type of file that can be created with these IDs."
        },
        "kind": {
          "default": "drive#generatedIds",
          "description": "This is always `drive#generatedIds`",
          "type": "string"
        }
      }
    },
    "LabelField": {
      "description": "Representation of field, which is a typed key-value pair.",
      "properties": {
        "kind": {
          "type": "string",
          "default": "drive#labelField",
          "description": "This is always `drive#labelField`."
        },
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Only present if `valueType` is `text`."
        },
        "id": {
          "description": "The identifier of this label field.",
          "type": "string"
        },
        "integer": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "Only present if `valueType` is `integer`."
        },
        "selection": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Only present if `valueType` is `selection`"
        },
        "valueType": {
          "type": "string",
          "description": "The field type. While new values may be supported in the future, the following are currently allowed: * `dateString` * `integer` * `selection` * `text` * `user`"
        },
        "dateString": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          },
          "description": "Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD."
        },
        "user": {
          "items": {
            "$ref": "User"
          },
          "description": "Only present if `valueType` is `user`.",
          "type": "array"
        }
      },
      "id": "LabelField",
      "type": "object"
    },
    "CommentList": {
      "properties": {
        "kind": {
          "type": "string",
          "default": "drive#commentList",
          "description": "This is always `drive#commentList`."
        },
        "items": {
          "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Comment"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of comments."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      },
      "type": "object",
      "description": "A list of comments on a file in Google Drive.",
      "id": "CommentList"
    },
    "Property": {
      "id": "Property",
      "description": "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of this property.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. The link back to this property.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Output only. ETag of the property."
        },
        "kind": {
          "default": "drive#property",
          "type": "string",
          "description": "Output only. This is always `drive#property`."
        },
        "visibility": {
          "description": "The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
          "type": "string"
        },
        "key": {
          "annotations": {
            "required": [
              "drive.properties.insert"
            ]
          },
          "description": "The key of this property.",
          "type": "string"
        }
      }
    },
    "RevisionList": {
      "id": "RevisionList",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#revisionList`.",
          "default": "drive#revisionList",
          "type": "string"
        },
        "items": {
          "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Revision"
          }
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A list of revisions of a file."
    },
    "TeamDriveList": {
      "description": "A list of Team Drives.",
      "type": "object",
      "id": "TeamDriveList",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of Team Drives.",
          "items": {
            "$ref": "TeamDrive"
          }
        },
        "kind": {
          "default": "drive#teamDriveList",
          "description": "This is always `drive#teamDriveList`",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The page token for the next page of Team Drives.",
          "type": "string"
        }
      }
    },
    "Channel": {
      "properties": {
        "token": {
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "type": "string"
        },
        "payload": {
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "type": "boolean"
        },
        "resourceId": {
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "type": "string"
        },
        "params": {
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "expiration": {
          "format": "int64",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "type": "string"
        },
        "id": {
          "description": "A UUID or similar unique string that identifies this channel.",
          "type": "string"
        },
        "resourceUri": {
          "type": "string",
          "description": "A version-specific identifier for the watched resource."
        },
        "kind": {
          "default": "api#channel",
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "The address where notifications are delivered for this channel."
        },
        "type": {
          "type": "string",
          "description": "The type of delivery mechanism used for this channel."
        }
      },
      "description": "A notification channel used to watch for resource changes.",
      "type": "object",
      "id": "Channel"
    },
    "CommentReplyList": {
      "properties": {
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "kind": {
          "default": "drive#commentReplyList",
          "type": "string",
          "description": "This is always `drive#commentReplyList`."
        },
        "items": {
          "type": "array",
          "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "items": {
            "$ref": "CommentReply"
          }
        },
        "nextLink": {
          "description": "A link to the next page of replies.",
          "type": "string"
        }
      },
      "description": "A list of replies to a comment on a file in Google Drive.",
      "type": "object",
      "id": "CommentReplyList"
    },
    "ChildList": {
      "description": "A list of children of a file.",
      "properties": {
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of children."
        },
        "kind": {
          "description": "This is always `drive#childList`.",
          "default": "drive#childList",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "items": {
          "type": "array",
          "description": "The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "items": {
            "$ref": "ChildReference"
          }
        }
      },
      "type": "object",
      "id": "ChildList"
    },
    "App": {
      "type": "object",
      "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
      "id": "App",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the app."
        },
        "createInFolderTemplate": {
          "type": "string",
          "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
        },
        "installed": {
          "description": "Whether the app is installed.",
          "type": "boolean"
        },
        "secondaryMimeTypes": {
          "description": "The list of secondary mime types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icons": {
          "description": "The various icons for the app.",
          "type": "array",
          "items": {
            "properties": {
              "category": {
                "description": "Category of the icon. Allowed values are: * `application` - icon for the application * `document` - icon for a file associated with the app * `documentShared` - icon for a shared file associated with the app",
                "type": "string"
              },
              "iconUrl": {
                "description": "URL for the icon.",
                "type": "string"
              },
              "size": {
                "format": "int32",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "objectType": {
          "type": "string",
          "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
        },
        "name": {
          "type": "string",
          "description": "The name of the app."
        },
        "openUrlTemplate": {
          "description": "The template url for opening files with this app. The template will contain `{ids}` and/or `{exportIds}` to be replaced by the actual file ids. See Open Files for the full documentation.",
          "type": "string"
        },
        "primaryFileExtensions": {
          "description": "The list of primary file extensions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hasDriveWideScope": {
          "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.",
          "type": "boolean"
        },
        "supportsMultiOpen": {
          "type": "boolean",
          "description": "Whether this app supports opening more than one file."
        },
        "createUrl": {
          "description": "The url to create a new file with this app.",
          "type": "string"
        },
        "shortDescription": {
          "description": "A short description of the app.",
          "type": "string"
        },
        "supportsOfflineCreate": {
          "description": "Whether this app supports creating new files when offline.",
          "type": "boolean"
        },
        "useByDefault": {
          "description": "Whether the app is selected as the default handler for the types it supports.",
          "type": "boolean"
        },
        "productUrl": {
          "description": "A link to the product listing for this app.",
          "type": "string"
        },
        "supportsCreate": {
          "type": "boolean",
          "description": "Whether this app supports creating new objects."
        },
        "supportsImport": {
          "type": "boolean",
          "description": "Whether this app supports importing from Docs Editors."
        },
        "primaryMimeTypes": {
          "type": "array",
          "description": "The list of primary mime types.",
          "items": {
            "type": "string"
          }
        },
        "secondaryFileExtensions": {
          "type": "array",
          "description": "The list of secondary file extensions.",
          "items": {
            "type": "string"
          }
        },
        "authorized": {
          "type": "boolean",
          "description": "Whether the app is authorized to access data on the user's Drive."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product listing for this app."
        },
        "longDescription": {
          "type": "string",
          "description": "A long description of the app."
        },
        "kind": {
          "description": "This is always `drive#app`.",
          "default": "drive#app",
          "type": "string"
        }
      }
    },
    "PermissionList": {
      "properties": {
        "kind": {
          "default": "drive#permissionList",
          "type": "string",
          "description": "This is always `drive#permissionList`."
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "items": {
          "items": {
            "$ref": "Permission"
          },
          "description": "The list of permissions.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PermissionList",
      "description": "A list of permissions associated with a file."
    },
    "StartPageToken": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#startPageToken\"`.",
          "default": "drive#startPageToken"
        },
        "startPageToken": {
          "type": "string",
          "description": "The starting page token for listing changes."
        }
      },
      "type": "object",
      "id": "StartPageToken"
    },
    "Label": {
      "type": "object",
      "description": "Representation of a label and label fields.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the label."
        },
        "fields": {
          "additionalProperties": {
            "$ref": "LabelField"
          },
          "description": "A map of the fields on the label, keyed by the field's ID.",
          "type": "object"
        },
        "revisionId": {
          "description": "The revision ID of the label.",
          "type": "string"
        },
        "kind": {
          "default": "drive#label",
          "description": "This is always `drive#label`",
          "type": "string"
        }
      },
      "id": "Label"
    },
    "LabelFieldModification": {
      "description": "A modification to a label's field.",
      "type": "object",
      "id": "LabelFieldModification",
      "properties": {
        "unsetValues": {
          "description": "Unsets the values for this field.",
          "type": "boolean"
        },
        "setUserValues": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Replaces a `user` field with these new values. The values must be valid email addresses."
        },
        "setTextValues": {
          "description": "Sets the value of a `text` field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "setDateValues": {
          "items": {
            "format": "date",
            "type": "string"
          },
          "type": "array",
          "description": "Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD."
        },
        "fieldId": {
          "description": "The ID of the field to be modified.",
          "type": "string"
        },
        "kind": {
          "default": "drive#labelFieldModification",
          "description": "This is always `drive#labelFieldModification`.",
          "type": "string"
        },
        "setIntegerValues": {
          "description": "Replaces the value of an `integer` field with these new values.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "setSelectionValues": {
          "description": "Replaces a `selection` field with these new values.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "AppList": {
      "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
      "type": "object",
      "id": "AppList",
      "properties": {
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "defaultAppIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest)."
        },
        "items": {
          "description": "The list of apps.",
          "type": "array",
          "items": {
            "$ref": "App"
          }
        },
        "kind": {
          "type": "string",
          "description": "This is always `drive#appList`.",
          "default": "drive#appList"
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        }
      }
    },
    "ContentRestriction": {
      "id": "ContentRestriction",
      "description": "A restriction for accessing the content of the file.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set `readOnly=true`."
        },
        "readOnly": {
          "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.",
          "type": "boolean"
        },
        "type": {
          "description": "Output only. The type of the content restriction. Currently the only possible value is `globalContentRestriction`.",
          "type": "string"
        },
        "restrictingUser": {
          "description": "Output only. The user who set the content restriction. Only populated if `readOnly` is true.",
          "$ref": "User"
        },
        "ownerRestricted": {
          "description": "Whether the content restriction can only be modified or removed by a user who owns the file. For files in shared drives, any user with `organizer` capabilities can modify or remove this content restriction.",
          "type": "boolean"
        },
        "restrictionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true."
        }
      }
    },
    "ParentList": {
      "id": "ParentList",
      "description": "A list of a file's parents.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "kind": {
          "default": "drive#parentList",
          "type": "string",
          "description": "This is always `drive#parentList`."
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "ParentReference"
          },
          "description": "The list of parents."
        }
      }
    },
    "Revision": {
      "id": "Revision",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Output only. The ETag of the revision.",
          "type": "string"
        },
        "md5Checksum": {
          "type": "string",
          "description": "Output only. An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
        },
        "lastModifyingUserName": {
          "description": "Output only. Name of the last user to modify this revision.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this revision."
        },
        "exportLinks": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Output only. Links for exporting Docs Editors files to specific formats."
        },
        "publishAuto": {
          "type": "boolean",
          "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Docs Editors files."
        },
        "downloadUrl": {
          "type": "string",
          "description": "Output only. Short term download URL for the file. This will only be populated on files with content stored in Drive."
        },
        "modifiedDate": {
          "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
          "format": "date-time",
          "type": "string"
        },
        "publishedOutsideDomain": {
          "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "lastModifyingUser": {
          "$ref": "User",
          "description": "Output only. The last user to modify this revision."
        },
        "originalFilename": {
          "type": "string",
          "description": "Output only. The original filename when this revision was created. This will only be populated on files with content stored in Drive."
        },
        "kind": {
          "type": "string",
          "description": "Output only. This is always `drive#revision`.",
          "default": "drive#revision"
        },
        "mimeType": {
          "type": "string",
          "description": "Output only. The MIME type of the revision."
        },
        "pinned": {
          "description": "Whether this revision is pinned to prevent automatic purging. If not set, the revision is automatically purged 30 days after newer content is uploaded. This field can only be modified on files with content stored in Drive, excluding Docs Editors files. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter. Pinned revisions are stored indefinitely using additional storage quota, up to a maximum of 200 revisions.",
          "type": "boolean"
        },
        "published": {
          "type": "boolean",
          "description": "Whether this revision is published. This is only populated and can only be modified for Docs Editors files."
        },
        "id": {
          "type": "string",
          "description": "Output only. The ID of the revision."
        },
        "publishedLink": {
          "description": "Output only. A link to the published revision. This is only populated for Google Sites files.",
          "type": "string"
        },
        "fileSize": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The size of the revision in bytes. This will only be populated on files with content stored in Drive."
        }
      },
      "description": "A revision of a file."
    },
    "ChangeList": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "kind": {
          "type": "string",
          "default": "drive#changeList",
          "description": "This is always `drive#changeList`."
        },
        "items": {
          "type": "array",
          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "items": {
            "$ref": "Change"
          }
        },
        "largestChangeId": {
          "description": "The current largest change ID.",
          "format": "int64",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of changes."
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "newStartPageToken": {
          "type": "string",
          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached."
        }
      },
      "id": "ChangeList",
      "description": "A list of changes for a user."
    },
    "LabelModification": {
      "description": "A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file.",
      "id": "LabelModification",
      "properties": {
        "removeLabel": {
          "type": "boolean",
          "description": "If true, the label will be removed from the file."
        },
        "kind": {
          "type": "string",
          "default": "drive#labelModification",
          "description": "This is always `drive#labelModification`."
        },
        "labelId": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.files.modifyLabels"
            ]
          },
          "description": "The ID of the label to modify."
        },
        "fieldModifications": {
          "description": "The list of modifications to this label's fields.",
          "items": {
            "$ref": "LabelFieldModification"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "File": {
      "description": "The metadata for a file.",
      "properties": {
        "embedLink": {
          "description": "Output only. A link for embedding the file.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Output only. ETag of the file."
        },
        "sha1Checksum": {
          "type": "string",
          "description": "Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "shortcutDetails": {
          "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`.",
          "type": "object",
          "properties": {
            "targetId": {
              "type": "string",
              "description": "The ID of the file that this shortcut points to."
            },
            "targetResourceKey": {
              "type": "string",
              "description": "Output only. The ResourceKey for the target file."
            },
            "targetMimeType": {
              "description": "Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
              "type": "string"
            }
          }
        },
        "downloadUrl": {
          "type": "string",
          "description": "Output only. Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files."
        },
        "sha256Checksum": {
          "description": "Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "fileSize": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders."
        },
        "webContentLink": {
          "description": "Output only. A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.",
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "description": "Output only. The list of permissions for users with access to this file. Not populated for items in shared drives.",
          "items": {
            "$ref": "Permission"
          }
        },
        "webViewLink": {
          "description": "Output only. A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this file."
        },
        "ownerNames": {
          "description": "Output only. Name(s) of the owner(s) of this file. Not populated for items in shared drives.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "folderColorRgb": {
          "type": "string",
          "description": "Folder color as an RGB hex string if the file is a folder or a shortcut to a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
        },
        "shared": {
          "description": "Output only. Whether the file has been shared. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "canReadRevisions": {
          "deprecated": true,
          "description": "Output only. Deprecated: Use `capabilities/canReadRevisions` instead.",
          "type": "boolean"
        },
        "capabilities": {
          "properties": {
            "canEdit": {
              "description": "Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.",
              "type": "boolean"
            },
            "canAddFolderFromAnotherDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canMoveTeamDriveItem": {
              "deprecated": true,
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.",
              "type": "boolean"
            },
            "canRemoveChildren": {
              "description": "Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.",
              "type": "boolean"
            },
            "canMoveChildrenOutOfDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canChangeCopyRequiresWriterPermission": {
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.",
              "type": "boolean"
            },
            "canCopy": {
              "type": "boolean",
              "description": "Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder."
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on this file.",
              "type": "boolean"
            },
            "canRemoveMyDriveParent": {
              "description": "Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canModifyEditorContentRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted."
            },
            "canReadLabels": {
              "description": "Output only. Whether the current user can read the labels on the file.",
              "type": "boolean"
            },
            "canModifyContentRestriction": {
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`."
            },
            "canChangeSecurityUpdateEnabled": {
              "description": "Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.",
              "type": "boolean"
            },
            "canTrash": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move this file to trash."
            },
            "canModifyLabels": {
              "description": "Output only. Whether the current user can modify the labels on the file.",
              "type": "boolean"
            },
            "canMoveItemOutOfTeamDrive": {
              "type": "boolean",
              "deprecated": true,
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead."
            },
            "canMoveChildrenWithinDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder."
            },
            "canReadDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives."
            },
            "canDeleteChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canReadTeamDrive": {
              "type": "boolean",
              "deprecated": true,
              "description": "Output only. Deprecated: Use `canReadDrive` instead."
            },
            "canMoveItemWithinTeamDrive": {
              "deprecated": true,
              "type": "boolean",
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` instead."
            },
            "canMoveItemOutOfDrive": {
              "description": "Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
              "type": "boolean"
            },
            "canMoveChildrenWithinTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canDownload": {
              "description": "Output only. Whether the current user can download this file.",
              "type": "boolean"
            },
            "canModifyContent": {
              "type": "boolean",
              "description": "Output only. Whether the current user can modify the content of this file."
            },
            "canMoveItemWithinDrive": {
              "description": "Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
              "type": "boolean"
            },
            "canMoveChildrenOutOfTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.",
              "type": "boolean",
              "deprecated": true
            },
            "canAcceptOwnership": {
              "type": "boolean",
              "description": "Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files."
            },
            "canModifyOwnerContentRestriction": {
              "description": "Output only. Whether the current user can add or modify content restrictions which are owner restricted.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
              "type": "boolean"
            },
            "canShare": {
              "type": "boolean",
              "description": "Output only. Whether the current user can modify the sharing settings for this file."
            },
            "canAddChildren": {
              "description": "Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canAddMyDriveParent": {
              "description": "Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canMoveItemIntoTeamDrive": {
              "deprecated": true,
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
              "type": "boolean"
            },
            "canDelete": {
              "description": "Output only. Whether the current user can delete this file.",
              "type": "boolean"
            },
            "canUntrash": {
              "description": "Output only. Whether the current user can restore this file from trash.",
              "type": "boolean"
            },
            "canRename": {
              "type": "boolean",
              "description": "Output only. Whether the current user can rename this file."
            },
            "canChangeRestrictedDownload": {
              "description": "Output only. Deprecated.",
              "type": "boolean",
              "deprecated": true
            },
            "canRemoveContentRestriction": {
              "type": "boolean",
              "description": "Output only. Whether there is a content restriction on the file that can be removed by the current user."
            }
          },
          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
          "type": "object"
        },
        "isAppAuthorized": {
          "type": "boolean",
          "description": "Output only. Whether the file was created or opened by the requesting app."
        },
        "explicitlyTrashed": {
          "description": "Output only. Whether this file has been explicitly trashed, as opposed to recursively trashed.",
          "type": "boolean"
        },
        "trashedDate": {
          "description": "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.",
          "format": "date-time",
          "type": "string"
        },
        "driveId": {
          "type": "string",
          "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives."
        },
        "markedViewedByMeDate": {
          "description": "Deprecated.",
          "format": "date-time",
          "type": "string"
        },
        "labelInfo": {
          "properties": {
            "labels": {
              "description": "Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned.",
              "items": {
                "$ref": "Label"
              },
              "type": "array"
            }
          },
          "type": "object",
          "description": "Output only. An overview of the labels on the file."
        },
        "videoMediaMetadata": {
          "properties": {
            "height": {
              "format": "int32",
              "description": "Output only. The height of the video in pixels.",
              "type": "integer"
            },
            "durationMillis": {
              "format": "int64",
              "description": "Output only. The duration of the video in milliseconds.",
              "type": "string"
            },
            "width": {
              "type": "integer",
              "description": "Output only. The width of the video in pixels.",
              "format": "int32"
            }
          },
          "description": "Output only. Metadata about video media. This will only be present for video types.",
          "type": "object"
        },
        "thumbnailVersion": {
          "description": "Output only. The thumbnail version for use in thumbnail cache invalidation.",
          "type": "string",
          "format": "int64"
        },
        "contentRestrictions": {
          "items": {
            "$ref": "ContentRestriction"
          },
          "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
          "type": "array"
        },
        "lastModifyingUser": {
          "$ref": "User",
          "description": "Output only. The last user to modify this file."
        },
        "version": {
          "type": "string",
          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
          "format": "int64"
        },
        "lastModifyingUserName": {
          "description": "Output only. Name of the last user to modify this file.",
          "type": "string"
        },
        "exportLinks": {
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "readOnly": true
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set."
        },
        "resourceKey": {
          "type": "string",
          "description": "Output only. A key needed to access the item via a shared link."
        },
        "labels": {
          "description": "A group of labels for the file.",
          "properties": {
            "modified": {
              "description": "Output only. Whether the file has been modified by this user.",
              "type": "boolean"
            },
            "starred": {
              "type": "boolean",
              "description": "Whether this file is starred by the user."
            },
            "hidden": {
              "type": "boolean",
              "deprecated": true,
              "description": "Output only. Deprecated."
            },
            "viewed": {
              "description": "Whether this file has been viewed by this user.",
              "type": "boolean"
            },
            "restricted": {
              "description": "Output only. Deprecated: Use `copyRequiresWriterPermission` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "trashed": {
              "type": "boolean",
              "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
            }
          },
          "type": "object"
        },
        "writersCanShare": {
          "description": "Whether writers can share the document with other users. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "originalFilename": {
          "description": "The original filename of the uploaded content if available, or else the original value of the `title` field. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "parents": {
          "items": {
            "$ref": "ParentReference"
          },
          "type": "array",
          "description": "Collection of parent folders which contain this file. If not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the `addParents` and `removeParents` parameters to modify the parents list."
        },
        "defaultOpenWithLink": {
          "type": "string",
          "description": "Output only. A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
        },
        "userPermission": {
          "$ref": "Permission",
          "description": "Output only. The permissions for the authenticated user on this file."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Create time for this file (formatted RFC 3339 timestamp)."
        },
        "shareable": {
          "description": "Output only. Deprecated: Use `capabilities/canShare` instead.",
          "type": "boolean",
          "deprecated": true
        },
        "copyable": {
          "description": "Output only. Deprecated: Use `capabilities/canCopy` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "canComment": {
          "deprecated": true,
          "type": "boolean",
          "description": "Output only. Deprecated: Use `capabilities/canComment` instead."
        },
        "alternateLink": {
          "type": "string",
          "description": "Output only. A link for opening the file in a relevant Google editor or viewer."
        },
        "sharedWithMeDate": {
          "type": "string",
          "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
          "format": "date-time"
        },
        "modifiedByMeDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date."
        },
        "hasAugmentedPermissions": {
          "type": "boolean",
          "description": "Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives."
        },
        "thumbnail": {
          "description": "A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.",
          "type": "object",
          "properties": {
            "image": {
              "format": "byte",
              "type": "string",
              "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5."
            },
            "mimeType": {
              "description": "The MIME type of the thumbnail.",
              "type": "string"
            }
          }
        },
        "lastViewedByMeDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp)."
        },
        "description": {
          "type": "string",
          "description": "A short description of the file."
        },
        "hasThumbnail": {
          "description": "Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
          "type": "boolean"
        },
        "editable": {
          "deprecated": true,
          "description": "Output only. Deprecated: Use `capabilities/canEdit` instead.",
          "type": "boolean"
        },
        "title": {
          "description": "The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.",
          "type": "string"
        },
        "thumbnailLink": {
          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in `Files.thumbnailLink` must be fetched using a credentialed request.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. The type of file. This is always `drive#file`.",
          "default": "drive#file",
          "type": "string"
        },
        "teamDriveId": {
          "description": "Output only. Deprecated: Use `driveId` instead.",
          "deprecated": true,
          "type": "string"
        },
        "appDataContents": {
          "description": "Output only. Whether this file is in the Application Data folder.",
          "type": "boolean"
        },
        "indexableText": {
          "description": "Indexable text attributes for the file (can only be written)",
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "The text to be indexed for this file."
            }
          }
        },
        "quotaBytesUsed": {
          "description": "Output only. The number of quota bytes used by this file.",
          "format": "int64",
          "type": "string"
        },
        "sharingUser": {
          "description": "Output only. User that shared the item with the current user, if available.",
          "$ref": "User"
        },
        "fileExtension": {
          "description": "Output only. The final component of `fullFileExtension` with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "linkShareMetadata": {
          "type": "object",
          "description": "Contains details about the link URLs that clients are using to refer to this item.",
          "properties": {
            "securityUpdateEligible": {
              "type": "boolean",
              "description": "Output only. Whether the file is eligible for security update."
            },
            "securityUpdateEnabled": {
              "description": "Output only. Whether the security update is enabled for this file.",
              "type": "boolean"
            }
          }
        },
        "openWithLinks": {
          "type": "object",
          "description": "Output only. A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "owners": {
          "items": {
            "$ref": "User"
          },
          "description": "Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
          "type": "array"
        },
        "iconLink": {
          "description": "Output only. A link to the file's icon.",
          "type": "string"
        },
        "imageMediaMetadata": {
          "properties": {
            "isoSpeed": {
              "format": "int32",
              "description": "Output only. The ISO speed used to create the photo.",
              "type": "integer"
            },
            "exposureMode": {
              "description": "Output only. The exposure mode used to create the photo.",
              "type": "string"
            },
            "aperture": {
              "type": "number",
              "format": "float",
              "description": "Output only. The aperture used to create the photo (f-number)."
            },
            "colorSpace": {
              "type": "string",
              "description": "Output only. The color space of the photo."
            },
            "lens": {
              "type": "string",
              "description": "Output only. The lens used to create the photo."
            },
            "whiteBalance": {
              "type": "string",
              "description": "Output only. The white balance mode used to create the photo."
            },
            "width": {
              "description": "Output only. The width of the image in pixels.",
              "format": "int32",
              "type": "integer"
            },
            "maxApertureValue": {
              "type": "number",
              "description": "Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
              "format": "float"
            },
            "location": {
              "description": "Output only. Geographic location information stored in the image.",
              "properties": {
                "altitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Output only. The altitude stored in the image."
                },
                "longitude": {
                  "format": "double",
                  "description": "Output only. The longitude stored in the image.",
                  "type": "number"
                },
                "latitude": {
                  "format": "double",
                  "type": "number",
                  "description": "Output only. The latitude stored in the image."
                }
              },
              "type": "object"
            },
            "exposureBias": {
              "description": "Output only. The exposure bias of the photo (APEX value).",
              "format": "float",
              "type": "number"
            },
            "sensor": {
              "type": "string",
              "description": "Output only. The type of sensor used to create the photo."
            },
            "height": {
              "description": "Output only. The height of the image in pixels.",
              "format": "int32",
              "type": "integer"
            },
            "exposureTime": {
              "type": "number",
              "description": "Output only. The length of the exposure, in seconds.",
              "format": "float"
            },
            "flashUsed": {
              "type": "boolean",
              "description": "Output only. Whether a flash was used to create the photo."
            },
            "cameraModel": {
              "type": "string",
              "description": "Output only. The model of the camera used to create the photo."
            },
            "meteringMode": {
              "type": "string",
              "description": "Output only. The metering mode used to create the photo."
            },
            "rotation": {
              "description": "Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
              "format": "int32",
              "type": "integer"
            },
            "subjectDistance": {
              "type": "integer",
              "format": "int32",
              "description": "Output only. The distance to the subject of the photo, in meters."
            },
            "focalLength": {
              "format": "float",
              "description": "Output only. The focal length used to create the photo, in millimeters.",
              "type": "number"
            },
            "date": {
              "type": "string",
              "description": "Output only. The date and time the photo was taken (EXIF format timestamp)."
            },
            "cameraMake": {
              "type": "string",
              "description": "Output only. The make of the camera used to create the photo."
            }
          },
          "description": "Output only. Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
          "type": "object"
        },
        "id": {
          "description": "The ID of the file.",
          "type": "string"
        },
        "spaces": {
          "type": "array",
          "description": "Output only. The list of spaces which contain the file. Supported values are `drive`, `appDataFolder` and `photos`.",
          "items": {
            "type": "string"
          }
        },
        "headRevisionId": {
          "type": "string",
          "description": "Output only. The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "mimeType": {
          "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.",
          "type": "string"
        },
        "copyRequiresWriterPermission": {
          "type": "boolean",
          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters."
        },
        "trashingUser": {
          "$ref": "User",
          "description": "Output only. If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives."
        },
        "permissionIds": {
          "type": "array",
          "description": "Output only. List of permission IDs for users with access to this file.",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "items": {
            "$ref": "Property"
          },
          "type": "array",
          "description": "The list of properties."
        },
        "fullFileExtension": {
          "type": "string",
          "description": "Output only. The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "ownedByMe": {
          "type": "boolean",
          "description": "Output only. Whether the file is owned by the current user. Not populated for items in shared drives."
        },
        "md5Checksum": {
          "description": "Output only. An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "File"
    },
    "PropertyList": {
      "properties": {
        "selfLink": {
          "description": "The link back to this list.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "kind": {
          "default": "drive#propertyList",
          "type": "string",
          "description": "This is always `drive#propertyList`."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Property"
          },
          "description": "The list of properties."
        }
      },
      "description": "A collection of properties, key-value pairs that are either public or private to an application.",
      "id": "PropertyList",
      "type": "object"
    },
    "Change": {
      "type": "object",
      "description": "Representation of a change to a file or shared drive.",
      "properties": {
        "kind": {
          "default": "drive#change",
          "type": "string",
          "description": "This is always `drive#change`."
        },
        "file": {
          "$ref": "File",
          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes."
        },
        "teamDrive": {
          "$ref": "TeamDrive",
          "deprecated": true,
          "description": "Deprecated: Use `drive` instead."
        },
        "changeType": {
          "description": "The type of the change. Possible values are `file` and `drive`.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the change.",
          "type": "string",
          "format": "int64"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this change."
        },
        "modificationDate": {
          "format": "date-time",
          "description": "The time of this modification.",
          "type": "string"
        },
        "driveId": {
          "type": "string",
          "description": "The ID of the shared drive associated with this change."
        },
        "type": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated: Use `changeType` instead."
        },
        "drive": {
          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.",
          "$ref": "Drive"
        },
        "deleted": {
          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.",
          "type": "boolean"
        },
        "teamDriveId": {
          "deprecated": true,
          "type": "string",
          "description": "Deprecated: Use `driveId` instead."
        },
        "fileId": {
          "type": "string",
          "description": "The ID of the file associated with this change."
        }
      },
      "id": "Change"
    },
    "ParentReference": {
      "description": "A reference to a file's parent.",
      "type": "object",
      "id": "ParentReference",
      "properties": {
        "isRoot": {
          "type": "boolean",
          "description": "Output only. Whether or not the parent is the root folder."
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this reference."
        },
        "parentLink": {
          "type": "string",
          "description": "Output only. A link to the parent."
        },
        "id": {
          "description": "The ID of the parent.",
          "annotations": {
            "required": [
              "drive.parents.insert"
            ]
          },
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#parentReference`.",
          "default": "drive#parentReference",
          "type": "string"
        }
      }
    },
    "TeamDrive": {
      "id": "TeamDrive",
      "description": "Deprecated: Use the `drive` collection instead.",
      "properties": {
        "restrictions": {
          "type": "object",
          "description": "A set of restrictions that apply to this Team Drive or items inside this Team Drive.",
          "properties": {
            "adminManagedRestrictions": {
              "type": "boolean",
              "description": "Whether administrative privileges on this Team Drive are required to modify restrictions."
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "description": "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive.",
              "type": "boolean"
            },
            "teamMembersOnly": {
              "type": "boolean",
              "description": "Whether access to items inside this Team Drive is restricted to members of this Team Drive."
            },
            "copyRequiresWriterPermission": {
              "type": "boolean",
              "description": "Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this Team Drive."
            }
          }
        },
        "backgroundImageLink": {
          "type": "string",
          "description": "A short-lived link to this Team Drive's background image."
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `teamDriveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.teamdrives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "orgUnitId": {
          "description": "The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#teamDrive`",
          "type": "string",
          "default": "drive#teamDrive"
        },
        "name": {
          "description": "The name of this Team Drive.",
          "type": "string",
          "annotations": {
            "required": [
              "drive.teamdrives.insert"
            ]
          }
        },
        "colorRgb": {
          "type": "string",
          "description": "The color of this Team Drive as an RGB hex string. It can only be set on a `drive.teamdrives.update` request that does not set `themeId`."
        },
        "id": {
          "type": "string",
          "description": "The ID of this Team Drive which is also the ID of the top level folder of this Team Drive."
        },
        "backgroundImageFile": {
          "properties": {
            "width": {
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
              "type": "number",
              "format": "float"
            },
            "xCoordinate": {
              "type": "number",
              "format": "float",
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image."
            },
            "yCoordinate": {
              "type": "number",
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "format": "float"
            },
            "id": {
              "type": "string",
              "description": "The ID of an image file in Drive to use for the background image."
            }
          },
          "type": "object",
          "description": "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on `drive.teamdrives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set."
        },
        "createdDate": {
          "description": "The time at which the Team Drive was created (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "capabilities": {
          "properties": {
            "canChangeDomainUsersOnlyRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `domainUsersOnly` restriction of this Team Drive."
            },
            "canShare": {
              "description": "Whether the current user can share files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canChangeTeamMembersOnlyRestriction": {
              "description": "Whether the current user can change the `teamMembersOnly` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canListChildren": {
              "type": "boolean",
              "description": "Whether the current user can list the children of folders in this Team Drive."
            },
            "canRenameTeamDrive": {
              "description": "Whether the current user can rename this Team Drive.",
              "type": "boolean"
            },
            "canDownload": {
              "type": "boolean",
              "description": "Whether the current user can download files in this Team Drive."
            },
            "canDeleteChildren": {
              "type": "boolean",
              "description": "Whether the current user can delete children from folders in this Team Drive."
            },
            "canDeleteTeamDrive": {
              "description": "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "type": "boolean",
              "description": "Whether the current user can read the revisions resource of files in this Team Drive."
            },
            "canRemoveChildren": {
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `canDeleteChildren` or `canTrashChildren` instead."
            },
            "canManageMembers": {
              "type": "boolean",
              "description": "Whether the current user can add members to this Team Drive or remove them or change their role."
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this Team Drive."
            },
            "canAddChildren": {
              "type": "boolean",
              "description": "Whether the current user can add children to folders in this Team Drive."
            },
            "canResetTeamDriveRestrictions": {
              "description": "Whether the current user can reset the Team Drive restrictions to defaults.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "description": "Whether the current user can change the `copyRequiresWriterPermission` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Whether the current user can comment on files in this Team Drive.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "type": "boolean",
              "description": "Whether the current user can trash children from folders in this Team Drive."
            },
            "canEdit": {
              "type": "boolean",
              "description": "Whether the current user can edit files in this Team Drive"
            },
            "canRename": {
              "type": "boolean",
              "description": "Whether the current user can rename files or folders in this Team Drive."
            },
            "canCopy": {
              "description": "Whether the current user can copy files in this Team Drive.",
              "type": "boolean"
            },
            "canChangeTeamDriveBackground": {
              "description": "Whether the current user can change the background of this Team Drive.",
              "type": "boolean"
            }
          },
          "description": "Capabilities the current user has on this Team Drive.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "CommentReply": {
      "description": "A comment on a file in Google Drive.",
      "id": "CommentReply",
      "type": "object",
      "properties": {
        "createdDate": {
          "format": "date-time",
          "description": "The date when this reply was first created.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#commentReply`.",
          "type": "string",
          "default": "drive#commentReply"
        },
        "htmlContent": {
          "description": "Output only. HTML formatted content for this reply.",
          "type": "string"
        },
        "replyId": {
          "type": "string",
          "description": "Output only. The ID of the reply."
        },
        "author": {
          "description": "Output only. The author of the reply. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date when this reply was last modified."
        },
        "content": {
          "annotations": {
            "required": [
              "drive.replies.patch",
              "drive.replies.update"
            ]
          },
          "type": "string",
          "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
        },
        "verb": {
          "type": "string",
          "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are: * `resolve` - To resolve a comment. * `reopen` - To reopen (un-resolve) a comment."
        }
      }
    }
  },
  "title": "Google Drive API",
  "resources": {
    "children": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.children.get",
          "parameterOrder": [
            "folderId",
            "childId"
          ],
          "description": "Gets a specific child reference.",
          "path": "files/{folderId}/children/{childId}",
          "httpMethod": "GET",
          "flatPath": "files/{folderId}/children/{childId}",
          "response": {
            "$ref": "ChildReference"
          },
          "parameters": {
            "childId": {
              "required": true,
              "type": "string",
              "description": "The ID of the child.",
              "location": "path"
            },
            "folderId": {
              "description": "The ID of the folder.",
              "type": "string",
              "location": "path",
              "required": true
            }
          }
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "flatPath": "files/{folderId}/children/{childId}",
          "httpMethod": "DELETE",
          "id": "drive.children.delete",
          "description": "Removes a child from a folder.",
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "childId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the child."
            },
            "enforceSingleParent": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root."
            }
          },
          "path": "files/{folderId}/children/{childId}",
          "parameterOrder": [
            "folderId",
            "childId"
          ]
        },
        "insert": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "id": "drive.children.insert",
          "response": {
            "$ref": "ChildReference"
          },
          "parameterOrder": [
            "folderId"
          ],
          "path": "files/{folderId}/children",
          "description": "Inserts a file into a folder.",
          "flatPath": "files/{folderId}/children",
          "request": {
            "$ref": "ChildReference"
          },
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "deprecated": true,
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "type": "boolean",
              "deprecated": true,
              "default": "false"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            }
          }
        },
        "list": {
          "httpMethod": "GET",
          "flatPath": "files/{folderId}/children",
          "response": {
            "$ref": "ChildList"
          },
          "path": "files/{folderId}/children",
          "parameters": {
            "q": {
              "description": "Query string for searching children.",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "location": "query",
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, and `title`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of children to return.",
              "location": "query",
              "minimum": "0",
              "default": "100",
              "type": "integer"
            },
            "folderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the folder."
            },
            "pageToken": {
              "type": "string",
              "description": "Page token for children.",
              "location": "query"
            }
          },
          "description": "Lists a folder's children.",
          "id": "drive.children.list",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [
            "folderId"
          ]
        }
      }
    },
    "comments": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Comment"
          },
          "flatPath": "files/{fileId}/comments/{commentId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/comments/{commentId}",
          "httpMethod": "GET",
          "description": "Gets a comment by ID.",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "parameters": {
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the file.",
              "required": true
            },
            "includeDeleted": {
              "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "commentId": {
              "required": true,
              "location": "path",
              "description": "The ID of the comment.",
              "type": "string"
            }
          },
          "id": "drive.comments.get"
        },
        "insert": {
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "files/{fileId}/comments",
          "request": {
            "$ref": "Comment"
          },
          "path": "files/{fileId}/comments",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "Comment"
          },
          "description": "Creates a new comment on the given file.",
          "id": "drive.comments.insert",
          "httpMethod": "POST"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "flatPath": "files/{fileId}/comments/{commentId}",
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "location": "path",
              "description": "The ID of the comment.",
              "required": true,
              "type": "string"
            }
          },
          "description": "Updates an existing comment.",
          "httpMethod": "PUT",
          "response": {
            "$ref": "Comment"
          },
          "request": {
            "$ref": "Comment"
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "id": "drive.comments.update",
          "path": "files/{fileId}/comments/{commentId}"
        },
        "delete": {
          "path": "files/{fileId}/comments/{commentId}",
          "id": "drive.comments.delete",
          "parameters": {
            "fileId": {
              "required": true,
              "type": "string",
              "description": "The ID of the file.",
              "location": "path"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "DELETE",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "description": "Deletes a comment.",
          "parameterOrder": [
            "fileId",
            "commentId"
          ]
        },
        "patch": {
          "parameters": {
            "fileId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the file."
            },
            "commentId": {
              "description": "The ID of the comment.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "files/{fileId}/comments/{commentId}",
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "description": "Updates an existing comment.",
          "httpMethod": "PATCH",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "id": "drive.comments.patch"
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId"
          ],
          "description": "Lists a file's comments.",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "includeDeleted": {
              "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "updatedMin": {
              "type": "string",
              "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "default": "20",
              "type": "integer",
              "minimum": "0",
              "format": "int32",
              "description": "The maximum number of discussions to include in the response, used for paging.",
              "maximum": "100"
            }
          },
          "id": "drive.comments.list",
          "flatPath": "files/{fileId}/comments",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "CommentList"
          },
          "path": "files/{fileId}/comments"
        }
      }
    },
    "revisions": {
      "methods": {
        "update": {
          "path": "files/{fileId}/revisions/{revisionId}",
          "response": {
            "$ref": "Revision"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a revision.",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "request": {
            "$ref": "Revision"
          },
          "httpMethod": "PUT",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameters": {
            "revisionId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID for the revision."
            },
            "fileId": {
              "location": "path",
              "description": "The ID for the file.",
              "required": true,
              "type": "string"
            }
          },
          "id": "drive.revisions.update"
        },
        "delete": {
          "id": "drive.revisions.delete",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameters": {
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "type": "string",
              "location": "path"
            },
            "revisionId": {
              "description": "The ID of the revision.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted.",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "DELETE"
        },
        "list": {
          "id": "drive.revisions.list",
          "response": {
            "$ref": "RevisionList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "files/{fileId}/revisions",
          "parameters": {
            "maxResults": {
              "default": "200",
              "description": "Maximum number of revisions to return.",
              "location": "query",
              "maximum": "1000",
              "type": "integer",
              "minimum": "1",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token for revisions. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
              "type": "string",
              "location": "query"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            }
          },
          "path": "files/{fileId}/revisions",
          "description": "Lists a file's revisions.",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId"
          ]
        },
        "patch": {
          "response": {
            "$ref": "Revision"
          },
          "description": "Updates a revision.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "id": "drive.revisions.patch",
          "path": "files/{fileId}/revisions/{revisionId}",
          "request": {
            "$ref": "Revision"
          },
          "httpMethod": "PATCH",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID for the file."
            },
            "revisionId": {
              "location": "path",
              "type": "string",
              "description": "The ID for the revision.",
              "required": true
            }
          }
        },
        "get": {
          "description": "Gets a specific revision.",
          "id": "drive.revisions.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "parameters": {
            "revisionId": {
              "type": "string",
              "description": "The ID of the revision.",
              "location": "path",
              "required": true
            },
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "response": {
            "$ref": "Revision"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/revisions/{revisionId}"
        }
      }
    },
    "drives": {
      "methods": {
        "list": {
          "parameterOrder": [],
          "path": "drives",
          "description": " Lists the user's shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/drive/api/guides/search-shareddrives) guide.",
          "parameters": {
            "pageToken": {
              "description": "Page token for shared drives.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "location": "query",
              "description": "Query string for searching shared drives.",
              "type": "string"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned.",
              "type": "boolean",
              "default": "false"
            },
            "maxResults": {
              "format": "int32",
              "default": "10",
              "location": "query",
              "type": "integer",
              "maximum": "100",
              "minimum": "1",
              "description": "Maximum number of shared drives to return per page."
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "DriveList"
          },
          "flatPath": "drives",
          "id": "drive.drives.list"
        },
        "insert": {
          "parameters": {
            "requestId": {
              "type": "string",
              "required": true,
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
              "location": "query"
            }
          },
          "id": "drive.drives.insert",
          "request": {
            "$ref": "Drive"
          },
          "flatPath": "drives",
          "path": "drives",
          "parameterOrder": [
            "requestId"
          ],
          "httpMethod": "POST",
          "description": "Creates a new shared drive.",
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ]
        },
        "hide": {
          "path": "drives/{driveId}/hide",
          "id": "drive.drives.hide",
          "parameterOrder": [
            "driveId"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Drive"
          },
          "flatPath": "drives/{driveId}/hide",
          "description": "Hides a shared drive from the default view.",
          "parameters": {
            "driveId": {
              "location": "path",
              "description": "The ID of the shared drive.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ]
        },
        "get": {
          "path": "drives/{driveId}",
          "parameters": {
            "driveId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the shared drive."
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "Drive"
          },
          "flatPath": "drives/{driveId}",
          "id": "drive.drives.get",
          "httpMethod": "GET",
          "description": "Gets a shared drive's metadata by ID."
        },
        "delete": {
          "parameters": {
            "allowItemDeletion": {
              "default": "false",
              "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",
              "location": "query",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "driveId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the shared drive."
            }
          },
          "path": "drives/{driveId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "httpMethod": "DELETE",
          "parameterOrder": [
            "driveId"
          ],
          "description": "Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items.",
          "flatPath": "drives/{driveId}",
          "id": "drive.drives.delete"
        },
        "update": {
          "httpMethod": "PUT",
          "description": "Updates the metadata for a shared drive.",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "flatPath": "drives/{driveId}",
          "id": "drive.drives.update",
          "parameters": {
            "driveId": {
              "required": true,
              "type": "string",
              "description": "The ID of the shared drive.",
              "location": "path"
            },
            "useDomainAdminAccess": {
              "default": "false",
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "response": {
            "$ref": "Drive"
          },
          "path": "drives/{driveId}",
          "request": {
            "$ref": "Drive"
          }
        },
        "unhide": {
          "path": "drives/{driveId}/unhide",
          "parameters": {
            "driveId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the shared drive."
            }
          },
          "response": {
            "$ref": "Drive"
          },
          "id": "drive.drives.unhide",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "httpMethod": "POST",
          "flatPath": "drives/{driveId}/unhide",
          "description": "Restores a shared drive to the default view.",
          "parameterOrder": [
            "driveId"
          ]
        }
      }
    },
    "channels": {
      "methods": {
        "stop": {
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "channels/stop",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Stops watching resources through this channel.",
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "path": "channels/stop",
          "id": "drive.channels.stop",
          "parameters": {}
        }
      }
    },
    "about": {
      "methods": {
        "get": {
          "flatPath": "about",
          "description": "Gets the information about the current user along with Drive API settings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "about",
          "parameters": {
            "startChangeId": {
              "type": "string",
              "format": "int64",
              "description": "Change ID to start counting from when calculating number of remaining change IDs",
              "location": "query"
            },
            "maxChangeIdCount": {
              "default": "1",
              "format": "int64",
              "description": "Maximum number of remaining change IDs to count",
              "location": "query",
              "type": "string"
            },
            "includeSubscribed": {
              "description": "Whether to count changes outside the My Drive hierarchy. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the `maxChangeIdCount`.",
              "location": "query",
              "type": "boolean",
              "default": "true"
            }
          },
          "id": "drive.about.get",
          "response": {
            "$ref": "About"
          },
          "parameterOrder": []
        }
      }
    },
    "permissions": {
      "methods": {
        "list": {
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response."
            },
            "supportsAllDrives": {
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "default": "false"
            },
            "maxResults": {
              "location": "query",
              "maximum": "100",
              "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.",
              "type": "integer",
              "format": "int32",
              "minimum": "1"
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "required": true
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "useDomainAdminAccess": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs."
            }
          },
          "response": {
            "$ref": "PermissionList"
          },
          "path": "files/{fileId}/permissions",
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.permissions.list",
          "flatPath": "files/{fileId}/permissions",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's or shared drive's permissions.",
          "httpMethod": "GET"
        },
        "patch": {
          "parameters": {
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "removeExpiration": {
              "default": "false",
              "description": "Whether to remove the expiration date.",
              "type": "boolean",
              "location": "query"
            },
            "supportsAllDrives": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "transferOwnership": {
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "fileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID for the file or shared drive."
            },
            "permissionId": {
              "description": "The ID for the permission.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "description": "Updates a permission using patch semantics. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "request": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/permissions/{permissionId}",
          "response": {
            "$ref": "Permission"
          },
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "PATCH",
          "id": "drive.permissions.patch",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ]
        },
        "delete": {
          "path": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a permission from a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "id": "drive.permissions.delete",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "required": true,
              "type": "string"
            },
            "permissionId": {
              "type": "string",
              "description": "The ID for the permission.",
              "required": true,
              "location": "path"
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "default": "false"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            }
          }
        },
        "update": {
          "description": "Updates a permission. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "response": {
            "$ref": "Permission"
          },
          "request": {
            "$ref": "Permission"
          },
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "fileId": {
              "required": true,
              "description": "The ID for the file or shared drive.",
              "type": "string",
              "location": "path"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "type": "boolean"
            },
            "permissionId": {
              "type": "string",
              "description": "The ID for the permission.",
              "required": true,
              "location": "path"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "removeExpiration": {
              "default": "false",
              "type": "boolean",
              "description": "Whether to remove the expiration date.",
              "location": "query"
            },
            "transferOwnership": {
              "location": "query",
              "type": "boolean",
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "default": "false"
            }
          },
          "path": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "PUT",
          "id": "drive.permissions.update",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ]
        },
        "get": {
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "supportsTeamDrives": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true
            },
            "permissionId": {
              "type": "string",
              "location": "path",
              "description": "The ID for the permission.",
              "required": true
            },
            "supportsAllDrives": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "description": "Gets a permission by ID.",
          "response": {
            "$ref": "Permission"
          },
          "path": "files/{fileId}/permissions/{permissionId}",
          "id": "drive.permissions.get",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ]
        },
        "insert": {
          "parameters": {
            "supportsAllDrives": {
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "location": "query",
              "default": "false"
            },
            "emailMessage": {
              "type": "string",
              "description": "A plain text custom message to include in notification emails.",
              "location": "query"
            },
            "fileId": {
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "type": "string",
              "required": true
            },
            "enforceSingleParent": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: See `moveToNewOwnersRoot` for details."
            },
            "sendNotificationEmails": {
              "type": "boolean",
              "location": "query",
              "default": "true",
              "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the `role` is `owner`."
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query"
            },
            "moveToNewOwnersRoot": {
              "default": "false",
              "type": "boolean",
              "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed.",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "flatPath": "files/{fileId}/permissions",
          "description": "Inserts a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "Permission"
          },
          "id": "drive.permissions.insert",
          "parameterOrder": [
            "fileId"
          ],
          "path": "files/{fileId}/permissions",
          "request": {
            "$ref": "Permission"
          }
        },
        "getIdForEmail": {
          "description": "Returns the permission ID for an email address.",
          "parameters": {
            "email": {
              "description": "The email address for which to return a permission ID",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "email"
          ],
          "id": "drive.permissions.getIdForEmail",
          "flatPath": "permissionIds/{email}",
          "response": {
            "$ref": "PermissionId"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "path": "permissionIds/{email}"
        }
      }
    },
    "apps": {
      "methods": {
        "get": {
          "parameters": {
            "appId": {
              "description": "The ID of the app.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific app.",
          "path": "apps/{appId}",
          "parameterOrder": [
            "appId"
          ],
          "httpMethod": "GET",
          "id": "drive.apps.get",
          "flatPath": "apps/{appId}",
          "response": {
            "$ref": "App"
          }
        },
        "list": {
          "parameters": {
            "languageCode": {
              "type": "string",
              "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
              "location": "query"
            },
            "appFilterMimeTypes": {
              "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If `appFilterExtensions` are provided as well, the result is a union of the two resulting app lists.",
              "type": "string",
              "location": "query",
              "default": ""
            },
            "appFilterExtensions": {
              "default": "",
              "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If `appFilterMimeTypes` are provided as well, the result is a union of the two resulting app lists.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "apps",
          "parameterOrder": [],
          "id": "drive.apps.list",
          "description": "Lists a user's installed apps.",
          "scopes": [
            "https://www.googleapis.com/auth/drive.apps.readonly"
          ],
          "response": {
            "$ref": "AppList"
          },
          "path": "apps"
        }
      }
    },
    "teamdrives": {
      "methods": {
        "list": {
          "flatPath": "teamdrives",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [],
          "description": "Deprecated: Use `drives.list` instead.",
          "path": "teamdrives",
          "id": "drive.teamdrives.list",
          "parameters": {
            "useDomainAdminAccess": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned."
            },
            "maxResults": {
              "description": "Maximum number of Team Drives to return.",
              "type": "integer",
              "minimum": "1",
              "default": "10",
              "location": "query",
              "maximum": "100",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Page token for Team Drives."
            },
            "q": {
              "location": "query",
              "type": "string",
              "description": "Query string for searching Team Drives."
            }
          },
          "response": {
            "$ref": "TeamDriveList"
          },
          "httpMethod": "GET"
        },
        "insert": {
          "response": {
            "$ref": "TeamDrive"
          },
          "parameterOrder": [
            "requestId"
          ],
          "path": "teamdrives",
          "description": "Deprecated: Use `drives.insert` instead.",
          "request": {
            "$ref": "TeamDrive"
          },
          "flatPath": "teamdrives",
          "id": "drive.teamdrives.insert",
          "parameters": {
            "requestId": {
              "type": "string",
              "required": true,
              "location": "query",
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "httpMethod": "POST"
        },
        "delete": {
          "parameterOrder": [
            "teamDriveId"
          ],
          "parameters": {
            "teamDriveId": {
              "required": true,
              "type": "string",
              "description": "The ID of the Team Drive",
              "location": "path"
            }
          },
          "description": "Deprecated: Use `drives.delete` instead.",
          "flatPath": "teamdrives/{teamDriveId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "httpMethod": "DELETE",
          "path": "teamdrives/{teamDriveId}",
          "id": "drive.teamdrives.delete"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "useDomainAdminAccess": {
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "location": "query",
              "type": "boolean"
            },
            "teamDriveId": {
              "location": "path",
              "description": "The ID of the Team Drive",
              "type": "string",
              "required": true
            }
          },
          "description": "Deprecated: Use `drives.get` instead.",
          "flatPath": "teamdrives/{teamDriveId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "teamDriveId"
          ],
          "id": "drive.teamdrives.get",
          "response": {
            "$ref": "TeamDrive"
          },
          "path": "teamdrives/{teamDriveId}"
        },
        "update": {
          "request": {
            "$ref": "TeamDrive"
          },
          "parameterOrder": [
            "teamDriveId"
          ],
          "response": {
            "$ref": "TeamDrive"
          },
          "parameters": {
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "teamDriveId": {
              "location": "path",
              "description": "The ID of the Team Drive",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "teamdrives/{teamDriveId}",
          "httpMethod": "PUT",
          "path": "teamdrives/{teamDriveId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "id": "drive.teamdrives.update",
          "description": "Deprecated: Use `drives.update` instead."
        }
      }
    },
    "properties": {
      "methods": {
        "update": {
          "httpMethod": "PUT",
          "response": {
            "$ref": "Property"
          },
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "propertyKey": {
              "description": "The key of the property.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "visibility": {
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "location": "query",
              "type": "string",
              "default": "private"
            }
          },
          "description": "Updates a property.",
          "path": "files/{fileId}/properties/{propertyKey}",
          "request": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "id": "drive.properties.update",
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "flatPath": "files/{fileId}/properties/{propertyKey}"
        },
        "delete": {
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "id": "drive.properties.delete",
          "parameters": {
            "propertyKey": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The key of the property."
            },
            "visibility": {
              "location": "query",
              "type": "string",
              "default": "private",
              "description": "The visibility of the property."
            },
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "description": "Deletes a property.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ]
        },
        "get": {
          "response": {
            "$ref": "Property"
          },
          "parameters": {
            "propertyKey": {
              "description": "The key of the property.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "visibility": {
              "type": "string",
              "default": "private",
              "location": "query",
              "description": "The visibility of the property."
            },
            "fileId": {
              "type": "string",
              "required": true,
              "description": "The ID of the file.",
              "location": "path"
            }
          },
          "description": "Gets a property by its key.",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.properties.get",
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "httpMethod": "GET",
          "path": "files/{fileId}/properties/{propertyKey}"
        },
        "list": {
          "flatPath": "files/{fileId}/properties",
          "response": {
            "$ref": "PropertyList"
          },
          "path": "files/{fileId}/properties",
          "parameters": {
            "fileId": {
              "type": "string",
              "required": true,
              "description": "The ID of the file.",
              "location": "path"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "GET",
          "description": "Lists a file's properties.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.properties.list"
        },
        "insert": {
          "request": {
            "$ref": "Property"
          },
          "description": "Adds a property to a file, or updates it if it already exists.",
          "id": "drive.properties.insert",
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "Property"
          },
          "path": "files/{fileId}/properties",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "flatPath": "files/{fileId}/properties",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "location": "path",
              "required": true
            }
          }
        },
        "patch": {
          "request": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Updates a property.",
          "path": "files/{fileId}/properties/{propertyKey}",
          "response": {
            "$ref": "Property"
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "parameters": {
            "visibility": {
              "default": "private",
              "location": "query",
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "type": "string"
            },
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "required": true,
              "type": "string"
            },
            "propertyKey": {
              "required": true,
              "description": "The key of the property.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "PATCH",
          "id": "drive.properties.patch"
        }
      }
    },
    "replies": {
      "methods": {
        "list": {
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "parameters": {
            "maxResults": {
              "default": "20",
              "format": "int32",
              "maximum": "100",
              "location": "query",
              "minimum": "0",
              "description": "The maximum number of replies to include in the response, used for paging.",
              "type": "integer"
            },
            "commentId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the comment."
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            },
            "includeDeleted": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "If set, all replies, including deleted replies (with content stripped) will be returned."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
            }
          },
          "description": "Lists all of the replies to a comment.",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/comments/{commentId}/replies",
          "httpMethod": "GET",
          "response": {
            "$ref": "CommentReplyList"
          },
          "id": "drive.replies.list"
        },
        "insert": {
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "request": {
            "$ref": "CommentReply"
          },
          "httpMethod": "POST",
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "id": "drive.replies.insert",
          "path": "files/{fileId}/comments/{commentId}/replies",
          "description": "Creates a new reply to the given comment.",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "parameters": {
            "commentId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the comment."
            },
            "fileId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the file."
            }
          }
        },
        "delete": {
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a reply.",
          "httpMethod": "DELETE",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "id": "drive.replies.delete",
          "parameters": {
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file."
            },
            "replyId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the reply."
            },
            "commentId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the comment."
            }
          }
        },
        "get": {
          "parameters": {
            "commentId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the comment."
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            },
            "replyId": {
              "location": "path",
              "required": true,
              "description": "The ID of the reply.",
              "type": "string"
            },
            "includeDeleted": {
              "description": "If set, this will succeed when retrieving a deleted reply.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "description": "Gets a reply.",
          "id": "drive.replies.get",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "httpMethod": "GET",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "update": {
          "description": "Updates an existing reply.",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "parameters": {
            "commentId": {
              "description": "The ID of the comment.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the file.",
              "required": true
            },
            "replyId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the reply."
            }
          },
          "httpMethod": "PUT",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "id": "drive.replies.update",
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "request": {
            "$ref": "CommentReply"
          }
        },
        "patch": {
          "description": "Updates an existing reply.",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "id": "drive.replies.patch",
          "parameters": {
            "commentId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the comment."
            },
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "type": "string",
              "location": "path"
            },
            "replyId": {
              "location": "path",
              "description": "The ID of the reply.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "request": {
            "$ref": "CommentReply"
          },
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "CommentReply"
          }
        }
      }
    },
    "parents": {
      "methods": {
        "get": {
          "response": {
            "$ref": "ParentReference"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "description": "Gets a specific parent reference.",
          "flatPath": "files/{fileId}/parents/{parentId}",
          "path": "files/{fileId}/parents/{parentId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "parentId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the parent.",
              "required": true
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the file.",
              "required": true
            }
          },
          "id": "drive.parents.get"
        },
        "insert": {
          "httpMethod": "POST",
          "description": "Adds a parent folder for a file.",
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "ParentReference"
          },
          "parameters": {
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "type": "boolean",
              "location": "query",
              "default": "false",
              "deprecated": true
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query"
            },
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "type": "string",
              "required": true
            }
          },
          "request": {
            "$ref": "ParentReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "id": "drive.parents.insert",
          "path": "files/{fileId}/parents",
          "flatPath": "files/{fileId}/parents"
        },
        "delete": {
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "parameters": {
            "fileId": {
              "required": true,
              "type": "string",
              "description": "The ID of the file.",
              "location": "path"
            },
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root.",
              "deprecated": true,
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "parentId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the parent."
            }
          },
          "id": "drive.parents.delete",
          "httpMethod": "DELETE",
          "flatPath": "files/{fileId}/parents/{parentId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Removes a parent from a file.",
          "path": "files/{fileId}/parents/{parentId}"
        },
        "list": {
          "response": {
            "$ref": "ParentList"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId"
          ],
          "description": "Lists a file's parents.",
          "path": "files/{fileId}/parents",
          "flatPath": "files/{fileId}/parents",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.parents.list",
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    },
    "changes": {
      "methods": {
        "list": {
          "description": "Lists the changes for a user or shared drive.",
          "response": {
            "$ref": "ChangeList"
          },
          "httpMethod": "GET",
          "supportsSubscription": true,
          "path": "changes",
          "parameters": {
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "maxResults": {
              "default": "100",
              "type": "integer",
              "format": "int32",
              "minimum": "1",
              "description": "Maximum number of changes to return.",
              "location": "query"
            },
            "includeCorpusRemovals": {
              "location": "query",
              "default": "false",
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "type": "boolean"
            },
            "includeItemsFromAllDrives": {
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "startChangeId": {
              "description": "Deprecated: Use `pageToken` instead.",
              "format": "int64",
              "location": "query",
              "type": "string",
              "deprecated": true
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "includeDeleted": {
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "location": "query",
              "default": "true",
              "type": "boolean"
            },
            "includeTeamDriveItems": {
              "default": "false",
              "deprecated": true,
              "type": "boolean",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "location": "query"
            },
            "spaces": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`."
            },
            "teamDriveId": {
              "location": "query",
              "deprecated": true,
              "type": "string",
              "description": "Deprecated: Use `driveId` instead."
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "default": "false",
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "driveId": {
              "type": "string",
              "location": "query",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method.",
              "location": "query",
              "type": "string"
            },
            "includeSubscribed": {
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "location": "query",
              "default": "true",
              "type": "boolean"
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.changes.list",
          "flatPath": "changes"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.changes.get",
          "parameters": {
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "deprecated": true,
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false"
            },
            "changeId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the change.",
              "required": true
            },
            "supportsTeamDrives": {
              "location": "query",
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "default": "false"
            },
            "driveId": {
              "type": "string",
              "description": "The shared drive from which the change will be returned.",
              "location": "query"
            }
          },
          "description": "Deprecated: Use `changes.getStartPageToken` and `changes.list` to retrieve recent changes.",
          "response": {
            "$ref": "Change"
          },
          "flatPath": "changes/{changeId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "changeId"
          ],
          "path": "changes/{changeId}"
        },
        "getStartPageToken": {
          "parameters": {
            "supportsTeamDrives": {
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query"
            },
            "driveId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned."
            },
            "supportsAllDrives": {
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "teamDriveId": {
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: Use `driveId` instead.",
              "type": "string"
            }
          },
          "path": "changes/startPageToken",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "Gets the starting pageToken for listing future changes.",
          "id": "drive.changes.getStartPageToken",
          "flatPath": "changes/startPageToken",
          "response": {
            "$ref": "StartPageToken"
          }
        },
        "watch": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "description": "Subscribe to changes for a user.",
          "flatPath": "changes/watch",
          "id": "drive.changes.watch",
          "parameterOrder": [],
          "parameters": {
            "includeCorpusRemovals": {
              "location": "query",
              "type": "boolean",
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "default": "false"
            },
            "spaces": {
              "location": "query",
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`.",
              "type": "string"
            },
            "includeSubscribed": {
              "default": "true",
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "location": "query",
              "type": "boolean"
            },
            "startChangeId": {
              "location": "query",
              "type": "string",
              "format": "int64",
              "deprecated": true,
              "description": "Deprecated: Use `pageToken` instead."
            },
            "pageToken": {
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method.",
              "type": "string"
            },
            "includeTeamDriveItems": {
              "deprecated": true,
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "location": "query",
              "default": "false"
            },
            "teamDriveId": {
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `driveId` instead.",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string",
              "location": "query"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of changes to return.",
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "default": "100"
            },
            "includeDeleted": {
              "location": "query",
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "default": "true",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "driveId": {
              "location": "query",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
              "type": "string"
            },
            "includeItemsFromAllDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether both My Drive and shared drive items should be included in results."
            }
          },
          "supportsSubscription": true,
          "httpMethod": "POST",
          "path": "changes/watch",
          "response": {
            "$ref": "Channel"
          }
        }
      }
    },
    "files": {
      "methods": {
        "delete": {
          "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file or be an organizer on the parent for shared drive files.",
          "flatPath": "files/{fileId}",
          "id": "drive.files.delete",
          "path": "files/{fileId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "enforceSingleParent": {
              "deprecated": true,
              "type": "boolean",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "location": "query",
              "default": "false"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file to delete."
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "httpMethod": "DELETE",
          "parameterOrder": [
            "fileId"
          ]
        },
        "generateIds": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "GET",
          "id": "drive.files.generateIds",
          "parameterOrder": [],
          "flatPath": "files/generateIds",
          "description": "Generates a set of file IDs which can be provided in insert or copy requests.",
          "response": {
            "$ref": "GeneratedIds"
          },
          "parameters": {
            "type": {
              "description": "The type of items which the IDs can be used for. Supported values are `files` and `shortcuts`. Note that `shortcuts` are only supported in the `drive` `space`. (Default: `files`)",
              "default": "files",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of IDs to return.",
              "default": "10",
              "location": "query",
              "maximum": "1000",
              "minimum": "1",
              "type": "integer"
            },
            "space": {
              "location": "query",
              "description": "The space in which the IDs can be used to create new files. Supported values are `drive` and `appDataFolder`. (Default: `drive`)",
              "default": "drive",
              "type": "string"
            }
          },
          "path": "files/generateIds"
        },
        "watch": {
          "response": {
            "$ref": "Channel"
          },
          "supportsSubscription": true,
          "flatPath": "files/{fileId}/watch",
          "path": "files/{fileId}/watch",
          "httpMethod": "POST",
          "request": {
            "$ref": "Channel",
            "parameterName": "resource"
          },
          "description": "Subscribes to changes to a file.",
          "parameterOrder": [
            "fileId"
          ],
          "parameters": {
            "supportsTeamDrives": {
              "type": "boolean",
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false"
            },
            "acknowledgeAbuse": {
              "default": "false",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "location": "query",
              "type": "boolean"
            },
            "projection": {
              "type": "string",
              "location": "query",
              "description": "Deprecated: This parameter has no function.",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "deprecated": true
            },
            "includeLabels": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "revisionId": {
              "type": "string",
              "location": "query",
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified."
            },
            "updateViewedDate": {
              "type": "boolean",
              "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
              "location": "query",
              "deprecated": true,
              "default": "false"
            },
            "fileId": {
              "location": "path",
              "description": "The ID for the file in question.",
              "required": true,
              "type": "string"
            }
          },
          "id": "drive.files.watch",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "update": {
          "path": "files/{fileId}",
          "description": " Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads).",
          "flatPath": "files/{fileId}",
          "parameters": {
            "fileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the file to update."
            },
            "setModifiedDate": {
              "type": "boolean",
              "location": "query",
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "default": "false"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "default": "false",
              "location": "query",
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "timedTextTrackName": {
              "type": "string",
              "description": "The timed text track name.",
              "location": "query"
            },
            "supportsTeamDrives": {
              "default": "false",
              "deprecated": true,
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query"
            },
            "removeParents": {
              "type": "string",
              "location": "query",
              "description": "Comma-separated list of parent IDs to remove."
            },
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "ocr": {
              "default": "false",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "type": "boolean",
              "location": "query"
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the content as indexable text.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            },
            "addParents": {
              "description": "Comma-separated list of parent IDs to add.",
              "type": "string",
              "location": "query"
            },
            "updateViewedDate": {
              "default": "true",
              "description": "Whether to update the view date after successfully updating the file.",
              "type": "boolean",
              "location": "query"
            },
            "newRevision": {
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045).",
              "type": "boolean",
              "default": "true",
              "location": "query"
            },
            "modifiedDateBehavior": {
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "type": "string",
              "location": "query",
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ],
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`."
            },
            "convert": {
              "type": "boolean",
              "default": "false",
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: This parameter has no function."
            },
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            }
          },
          "id": "drive.files.update",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ],
          "supportsMediaUpload": true,
          "response": {
            "$ref": "File"
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "File"
          },
          "httpMethod": "PUT",
          "mediaUpload": {
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
              },
              "simple": {
                "path": "/upload/drive/v2/files/{fileId}",
                "multipart": true
              }
            },
            "accept": [
              "*/*"
            ],
            "maxSize": "5497558138880"
          }
        },
        "trash": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": " Moves a file to the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files. Only the owner may trash a file. The trashed item is excluded from all `files.list` responses returned for any user who doesn't own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file. *Note:* Files moved to the trash still appear by default in results from the `files.list` method. To permanently remove a file, use `files.delete`.",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to trash.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "deprecated": true,
              "default": "false"
            }
          },
          "response": {
            "$ref": "File"
          },
          "flatPath": "files/{fileId}/trash",
          "httpMethod": "POST",
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.files.trash",
          "path": "files/{fileId}/trash"
        },
        "list": {
          "flatPath": "files",
          "response": {
            "$ref": "FileList"
          },
          "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.",
          "id": "drive.files.list",
          "path": "files",
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "default": "false",
              "deprecated": true
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string",
              "location": "query"
            },
            "includeTeamDriveItems": {
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "default": "false",
              "location": "query"
            },
            "q": {
              "location": "query",
              "description": "Query string for searching files.",
              "type": "string"
            },
            "driveId": {
              "type": "string",
              "description": "ID of the shared drive to search.",
              "location": "query"
            },
            "projection": {
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "deprecated": true,
              "type": "string",
              "location": "query",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "description": "Deprecated: This parameter has no function."
            },
            "teamDriveId": {
              "type": "string",
              "description": "Deprecated: Use `driveId` instead.",
              "deprecated": true,
              "location": "query"
            },
            "corpora": {
              "type": "string",
              "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are `default`, `domain`, `drive` and `allDrives`. Prefer `default` or `drive` to `allDrives` for efficiency.",
              "location": "query"
            },
            "supportsAllDrives": {
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean"
            },
            "pageToken": {
              "description": "Page token for files.",
              "location": "query",
              "type": "string"
            },
            "includeItemsFromAllDrives": {
              "type": "boolean",
              "location": "query",
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false"
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, `title`, and `title_natural`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored."
            },
            "maxResults": {
              "default": "100",
              "minimum": "0",
              "format": "int32",
              "location": "query",
              "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",
              "type": "integer"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, and `appDataFolder`.",
              "location": "query",
              "type": "string"
            },
            "corpus": {
              "enum": [
                "DEFAULT",
                "DOMAIN"
              ],
              "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
              ],
              "type": "string",
              "description": "Deprecated: The body of items (files/documents) to which the query applies. Use `corpora` instead.",
              "location": "query",
              "deprecated": true
            }
          }
        },
        "patch": {
          "response": {
            "$ref": "File"
          },
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}",
          "parameters": {
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions. Note that this field is ignored if there is no payload in the request.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "deprecated": true,
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "convert": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: This parameter has no function.",
              "deprecated": true
            },
            "includeLabels": {
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query"
            },
            "addParents": {
              "location": "query",
              "type": "string",
              "description": "Comma-separated list of parent IDs to add."
            },
            "newRevision": {
              "default": "true",
              "location": "query",
              "type": "boolean",
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045). Note that this field is ignored if there is no payload in the request."
            },
            "ocr": {
              "location": "query",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "type": "boolean",
              "default": "false"
            },
            "timedTextLanguage": {
              "type": "string",
              "location": "query",
              "description": "The language of the timed text."
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "type": "string",
              "location": "query"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "type": "string",
              "location": "query"
            },
            "modifiedDateBehavior": {
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`.",
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ],
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "location": "query",
              "type": "string"
            },
            "updateViewedDate": {
              "location": "query",
              "default": "true",
              "description": "Whether to update the view date after successfully updating the file.",
              "type": "boolean"
            },
            "removeParents": {
              "type": "string",
              "description": "Comma-separated list of parent IDs to remove.",
              "location": "query"
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "type": "string",
              "location": "query"
            },
            "fileId": {
              "location": "path",
              "required": true,
              "description": "The ID of the file to update.",
              "type": "string"
            },
            "supportsTeamDrives": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "setModifiedDate": {
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "supportsAllDrives": {
              "location": "query",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false"
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the content as indexable text.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "description": "Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might change automatically, such as modifiedDate. This method supports patch semantics.",
          "path": "files/{fileId}",
          "httpMethod": "PATCH",
          "id": "drive.files.patch",
          "request": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ]
        },
        "listLabels": {
          "flatPath": "files/{fileId}/listLabels",
          "id": "drive.files.listLabels",
          "parameters": {
            "fileId": {
              "required": true,
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "maximum": "100",
              "format": "int32",
              "location": "query",
              "default": "100",
              "minimum": "1",
              "type": "integer",
              "description": "The maximum number of labels to return per page. When not set, defaults to 100."
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/listLabels",
          "response": {
            "$ref": "LabelList"
          },
          "description": "Lists the labels on a file."
        },
        "emptyTrash": {
          "path": "files/trash",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "flatPath": "files/trash",
          "id": "drive.files.emptyTrash",
          "description": "Permanently deletes all of the user's trashed files.",
          "parameterOrder": [],
          "parameters": {
            "enforceSingleParent": {
              "location": "query",
              "type": "boolean",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "deprecated": true,
              "default": "false"
            },
            "driveId": {
              "type": "string",
              "location": "query",
              "description": "If set, empties the trash of the provided shared drive."
            }
          },
          "httpMethod": "DELETE"
        },
        "insert": {
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "maxSize": "5497558138880",
            "protocols": {
              "simple": {
                "path": "/upload/drive/v2/files",
                "multipart": true
              },
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
              }
            }
          },
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "supportsTeamDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "useContentAsIndexableText": {
              "default": "false",
              "type": "boolean",
              "description": "Whether to use the content as indexable text.",
              "location": "query"
            },
            "includeLabels": {
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "ocr": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false"
            },
            "ocrLanguage": {
              "location": "query",
              "type": "string",
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "pinned": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions."
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "location": "query",
              "type": "string"
            },
            "convert": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether to convert this file to the corresponding Docs Editors format."
            },
            "timedTextLanguage": {
              "type": "string",
              "location": "query",
              "description": "The language of the timed text."
            },
            "enforceSingleParent": {
              "description": "Deprecated: Creating files in multiple folders is no longer supported.",
              "deprecated": true,
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "visibility": {
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ],
              "default": "DEFAULT",
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ],
              "location": "query",
              "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
              "type": "string"
            }
          },
          "supportsMediaUpload": true,
          "path": "files",
          "flatPath": "files",
          "id": "drive.files.insert",
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": " Inserts a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.insert` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `title` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"title\": \"cat.jpg\"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file's MIME type.",
          "request": {
            "$ref": "File"
          }
        },
        "modifyLabels": {
          "response": {
            "$ref": "ModifyLabelsResponse"
          },
          "path": "files/{fileId}/modifyLabels",
          "httpMethod": "POST",
          "flatPath": "files/{fileId}/modifyLabels",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "id": "drive.files.modifyLabels",
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "ModifyLabelsRequest"
          },
          "description": "Modifies the set of labels applied to a file. Returns a list of the labels that were added or modified.",
          "parameters": {
            "fileId": {
              "type": "string",
              "description": "The ID of the file to which the labels belong.",
              "location": "path",
              "required": true
            }
          }
        },
        "get": {
          "supportsSubscription": true,
          "description": " Gets a file's metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/drive/api/reference/rest/v2/files/export) instead. For more information, see [Download & export files](/drive/api/guides/manage-downloads).",
          "parameterOrder": [
            "fileId"
          ],
          "useMediaDownloadService": true,
          "httpMethod": "GET",
          "response": {
            "$ref": "File"
          },
          "parameters": {
            "fileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID for the file in question."
            },
            "revisionId": {
              "type": "string",
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
              "location": "query"
            },
            "supportsAllDrives": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "includeLabels": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "updateViewedDate": {
              "default": "false",
              "deprecated": true,
              "description": "Deprecated: Use `files.update` with `modifiedDateBehavior=noChange, updateViewedDate=true` and an empty request body.",
              "type": "boolean",
              "location": "query"
            },
            "acknowledgeAbuse": {
              "default": "false",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "type": "boolean",
              "location": "query"
            },
            "projection": {
              "description": "Deprecated: This parameter has no function.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "enum": [
                "BASIC",
                "FULL"
              ],
              "deprecated": true
            },
            "supportsTeamDrives": {
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "deprecated": true
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "drive.files.get",
          "flatPath": "files/{fileId}",
          "supportsMediaDownload": true,
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}"
        },
        "export": {
          "parameterOrder": [
            "fileId",
            "mimeType"
          ],
          "id": "drive.files.export",
          "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "files/{fileId}/export",
          "httpMethod": "GET",
          "path": "files/{fileId}/export",
          "useMediaDownloadService": true,
          "supportsMediaDownload": true,
          "parameters": {
            "mimeType": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "Required. The MIME type of the format requested for this export."
            },
            "fileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the file."
            }
          }
        },
        "untrash": {
          "flatPath": "files/{fileId}/untrash",
          "parameterOrder": [
            "fileId"
          ],
          "description": "Restores a file from the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files. Only the owner may untrash a file.",
          "id": "drive.files.untrash",
          "parameters": {
            "includeLabels": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "fileId": {
              "description": "The ID of the file to untrash.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "files/{fileId}/untrash",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "File"
          }
        },
        "copy": {
          "id": "drive.files.copy",
          "request": {
            "$ref": "File"
          },
          "description": "Creates a copy of the specified file.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.photos.readonly"
          ],
          "parameters": {
            "pinned": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
              "default": "false"
            },
            "timedTextTrackName": {
              "type": "string",
              "description": "The timed text track name.",
              "location": "query"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Copying files into multiple folders is no longer supported. Use shortcuts instead.",
              "deprecated": true,
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "timedTextLanguage": {
              "location": "query",
              "type": "string",
              "description": "The language of the timed text."
            },
            "convert": {
              "default": "false",
              "location": "query",
              "description": "Whether to convert this file to the corresponding Docs Editors format.",
              "type": "boolean"
            },
            "visibility": {
              "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ],
              "type": "string",
              "default": "DEFAULT",
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ],
              "location": "query"
            },
            "ocr": {
              "location": "query",
              "default": "false",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "ocrLanguage": {
              "location": "query",
              "description": "If `ocr` is true, hints at the language to use. Valid values are BCP 47 codes.",
              "type": "string"
            },
            "fileId": {
              "required": true,
              "type": "string",
              "description": "The ID of the file to copy.",
              "location": "path"
            }
          },
          "path": "files/{fileId}/copy",
          "flatPath": "files/{fileId}/copy",
          "httpMethod": "POST",
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "File"
          }
        },
        "touch": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "response": {
            "$ref": "File"
          },
          "description": "Set the file's updated time to the current server time.",
          "httpMethod": "POST",
          "id": "drive.files.touch",
          "parameters": {
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file to update."
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "type": "string",
              "location": "query"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "deprecated": true,
              "location": "query",
              "type": "boolean"
            }
          },
          "path": "files/{fileId}/touch",
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}/touch"
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "description": "The Google Drive API allows clients to access resources from Google Drive.",
  "ownerDomain": "google.com",
  "version": "v2",
  "documentationLink": "https://developers.google.com/drive/",
  "rootUrl": "https://www.googleapis.com/",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive.appdata": {
          "description": "See, create, and delete its own configuration data in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/drive.metadata.readonly": {
          "description": "See information about your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.scripts": {
          "description": "Modify your Google Apps Script scripts' behavior"
        },
        "https://www.googleapis.com/auth/drive.metadata": {
          "description": "View and manage metadata of files in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.photos.readonly": {
          "description": "View the photos, videos and albums in your Google Photos"
        },
        "https://www.googleapis.com/auth/drive.apps.readonly": {
          "description": "View your Google Drive apps"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        }
      }
    }
  },
  "revision": "20230714",
  "name": "drive",
  "baseUrl": "https://www.googleapis.com/drive/v2/",
  "servicePath": "drive/v2/",
  "ownerName": "Google",
  "basePath": "/drive/v2/"
}

{
  "baseUrl": "https://www.googleapis.com/drive/v2/",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  },
  "schemas": {
    "TeamDrive": {
      "id": "TeamDrive",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this Team Drive which is also the ID of the top level folder of this Team Drive."
        },
        "orgUnitId": {
          "type": "string",
          "description": "The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`."
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "canListChildren": {
              "description": "Whether the current user can list the children of folders in this Team Drive.",
              "type": "boolean"
            },
            "canShare": {
              "description": "Whether the current user can share files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canComment": {
              "type": "boolean",
              "description": "Whether the current user can comment on files in this Team Drive."
            },
            "canChangeTeamDriveBackground": {
              "description": "Whether the current user can change the background of this Team Drive.",
              "type": "boolean"
            },
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Whether the current user can change the `domainUsersOnly` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Whether the current user can copy files in this Team Drive.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `copyRequiresWriterPermission` restriction of this Team Drive."
            },
            "canRemoveChildren": {
              "type": "boolean",
              "description": "Deprecated: Use `canDeleteChildren` or `canTrashChildren` instead."
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "description": "Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Whether the current user can read the revisions resource of files in this Team Drive.",
              "type": "boolean"
            },
            "canEdit": {
              "type": "boolean",
              "description": "Whether the current user can edit files in this Team Drive"
            },
            "canTrashChildren": {
              "type": "boolean",
              "description": "Whether the current user can trash children from folders in this Team Drive."
            },
            "canDeleteTeamDrive": {
              "type": "boolean",
              "description": "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive."
            },
            "canManageMembers": {
              "type": "boolean",
              "description": "Whether the current user can add members to this Team Drive or remove them or change their role."
            },
            "canDownload": {
              "type": "boolean",
              "description": "Whether the current user can download files in this Team Drive."
            },
            "canRenameTeamDrive": {
              "description": "Whether the current user can rename this Team Drive.",
              "type": "boolean"
            },
            "canRename": {
              "type": "boolean",
              "description": "Whether the current user can rename files or folders in this Team Drive."
            },
            "canAddChildren": {
              "description": "Whether the current user can add children to folders in this Team Drive.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Whether the current user can delete children from folders in this Team Drive.",
              "type": "boolean"
            },
            "canResetTeamDriveRestrictions": {
              "type": "boolean",
              "description": "Whether the current user can reset the Team Drive restrictions to defaults."
            },
            "canChangeTeamMembersOnlyRestriction": {
              "description": "Whether the current user can change the `teamMembersOnly` restriction of this Team Drive.",
              "type": "boolean"
            }
          },
          "description": "Capabilities the current user has on this Team Drive."
        },
        "kind": {
          "type": "string",
          "description": "This is always `drive#teamDrive`",
          "default": "drive#teamDrive"
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `teamDriveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.teamdrives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "restrictions": {
          "description": "A set of restrictions that apply to this Team Drive or items inside this Team Drive.",
          "properties": {
            "sharingFoldersRequiresOrganizerPermission": {
              "type": "boolean",
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders."
            },
            "teamMembersOnly": {
              "type": "boolean",
              "description": "Whether access to items inside this Team Drive is restricted to members of this Team Drive."
            },
            "adminManagedRestrictions": {
              "type": "boolean",
              "description": "Whether administrative privileges on this Team Drive are required to modify restrictions."
            },
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this Team Drive.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "type": "boolean",
              "description": "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive."
            }
          },
          "type": "object"
        },
        "name": {
          "annotations": {
            "required": [
              "drive.teamdrives.insert"
            ]
          },
          "description": "The name of this Team Drive.",
          "type": "string"
        },
        "backgroundImageLink": {
          "type": "string",
          "description": "A short-lived link to this Team Drive's background image."
        },
        "colorRgb": {
          "type": "string",
          "description": "The color of this Team Drive as an RGB hex string. It can only be set on a `drive.teamdrives.update` request that does not set `themeId`."
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on `drive.teamdrives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "type": "object",
          "properties": {
            "width": {
              "format": "float",
              "type": "number",
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high."
            },
            "xCoordinate": {
              "format": "float",
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "type": "number"
            },
            "id": {
              "description": "The ID of an image file in Drive to use for the background image.",
              "type": "string"
            },
            "yCoordinate": {
              "type": "number",
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "format": "float"
            }
          }
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "description": "The time at which the Team Drive was created (RFC 3339 date-time)."
        }
      },
      "description": "Deprecated: Use the `drive` collection instead."
    },
    "Channel": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
        },
        "resourceUri": {
          "description": "A version-specific identifier for the watched resource.",
          "type": "string"
        },
        "id": {
          "description": "A UUID or similar unique string that identifies this channel.",
          "type": "string"
        },
        "params": {
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "token": {
          "type": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
        },
        "expiration": {
          "type": "string",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "format": "int64"
        },
        "address": {
          "type": "string",
          "description": "The address where notifications are delivered for this channel."
        },
        "kind": {
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.",
          "default": "api#channel",
          "type": "string"
        },
        "payload": {
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "description": "The type of delivery mechanism used for this channel."
        }
      },
      "description": "A notification channel used to watch for resource changes.",
      "id": "Channel",
      "type": "object"
    },
    "Label": {
      "description": "Representation of a label and label fields.",
      "id": "Label",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the label.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#label`",
          "default": "drive#label",
          "type": "string"
        },
        "revisionId": {
          "description": "The revision ID of the label.",
          "type": "string"
        },
        "fields": {
          "description": "A map of the fields on the label, keyed by the field's ID.",
          "type": "object",
          "additionalProperties": {
            "$ref": "LabelField"
          }
        }
      }
    },
    "Drive": {
      "id": "Drive",
      "type": "object",
      "properties": {
        "colorRgb": {
          "description": "The color of this shared drive as an RGB hex string. It can only be set on a `drive.drives.update` request that does not set `themeId`.",
          "type": "string"
        },
        "orgUnitId": {
          "description": "Output only. The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`.",
          "type": "string"
        },
        "restrictions": {
          "description": "A set of restrictions that apply to this shared drive or items inside this shared drive.",
          "type": "object",
          "properties": {
            "driveMembersOnly": {
              "type": "boolean",
              "description": "Whether access to items inside this shared drive is restricted to its members."
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.",
              "type": "boolean"
            },
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this shared drive.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "type": "boolean",
              "description": "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive."
            },
            "adminManagedRestrictions": {
              "description": "Whether administrative privileges on this shared drive are required to modify restrictions.",
              "type": "boolean"
            }
          }
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on `drive.drives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "type": "object",
          "properties": {
            "yCoordinate": {
              "type": "number",
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "format": "float"
            },
            "id": {
              "type": "string",
              "description": "The ID of an image file in Google Drive to use for the background image."
            },
            "width": {
              "format": "float",
              "type": "number",
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high."
            },
            "xCoordinate": {
              "format": "float",
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "type": "number"
            }
          }
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.drives.insert"
            ]
          },
          "description": "The name of this shared drive."
        },
        "backgroundImageLink": {
          "description": "Output only. A short-lived link to this shared drive's background image.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. The ID of this shared drive which is also the ID of the top level folder of this shared drive."
        },
        "hidden": {
          "type": "boolean",
          "description": "Whether the shared drive is hidden from default view."
        },
        "themeId": {
          "type": "string",
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `driveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.drives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`."
        },
        "capabilities": {
          "description": "Output only. Capabilities the current user has on this shared drive.",
          "properties": {
            "canManageMembers": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add members to this shared drive or remove them or change their role."
            },
            "canChangeDriveMembersOnlyRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive."
            },
            "canEdit": {
              "description": "Output only. Whether the current user can edit files in this shared drive",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Output only. Whether the current user can copy files in this shared drive.",
              "type": "boolean"
            },
            "canRename": {
              "description": "Output only. Whether the current user can rename files or folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive."
            },
            "canShare": {
              "type": "boolean",
              "description": "Output only. Whether the current user can share files or folders in this shared drive."
            },
            "canResetDriveRestrictions": {
              "type": "boolean",
              "description": "Output only. Whether the current user can reset the shared drive restrictions to defaults."
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive."
            },
            "canDownload": {
              "description": "Output only. Whether the current user can download files in this shared drive.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children from folders in this shared drive.",
              "type": "boolean"
            },
            "canDeleteDrive": {
              "description": "Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children from folders in this shared drive.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on files in this shared drive.",
              "type": "boolean"
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeDriveBackground": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the background of this shared drive."
            },
            "canRenameDrive": {
              "description": "Output only. Whether the current user can rename this shared drive.",
              "type": "boolean"
            },
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the revisions resource of files in this shared drive."
            },
            "canAddChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add children to folders in this shared drive."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Output only. This is always `drive#drive`",
          "default": "drive#drive"
        },
        "createdDate": {
          "type": "string",
          "description": "The time at which the shared drive was created (RFC 3339 date-time).",
          "format": "date-time"
        }
      },
      "description": "Representation of a shared drive."
    },
    "Comment": {
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Output only. The file which this comment is addressing."
        },
        "anchor": {
          "description": "A region of the document represented as a JSON string. For details on defining anchor properties, refer to [Add comments and replies](https://developers.google.com/drive/api/v2/manage-comments).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "drive#comment",
          "description": "Output only. This is always `drive#comment`."
        },
        "htmlContent": {
          "description": "Output only. HTML formatted content for this comment.",
          "type": "string"
        },
        "replies": {
          "description": "Output only. Replies to this post.",
          "type": "array",
          "items": {
            "$ref": "CommentReply"
          }
        },
        "author": {
          "description": "Output only. The author of the comment. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "modifiedDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date when this comment or any of its replies were last modified."
        },
        "createdDate": {
          "description": "The date when this comment was first created.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Output only. The status of this comment. Status can be changed by posting a reply to a comment with the desired status. * `open` - The comment is still open. * `resolved` - The comment has been resolved by one of its replies.",
          "type": "string"
        },
        "content": {
          "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
          "annotations": {
            "required": [
              "drive.comments.insert",
              "drive.comments.patch",
              "drive.comments.update"
            ]
          },
          "type": "string"
        },
        "context": {
          "properties": {
            "value": {
              "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about.",
              "type": "string"
            },
            "type": {
              "type": "string",
              "description": "The MIME type of the context snippet."
            }
          },
          "type": "object",
          "description": "The context of the file which is being commented on."
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
        },
        "fileTitle": {
          "type": "string",
          "description": "Output only. The title of the file which this comment is addressing."
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this comment."
        },
        "commentId": {
          "type": "string",
          "description": "Output only. The ID of the comment."
        }
      },
      "description": "A comment on a file in Google Drive.",
      "id": "Comment",
      "type": "object"
    },
    "Change": {
      "description": "Representation of a change to a file or shared drive.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "A link back to this change.",
          "type": "string"
        },
        "deleted": {
          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.",
          "type": "boolean"
        },
        "modificationDate": {
          "format": "date-time",
          "description": "The time of this modification.",
          "type": "string"
        },
        "drive": {
          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.",
          "$ref": "Drive"
        },
        "teamDrive": {
          "description": "Deprecated: Use `drive` instead.",
          "$ref": "TeamDrive"
        },
        "driveId": {
          "description": "The ID of the shared drive associated with this change.",
          "type": "string"
        },
        "type": {
          "description": "Deprecated: Use `changeType` instead.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the change."
        },
        "fileId": {
          "description": "The ID of the file associated with this change.",
          "type": "string"
        },
        "teamDriveId": {
          "description": "Deprecated: Use `driveId` instead.",
          "type": "string"
        },
        "file": {
          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes.",
          "$ref": "File"
        },
        "changeType": {
          "description": "The type of the change. Possible values are `file` and `drive`.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "drive#change",
          "description": "This is always `drive#change`."
        }
      },
      "id": "Change"
    },
    "AppList": {
      "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
      "id": "AppList",
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "App"
          },
          "type": "array",
          "description": "The list of apps."
        },
        "defaultAppIds": {
          "type": "array",
          "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
          "items": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "kind": {
          "description": "This is always `drive#appList`.",
          "default": "drive#appList",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "CommentReplyList": {
      "properties": {
        "items": {
          "items": {
            "$ref": "CommentReply"
          },
          "type": "array",
          "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of replies."
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "kind": {
          "type": "string",
          "default": "drive#commentReplyList",
          "description": "This is always `drive#commentReplyList`."
        }
      },
      "id": "CommentReplyList",
      "type": "object",
      "description": "A list of replies to a comment on a file in Google Drive."
    },
    "User": {
      "description": "Information about a Drive user.",
      "properties": {
        "emailAddress": {
          "description": "Output only. The email address of the user.",
          "type": "string"
        },
        "permissionId": {
          "description": "Output only. The user's ID as visible in the permissions collection.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#user`.",
          "type": "string",
          "default": "drive#user"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. A plain text displayable name for this user."
        },
        "isAuthenticatedUser": {
          "description": "Output only. Whether this user is the same as the authenticated user for whom the request was made.",
          "type": "boolean"
        },
        "picture": {
          "description": "Output only. The user's profile picture.",
          "properties": {
            "url": {
              "description": "Output Only. A URL that points to a profile picture of this user.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "id": "User",
      "type": "object"
    },
    "ChangeList": {
      "properties": {
        "largestChangeId": {
          "type": "string",
          "format": "int64",
          "description": "The current largest change ID."
        },
        "kind": {
          "type": "string",
          "description": "This is always `drive#changeList`.",
          "default": "drive#changeList"
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of changes."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Change"
          },
          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "newStartPageToken": {
          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      },
      "type": "object",
      "id": "ChangeList",
      "description": "A list of changes for a user."
    },
    "ChildList": {
      "description": "A list of children of a file.",
      "type": "object",
      "id": "ChildList",
      "properties": {
        "kind": {
          "description": "This is always `drive#childList`.",
          "default": "drive#childList",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "ChildReference"
          },
          "type": "array",
          "description": "The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "nextPageToken": {
          "description": "The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "nextLink": {
          "description": "A link to the next page of children.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        }
      }
    },
    "Property": {
      "id": "Property",
      "description": "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property",
      "properties": {
        "visibility": {
          "description": "The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. The link back to this property.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Output only. This is always `drive#property`.",
          "default": "drive#property"
        },
        "key": {
          "description": "The key of this property.",
          "annotations": {
            "required": [
              "drive.properties.insert"
            ]
          },
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The value of this property."
        },
        "etag": {
          "type": "string",
          "description": "Output only. ETag of the property."
        }
      },
      "type": "object"
    },
    "About": {
      "properties": {
        "domainSharingPolicy": {
          "description": "The domain sharing policy for the current user. Possible values are: * `allowed` * `allowedWithWarning` * `incomingOnly` * `disallowed`",
          "type": "string"
        },
        "quotaBytesUsed": {
          "format": "int64",
          "description": "The number of quota bytes used by Google Drive.",
          "type": "string"
        },
        "remainingChangeIds": {
          "type": "string",
          "format": "int64",
          "description": "The number of remaining change ids, limited to no more than 2500."
        },
        "permissionId": {
          "type": "string",
          "description": "The current user's ID as visible in the permissions collection."
        },
        "kind": {
          "default": "drive#about",
          "type": "string",
          "description": "This is always `drive#about`."
        },
        "canCreateTeamDrives": {
          "description": "Deprecated: Use `canCreateDrives` instead.",
          "type": "boolean"
        },
        "quotaType": {
          "description": "The type of the user's storage quota. Possible values are: * `LIMITED` * `UNLIMITED`",
          "type": "string"
        },
        "teamDriveThemes": {
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Deprecated: Use `driveThemes/id` instead.",
                "type": "string"
              },
              "backgroundImageLink": {
                "description": "Deprecated: Use `driveThemes/backgroundImageLink` instead.",
                "type": "string"
              },
              "colorRgb": {
                "type": "string",
                "description": "Deprecated: Use `driveThemes/colorRgb` instead."
              }
            }
          },
          "type": "array",
          "description": "Deprecated: Use `driveThemes` instead."
        },
        "exportFormats": {
          "type": "array",
          "description": "The allowable export formats.",
          "items": {
            "type": "object",
            "properties": {
              "targets": {
                "description": "The possible content types to convert to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "source": {
                "type": "string",
                "description": "The content type to convert from."
              }
            }
          }
        },
        "folderColorPalette": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The palette of allowable folder colors as RGB hex strings."
        },
        "maxUploadSizes": {
          "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The file type."
              },
              "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
              }
            }
          }
        },
        "quotaBytesTotal": {
          "format": "int64",
          "type": "string",
          "description": "The total number of quota bytes. This is only relevant when quotaType is LIMITED."
        },
        "quotaBytesByService": {
          "items": {
            "type": "object",
            "properties": {
              "bytesUsed": {
                "description": "The storage quota bytes used by the service.",
                "format": "int64",
                "type": "string"
              },
              "serviceName": {
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS.",
                "type": "string"
              }
            }
          },
          "description": "The amount of storage quota used by different Google services.",
          "type": "array"
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the item."
        },
        "selfLink": {
          "description": "A link back to this item.",
          "type": "string"
        },
        "canCreateDrives": {
          "type": "boolean",
          "description": "Whether the user can create shared drives."
        },
        "isCurrentAppInstalled": {
          "type": "boolean",
          "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
        },
        "languageCode": {
          "type": "string",
          "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
        },
        "name": {
          "type": "string",
          "description": "The name of the current user."
        },
        "driveThemes": {
          "description": "A list of themes that are supported for shared drives.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "backgroundImageLink": {
                "type": "string",
                "description": "A link to this theme's background image."
              },
              "colorRgb": {
                "description": "The color of this theme as an RGB hex string.",
                "type": "string"
              },
              "id": {
                "type": "string",
                "description": "The ID of the theme."
              }
            }
          }
        },
        "features": {
          "items": {
            "type": "object",
            "properties": {
              "featureName": {
                "description": "The name of the feature.",
                "type": "string"
              },
              "featureRate": {
                "description": "The request limit rate for this feature, in queries per second.",
                "type": "number",
                "format": "double"
              }
            }
          },
          "type": "array",
          "description": "List of additional features enabled on this account."
        },
        "quotaBytesUsedAggregate": {
          "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
          "type": "string",
          "format": "int64"
        },
        "additionalRoleInfo": {
          "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
          "type": "array",
          "items": {
            "properties": {
              "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
              },
              "roleSets": {
                "type": "array",
                "items": {
                  "properties": {
                    "additionalRoles": {
                      "type": "array",
                      "description": "The supported additional roles with the primary role.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "primaryRole": {
                      "type": "string",
                      "description": "A primary permission role."
                    }
                  },
                  "type": "object"
                },
                "description": "The supported additional roles per primary role."
              }
            },
            "type": "object"
          }
        },
        "largestChangeId": {
          "type": "string",
          "format": "int64",
          "description": "The largest change id."
        },
        "rootFolderId": {
          "type": "string",
          "description": "The id of the root folder."
        },
        "user": {
          "$ref": "User",
          "description": "The authenticated user."
        },
        "quotaBytesUsedInTrash": {
          "format": "int64",
          "type": "string",
          "description": "The number of quota bytes used by trashed items."
        },
        "importFormats": {
          "description": "The allowable import formats.",
          "items": {
            "type": "object",
            "properties": {
              "targets": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The possible content types to convert to."
              },
              "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
              }
            }
          },
          "type": "array"
        }
      },
      "description": "An item with user information and settings.",
      "id": "About",
      "type": "object"
    },
    "PropertyList": {
      "description": "A collection of properties, key-value pairs that are either public or private to an application.",
      "properties": {
        "selfLink": {
          "description": "The link back to this list.",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Property"
          },
          "description": "The list of properties."
        },
        "kind": {
          "description": "This is always `drive#propertyList`.",
          "default": "drive#propertyList",
          "type": "string"
        }
      },
      "id": "PropertyList",
      "type": "object"
    },
    "LabelModification": {
      "id": "LabelModification",
      "properties": {
        "labelId": {
          "annotations": {
            "required": [
              "drive.files.modifyLabels"
            ]
          },
          "description": "The ID of the label to modify.",
          "type": "string"
        },
        "fieldModifications": {
          "description": "The list of modifications to this label's fields.",
          "items": {
            "$ref": "LabelFieldModification"
          },
          "type": "array"
        },
        "removeLabel": {
          "description": "If true, the label will be removed from the file.",
          "type": "boolean"
        },
        "kind": {
          "default": "drive#labelModification",
          "description": "This is always `drive#labelModification`.",
          "type": "string"
        }
      },
      "description": "A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file.",
      "type": "object"
    },
    "DriveList": {
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "default": "drive#driveList",
          "description": "This is always `drive#driveList`",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "items": {
            "$ref": "Drive"
          }
        }
      },
      "id": "DriveList",
      "description": "A list of shared drives.",
      "type": "object"
    },
    "ModifyLabelsRequest": {
      "id": "ModifyLabelsRequest",
      "type": "object",
      "description": "A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail atomically.",
      "properties": {
        "labelModifications": {
          "description": "The list of modifications to apply to the labels on the file.",
          "items": {
            "$ref": "LabelModification"
          },
          "type": "array"
        },
        "kind": {
          "description": "This is always `drive#modifyLabelsRequest`.",
          "default": "drive#modifyLabelsRequest",
          "type": "string"
        }
      }
    },
    "TeamDriveList": {
      "id": "TeamDriveList",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of Team Drives.",
          "type": "string"
        },
        "items": {
          "description": "The list of Team Drives.",
          "items": {
            "$ref": "TeamDrive"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "drive#teamDriveList",
          "description": "This is always `drive#teamDriveList`"
        }
      },
      "type": "object",
      "description": "A list of Team Drives."
    },
    "CommentList": {
      "properties": {
        "kind": {
          "default": "drive#commentList",
          "type": "string",
          "description": "This is always `drive#commentList`."
        },
        "nextLink": {
          "description": "A link to the next page of comments.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Comment"
          },
          "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      },
      "description": "A list of comments on a file in Google Drive.",
      "type": "object",
      "id": "CommentList"
    },
    "Permission": {
      "description": "A permission for a file.",
      "properties": {
        "view": {
          "type": "string",
          "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value."
        },
        "kind": {
          "default": "drive#permission",
          "type": "string",
          "description": "Output only. This is always `drive#permission`."
        },
        "pendingOwner": {
          "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
          "type": "boolean"
        },
        "withLink": {
          "type": "boolean",
          "description": "Whether the link is required for this permission."
        },
        "role": {
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          },
          "type": "string",
          "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`"
        },
        "additionalRoles": {
          "description": "Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "selfLink": {
          "description": "Output only. A link back to this permission.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          },
          "description": "The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`"
        },
        "domain": {
          "type": "string",
          "description": "Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`."
        },
        "photoLink": {
          "type": "string",
          "description": "Output only. A link to the profile photo, if available."
        },
        "etag": {
          "description": "Output only. The ETag of the permission.",
          "type": "string"
        },
        "deleted": {
          "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored."
        },
        "authKey": {
          "description": "Output only. Deprecated.",
          "type": "string"
        },
        "teamDrivePermissionDetails": {
          "description": "Output only. Deprecated: Use `permissionDetails` instead.",
          "items": {
            "type": "object",
            "properties": {
              "inheritedFrom": {
                "type": "string",
                "description": "Output only. Deprecated: Use `permissionDetails/inheritedFrom` instead."
              },
              "additionalRoles": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "Output only. Deprecated: Use `permissionDetails/additionalRoles` instead."
              },
              "inherited": {
                "description": "Output only. Deprecated: Use `permissionDetails/inherited` instead.",
                "type": "boolean"
              },
              "role": {
                "description": "Output only. Deprecated: Use `permissionDetails/role` instead.",
                "type": "string"
              },
              "teamDrivePermissionType": {
                "description": "Output only. Deprecated: Use `permissionDetails/permissionType` instead.",
                "type": "string"
              }
            }
          },
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name for this permission."
        },
        "expirationDate": {
          "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
          "format": "date-time",
          "type": "string"
        },
        "permissionDetails": {
          "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
          "items": {
            "properties": {
              "inherited": {
                "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                "type": "boolean"
              },
              "role": {
                "type": "string",
                "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `reader`"
              },
              "inheritedFrom": {
                "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                "type": "string"
              },
              "permissionType": {
                "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                "type": "string"
              },
              "additionalRoles": {
                "type": "array",
                "description": "Output only. Additional roles for this user. Only `commenter` is currently possible, though more may be supported in the future.",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          },
          "type": "array",
          "readOnly": true
        },
        "emailAddress": {
          "type": "string",
          "description": "Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`."
        },
        "value": {
          "type": "string",
          "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored."
        }
      },
      "type": "object",
      "id": "Permission"
    },
    "Revision": {
      "description": "A revision of a file.",
      "type": "object",
      "properties": {
        "originalFilename": {
          "description": "Output only. The original filename when this revision was created. This will only be populated on files with content stored in Drive.",
          "type": "string"
        },
        "pinned": {
          "description": "Whether this revision is pinned to prevent automatic purging. If not set, the revision is automatically purged 30 days after newer content is uploaded. This field can only be modified on files with content stored in Drive, excluding Docs Editors files. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter. Pinned revisions are stored indefinitely using additional storage quota, up to a maximum of 200 revisions.",
          "type": "boolean"
        },
        "publishAuto": {
          "type": "boolean",
          "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Docs Editors files."
        },
        "publishedLink": {
          "type": "string",
          "description": "Output only. A link to the published revision. This is only populated for Google Sites files."
        },
        "kind": {
          "type": "string",
          "default": "drive#revision",
          "description": "Output only. This is always `drive#revision`."
        },
        "fileSize": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The size of the revision in bytes. This will only be populated on files with content stored in Drive."
        },
        "selfLink": {
          "description": "Output only. A link back to this revision.",
          "type": "string"
        },
        "exportLinks": {
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lastModifyingUserName": {
          "type": "string",
          "description": "Output only. Name of the last user to modify this revision."
        },
        "mimeType": {
          "type": "string",
          "description": "Output only. The MIME type of the revision."
        },
        "published": {
          "description": "Whether this revision is published. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "md5Checksum": {
          "type": "string",
          "description": "Output only. An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
        },
        "downloadUrl": {
          "description": "Output only. Short term download URL for the file. This will only be populated on files with content stored in Drive.",
          "type": "string"
        },
        "publishedOutsideDomain": {
          "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "modifiedDate": {
          "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
          "format": "date-time",
          "type": "string"
        },
        "lastModifyingUser": {
          "description": "Output only. The last user to modify this revision.",
          "$ref": "User"
        },
        "id": {
          "type": "string",
          "description": "Output only. The ID of the revision."
        },
        "etag": {
          "type": "string",
          "description": "Output only. The ETag of the revision."
        }
      },
      "id": "Revision"
    },
    "ParentList": {
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        },
        "kind": {
          "type": "string",
          "default": "drive#parentList",
          "description": "This is always `drive#parentList`."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "ParentReference"
          },
          "description": "The list of parents."
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the list."
        }
      },
      "id": "ParentList",
      "description": "A list of a file's parents.",
      "type": "object"
    },
    "GeneratedIds": {
      "type": "object",
      "description": "A list of generated IDs which can be provided in insert requests",
      "properties": {
        "space": {
          "type": "string",
          "description": "The type of file that can be created with these IDs."
        },
        "ids": {
          "description": "The IDs generated for the requesting user in the specified space.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "This is always `drive#generatedIds`",
          "type": "string",
          "default": "drive#generatedIds"
        }
      },
      "id": "GeneratedIds"
    },
    "LabelFieldModification": {
      "properties": {
        "fieldId": {
          "description": "The ID of the field to be modified.",
          "type": "string"
        },
        "setUserValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Replaces a `user` field with these new values. The values must be valid email addresses."
        },
        "setTextValues": {
          "items": {
            "type": "string"
          },
          "description": "Sets the value of a `text` field.",
          "type": "array"
        },
        "setIntegerValues": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Replaces the value of an `integer` field with these new values.",
          "type": "array"
        },
        "setDateValues": {
          "type": "array",
          "description": "Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "unsetValues": {
          "description": "Unsets the values for this field.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always `drive#labelFieldModification`.",
          "default": "drive#labelFieldModification",
          "type": "string"
        },
        "setSelectionValues": {
          "description": "Replaces a `selection` field with these new values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "LabelFieldModification",
      "description": "A modification to a label's field.",
      "type": "object"
    },
    "ChildReference": {
      "properties": {
        "id": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.children.insert"
            ]
          },
          "description": "The ID of the child."
        },
        "childLink": {
          "description": "Output only. A link to the child.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Output only. This is always `drive#childReference`.",
          "default": "drive#childReference"
        },
        "selfLink": {
          "description": "Output only. A link back to this reference.",
          "type": "string"
        }
      },
      "description": "A reference to a folder's child.",
      "id": "ChildReference",
      "type": "object"
    },
    "FileList": {
      "type": "object",
      "id": "FileList",
      "properties": {
        "incompleteSearch": {
          "type": "boolean",
          "description": "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"drive\"."
        },
        "kind": {
          "type": "string",
          "default": "drive#fileList",
          "description": "This is always `drive#fileList`."
        },
        "nextLink": {
          "type": "string",
          "description": "A link to the next page of files."
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "File"
          },
          "type": "array",
          "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      },
      "description": "A list of files."
    },
    "App": {
      "id": "App",
      "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
      "properties": {
        "supportsOfflineCreate": {
          "description": "Whether this app supports creating new files when offline.",
          "type": "boolean"
        },
        "objectType": {
          "type": "string",
          "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
        },
        "longDescription": {
          "description": "A long description of the app.",
          "type": "string"
        },
        "installed": {
          "type": "boolean",
          "description": "Whether the app is installed."
        },
        "supportsCreate": {
          "type": "boolean",
          "description": "Whether this app supports creating new objects."
        },
        "name": {
          "type": "string",
          "description": "The name of the app."
        },
        "secondaryFileExtensions": {
          "description": "The list of secondary file extensions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "The ID of the app."
        },
        "primaryMimeTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of primary mime types."
        },
        "authorized": {
          "description": "Whether the app is authorized to access data on the user's Drive.",
          "type": "boolean"
        },
        "primaryFileExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of primary file extensions."
        },
        "useByDefault": {
          "type": "boolean",
          "description": "Whether the app is selected as the default handler for the types it supports."
        },
        "productUrl": {
          "description": "A link to the product listing for this app.",
          "type": "string"
        },
        "kind": {
          "default": "drive#app",
          "description": "This is always `drive#app`.",
          "type": "string"
        },
        "hasDriveWideScope": {
          "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.",
          "type": "boolean"
        },
        "icons": {
          "type": "array",
          "items": {
            "properties": {
              "category": {
                "description": "Category of the icon. Allowed values are: * `application` - icon for the application * `document` - icon for a file associated with the app * `documentShared` - icon for a shared file associated with the app",
                "type": "string"
              },
              "size": {
                "format": "int32",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "type": "integer"
              },
              "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
              }
            },
            "type": "object"
          },
          "description": "The various icons for the app."
        },
        "secondaryMimeTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of secondary mime types."
        },
        "openUrlTemplate": {
          "type": "string",
          "description": "The template url for opening files with this app. The template will contain `{ids}` and/or `{exportIds}` to be replaced by the actual file ids. See Open Files for the full documentation."
        },
        "supportsMultiOpen": {
          "type": "boolean",
          "description": "Whether this app supports opening more than one file."
        },
        "supportsImport": {
          "description": "Whether this app supports importing from Docs Editors.",
          "type": "boolean"
        },
        "shortDescription": {
          "description": "A short description of the app.",
          "type": "string"
        },
        "createUrl": {
          "type": "string",
          "description": "The url to create a new file with this app."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product listing for this app."
        },
        "createInFolderTemplate": {
          "type": "string",
          "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
        }
      },
      "type": "object"
    },
    "CommentReply": {
      "id": "CommentReply",
      "type": "object",
      "description": "A comment on a file in Google Drive.",
      "properties": {
        "author": {
          "description": "Output only. The author of the reply. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "content": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.replies.patch",
              "drive.replies.update"
            ]
          },
          "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen)."
        },
        "replyId": {
          "type": "string",
          "description": "Output only. The ID of the reply."
        },
        "deleted": {
          "description": "Output only. Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.",
          "type": "boolean"
        },
        "htmlContent": {
          "type": "string",
          "description": "Output only. HTML formatted content for this reply."
        },
        "kind": {
          "type": "string",
          "description": "Output only. This is always `drive#commentReply`.",
          "default": "drive#commentReply"
        },
        "verb": {
          "type": "string",
          "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are: * `resolve` - To resolve a comment. * `reopen` - To reopen (un-resolve) a comment."
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date when this reply was last modified.",
          "type": "string"
        },
        "createdDate": {
          "description": "The date when this reply was first created.",
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "StartPageToken": {
      "id": "StartPageToken",
      "type": "object",
      "properties": {
        "kind": {
          "default": "drive#startPageToken",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#startPageToken\"`.",
          "type": "string"
        },
        "startPageToken": {
          "description": "The starting page token for listing changes.",
          "type": "string"
        }
      }
    },
    "File": {
      "properties": {
        "imageMediaMetadata": {
          "properties": {
            "cameraModel": {
              "description": "Output only. The model of the camera used to create the photo.",
              "type": "string"
            },
            "width": {
              "format": "int32",
              "type": "integer",
              "description": "Output only. The width of the image in pixels."
            },
            "lens": {
              "description": "Output only. The lens used to create the photo.",
              "type": "string"
            },
            "maxApertureValue": {
              "description": "Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
              "format": "float",
              "type": "number"
            },
            "whiteBalance": {
              "type": "string",
              "description": "Output only. The white balance mode used to create the photo."
            },
            "rotation": {
              "type": "integer",
              "description": "Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
              "format": "int32"
            },
            "colorSpace": {
              "type": "string",
              "description": "Output only. The color space of the photo."
            },
            "location": {
              "description": "Output only. Geographic location information stored in the image.",
              "type": "object",
              "properties": {
                "latitude": {
                  "description": "Output only. The latitude stored in the image.",
                  "type": "number",
                  "format": "double"
                },
                "altitude": {
                  "format": "double",
                  "description": "Output only. The altitude stored in the image.",
                  "type": "number"
                },
                "longitude": {
                  "format": "double",
                  "type": "number",
                  "description": "Output only. The longitude stored in the image."
                }
              }
            },
            "subjectDistance": {
              "type": "integer",
              "description": "Output only. The distance to the subject of the photo, in meters.",
              "format": "int32"
            },
            "exposureTime": {
              "description": "Output only. The length of the exposure, in seconds.",
              "type": "number",
              "format": "float"
            },
            "height": {
              "format": "int32",
              "description": "Output only. The height of the image in pixels.",
              "type": "integer"
            },
            "focalLength": {
              "format": "float",
              "type": "number",
              "description": "Output only. The focal length used to create the photo, in millimeters."
            },
            "exposureBias": {
              "description": "Output only. The exposure bias of the photo (APEX value).",
              "type": "number",
              "format": "float"
            },
            "isoSpeed": {
              "description": "Output only. The ISO speed used to create the photo.",
              "format": "int32",
              "type": "integer"
            },
            "meteringMode": {
              "type": "string",
              "description": "Output only. The metering mode used to create the photo."
            },
            "cameraMake": {
              "type": "string",
              "description": "Output only. The make of the camera used to create the photo."
            },
            "aperture": {
              "description": "Output only. The aperture used to create the photo (f-number).",
              "format": "float",
              "type": "number"
            },
            "sensor": {
              "type": "string",
              "description": "Output only. The type of sensor used to create the photo."
            },
            "date": {
              "type": "string",
              "description": "Output only. The date and time the photo was taken (EXIF format timestamp)."
            },
            "exposureMode": {
              "description": "Output only. The exposure mode used to create the photo.",
              "type": "string"
            },
            "flashUsed": {
              "type": "boolean",
              "description": "Output only. Whether a flash was used to create the photo."
            }
          },
          "description": "Output only. Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
          "type": "object"
        },
        "title": {
          "description": "The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.",
          "type": "string"
        },
        "modifiedDate": {
          "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
          "type": "string",
          "format": "date-time"
        },
        "shortcutDetails": {
          "properties": {
            "targetId": {
              "type": "string",
              "description": "The ID of the file that this shortcut points to."
            },
            "targetMimeType": {
              "description": "Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
              "type": "string"
            },
            "targetResourceKey": {
              "description": "Output only. The ResourceKey for the target file.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`."
        },
        "thumbnailLink": {
          "type": "string",
          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in `Files.thumbnailLink` must be fetched using a credentialed request."
        },
        "shareable": {
          "type": "boolean",
          "description": "Output only. Deprecated: Use `capabilities/canShare` instead."
        },
        "lastViewedByMeDate": {
          "type": "string",
          "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
          "format": "date-time"
        },
        "userPermission": {
          "description": "Output only. The permissions for the authenticated user on this file.",
          "$ref": "Permission"
        },
        "lastModifyingUserName": {
          "type": "string",
          "description": "Output only. Name of the last user to modify this file."
        },
        "thumbnailVersion": {
          "format": "int64",
          "description": "Output only. The thumbnail version for use in thumbnail cache invalidation.",
          "type": "string"
        },
        "writersCanShare": {
          "type": "boolean",
          "description": "Whether writers can share the document with other users. Not populated for items in shared drives."
        },
        "version": {
          "format": "int64",
          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
          "type": "string"
        },
        "modifiedByMeDate": {
          "format": "date-time",
          "type": "string",
          "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date."
        },
        "labels": {
          "description": "A group of labels for the file.",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Output only. Deprecated."
            },
            "trashed": {
              "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.",
              "type": "boolean"
            },
            "modified": {
              "type": "boolean",
              "description": "Output only. Whether the file has been modified by this user."
            },
            "restricted": {
              "description": "Output only. Deprecated: Use `copyRequiresWriterPermission` instead.",
              "type": "boolean"
            },
            "viewed": {
              "type": "boolean",
              "description": "Whether this file has been viewed by this user."
            },
            "starred": {
              "description": "Whether this file is starred by the user.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "explicitlyTrashed": {
          "type": "boolean",
          "description": "Output only. Whether this file has been explicitly trashed, as opposed to recursively trashed."
        },
        "exportLinks": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "type": "object",
          "readOnly": true
        },
        "teamDriveId": {
          "type": "string",
          "description": "Output only. Deprecated: Use `driveId` instead."
        },
        "copyable": {
          "type": "boolean",
          "description": "Output only. Deprecated: Use `capabilities/canCopy` instead."
        },
        "spaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The list of spaces which contain the file. Supported values are `drive`, `appDataFolder` and `photos`."
        },
        "indexableText": {
          "description": "Indexable text attributes for the file (can only be written)",
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "The text to be indexed for this file."
            }
          }
        },
        "originalFilename": {
          "description": "The original filename of the uploaded content if available, or else the original value of the `title` field. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "thumbnail": {
          "properties": {
            "image": {
              "type": "string",
              "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
              "format": "byte"
            },
            "mimeType": {
              "description": "The MIME type of the thumbnail.",
              "type": "string"
            }
          },
          "description": "A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.",
          "type": "object"
        },
        "quotaBytesUsed": {
          "description": "Output only. The number of quota bytes used by this file.",
          "format": "int64",
          "type": "string"
        },
        "markedViewedByMeDate": {
          "description": "Deprecated.",
          "type": "string",
          "format": "date-time"
        },
        "videoMediaMetadata": {
          "type": "object",
          "properties": {
            "durationMillis": {
              "format": "int64",
              "description": "Output only. The duration of the video in milliseconds.",
              "type": "string"
            },
            "width": {
              "description": "Output only. The width of the video in pixels.",
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Output only. The height of the video in pixels."
            }
          },
          "description": "Output only. Metadata about video media. This will only be present for video types."
        },
        "downloadUrl": {
          "type": "string",
          "description": "Output only. Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files."
        },
        "selfLink": {
          "description": "Output only. A link back to this file.",
          "type": "string"
        },
        "webContentLink": {
          "type": "string",
          "description": "Output only. A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
        },
        "etag": {
          "type": "string",
          "description": "Output only. ETag of the file."
        },
        "description": {
          "type": "string",
          "description": "A short description of the file."
        },
        "sha1Checksum": {
          "description": "Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "embedLink": {
          "type": "string",
          "description": "Output only. A link for embedding the file."
        },
        "capabilities": {
          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
          "type": "object",
          "properties": {
            "canRemoveChildren": {
              "description": "Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.",
              "type": "boolean"
            },
            "canMoveChildrenOutOfDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canModifyLabels": {
              "description": "Output only. Whether the current user can modify the labels on the file.",
              "type": "boolean"
            },
            "canTrash": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move this file to trash."
            },
            "canCopy": {
              "type": "boolean",
              "description": "Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder."
            },
            "canMoveItemOutOfDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added."
            },
            "canReadTeamDrive": {
              "type": "boolean",
              "description": "Output only. Deprecated: Use `canReadDrive` instead."
            },
            "canMoveChildrenWithinDrive": {
              "description": "Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
              "type": "boolean"
            },
            "canChangeSecurityUpdateEnabled": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata."
            },
            "canChangeCopyRequiresWriterPermission": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file."
            },
            "canDownload": {
              "type": "boolean",
              "description": "Output only. Whether the current user can download this file."
            },
            "canShare": {
              "description": "Output only. Whether the current user can modify the sharing settings for this file.",
              "type": "boolean"
            },
            "canAddChildren": {
              "description": "Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canModifyContent": {
              "description": "Output only. Whether the current user can modify the content of this file.",
              "type": "boolean"
            },
            "canMoveItemWithinTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` instead.",
              "type": "boolean"
            },
            "canUntrash": {
              "type": "boolean",
              "description": "Output only. Whether the current user can restore this file from trash."
            },
            "canAddFolderFromAnotherDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canRename": {
              "description": "Output only. Whether the current user can rename this file.",
              "type": "boolean"
            },
            "canAcceptOwnership": {
              "description": "Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canRemoveMyDriveParent": {
              "type": "boolean",
              "description": "Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files."
            },
            "canDelete": {
              "description": "Output only. Whether the current user can delete this file.",
              "type": "boolean"
            },
            "canReadLabels": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the labels on the file."
            },
            "canMoveItemIntoTeamDrive": {
              "type": "boolean",
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead."
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
              "type": "boolean"
            },
            "canReadDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives."
            },
            "canComment": {
              "type": "boolean",
              "description": "Output only. Whether the current user can comment on this file."
            },
            "canEdit": {
              "type": "boolean",
              "description": "Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`."
            },
            "canChangeRestrictedDownload": {
              "description": "Output only. Deprecated.",
              "type": "boolean"
            },
            "canMoveTeamDriveItem": {
              "type": "boolean",
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead."
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canModifyContentRestriction": {
              "description": "Output only. Whether the current user can modify restrictions on content of this file.",
              "type": "boolean"
            },
            "canAddMyDriveParent": {
              "description": "Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canMoveItemOutOfTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canMoveChildrenWithinTeamDrive": {
              "type": "boolean",
              "description": "Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead."
            },
            "canListChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder."
            },
            "canMoveChildrenOutOfTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.",
              "type": "boolean"
            },
            "canMoveItemWithinDrive": {
              "description": "Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
              "type": "boolean"
            }
          }
        },
        "labelInfo": {
          "properties": {
            "labels": {
              "description": "Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned.",
              "items": {
                "$ref": "Label"
              },
              "type": "array"
            }
          },
          "description": "Output only. An overview of the labels on the file.",
          "type": "object"
        },
        "md5Checksum": {
          "type": "string",
          "description": "Output only. An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "canComment": {
          "description": "Output only. Deprecated: Use `capabilities/canComment` instead.",
          "type": "boolean"
        },
        "ownerNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Name(s) of the owner(s) of this file. Not populated for items in shared drives."
        },
        "isAppAuthorized": {
          "type": "boolean",
          "description": "Output only. Whether the file was created or opened by the requesting app."
        },
        "fileExtension": {
          "description": "Output only. The final component of `fullFileExtension` with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "contentRestrictions": {
          "type": "array",
          "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
          "items": {
            "$ref": "ContentRestriction"
          }
        },
        "createdDate": {
          "description": "Create time for this file (formatted RFC 3339 timestamp).",
          "format": "date-time",
          "type": "string"
        },
        "defaultOpenWithLink": {
          "description": "Output only. A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used.",
          "type": "string"
        },
        "owners": {
          "type": "array",
          "description": "Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
          "items": {
            "$ref": "User"
          }
        },
        "lastModifyingUser": {
          "$ref": "User",
          "description": "Output only. The last user to modify this file."
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
        },
        "fullFileExtension": {
          "type": "string",
          "description": "Output only. The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "ownedByMe": {
          "description": "Output only. Whether the file is owned by the current user. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "copyRequiresWriterPermission": {
          "type": "boolean",
          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters."
        },
        "linkShareMetadata": {
          "description": "Contains details about the link URLs that clients are using to refer to this item.",
          "type": "object",
          "properties": {
            "securityUpdateEnabled": {
              "description": "Output only. Whether the security update is enabled for this file.",
              "type": "boolean"
            },
            "securityUpdateEligible": {
              "type": "boolean",
              "description": "Output only. Whether the file is eligible for security update."
            }
          }
        },
        "id": {
          "description": "The ID of the file.",
          "type": "string"
        },
        "trashedDate": {
          "description": "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.",
          "format": "date-time",
          "type": "string"
        },
        "appDataContents": {
          "description": "Output only. Whether this file is in the Application Data folder.",
          "type": "boolean"
        },
        "editable": {
          "type": "boolean",
          "description": "Output only. Deprecated: Use `capabilities/canEdit` instead."
        },
        "hasThumbnail": {
          "description": "Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
          "type": "boolean"
        },
        "fileSize": {
          "format": "int64",
          "description": "Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders.",
          "type": "string"
        },
        "sha256Checksum": {
          "type": "string",
          "description": "Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "hasAugmentedPermissions": {
          "description": "Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
          "type": "boolean"
        },
        "shared": {
          "description": "Output only. Whether the file has been shared. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "Property"
          },
          "description": "The list of properties."
        },
        "alternateLink": {
          "description": "Output only. A link for opening the file in a relevant Google editor or viewer.",
          "type": "string"
        },
        "iconLink": {
          "type": "string",
          "description": "Output only. A link to the file's icon."
        },
        "permissions": {
          "description": "Output only. The list of permissions for users with access to this file. Not populated for items in shared drives.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "ParentReference"
          },
          "description": "Collection of parent folders which contain this file. If not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the `addParents` and `removeParents` parameters to modify the parents list."
        },
        "trashingUser": {
          "$ref": "User",
          "description": "Output only. If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives."
        },
        "sharingUser": {
          "description": "Output only. User that shared the item with the current user, if available.",
          "$ref": "User"
        },
        "kind": {
          "type": "string",
          "default": "drive#file",
          "description": "Output only. The type of file. This is always `drive#file`."
        },
        "driveId": {
          "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",
          "type": "string"
        },
        "headRevisionId": {
          "type": "string",
          "description": "Output only. The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "permissionIds": {
          "description": "Output only. List of permission IDs for users with access to this file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "webViewLink": {
          "description": "Output only. A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.",
          "type": "string"
        },
        "sharedWithMeDate": {
          "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
          "type": "string",
          "format": "date-time"
        },
        "canReadRevisions": {
          "description": "Output only. Deprecated: Use `capabilities/canReadRevisions` instead.",
          "type": "boolean"
        },
        "folderColorRgb": {
          "type": "string",
          "description": "Folder color as an RGB hex string if the file is a folder or a shortcut to a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
        },
        "resourceKey": {
          "type": "string",
          "description": "Output only. A key needed to access the item via a shared link."
        },
        "openWithLinks": {
          "type": "object",
          "description": "Output only. A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "File",
      "description": "The metadata for a file."
    },
    "ModifyLabelsResponse": {
      "description": "Response to a ModifyLabels request. This contains only those labels which were added or updated by the request.",
      "properties": {
        "kind": {
          "default": "drive#modifyLabelsResponse",
          "description": "This is always `drive#modifyLabelsResponse`",
          "type": "string"
        },
        "modifiedLabels": {
          "items": {
            "$ref": "Label"
          },
          "description": "The list of labels which were added or updated by the request.",
          "type": "array"
        }
      },
      "id": "ModifyLabelsResponse",
      "type": "object"
    },
    "ContentRestriction": {
      "properties": {
        "readOnly": {
          "type": "boolean",
          "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified."
        },
        "reason": {
          "type": "string",
          "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set `readOnly=true`."
        },
        "restrictionDate": {
          "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Output only. The type of the content restriction. Currently the only possible value is `globalContentRestriction`.",
          "type": "string"
        },
        "restrictingUser": {
          "$ref": "User",
          "description": "Output only. The user who set the content restriction. Only populated if `readOnly` is true."
        }
      },
      "id": "ContentRestriction",
      "description": "A restriction for accessing the content of the file.",
      "type": "object"
    },
    "PermissionId": {
      "properties": {
        "id": {
          "description": "The permission ID.",
          "type": "string"
        },
        "kind": {
          "default": "drive#permissionId",
          "description": "This is always `drive#permissionId`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PermissionId",
      "description": "An ID for a user or group as seen in Permission items."
    },
    "PermissionList": {
      "description": "A list of permissions associated with a file.",
      "id": "PermissionList",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#permissionList`.",
          "default": "drive#permissionList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Permission"
          },
          "description": "The list of permissions."
        }
      }
    },
    "ParentReference": {
      "properties": {
        "id": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.parents.insert"
            ]
          },
          "description": "The ID of the parent."
        },
        "parentLink": {
          "type": "string",
          "description": "Output only. A link to the parent."
        },
        "isRoot": {
          "type": "boolean",
          "description": "Output only. Whether or not the parent is the root folder."
        },
        "selfLink": {
          "type": "string",
          "description": "Output only. A link back to this reference."
        },
        "kind": {
          "description": "Output only. This is always `drive#parentReference`.",
          "type": "string",
          "default": "drive#parentReference"
        }
      },
      "id": "ParentReference",
      "type": "object",
      "description": "A reference to a file's parent."
    },
    "LabelList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of labels.",
          "items": {
            "$ref": "Label"
          }
        },
        "kind": {
          "type": "string",
          "description": "This is always `drive#labelList`",
          "default": "drive#labelList"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      },
      "description": "A list of labels applied to a file.",
      "id": "LabelList"
    },
    "RevisionList": {
      "id": "RevisionList",
      "description": "A list of revisions of a file.",
      "properties": {
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results."
        },
        "items": {
          "items": {
            "$ref": "Revision"
          },
          "type": "array",
          "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "kind": {
          "default": "drive#revisionList",
          "description": "This is always `drive#revisionList`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelField": {
      "properties": {
        "selection": {
          "items": {
            "type": "string"
          },
          "description": "Only present if `valueType` is `selection`",
          "type": "array"
        },
        "user": {
          "description": "Only present if `valueType` is `user`.",
          "items": {
            "$ref": "User"
          },
          "type": "array"
        },
        "valueType": {
          "description": "The field type. While new values may be supported in the future, the following are currently allowed: * `dateString` * `integer` * `selection` * `text` * `user`",
          "type": "string"
        },
        "text": {
          "description": "Only present if `valueType` is `text`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "integer": {
          "description": "Only present if `valueType` is `integer`.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "id": {
          "description": "The identifier of this label field.",
          "type": "string"
        },
        "dateString": {
          "description": "Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.",
          "type": "array",
          "items": {
            "format": "date",
            "type": "string"
          }
        },
        "kind": {
          "description": "This is always `drive#labelField`.",
          "type": "string",
          "default": "drive#labelField"
        }
      },
      "description": "Representation of field, which is a typed key-value pair.",
      "id": "LabelField",
      "type": "object"
    }
  },
  "ownerName": "Google",
  "documentationLink": "https://developers.google.com/drive/",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "name": "drive",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive.apps.readonly": {
          "description": "View your Google Drive apps"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.scripts": {
          "description": "Modify your Google Apps Script scripts' behavior"
        },
        "https://www.googleapis.com/auth/drive.metadata.readonly": {
          "description": "See information about your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.appdata": {
          "description": "See, create, and delete its own configuration data in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/drive.metadata": {
          "description": "View and manage metadata of files in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.photos.readonly": {
          "description": "View the photos, videos and albums in your Google Photos"
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "description": "The Google Drive API allows clients to access resources from Google Drive.",
  "revision": "20230603",
  "batchPath": "batch/drive/v2",
  "version": "v2",
  "id": "drive:v2",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://www.googleapis.com/",
  "servicePath": "drive/v2/",
  "title": "Google Drive API",
  "resources": {
    "revisions": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "revisionId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the revision."
            },
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "files/{fileId}/revisions/{revisionId}",
          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted.",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "id": "drive.revisions.delete",
          "flatPath": "files/{fileId}/revisions/{revisionId}"
        },
        "patch": {
          "response": {
            "$ref": "Revision"
          },
          "id": "drive.revisions.patch",
          "parameters": {
            "revisionId": {
              "type": "string",
              "required": true,
              "description": "The ID for the revision.",
              "location": "path"
            },
            "fileId": {
              "description": "The ID for the file.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "PATCH",
          "path": "files/{fileId}/revisions/{revisionId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "request": {
            "$ref": "Revision"
          },
          "description": "Updates a revision.",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ]
        },
        "get": {
          "parameters": {
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "type": "string",
              "location": "path"
            },
            "revisionId": {
              "type": "string",
              "description": "The ID of the revision.",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "Revision"
          },
          "id": "drive.revisions.get",
          "description": "Gets a specific revision.",
          "path": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ]
        },
        "update": {
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "request": {
            "$ref": "Revision"
          },
          "parameters": {
            "fileId": {
              "location": "path",
              "required": true,
              "description": "The ID for the file.",
              "type": "string"
            },
            "revisionId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID for the revision."
            }
          },
          "httpMethod": "PUT",
          "id": "drive.revisions.update",
          "response": {
            "$ref": "Revision"
          },
          "description": "Updates a revision.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/revisions/{revisionId}",
          "flatPath": "files/{fileId}/revisions/{revisionId}"
        },
        "list": {
          "httpMethod": "GET",
          "path": "files/{fileId}/revisions",
          "id": "drive.revisions.list",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "RevisionList"
          },
          "flatPath": "files/{fileId}/revisions",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Page token for revisions. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            },
            "maxResults": {
              "maximum": "1000",
              "minimum": "1",
              "description": "Maximum number of revisions to return.",
              "format": "int32",
              "location": "query",
              "default": "200",
              "type": "integer"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "description": "Lists a file's revisions."
        }
      }
    },
    "apps": {
      "methods": {
        "get": {
          "response": {
            "$ref": "App"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "apps/{appId}",
          "id": "drive.apps.get",
          "parameterOrder": [
            "appId"
          ],
          "parameters": {
            "appId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the app."
            }
          },
          "description": "Gets a specific app.",
          "flatPath": "apps/{appId}"
        },
        "list": {
          "parameterOrder": [],
          "path": "apps",
          "id": "drive.apps.list",
          "flatPath": "apps",
          "description": "Lists a user's installed apps.",
          "parameters": {
            "languageCode": {
              "type": "string",
              "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
              "location": "query"
            },
            "appFilterExtensions": {
              "type": "string",
              "location": "query",
              "default": "",
              "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If `appFilterMimeTypes` are provided as well, the result is a union of the two resulting app lists."
            },
            "appFilterMimeTypes": {
              "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If `appFilterExtensions` are provided as well, the result is a union of the two resulting app lists.",
              "location": "query",
              "default": "",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive.apps.readonly"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "AppList"
          }
        }
      }
    },
    "channels": {
      "methods": {
        "stop": {
          "flatPath": "channels/stop",
          "path": "channels/stop",
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "description": "Stops watching resources through this channel.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "POST",
          "id": "drive.channels.stop",
          "parameterOrder": [],
          "parameters": {}
        }
      }
    },
    "teamdrives": {
      "methods": {
        "list": {
          "flatPath": "teamdrives",
          "id": "drive.teamdrives.list",
          "description": "Deprecated: Use `drives.list` instead.",
          "httpMethod": "GET",
          "path": "teamdrives",
          "parameterOrder": [],
          "response": {
            "$ref": "TeamDriveList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "q": {
              "type": "string",
              "description": "Query string for searching Team Drives.",
              "location": "query"
            },
            "maxResults": {
              "description": "Maximum number of Team Drives to return.",
              "minimum": "1",
              "format": "int32",
              "default": "10",
              "type": "integer",
              "location": "query",
              "maximum": "100"
            },
            "useDomainAdminAccess": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Page token for Team Drives."
            }
          }
        },
        "get": {
          "path": "teamdrives/{teamDriveId}",
          "description": "Deprecated: Use `drives.get` instead.",
          "id": "drive.teamdrives.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs."
            }
          },
          "flatPath": "teamdrives/{teamDriveId}",
          "response": {
            "$ref": "TeamDrive"
          },
          "parameterOrder": [
            "teamDriveId"
          ]
        },
        "update": {
          "request": {
            "$ref": "TeamDrive"
          },
          "path": "teamdrives/{teamDriveId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "type": "string",
              "location": "path",
              "required": true
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "teamDriveId"
          ],
          "flatPath": "teamdrives/{teamDriveId}",
          "id": "drive.teamdrives.update",
          "response": {
            "$ref": "TeamDrive"
          },
          "httpMethod": "PUT",
          "description": "Deprecated: Use `drives.update` instead."
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameterOrder": [
            "teamDriveId"
          ],
          "flatPath": "teamdrives/{teamDriveId}",
          "path": "teamdrives/{teamDriveId}",
          "id": "drive.teamdrives.delete",
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "description": "Deprecated: Use `drives.delete` instead.",
          "httpMethod": "DELETE"
        },
        "insert": {
          "id": "drive.teamdrives.insert",
          "request": {
            "$ref": "TeamDrive"
          },
          "description": "Deprecated: Use `drives.insert` instead.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "response": {
            "$ref": "TeamDrive"
          },
          "flatPath": "teamdrives",
          "path": "teamdrives",
          "parameterOrder": [
            "requestId"
          ],
          "parameters": {
            "requestId": {
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.",
              "location": "query",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "changes": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "teamDriveId": {
              "location": "query",
              "description": "Deprecated: Use `driveId` instead.",
              "type": "string",
              "deprecated": true
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true
            },
            "startChangeId": {
              "deprecated": true,
              "description": "Deprecated: Use `pageToken` instead.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method."
            },
            "maxResults": {
              "minimum": "1",
              "description": "Maximum number of changes to return.",
              "format": "int32",
              "default": "100",
              "location": "query",
              "type": "integer"
            },
            "includeItemsFromAllDrives": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Whether both My Drive and shared drive items should be included in results."
            },
            "includeSubscribed": {
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "location": "query",
              "type": "boolean",
              "default": "true"
            },
            "includeTeamDriveItems": {
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "type": "boolean",
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "includeCorpusRemovals": {
              "default": "false",
              "type": "boolean",
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "location": "query"
            },
            "includeDeleted": {
              "type": "boolean",
              "default": "true",
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "location": "query"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "driveId": {
              "location": "query",
              "type": "string",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier."
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            }
          },
          "path": "changes",
          "parameterOrder": [],
          "httpMethod": "GET",
          "description": "Lists the changes for a user or shared drive.",
          "supportsSubscription": true,
          "id": "drive.changes.list",
          "response": {
            "$ref": "ChangeList"
          },
          "flatPath": "changes"
        },
        "get": {
          "path": "changes/{changeId}",
          "parameters": {
            "teamDriveId": {
              "deprecated": true,
              "type": "string",
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "type": "boolean",
              "deprecated": true,
              "location": "query"
            },
            "driveId": {
              "description": "The shared drive from which the change will be returned.",
              "type": "string",
              "location": "query"
            },
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "changeId": {
              "location": "path",
              "description": "The ID of the change.",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "response": {
            "$ref": "Change"
          },
          "flatPath": "changes/{changeId}",
          "parameterOrder": [
            "changeId"
          ],
          "id": "drive.changes.get",
          "description": "Deprecated: Use `changes.getStartPageToken` and `changes.list` to retrieve recent changes.",
          "httpMethod": "GET"
        },
        "watch": {
          "parameters": {
            "includeTeamDriveItems": {
              "deprecated": true,
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead."
            },
            "spaces": {
              "type": "string",
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`.",
              "location": "query"
            },
            "includeCorpusRemovals": {
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "type": "boolean",
              "location": "query",
              "deprecated": true
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method.",
              "type": "string",
              "location": "query"
            },
            "driveId": {
              "type": "string",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false"
            },
            "startChangeId": {
              "deprecated": true,
              "description": "Deprecated: Use `pageToken` instead.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "includePermissionsForView": {
              "type": "string",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query"
            },
            "teamDriveId": {
              "deprecated": true,
              "type": "string",
              "location": "query",
              "description": "Deprecated: Use `driveId` instead."
            },
            "includeDeleted": {
              "type": "boolean",
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "default": "true",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "default": "100",
              "description": "Maximum number of changes to return.",
              "minimum": "1",
              "format": "int32"
            },
            "includeItemsFromAllDrives": {
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "includeSubscribed": {
              "location": "query",
              "default": "true",
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "type": "boolean"
            },
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Channel"
          },
          "path": "changes/watch",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Subscribe to changes for a user.",
          "flatPath": "changes/watch",
          "id": "drive.changes.watch",
          "httpMethod": "POST",
          "request": {
            "$ref": "Channel",
            "parameterName": "resource"
          },
          "supportsSubscription": true
        },
        "getStartPageToken": {
          "parameters": {
            "supportsTeamDrives": {
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "default": "false"
            },
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "driveId": {
              "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.",
              "type": "string",
              "location": "query"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "type": "string",
              "deprecated": true
            }
          },
          "id": "drive.changes.getStartPageToken",
          "path": "changes/startPageToken",
          "response": {
            "$ref": "StartPageToken"
          },
          "description": "Gets the starting pageToken for listing future changes.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "changes/startPageToken",
          "httpMethod": "GET",
          "parameterOrder": []
        }
      }
    },
    "comments": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Comment"
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "path": "files/{fileId}/comments/{commentId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "includeDeleted": {
              "default": "false",
              "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
              "location": "query",
              "type": "boolean"
            },
            "commentId": {
              "type": "string",
              "description": "The ID of the comment.",
              "required": true,
              "location": "path"
            },
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID of the file.",
              "type": "string"
            }
          },
          "id": "drive.comments.get",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "description": "Gets a comment by ID.",
          "httpMethod": "GET"
        },
        "update": {
          "httpMethod": "PUT",
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "description": "Updates an existing comment.",
          "request": {
            "$ref": "Comment"
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "id": "drive.comments.update",
          "response": {
            "$ref": "Comment"
          },
          "parameters": {
            "commentId": {
              "description": "The ID of the comment.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "type": "string",
              "required": true
            }
          }
        },
        "insert": {
          "httpMethod": "POST",
          "request": {
            "$ref": "Comment"
          },
          "description": "Creates a new comment on the given file.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}/comments",
          "id": "drive.comments.insert",
          "path": "files/{fileId}/comments",
          "response": {
            "$ref": "Comment"
          },
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID of the file.",
              "type": "string"
            }
          }
        },
        "list": {
          "path": "files/{fileId}/comments",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's comments.",
          "flatPath": "files/{fileId}/comments",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.comments.list",
          "response": {
            "$ref": "CommentList"
          },
          "parameters": {
            "includeDeleted": {
              "location": "query",
              "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
              "type": "boolean",
              "default": "false"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "maximum": "100",
              "format": "int32",
              "default": "20",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of discussions to include in the response, used for paging.",
              "minimum": "0"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
            },
            "updatedMin": {
              "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
              "location": "query",
              "type": "string"
            }
          }
        },
        "patch": {
          "description": "Updates an existing comment.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "id": "drive.comments.patch",
          "parameters": {
            "commentId": {
              "required": true,
              "description": "The ID of the comment.",
              "location": "path",
              "type": "string"
            },
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          }
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a comment.",
          "id": "drive.comments.delete",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "flatPath": "files/{fileId}/comments/{commentId}",
          "path": "files/{fileId}/comments/{commentId}",
          "parameters": {
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file."
            },
            "commentId": {
              "required": true,
              "description": "The ID of the comment.",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "DELETE"
        }
      }
    },
    "parents": {
      "methods": {
        "insert": {
          "id": "drive.parents.insert",
          "httpMethod": "POST",
          "path": "files/{fileId}/parents",
          "flatPath": "files/{fileId}/parents",
          "parameterOrder": [
            "fileId"
          ],
          "parameters": {
            "fileId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the file."
            },
            "enforceSingleParent": {
              "location": "query",
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "type": "boolean",
              "deprecated": true
            },
            "supportsAllDrives": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "type": "boolean",
              "deprecated": true
            }
          },
          "description": "Adds a parent folder for a file.",
          "request": {
            "$ref": "ParentReference"
          },
          "response": {
            "$ref": "ParentReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ]
        },
        "get": {
          "flatPath": "files/{fileId}/parents/{parentId}",
          "description": "Gets a specific parent reference.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "path": "files/{fileId}/parents/{parentId}",
          "parameters": {
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the file.",
              "required": true
            },
            "parentId": {
              "location": "path",
              "required": true,
              "description": "The ID of the parent.",
              "type": "string"
            }
          },
          "id": "drive.parents.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "ParentReference"
          }
        },
        "list": {
          "description": "Lists a file's parents.",
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the file."
            }
          },
          "path": "files/{fileId}/parents",
          "response": {
            "$ref": "ParentList"
          },
          "httpMethod": "GET",
          "id": "drive.parents.list",
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}/parents",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "delete": {
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "id": "drive.parents.delete",
          "flatPath": "files/{fileId}/parents/{parentId}",
          "path": "files/{fileId}/parents/{parentId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "parentId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the parent."
            },
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "type": "boolean",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root.",
              "location": "query"
            }
          },
          "description": "Removes a parent from a file.",
          "httpMethod": "DELETE"
        }
      }
    },
    "children": {
      "methods": {
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "DELETE",
          "flatPath": "files/{folderId}/children/{childId}",
          "id": "drive.children.delete",
          "parameters": {
            "childId": {
              "description": "The ID of the child.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "folderId": {
              "type": "string",
              "description": "The ID of the folder.",
              "location": "path",
              "required": true
            },
            "enforceSingleParent": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root.",
              "deprecated": true
            }
          },
          "description": "Removes a child from a folder.",
          "path": "files/{folderId}/children/{childId}",
          "parameterOrder": [
            "folderId",
            "childId"
          ]
        },
        "insert": {
          "httpMethod": "POST",
          "path": "files/{folderId}/children",
          "description": "Inserts a file into a folder.",
          "id": "drive.children.insert",
          "flatPath": "files/{folderId}/children",
          "request": {
            "$ref": "ChildReference"
          },
          "parameterOrder": [
            "folderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "ChildReference"
          },
          "parameters": {
            "supportsTeamDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "location": "query"
            },
            "folderId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the folder.",
              "required": true
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "type": "boolean",
              "default": "false",
              "deprecated": true,
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            }
          }
        },
        "get": {
          "id": "drive.children.get",
          "parameters": {
            "childId": {
              "location": "path",
              "description": "The ID of the child.",
              "type": "string",
              "required": true
            },
            "folderId": {
              "description": "The ID of the folder.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "GET",
          "path": "files/{folderId}/children/{childId}",
          "flatPath": "files/{folderId}/children/{childId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific child reference.",
          "response": {
            "$ref": "ChildReference"
          },
          "parameterOrder": [
            "folderId",
            "childId"
          ]
        },
        "list": {
          "id": "drive.children.list",
          "description": "Lists a folder's children.",
          "parameterOrder": [
            "folderId"
          ],
          "flatPath": "files/{folderId}/children",
          "path": "files/{folderId}/children",
          "httpMethod": "GET",
          "response": {
            "$ref": "ChildList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "maxResults": {
              "location": "query",
              "format": "int32",
              "minimum": "0",
              "type": "integer",
              "description": "Maximum number of children to return.",
              "default": "100"
            },
            "folderId": {
              "description": "The ID of the folder.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Page token for children."
            },
            "q": {
              "type": "string",
              "location": "query",
              "description": "Query string for searching children."
            },
            "orderBy": {
              "location": "query",
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, and `title`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
              "type": "string"
            }
          }
        }
      }
    },
    "files": {
      "methods": {
        "trash": {
          "id": "drive.files.trash",
          "path": "files/{fileId}/trash",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string",
              "location": "query"
            },
            "supportsTeamDrives": {
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "default": "false"
            },
            "fileId": {
              "description": "The ID of the file to trash.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "files/{fileId}/trash",
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "File"
          },
          "description": " Moves a file to the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files. Only the owner may trash a file. The trashed item is excluded from all `files.list` responses returned for any user who doesn't own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file. *Note:* Files moved to the trash still appear by default in results from the `files.list` method. To permanently remove a file, use `files.delete`."
        },
        "untrash": {
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "id": "drive.files.untrash",
          "path": "files/{fileId}/untrash",
          "flatPath": "files/{fileId}/untrash",
          "httpMethod": "POST",
          "description": "Restores a file from the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files. Only the owner may untrash a file.",
          "parameters": {
            "includeLabels": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "fileId": {
              "description": "The ID of the file to untrash.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "default": "false",
              "location": "query",
              "deprecated": true
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            }
          },
          "response": {
            "$ref": "File"
          }
        },
        "modifyLabels": {
          "description": "Modifies the set of labels applied to a file. Returns a list of the labels that were added or modified.",
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID of the file to which the labels belong.",
              "type": "string"
            }
          },
          "flatPath": "files/{fileId}/modifyLabels",
          "request": {
            "$ref": "ModifyLabelsRequest"
          },
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.files.modifyLabels",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "response": {
            "$ref": "ModifyLabelsResponse"
          },
          "path": "files/{fileId}/modifyLabels"
        },
        "copy": {
          "path": "files/{fileId}/copy",
          "response": {
            "$ref": "File"
          },
          "description": "Creates a copy of the specified file.",
          "httpMethod": "POST",
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.photos.readonly"
          ],
          "parameters": {
            "convert": {
              "description": "Whether to convert this file to the corresponding Docs Editors format.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "includeLabels": {
              "type": "string",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query"
            },
            "fileId": {
              "description": "The ID of the file to copy.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "pinned": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions."
            },
            "timedTextTrackName": {
              "type": "string",
              "description": "The timed text track name.",
              "location": "query"
            },
            "visibility": {
              "location": "query",
              "type": "string",
              "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
              "default": "DEFAULT",
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ],
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ]
            },
            "ocrLanguage": {
              "location": "query",
              "description": "If `ocr` is true, hints at the language to use. Valid values are BCP 47 codes.",
              "type": "string"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "enforceSingleParent": {
              "deprecated": true,
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Deprecated: Copying files into multiple folders is no longer supported. Use shortcuts instead."
            },
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "ocr": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "files/{fileId}/copy",
          "id": "drive.files.copy",
          "request": {
            "$ref": "File"
          }
        },
        "delete": {
          "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file or be an organizer on the parent for shared drive files.",
          "httpMethod": "DELETE",
          "flatPath": "files/{fileId}",
          "path": "files/{fileId}",
          "id": "drive.files.delete",
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the file to delete."
            },
            "enforceSingleParent": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "deprecated": true
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ]
        },
        "emptyTrash": {
          "httpMethod": "DELETE",
          "id": "drive.files.emptyTrash",
          "parameters": {
            "driveId": {
              "type": "string",
              "description": "If set, empties the trash of the provided shared drive.",
              "location": "query"
            },
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "location": "query",
              "default": "false",
              "type": "boolean",
              "deprecated": true
            }
          },
          "description": "Permanently deletes all of the user's trashed files.",
          "parameterOrder": [],
          "path": "files/trash",
          "flatPath": "files/trash",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ]
        },
        "update": {
          "response": {
            "$ref": "File"
          },
          "mediaUpload": {
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
              },
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
              }
            },
            "maxSize": "5497558138880",
            "accept": [
              "*/*"
            ]
          },
          "httpMethod": "PUT",
          "description": " Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads).",
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.files.update",
          "parameters": {
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean"
            },
            "timedTextLanguage": {
              "type": "string",
              "description": "The language of the timed text.",
              "location": "query"
            },
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file to update.",
              "required": true,
              "location": "path"
            },
            "setModifiedDate": {
              "location": "query",
              "default": "false",
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "type": "boolean"
            },
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "type": "string",
              "location": "query"
            },
            "updateViewedDate": {
              "default": "true",
              "description": "Whether to update the view date after successfully updating the file.",
              "location": "query",
              "type": "boolean"
            },
            "convert": {
              "description": "Deprecated: This parameter has no function.",
              "type": "boolean",
              "location": "query",
              "deprecated": true,
              "default": "false"
            },
            "addParents": {
              "location": "query",
              "type": "string",
              "description": "Comma-separated list of parent IDs to add."
            },
            "removeParents": {
              "description": "Comma-separated list of parent IDs to remove.",
              "location": "query",
              "type": "string"
            },
            "useContentAsIndexableText": {
              "type": "boolean",
              "description": "Whether to use the content as indexable text.",
              "location": "query",
              "default": "false"
            },
            "newRevision": {
              "location": "query",
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045).",
              "default": "true",
              "type": "boolean"
            },
            "ocr": {
              "type": "boolean",
              "default": "false",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "location": "query"
            },
            "timedTextTrackName": {
              "location": "query",
              "description": "The timed text track name.",
              "type": "string"
            },
            "includePermissionsForView": {
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "type": "string"
            },
            "enforceSingleParent": {
              "deprecated": true,
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "modifiedDateBehavior": {
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ],
              "location": "query",
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`.",
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "path": "files/{fileId}",
          "supportsMediaUpload": true,
          "flatPath": "files/{fileId}",
          "request": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ]
        },
        "get": {
          "description": " Gets a file's metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/drive/api/reference/rest/v2/files/export) instead. For more information, see [Download & export files](/drive/api/guides/manage-downloads).",
          "supportsSubscription": true,
          "useMediaDownloadService": true,
          "response": {
            "$ref": "File"
          },
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "GET",
          "id": "drive.files.get",
          "parameters": {
            "projection": {
              "location": "query",
              "description": "Deprecated: This parameter has no function.",
              "deprecated": true,
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "enum": [
                "BASIC",
                "FULL"
              ],
              "type": "string"
            },
            "fileId": {
              "description": "The ID for the file in question.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "acknowledgeAbuse": {
              "location": "query",
              "type": "boolean",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "default": "false"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "updateViewedDate": {
              "location": "query",
              "default": "false",
              "deprecated": true,
              "description": "Deprecated: Use `files.update` with `modifiedDateBehavior=noChange, updateViewedDate=true` and an empty request body.",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "location": "query",
              "default": "false",
              "deprecated": true
            },
            "revisionId": {
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "files/{fileId}",
          "path": "files/{fileId}",
          "supportsMediaDownload": true
        },
        "listLabels": {
          "response": {
            "$ref": "LabelList"
          },
          "flatPath": "files/{fileId}/listLabels",
          "id": "drive.files.listLabels",
          "parameters": {
            "fileId": {
              "type": "string",
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true
            },
            "maxResults": {
              "type": "integer",
              "maximum": "100",
              "default": "100",
              "minimum": "1",
              "location": "query",
              "format": "int32",
              "description": "The maximum number of labels to return per page. When not set, defaults to 100."
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response.",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Lists the labels on a file.",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId"
          ],
          "path": "files/{fileId}/listLabels",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "list": {
          "id": "drive.files.list",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.",
          "response": {
            "$ref": "FileList"
          },
          "path": "files",
          "flatPath": "files",
          "parameters": {
            "corpus": {
              "deprecated": true,
              "description": "Deprecated: The body of items (files/documents) to which the query applies. Use `corpora` instead.",
              "enum": [
                "DEFAULT",
                "DOMAIN"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
              ]
            },
            "driveId": {
              "type": "string",
              "description": "ID of the shared drive to search.",
              "location": "query"
            },
            "includeTeamDriveItems": {
              "type": "boolean",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "deprecated": true,
              "location": "query",
              "default": "false"
            },
            "orderBy": {
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, `title`, and `title_natural`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "description": "Query string for searching files.",
              "type": "string",
              "location": "query"
            },
            "projection": {
              "type": "string",
              "deprecated": true,
              "enum": [
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "location": "query",
              "description": "Deprecated: This parameter has no function."
            },
            "pageToken": {
              "description": "Page token for files.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "default": "100",
              "minimum": "0",
              "location": "query",
              "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",
              "type": "integer"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false"
            },
            "teamDriveId": {
              "type": "string",
              "location": "query",
              "description": "Deprecated: Use `driveId` instead.",
              "deprecated": true
            },
            "includeItemsFromAllDrives": {
              "location": "query",
              "default": "false",
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "type": "boolean"
            },
            "spaces": {
              "location": "query",
              "type": "string",
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, and `appDataFolder`."
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "corpora": {
              "location": "query",
              "type": "string",
              "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are `default`, `domain`, `drive` and `allDrives`. Prefer `default` or `drive` to `allDrives` for efficiency."
            }
          },
          "httpMethod": "GET",
          "parameterOrder": []
        },
        "insert": {
          "id": "drive.files.insert",
          "parameters": {
            "useContentAsIndexableText": {
              "type": "boolean",
              "location": "query",
              "description": "Whether to use the content as indexable text.",
              "default": "false"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "type": "string",
              "location": "query"
            },
            "ocr": {
              "location": "query",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "type": "string"
            },
            "pinned": {
              "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean"
            },
            "visibility": {
              "type": "string",
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ],
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ],
              "location": "query",
              "default": "DEFAULT",
              "description": "The visibility of the new file. This parameter is only relevant when convert=false."
            },
            "enforceSingleParent": {
              "default": "false",
              "deprecated": true,
              "description": "Deprecated: Creating files in multiple folders is no longer supported.",
              "location": "query",
              "type": "boolean"
            },
            "timedTextTrackName": {
              "type": "string",
              "description": "The timed text track name.",
              "location": "query"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "convert": {
              "default": "false",
              "type": "boolean",
              "description": "Whether to convert this file to the corresponding Docs Editors format.",
              "location": "query"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "files",
          "request": {
            "$ref": "File"
          },
          "response": {
            "$ref": "File"
          },
          "parameterOrder": [],
          "mediaUpload": {
            "maxSize": "5497558138880",
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
              },
              "simple": {
                "path": "/upload/drive/v2/files",
                "multipart": true
              }
            },
            "accept": [
              "*/*"
            ]
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "supportsMediaUpload": true,
          "httpMethod": "POST",
          "description": " Inserts a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.insert` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `title` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"title\": \"cat.jpg\"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file's MIME type.",
          "path": "files"
        },
        "patch": {
          "flatPath": "files/{fileId}",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "File"
          },
          "path": "files/{fileId}",
          "request": {
            "$ref": "File"
          },
          "description": "Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might change automatically, such as modifiedDate. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ],
          "parameterOrder": [
            "fileId"
          ],
          "parameters": {
            "modifiedDateBehavior": {
              "type": "string",
              "location": "query",
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`.",
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ]
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "deprecated": true
            },
            "fileId": {
              "description": "The ID of the file to update.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "updateViewedDate": {
              "default": "true",
              "description": "Whether to update the view date after successfully updating the file.",
              "type": "boolean",
              "location": "query"
            },
            "newRevision": {
              "default": "true",
              "location": "query",
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045). Note that this field is ignored if there is no payload in the request.",
              "type": "boolean"
            },
            "addParents": {
              "description": "Comma-separated list of parent IDs to add.",
              "location": "query",
              "type": "string"
            },
            "timedTextTrackName": {
              "type": "string",
              "location": "query",
              "description": "The timed text track name."
            },
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions. Note that this field is ignored if there is no payload in the request.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead."
            },
            "setModifiedDate": {
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            },
            "ocr": {
              "type": "boolean",
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "location": "query"
            },
            "removeParents": {
              "type": "string",
              "description": "Comma-separated list of parent IDs to remove.",
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "timedTextLanguage": {
              "location": "query",
              "type": "string",
              "description": "The language of the timed text."
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "type": "string",
              "location": "query"
            },
            "convert": {
              "location": "query",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: This parameter has no function.",
              "type": "boolean"
            },
            "useContentAsIndexableText": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to use the content as indexable text.",
              "default": "false"
            }
          },
          "id": "drive.files.patch"
        },
        "export": {
          "flatPath": "files/{fileId}/export",
          "parameterOrder": [
            "fileId",
            "mimeType"
          ],
          "id": "drive.files.export",
          "path": "files/{fileId}/export",
          "parameters": {
            "mimeType": {
              "description": "Required. The MIME type of the format requested for this export.",
              "type": "string",
              "required": true,
              "location": "query"
            },
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the file.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB.",
          "httpMethod": "GET",
          "useMediaDownloadService": true,
          "supportsMediaDownload": true
        },
        "touch": {
          "id": "drive.files.touch",
          "description": "Set the file's updated time to the current server time.",
          "parameters": {
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string",
              "location": "query"
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "default": "false",
              "location": "query"
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the file to update.",
              "required": true
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query"
            },
            "includePermissionsForView": {
              "location": "query",
              "type": "string",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}/touch",
          "response": {
            "$ref": "File"
          },
          "path": "files/{fileId}/touch",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ]
        },
        "generateIds": {
          "httpMethod": "GET",
          "flatPath": "files/generateIds",
          "response": {
            "$ref": "GeneratedIds"
          },
          "parameters": {
            "space": {
              "location": "query",
              "default": "drive",
              "description": "The space in which the IDs can be used to create new files. Supported values are `drive` and `appDataFolder`. (Default: `drive`)",
              "type": "string"
            },
            "type": {
              "default": "files",
              "location": "query",
              "description": "The type of items which the IDs can be used for. Supported values are `files` and `shortcuts`. Note that `shortcuts` are only supported in the `drive` `space`. (Default: `files`)",
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of IDs to return.",
              "location": "query",
              "default": "10",
              "minimum": "1",
              "maximum": "1000",
              "format": "int32",
              "type": "integer"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Generates a set of file IDs which can be provided in insert or copy requests.",
          "path": "files/generateIds",
          "parameterOrder": [],
          "id": "drive.files.generateIds"
        },
        "watch": {
          "id": "drive.files.watch",
          "description": "Subscribes to changes to a file.",
          "request": {
            "$ref": "Channel",
            "parameterName": "resource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "files/{fileId}/watch",
          "response": {
            "$ref": "Channel"
          },
          "supportsSubscription": true,
          "httpMethod": "POST",
          "parameterOrder": [
            "fileId"
          ],
          "path": "files/{fileId}/watch",
          "parameters": {
            "updateViewedDate": {
              "type": "boolean",
              "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
              "location": "query",
              "deprecated": true,
              "default": "false"
            },
            "projection": {
              "enum": [
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "description": "Deprecated: This parameter has no function.",
              "deprecated": true,
              "type": "string",
              "location": "query"
            },
            "supportsTeamDrives": {
              "default": "false",
              "type": "boolean",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query"
            },
            "includePermissionsForView": {
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "type": "string"
            },
            "fileId": {
              "description": "The ID for the file in question.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "supportsAllDrives": {
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query"
            },
            "revisionId": {
              "location": "query",
              "type": "string",
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified."
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "acknowledgeAbuse": {
              "location": "query",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "default": "false",
              "type": "boolean"
            }
          }
        }
      }
    },
    "properties": {
      "methods": {
        "patch": {
          "parameters": {
            "propertyKey": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The key of the property."
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "required": true,
              "location": "path"
            },
            "visibility": {
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "default": "private",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Updates a property.",
          "response": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "id": "drive.properties.patch",
          "path": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "PATCH",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "request": {
            "$ref": "Property"
          }
        },
        "delete": {
          "httpMethod": "DELETE",
          "description": "Deletes a property.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "parameters": {
            "visibility": {
              "location": "query",
              "type": "string",
              "default": "private",
              "description": "The visibility of the property."
            },
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "propertyKey": {
              "description": "The key of the property.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "id": "drive.properties.delete",
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "path": "files/{fileId}/properties/{propertyKey}"
        },
        "list": {
          "flatPath": "files/{fileId}/properties",
          "response": {
            "$ref": "PropertyList"
          },
          "description": "Lists a file's properties.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/properties",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "id": "drive.properties.list",
          "parameterOrder": [
            "fileId"
          ]
        },
        "get": {
          "description": "Gets a property by its key.",
          "httpMethod": "GET",
          "response": {
            "$ref": "Property"
          },
          "parameters": {
            "propertyKey": {
              "description": "The key of the property.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "visibility": {
              "default": "private",
              "type": "string",
              "location": "query",
              "description": "The visibility of the property."
            },
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.properties.get",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "path": "files/{fileId}/properties/{propertyKey}"
        },
        "insert": {
          "parameterOrder": [
            "fileId"
          ],
          "path": "files/{fileId}/properties",
          "flatPath": "files/{fileId}/properties",
          "response": {
            "$ref": "Property"
          },
          "httpMethod": "POST",
          "description": "Adds a property to a file, or updates it if it already exists.",
          "id": "drive.properties.insert",
          "request": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "parameters": {
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID of the file.",
              "type": "string"
            }
          }
        },
        "update": {
          "id": "drive.properties.update",
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "parameters": {
            "visibility": {
              "type": "string",
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "default": "private",
              "location": "query"
            },
            "propertyKey": {
              "required": true,
              "location": "path",
              "description": "The key of the property.",
              "type": "string"
            },
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Property"
          },
          "request": {
            "$ref": "Property"
          },
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "description": "Updates a property."
        }
      }
    },
    "permissions": {
      "methods": {
        "get": {
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "description": "Gets a permission by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "parameters": {
            "useDomainAdminAccess": {
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query"
            },
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "default": "false",
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "permissionId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID for the permission."
            },
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Permission"
          },
          "httpMethod": "GET",
          "path": "files/{fileId}/permissions/{permissionId}",
          "id": "drive.permissions.get"
        },
        "patch": {
          "request": {
            "$ref": "Permission"
          },
          "path": "files/{fileId}/permissions/{permissionId}",
          "description": "Updates a permission using patch semantics. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "response": {
            "$ref": "Permission"
          },
          "httpMethod": "PATCH",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "id": "drive.permissions.patch",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "default": "false"
            },
            "permissionId": {
              "required": true,
              "description": "The ID for the permission.",
              "location": "path",
              "type": "string"
            },
            "supportsTeamDrives": {
              "location": "query",
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "default": "false"
            },
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "useDomainAdminAccess": {
              "default": "false",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "type": "boolean"
            },
            "transferOwnership": {
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "removeExpiration": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "description": "Whether to remove the expiration date."
            }
          },
          "parameterOrder": [
            "fileId",
            "permissionId"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID for the file or shared drive.",
              "required": true
            },
            "maxResults": {
              "maximum": "100",
              "minimum": "1",
              "location": "query",
              "format": "int32",
              "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.",
              "type": "integer"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            }
          },
          "description": "Lists a file's or shared drive's permissions.",
          "httpMethod": "GET",
          "path": "files/{fileId}/permissions",
          "response": {
            "$ref": "PermissionList"
          },
          "parameterOrder": [
            "fileId"
          ],
          "flatPath": "files/{fileId}/permissions",
          "id": "drive.permissions.list"
        },
        "update": {
          "parameters": {
            "supportsAllDrives": {
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "default": "false",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false"
            },
            "removeExpiration": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether to remove the expiration date."
            },
            "transferOwnership": {
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "fileId": {
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "type": "string",
              "required": true
            },
            "permissionId": {
              "location": "path",
              "description": "The ID for the permission.",
              "required": true,
              "type": "string"
            }
          },
          "path": "files/{fileId}/permissions/{permissionId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "Permission"
          },
          "httpMethod": "PUT",
          "id": "drive.permissions.update",
          "request": {
            "$ref": "Permission"
          },
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "description": "Updates a permission. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ]
        },
        "getIdForEmail": {
          "response": {
            "$ref": "PermissionId"
          },
          "path": "permissionIds/{email}",
          "parameterOrder": [
            "email"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "flatPath": "permissionIds/{email}",
          "id": "drive.permissions.getIdForEmail",
          "description": "Returns the permission ID for an email address.",
          "parameters": {
            "email": {
              "description": "The email address for which to return a permission ID",
              "type": "string",
              "location": "path",
              "required": true
            }
          }
        },
        "insert": {
          "id": "drive.permissions.insert",
          "parameterOrder": [
            "fileId"
          ],
          "description": "Inserts a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "request": {
            "$ref": "Permission"
          },
          "path": "files/{fileId}/permissions",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "moveToNewOwnersRoot": {
              "type": "boolean",
              "location": "query",
              "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed.",
              "default": "false"
            },
            "enforceSingleParent": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Deprecated: See `moveToNewOwnersRoot` for details.",
              "deprecated": true
            },
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "location": "query",
              "default": "false"
            },
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "sendNotificationEmails": {
              "location": "query",
              "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the `role` is `owner`.",
              "default": "true",
              "type": "boolean"
            },
            "emailMessage": {
              "type": "string",
              "description": "A plain text custom message to include in notification emails.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Permission"
          },
          "flatPath": "files/{fileId}/permissions",
          "httpMethod": "POST"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "parameters": {
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "type": "string"
            },
            "permissionId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID for the permission."
            }
          },
          "description": "Deletes a permission from a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "httpMethod": "DELETE",
          "id": "drive.permissions.delete",
          "path": "files/{fileId}/permissions/{permissionId}"
        }
      }
    },
    "about": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "startChangeId": {
              "location": "query",
              "format": "int64",
              "description": "Change ID to start counting from when calculating number of remaining change IDs",
              "type": "string"
            },
            "includeSubscribed": {
              "location": "query",
              "description": "Whether to count changes outside the My Drive hierarchy. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the `maxChangeIdCount`.",
              "type": "boolean",
              "default": "true"
            },
            "maxChangeIdCount": {
              "type": "string",
              "description": "Maximum number of remaining change IDs to count",
              "location": "query",
              "default": "1",
              "format": "int64"
            }
          },
          "httpMethod": "GET",
          "path": "about",
          "parameterOrder": [],
          "flatPath": "about",
          "description": "Gets the information about the current user along with Drive API settings",
          "response": {
            "$ref": "About"
          },
          "id": "drive.about.get"
        }
      }
    },
    "replies": {
      "methods": {
        "insert": {
          "httpMethod": "POST",
          "request": {
            "$ref": "CommentReply"
          },
          "description": "Creates a new reply to the given comment.",
          "response": {
            "$ref": "CommentReply"
          },
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/comments/{commentId}/replies",
          "id": "drive.replies.insert",
          "parameters": {
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file."
            },
            "commentId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the comment.",
              "required": true
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ]
        },
        "delete": {
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "DELETE",
          "id": "drive.replies.delete",
          "parameters": {
            "replyId": {
              "type": "string",
              "description": "The ID of the reply.",
              "required": true,
              "location": "path"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "fileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the file."
            }
          },
          "description": "Deletes a reply."
        },
        "list": {
          "description": "Lists all of the replies to a comment.",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "maxResults": {
              "description": "The maximum number of replies to include in the response, used for paging.",
              "type": "integer",
              "location": "query",
              "format": "int32",
              "maximum": "100",
              "minimum": "0",
              "default": "20"
            },
            "includeDeleted": {
              "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "commentId": {
              "required": true,
              "description": "The ID of the comment.",
              "location": "path",
              "type": "string"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "required": true,
              "location": "path"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
            }
          },
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "response": {
            "$ref": "CommentReplyList"
          },
          "path": "files/{fileId}/comments/{commentId}/replies",
          "id": "drive.replies.list"
        },
        "update": {
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "id": "drive.replies.update",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "parameters": {
            "commentId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the comment."
            },
            "replyId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the reply."
            },
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the file.",
              "required": true
            }
          },
          "description": "Updates an existing reply.",
          "httpMethod": "PUT",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "CommentReply"
          },
          "request": {
            "$ref": "CommentReply"
          }
        },
        "patch": {
          "description": "Updates an existing reply.",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "id": "drive.replies.patch",
          "parameters": {
            "replyId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the reply."
            },
            "fileId": {
              "description": "The ID of the file.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "response": {
            "$ref": "CommentReply"
          },
          "request": {
            "$ref": "CommentReply"
          },
          "httpMethod": "PATCH"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "parameters": {
            "includeDeleted": {
              "default": "false",
              "description": "If set, this will succeed when retrieving a deleted reply.",
              "type": "boolean",
              "location": "query"
            },
            "replyId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the reply."
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file."
            },
            "commentId": {
              "required": true,
              "type": "string",
              "description": "The ID of the comment.",
              "location": "path"
            }
          },
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "description": "Gets a reply.",
          "response": {
            "$ref": "CommentReply"
          },
          "id": "drive.replies.get"
        }
      }
    },
    "drives": {
      "methods": {
        "unhide": {
          "httpMethod": "POST",
          "flatPath": "drives/{driveId}/unhide",
          "response": {
            "$ref": "Drive"
          },
          "description": "Restores a shared drive to the default view.",
          "path": "drives/{driveId}/unhide",
          "parameters": {
            "driveId": {
              "location": "path",
              "description": "The ID of the shared drive.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "id": "drive.drives.unhide",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "driveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameters": {
            "driveId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the shared drive."
            },
            "allowItemDeletion": {
              "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "description": "Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items.",
          "path": "drives/{driveId}",
          "id": "drive.drives.delete",
          "flatPath": "drives/{driveId}"
        },
        "hide": {
          "httpMethod": "POST",
          "parameters": {
            "driveId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the shared drive."
            }
          },
          "response": {
            "$ref": "Drive"
          },
          "description": "Hides a shared drive from the default view.",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "path": "drives/{driveId}/hide",
          "flatPath": "drives/{driveId}/hide",
          "id": "drive.drives.hide",
          "parameterOrder": [
            "driveId"
          ]
        },
        "update": {
          "response": {
            "$ref": "Drive"
          },
          "flatPath": "drives/{driveId}",
          "path": "drives/{driveId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameters": {
            "useDomainAdminAccess": {
              "location": "query",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "type": "boolean"
            },
            "driveId": {
              "location": "path",
              "description": "The ID of the shared drive.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "request": {
            "$ref": "Drive"
          },
          "httpMethod": "PUT",
          "description": "Updates the metadata for a shared drive.",
          "id": "drive.drives.update"
        },
        "insert": {
          "parameterOrder": [
            "requestId"
          ],
          "id": "drive.drives.insert",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "flatPath": "drives",
          "response": {
            "$ref": "Drive"
          },
          "httpMethod": "POST",
          "parameters": {
            "requestId": {
              "location": "query",
              "type": "string",
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
              "required": true
            }
          },
          "path": "drives",
          "description": "Creates a new shared drive.",
          "request": {
            "$ref": "Drive"
          }
        },
        "get": {
          "httpMethod": "GET",
          "path": "drives/{driveId}",
          "id": "drive.drives.get",
          "parameterOrder": [
            "driveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a shared drive's metadata by ID.",
          "response": {
            "$ref": "Drive"
          },
          "parameters": {
            "useDomainAdminAccess": {
              "type": "boolean",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false"
            },
            "driveId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the shared drive."
            }
          },
          "flatPath": "drives/{driveId}"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "q": {
              "description": "Query string for searching shared drives.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "description": "Maximum number of shared drives to return per page.",
              "default": "10",
              "format": "int32",
              "minimum": "1",
              "location": "query",
              "maximum": "100"
            },
            "pageToken": {
              "type": "string",
              "description": "Page token for shared drives.",
              "location": "query"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned."
            }
          },
          "httpMethod": "GET",
          "id": "drive.drives.list",
          "description": " Lists the user's shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/drive/api/guides/search-shareddrives) guide.",
          "parameterOrder": [],
          "path": "drives",
          "flatPath": "drives",
          "response": {
            "$ref": "DriveList"
          }
        }
      }
    }
  },
  "basePath": "/drive/v2/"
}

{
  "schemas": {
    "About": {
      "id": "About",
      "description": "An item with user information and settings.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the current user.",
          "type": "string"
        },
        "quotaBytesTotal": {
          "description": "The total number of quota bytes. This is only relevant when quotaType is LIMITED.",
          "type": "string",
          "format": "int64"
        },
        "quotaBytesUsed": {
          "description": "The number of quota bytes used by Google Drive.",
          "type": "string",
          "format": "int64"
        },
        "quotaBytesUsedInTrash": {
          "description": "The number of quota bytes used by trashed items.",
          "type": "string",
          "format": "int64"
        },
        "largestChangeId": {
          "description": "The largest change id.",
          "type": "string",
          "format": "int64"
        },
        "remainingChangeIds": {
          "description": "The number of remaining change ids, limited to no more than 2500.",
          "type": "string",
          "format": "int64"
        },
        "rootFolderId": {
          "description": "The id of the root folder.",
          "type": "string"
        },
        "importFormats": {
          "description": "The allowable import formats.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "description": "The imported file's content type to convert from.",
                "type": "string"
              },
              "targets": {
                "description": "The possible content types to convert to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "exportFormats": {
          "description": "The allowable export formats.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "description": "The content type to convert from.",
                "type": "string"
              },
              "targets": {
                "description": "The possible content types to convert to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "additionalRoleInfo": {
          "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The content type that this additional role info applies to.",
                "type": "string"
              },
              "roleSets": {
                "description": "The supported additional roles per primary role.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "primaryRole": {
                      "description": "A primary permission role.",
                      "type": "string"
                    },
                    "additionalRoles": {
                      "description": "The supported additional roles with the primary role.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "features": {
          "description": "List of additional features enabled on this account.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "featureName": {
                "description": "The name of the feature.",
                "type": "string"
              },
              "featureRate": {
                "description": "The request limit rate for this feature, in queries per second.",
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "maxUploadSizes": {
          "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The file type.",
                "type": "string"
              },
              "size": {
                "description": "The max upload size for this type.",
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "domainSharingPolicy": {
          "description": "The domain sharing policy for the current user. Possible values are: * `allowed` * `allowedWithWarning` * `incomingOnly` * `disallowed`",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#about`.",
          "default": "drive#about",
          "type": "string"
        },
        "permissionId": {
          "description": "The current user's ID as visible in the permissions collection.",
          "type": "string"
        },
        "isCurrentAppInstalled": {
          "description": "A boolean indicating whether the authenticated app is installed by the authenticated user.",
          "type": "boolean"
        },
        "quotaBytesUsedAggregate": {
          "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
          "type": "string",
          "format": "int64"
        },
        "user": {
          "description": "The authenticated user.",
          "$ref": "User"
        },
        "etag": {
          "description": "The ETag of the item.",
          "type": "string"
        },
        "languageCode": {
          "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this item.",
          "type": "string"
        },
        "quotaType": {
          "description": "The type of the user's storage quota. Possible values are: * `LIMITED` * `UNLIMITED`",
          "type": "string"
        },
        "folderColorPalette": {
          "description": "The palette of allowable folder colors as RGB hex strings.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "driveThemes": {
          "description": "A list of themes that are supported for shared drives.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the theme.",
                "type": "string"
              },
              "backgroundImageLink": {
                "description": "A link to this theme's background image.",
                "type": "string"
              },
              "colorRgb": {
                "description": "The color of this theme as an RGB hex string.",
                "type": "string"
              }
            }
          }
        },
        "canCreateDrives": {
          "description": "Whether the user can create shared drives.",
          "type": "boolean"
        },
        "quotaBytesByService": {
          "description": "The amount of storage quota used by different Google services.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "serviceName": {
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS.",
                "type": "string"
              },
              "bytesUsed": {
                "description": "The storage quota bytes used by the service.",
                "type": "string",
                "format": "int64"
              }
            }
          }
        },
        "teamDriveThemes": {
          "description": "Deprecated: Use `driveThemes` instead.",
          "deprecated": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Deprecated: Use `driveThemes/id` instead.",
                "deprecated": true,
                "type": "string"
              },
              "backgroundImageLink": {
                "description": "Deprecated: Use `driveThemes/backgroundImageLink` instead.",
                "deprecated": true,
                "type": "string"
              },
              "colorRgb": {
                "description": "Deprecated: Use `driveThemes/colorRgb` instead.",
                "deprecated": true,
                "type": "string"
              }
            }
          }
        },
        "canCreateTeamDrives": {
          "description": "Deprecated: Use `canCreateDrives` instead.",
          "deprecated": true,
          "type": "boolean"
        }
      }
    },
    "User": {
      "id": "User",
      "description": "Information about a Drive user.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Output only. A plain text displayable name for this user.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#user`.",
          "default": "drive#user",
          "type": "string"
        },
        "isAuthenticatedUser": {
          "description": "Output only. Whether this user is the same as the authenticated user for whom the request was made.",
          "type": "boolean"
        },
        "permissionId": {
          "description": "Output only. The user's ID as visible in the permissions collection.",
          "type": "string"
        },
        "emailAddress": {
          "description": "Output only. The email address of the user.",
          "type": "string"
        },
        "picture": {
          "description": "Output only. The user's profile picture.",
          "type": "object",
          "properties": {
            "url": {
              "description": "Output Only. A URL that points to a profile picture of this user.",
              "type": "string"
            }
          }
        }
      }
    },
    "App": {
      "id": "App",
      "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details. Some resource methods (such as `apps.get`) require an `appId`. Use the `apps.list` method to retrieve the ID for an installed application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the app.",
          "type": "string"
        },
        "objectType": {
          "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead.",
          "type": "string"
        },
        "supportsCreate": {
          "description": "Whether this app supports creating new objects.",
          "type": "boolean"
        },
        "productUrl": {
          "description": "A link to the product listing for this app.",
          "type": "string"
        },
        "primaryMimeTypes": {
          "description": "The list of primary mime types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryMimeTypes": {
          "description": "The list of secondary mime types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primaryFileExtensions": {
          "description": "The list of primary file extensions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryFileExtensions": {
          "description": "The list of secondary file extensions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "The ID of the app.",
          "type": "string"
        },
        "supportsImport": {
          "description": "Whether this app supports importing from Docs Editors.",
          "type": "boolean"
        },
        "installed": {
          "description": "Whether the app is installed.",
          "type": "boolean"
        },
        "authorized": {
          "description": "Whether the app is authorized to access data on the user's Drive.",
          "type": "boolean"
        },
        "icons": {
          "description": "The various icons for the app.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "size": {
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "type": "integer",
                "format": "int32"
              },
              "category": {
                "description": "Category of the icon. Allowed values are: * `application` - icon for the application * `document` - icon for a file associated with the app * `documentShared` - icon for a shared file associated with the app",
                "type": "string"
              },
              "iconUrl": {
                "description": "URL for the icon.",
                "type": "string"
              }
            }
          }
        },
        "useByDefault": {
          "description": "Whether the app is selected as the default handler for the types it supports.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always `drive#app`.",
          "default": "drive#app",
          "type": "string"
        },
        "shortDescription": {
          "description": "A short description of the app.",
          "type": "string"
        },
        "longDescription": {
          "description": "A long description of the app.",
          "type": "string"
        },
        "supportsMultiOpen": {
          "description": "Whether this app supports opening more than one file.",
          "type": "boolean"
        },
        "productId": {
          "description": "The ID of the product listing for this app.",
          "type": "string"
        },
        "openUrlTemplate": {
          "description": "The template url for opening files with this app. The template will contain `{ids}` and/or `{exportIds}` to be replaced by the actual file ids. See Open Files for the full documentation.",
          "type": "string"
        },
        "createUrl": {
          "description": "The url to create a new file with this app.",
          "type": "string"
        },
        "createInFolderTemplate": {
          "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in.",
          "type": "string"
        },
        "supportsOfflineCreate": {
          "description": "Whether this app supports creating new files when offline.",
          "type": "boolean"
        },
        "hasDriveWideScope": {
          "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.",
          "type": "boolean"
        }
      }
    },
    "AppList": {
      "id": "AppList",
      "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "defaultAppIds": {
          "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "This is always `drive#appList`.",
          "default": "drive#appList",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "description": "The list of apps.",
          "type": "array",
          "items": {
            "$ref": "App"
          }
        }
      }
    },
    "Change": {
      "id": "Change",
      "description": "Representation of a change to a file or shared drive.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the change.",
          "type": "string",
          "format": "int64"
        },
        "deleted": {
          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.",
          "type": "boolean"
        },
        "file": {
          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes.",
          "$ref": "File"
        },
        "fileId": {
          "description": "The ID of the file associated with this change.",
          "type": "string"
        },
        "modificationDate": {
          "description": "The time of this modification.",
          "type": "string",
          "format": "date-time"
        },
        "kind": {
          "description": "This is always `drive#change`.",
          "default": "drive#change",
          "type": "string"
        },
        "type": {
          "description": "Deprecated: Use `changeType` instead.",
          "deprecated": true,
          "type": "string"
        },
        "teamDriveId": {
          "description": "Deprecated: Use `driveId` instead.",
          "deprecated": true,
          "type": "string"
        },
        "teamDrive": {
          "description": "Deprecated: Use `drive` instead.",
          "deprecated": true,
          "$ref": "TeamDrive"
        },
        "changeType": {
          "description": "The type of the change. Possible values are `file` and `drive`.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this change.",
          "type": "string"
        },
        "driveId": {
          "description": "The ID of the shared drive associated with this change.",
          "type": "string"
        },
        "drive": {
          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.",
          "$ref": "Drive"
        }
      }
    },
    "File": {
      "id": "File",
      "description": "The metadata for a file. Some resource methods (such as `files.update`) require a `fileId`. Use the `files.list` method to retrieve the ID for a file.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Output only. The type of file. This is always `drive#file`.",
          "default": "drive#file",
          "type": "string"
        },
        "userPermission": {
          "description": "Output only. The permissions for the authenticated user on this file.",
          "$ref": "Permission"
        },
        "fileExtension": {
          "description": "Output only. The final component of `fullFileExtension` with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "md5Checksum": {
          "description": "Output only. An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. A link back to this file.",
          "type": "string"
        },
        "ownerNames": {
          "description": "Output only. Name(s) of the owner(s) of this file. Not populated for items in shared drives.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifyingUserName": {
          "description": "Output only. Name of the last user to modify this file.",
          "type": "string"
        },
        "editable": {
          "description": "Output only. Deprecated: Use `capabilities/canEdit` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "writersCanShare": {
          "description": "Whether writers can share the document with other users. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "downloadUrl": {
          "description": "Output only. Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.",
          "type": "string"
        },
        "exportLinks": {
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "driveId": {
          "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",
          "type": "string"
        },
        "parents": {
          "description": "Collection of parent folders which contain this file. If not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the `addParents` and `removeParents` parameters to modify the parents list.",
          "type": "array",
          "items": {
            "$ref": "ParentReference"
          }
        },
        "thumbnailLink": {
          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in `Files.thumbnailLink` must be fetched using a credentialed request.",
          "type": "string"
        },
        "appDataContents": {
          "description": "Output only. Whether this file is in the Application Data folder.",
          "type": "boolean"
        },
        "webViewLink": {
          "description": "Output only. A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.",
          "type": "string"
        },
        "iconLink": {
          "description": "Output only. A link to the file's icon.",
          "type": "string"
        },
        "shared": {
          "description": "Output only. Whether the file has been shared. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "lastModifyingUser": {
          "description": "Output only. The last user to modify this file.",
          "$ref": "User"
        },
        "owners": {
          "description": "Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
          "type": "array",
          "items": {
            "$ref": "User"
          }
        },
        "openWithLinks": {
          "description": "Output only. A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "defaultOpenWithLink": {
          "description": "Output only. A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used.",
          "type": "string"
        },
        "headRevisionId": {
          "description": "Output only. The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "properties": {
          "description": "The list of properties.",
          "type": "array",
          "items": {
            "$ref": "Property"
          }
        },
        "copyable": {
          "description": "Output only. Deprecated: Use `capabilities/canCopy` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. ETag of the file.",
          "type": "string"
        },
        "sharingUser": {
          "description": "Output only. User that shared the item with the current user, if available.",
          "$ref": "User"
        },
        "alternateLink": {
          "description": "Output only. A link for opening the file in a relevant Google editor or viewer.",
          "type": "string"
        },
        "embedLink": {
          "description": "Output only. A link for embedding the file.",
          "type": "string"
        },
        "webContentLink": {
          "description": "Output only. A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.",
          "type": "string"
        },
        "fileSize": {
          "description": "Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders.",
          "type": "string",
          "format": "int64"
        },
        "copyRequiresWriterPermission": {
          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",
          "type": "boolean"
        },
        "permissions": {
          "description": "Output only. The list of permissions for users with access to this file. Not populated for items in shared drives.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        },
        "hasThumbnail": {
          "description": "Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
          "type": "boolean"
        },
        "spaces": {
          "description": "Output only. The list of spaces which contain the file. Supported values are `drive`, `appDataFolder` and `photos`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "folderColorRgb": {
          "description": "Folder color as an RGB hex string if the file is a folder or a shortcut to a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the file.",
          "type": "string"
        },
        "title": {
          "description": "The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.",
          "type": "string"
        },
        "description": {
          "description": "A short description of the file.",
          "type": "string"
        },
        "labels": {
          "description": "A group of labels for the file.",
          "type": "object",
          "properties": {
            "viewed": {
              "description": "Whether this file has been viewed by this user.",
              "type": "boolean"
            },
            "restricted": {
              "description": "Output only. Deprecated: Use `copyRequiresWriterPermission` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "starred": {
              "description": "Whether this file is starred by the user.",
              "type": "boolean"
            },
            "hidden": {
              "description": "Output only. Deprecated.",
              "deprecated": true,
              "type": "boolean"
            },
            "trashed": {
              "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.",
              "type": "boolean"
            },
            "modified": {
              "description": "Output only. Whether the file has been modified by this user.",
              "type": "boolean"
            }
          }
        },
        "explicitlyTrashed": {
          "description": "Output only. Whether this file has been explicitly trashed, as opposed to recursively trashed.",
          "type": "boolean"
        },
        "createdDate": {
          "description": "Create time for this file (formatted RFC 3339 timestamp).",
          "type": "string",
          "format": "date-time"
        },
        "modifiedDate": {
          "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedByMeDate": {
          "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
          "type": "string",
          "format": "date-time"
        },
        "lastViewedByMeDate": {
          "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
          "type": "string",
          "format": "date-time"
        },
        "markedViewedByMeDate": {
          "description": "Deprecated.",
          "type": "string",
          "format": "date-time"
        },
        "sharedWithMeDate": {
          "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
          "type": "string",
          "format": "date-time"
        },
        "quotaBytesUsed": {
          "description": "Output only. The number of quota bytes used by this file.",
          "type": "string",
          "format": "int64"
        },
        "version": {
          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
          "type": "string",
          "format": "int64"
        },
        "indexableText": {
          "description": "Indexable text attributes for the file (can only be written)",
          "type": "object",
          "properties": {
            "text": {
              "description": "The text to be indexed for this file.",
              "type": "string"
            }
          }
        },
        "originalFilename": {
          "description": "The original filename of the uploaded content if available, or else the original value of the `title` field. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "ownedByMe": {
          "description": "Output only. Whether the file is owned by the current user. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "canComment": {
          "description": "Output only. Deprecated: Use `capabilities/canComment` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "shareable": {
          "description": "Output only. Deprecated: Use `capabilities/canShare` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "fullFileExtension": {
          "description": "Output only. The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "isAppAuthorized": {
          "description": "Output only. Whether the file was created or opened by the requesting app.",
          "type": "boolean"
        },
        "teamDriveId": {
          "description": "Output only. Deprecated: Use `driveId` instead.",
          "deprecated": true,
          "type": "string"
        },
        "capabilities": {
          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
          "type": "object",
          "properties": {
            "canChangeRestrictedDownload": {
              "description": "Output only. Deprecated.",
              "deprecated": true,
              "type": "boolean"
            },
            "canMoveChildrenOutOfDrive": {
              "description": "Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canReadDrive": {
              "description": "Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canEdit": {
              "description": "Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on this file.",
              "type": "boolean"
            },
            "canAddChildren": {
              "description": "Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canDelete": {
              "description": "Output only. Whether the current user can delete this file.",
              "type": "boolean"
            },
            "canDownload": {
              "description": "Output only. Whether the current user can download this file.",
              "type": "boolean"
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canRemoveChildren": {
              "description": "Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.",
              "type": "boolean"
            },
            "canRename": {
              "description": "Output only. Whether the current user can rename this file.",
              "type": "boolean"
            },
            "canTrash": {
              "description": "Output only. Whether the current user can move this file to trash.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
              "type": "boolean"
            },
            "canReadTeamDrive": {
              "description": "Output only. Deprecated: Use `canReadDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canMoveTeamDriveItem": {
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermission": {
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.",
              "type": "boolean"
            },
            "canMoveItemIntoTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canUntrash": {
              "description": "Output only. Whether the current user can restore this file from trash.",
              "type": "boolean"
            },
            "canModifyContent": {
              "description": "Output only. Whether the current user can modify the content of this file.",
              "type": "boolean"
            },
            "canMoveItemWithinTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canMoveItemOutOfTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canMoveChildrenOutOfTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canMoveChildrenWithinTeamDrive": {
              "description": "Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canMoveItemOutOfDrive": {
              "description": "Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
              "type": "boolean"
            },
            "canAddMyDriveParent": {
              "description": "Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canRemoveMyDriveParent": {
              "description": "Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canMoveItemWithinDrive": {
              "description": "Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
              "type": "boolean"
            },
            "canShare": {
              "description": "Output only. Whether the current user can modify the sharing settings for this file.",
              "type": "boolean"
            },
            "canMoveChildrenWithinDrive": {
              "description": "Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
              "type": "boolean"
            },
            "canModifyContentRestriction": {
              "description": "Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`.",
              "deprecated": true,
              "type": "boolean"
            },
            "canAddFolderFromAnotherDrive": {
              "description": "Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canChangeSecurityUpdateEnabled": {
              "description": "Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.",
              "type": "boolean"
            },
            "canAcceptOwnership": {
              "description": "Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canReadLabels": {
              "description": "Output only. Whether the current user can read the labels on the file.",
              "type": "boolean"
            },
            "canModifyLabels": {
              "description": "Output only. Whether the current user can modify the labels on the file.",
              "type": "boolean"
            },
            "canModifyEditorContentRestriction": {
              "description": "Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted.",
              "type": "boolean"
            },
            "canModifyOwnerContentRestriction": {
              "description": "Output only. Whether the current user can add or modify content restrictions which are owner restricted.",
              "type": "boolean"
            },
            "canRemoveContentRestriction": {
              "description": "Output only. Whether there is a content restriction on the file that can be removed by the current user.",
              "type": "boolean"
            }
          }
        },
        "hasAugmentedPermissions": {
          "description": "Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
          "type": "boolean"
        },
        "trashingUser": {
          "description": "Output only. If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives.",
          "$ref": "User"
        },
        "canReadRevisions": {
          "description": "Output only. Deprecated: Use `capabilities/canReadRevisions` instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "thumbnailVersion": {
          "description": "Output only. The thumbnail version for use in thumbnail cache invalidation.",
          "type": "string",
          "format": "int64"
        },
        "trashedDate": {
          "description": "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.",
          "type": "string",
          "format": "date-time"
        },
        "permissionIds": {
          "description": "Output only. List of permission IDs for users with access to this file.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "thumbnail": {
          "description": "A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.",
          "type": "object",
          "properties": {
            "image": {
              "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
              "type": "string",
              "format": "byte"
            },
            "mimeType": {
              "description": "The MIME type of the thumbnail.",
              "type": "string"
            }
          }
        },
        "imageMediaMetadata": {
          "description": "Output only. Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
          "type": "object",
          "properties": {
            "flashUsed": {
              "description": "Output only. Whether a flash was used to create the photo.",
              "type": "boolean"
            },
            "meteringMode": {
              "description": "Output only. The metering mode used to create the photo.",
              "type": "string"
            },
            "sensor": {
              "description": "Output only. The type of sensor used to create the photo.",
              "type": "string"
            },
            "exposureMode": {
              "description": "Output only. The exposure mode used to create the photo.",
              "type": "string"
            },
            "colorSpace": {
              "description": "Output only. The color space of the photo.",
              "type": "string"
            },
            "whiteBalance": {
              "description": "Output only. The white balance mode used to create the photo.",
              "type": "string"
            },
            "width": {
              "description": "Output only. The width of the image in pixels.",
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "description": "Output only. The height of the image in pixels.",
              "type": "integer",
              "format": "int32"
            },
            "location": {
              "description": "Output only. Geographic location information stored in the image.",
              "type": "object",
              "properties": {
                "latitude": {
                  "description": "Output only. The latitude stored in the image.",
                  "type": "number",
                  "format": "double"
                },
                "longitude": {
                  "description": "Output only. The longitude stored in the image.",
                  "type": "number",
                  "format": "double"
                },
                "altitude": {
                  "description": "Output only. The altitude stored in the image.",
                  "type": "number",
                  "format": "double"
                }
              }
            },
            "rotation": {
              "description": "Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
              "type": "integer",
              "format": "int32"
            },
            "date": {
              "description": "Output only. The date and time the photo was taken (EXIF format timestamp).",
              "type": "string"
            },
            "cameraMake": {
              "description": "Output only. The make of the camera used to create the photo.",
              "type": "string"
            },
            "cameraModel": {
              "description": "Output only. The model of the camera used to create the photo.",
              "type": "string"
            },
            "exposureTime": {
              "description": "Output only. The length of the exposure, in seconds.",
              "type": "number",
              "format": "float"
            },
            "aperture": {
              "description": "Output only. The aperture used to create the photo (f-number).",
              "type": "number",
              "format": "float"
            },
            "focalLength": {
              "description": "Output only. The focal length used to create the photo, in millimeters.",
              "type": "number",
              "format": "float"
            },
            "isoSpeed": {
              "description": "Output only. The ISO speed used to create the photo.",
              "type": "integer",
              "format": "int32"
            },
            "exposureBias": {
              "description": "Output only. The exposure bias of the photo (APEX value).",
              "type": "number",
              "format": "float"
            },
            "maxApertureValue": {
              "description": "Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
              "type": "number",
              "format": "float"
            },
            "subjectDistance": {
              "description": "Output only. The distance to the subject of the photo, in meters.",
              "type": "integer",
              "format": "int32"
            },
            "lens": {
              "description": "Output only. The lens used to create the photo.",
              "type": "string"
            }
          }
        },
        "videoMediaMetadata": {
          "description": "Output only. Metadata about video media. This will only be present for video types.",
          "type": "object",
          "properties": {
            "width": {
              "description": "Output only. The width of the video in pixels.",
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "description": "Output only. The height of the video in pixels.",
              "type": "integer",
              "format": "int32"
            },
            "durationMillis": {
              "description": "Output only. The duration of the video in milliseconds.",
              "type": "string",
              "format": "int64"
            }
          }
        },
        "shortcutDetails": {
          "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`.",
          "type": "object",
          "properties": {
            "targetId": {
              "description": "The ID of the file that this shortcut points to.",
              "type": "string"
            },
            "targetMimeType": {
              "description": "Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
              "type": "string"
            },
            "targetResourceKey": {
              "description": "Output only. The ResourceKey for the target file.",
              "type": "string"
            }
          }
        },
        "contentRestrictions": {
          "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
          "type": "array",
          "items": {
            "$ref": "ContentRestriction"
          }
        },
        "resourceKey": {
          "description": "Output only. A key needed to access the item via a shared link.",
          "type": "string"
        },
        "linkShareMetadata": {
          "description": "Contains details about the link URLs that clients are using to refer to this item.",
          "type": "object",
          "properties": {
            "securityUpdateEligible": {
              "description": "Output only. Whether the file is eligible for security update.",
              "type": "boolean"
            },
            "securityUpdateEnabled": {
              "description": "Output only. Whether the security update is enabled for this file.",
              "type": "boolean"
            }
          }
        },
        "labelInfo": {
          "description": "Output only. An overview of the labels on the file.",
          "type": "object",
          "properties": {
            "labels": {
              "description": "Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned.",
              "type": "array",
              "items": {
                "$ref": "Label"
              }
            }
          }
        },
        "sha1Checksum": {
          "description": "Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "sha256Checksum": {
          "description": "Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        }
      }
    },
    "Permission": {
      "id": "Permission",
      "description": "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name for this permission.",
          "type": "string"
        },
        "type": {
          "description": "The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          },
          "type": "string"
        },
        "role": {
          "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
          "annotations": {
            "required": [
              "drive.permissions.insert"
            ]
          },
          "type": "string"
        },
        "additionalRoles": {
          "description": "Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authKey": {
          "description": "Output only. Deprecated.",
          "deprecated": true,
          "type": "string"
        },
        "value": {
          "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#permission`.",
          "default": "drive#permission",
          "type": "string"
        },
        "withLink": {
          "description": "Whether the link is required for this permission.",
          "type": "boolean"
        },
        "photoLink": {
          "description": "Output only. A link to the profile photo, if available.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. A link back to this permission.",
          "type": "string"
        },
        "emailAddress": {
          "description": "Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
          "type": "string"
        },
        "domain": {
          "description": "Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
          "type": "string"
        },
        "etag": {
          "description": "Output only. The ETag of the permission.",
          "type": "string"
        },
        "permissionDetails": {
          "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "permissionType": {
                "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                "type": "string"
              },
              "role": {
                "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `reader`",
                "type": "string"
              },
              "additionalRoles": {
                "description": "Output only. Additional roles for this user. Only `commenter` is currently possible, though more may be supported in the future.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "inheritedFrom": {
                "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                "type": "string"
              },
              "inherited": {
                "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                "type": "boolean"
              }
            }
          }
        },
        "expirationDate": {
          "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
          "type": "string",
          "format": "date-time"
        },
        "teamDrivePermissionDetails": {
          "description": "Output only. Deprecated: Use `permissionDetails` instead.",
          "readOnly": true,
          "deprecated": true,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "teamDrivePermissionType": {
                "description": "Output only. Deprecated: Use `permissionDetails/permissionType` instead.",
                "deprecated": true,
                "type": "string"
              },
              "role": {
                "description": "Output only. Deprecated: Use `permissionDetails/role` instead.",
                "deprecated": true,
                "type": "string"
              },
              "additionalRoles": {
                "description": "Output only. Deprecated: Use `permissionDetails/additionalRoles` instead.",
                "deprecated": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "inheritedFrom": {
                "description": "Output only. Deprecated: Use `permissionDetails/inheritedFrom` instead.",
                "deprecated": true,
                "type": "string"
              },
              "inherited": {
                "description": "Output only. Deprecated: Use `permissionDetails/inherited` instead.",
                "deprecated": true,
                "type": "boolean"
              }
            }
          }
        },
        "deleted": {
          "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
          "type": "boolean"
        },
        "view": {
          "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
          "type": "string"
        },
        "pendingOwner": {
          "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
          "type": "boolean"
        }
      }
    },
    "ParentReference": {
      "id": "ParentReference",
      "description": "A reference to a file's parent. Some resource methods (such as `parents.get`) require a `parentId`. Use the `parents.list` method to retrieve the ID for a parent.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "Output only. A link back to this reference.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the parent.",
          "annotations": {
            "required": [
              "drive.parents.insert"
            ]
          },
          "type": "string"
        },
        "isRoot": {
          "description": "Output only. Whether or not the parent is the root folder.",
          "type": "boolean"
        },
        "kind": {
          "description": "Output only. This is always `drive#parentReference`.",
          "default": "drive#parentReference",
          "type": "string"
        },
        "parentLink": {
          "description": "Output only. A link to the parent.",
          "type": "string"
        }
      }
    },
    "Property": {
      "id": "Property",
      "description": "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property Some resource methods (such as `properties.update`) require a `propertyKey`. Use the `properties.list` method to retrieve the key for a property.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "Output only. The link back to this property.",
          "type": "string"
        },
        "value": {
          "description": "The value of this property.",
          "type": "string"
        },
        "visibility": {
          "description": "The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#property`.",
          "default": "drive#property",
          "type": "string"
        },
        "etag": {
          "description": "Output only. ETag of the property.",
          "type": "string"
        },
        "key": {
          "description": "The key of this property.",
          "annotations": {
            "required": [
              "drive.properties.insert"
            ]
          },
          "type": "string"
        }
      }
    },
    "ContentRestriction": {
      "id": "ContentRestriction",
      "description": "A restriction for accessing the content of the file.",
      "type": "object",
      "properties": {
        "readOnly": {
          "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.",
          "type": "boolean"
        },
        "reason": {
          "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set `readOnly=true`.",
          "type": "string"
        },
        "type": {
          "description": "Output only. The type of the content restriction. Currently the only possible value is `globalContentRestriction`.",
          "type": "string"
        },
        "restrictingUser": {
          "description": "Output only. The user who set the content restriction. Only populated if `readOnly` is true.",
          "$ref": "User"
        },
        "restrictionDate": {
          "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.",
          "type": "string",
          "format": "date-time"
        },
        "ownerRestricted": {
          "description": "Whether the content restriction can only be modified or removed by a user who owns the file. For files in shared drives, any user with `organizer` capabilities can modify or remove this content restriction.",
          "type": "boolean"
        },
        "systemRestricted": {
          "description": "Output only. Whether the content restriction was applied by the system, for example due to an esignature. Users cannot modify or remove system restricted content restrictions.",
          "type": "boolean"
        }
      }
    },
    "Label": {
      "id": "Label",
      "description": "Representation of a label and label fields.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the label.",
          "type": "string"
        },
        "revisionId": {
          "description": "The revision ID of the label.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#label`",
          "default": "drive#label",
          "type": "string"
        },
        "fields": {
          "description": "A map of the fields on the label, keyed by the field's ID.",
          "type": "object",
          "additionalProperties": {
            "$ref": "LabelField"
          }
        }
      }
    },
    "LabelField": {
      "id": "LabelField",
      "description": "Representation of field, which is a typed key-value pair.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#labelField`.",
          "default": "drive#labelField",
          "type": "string"
        },
        "id": {
          "description": "The identifier of this label field.",
          "type": "string"
        },
        "valueType": {
          "description": "The field type. While new values may be supported in the future, the following are currently allowed: * `dateString` * `integer` * `selection` * `text` * `user`",
          "type": "string"
        },
        "dateString": {
          "description": "Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "integer": {
          "description": "Only present if `valueType` is `integer`.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "selection": {
          "description": "Only present if `valueType` is `selection`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "description": "Only present if `valueType` is `text`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "description": "Only present if `valueType` is `user`.",
          "type": "array",
          "items": {
            "$ref": "User"
          }
        }
      }
    },
    "TeamDrive": {
      "id": "TeamDrive",
      "description": "Deprecated: Use the `drive` collection instead.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this Team Drive which is also the ID of the top level folder of this Team Drive.",
          "type": "string"
        },
        "name": {
          "description": "The name of this Team Drive.",
          "annotations": {
            "required": [
              "drive.teamdrives.insert"
            ]
          },
          "type": "string"
        },
        "colorRgb": {
          "description": "The color of this Team Drive as an RGB hex string. It can only be set on a `drive.teamdrives.update` request that does not set `themeId`.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#teamDrive`",
          "default": "drive#teamDrive",
          "type": "string"
        },
        "backgroundImageLink": {
          "description": "A short-lived link to this Team Drive's background image.",
          "type": "string"
        },
        "capabilities": {
          "description": "Capabilities the current user has on this Team Drive.",
          "type": "object",
          "properties": {
            "canAddChildren": {
              "description": "Whether the current user can add children to folders in this Team Drive.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Whether the current user can comment on files in this Team Drive.",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Whether the current user can copy files in this Team Drive.",
              "type": "boolean"
            },
            "canDeleteTeamDrive": {
              "description": "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive.",
              "type": "boolean"
            },
            "canDownload": {
              "description": "Whether the current user can download files in this Team Drive.",
              "type": "boolean"
            },
            "canEdit": {
              "description": "Whether the current user can edit files in this Team Drive",
              "type": "boolean"
            },
            "canListChildren": {
              "description": "Whether the current user can list the children of folders in this Team Drive.",
              "type": "boolean"
            },
            "canManageMembers": {
              "description": "Whether the current user can add members to this Team Drive or remove them or change their role.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Whether the current user can read the revisions resource of files in this Team Drive.",
              "type": "boolean"
            },
            "canRemoveChildren": {
              "description": "Deprecated: Use `canDeleteChildren` or `canTrashChildren` instead.",
              "deprecated": true,
              "type": "boolean"
            },
            "canRename": {
              "description": "Whether the current user can rename files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canRenameTeamDrive": {
              "description": "Whether the current user can rename this Team Drive.",
              "type": "boolean"
            },
            "canChangeTeamDriveBackground": {
              "description": "Whether the current user can change the background of this Team Drive.",
              "type": "boolean"
            },
            "canShare": {
              "description": "Whether the current user can share files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "description": "Whether the current user can change the `copyRequiresWriterPermission` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Whether the current user can change the `domainUsersOnly` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "description": "Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canChangeTeamMembersOnlyRestriction": {
              "description": "Whether the current user can change the `teamMembersOnly` restriction of this Team Drive.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Whether the current user can delete children from folders in this Team Drive.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Whether the current user can trash children from folders in this Team Drive.",
              "type": "boolean"
            },
            "canResetTeamDriveRestrictions": {
              "description": "Whether the current user can reset the Team Drive restrictions to defaults.",
              "type": "boolean"
            }
          }
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `teamDriveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.teamdrives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on `drive.teamdrives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The ID of an image file in Drive to use for the background image.",
              "type": "string"
            },
            "xCoordinate": {
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "type": "number",
              "format": "float"
            },
            "yCoordinate": {
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "type": "number",
              "format": "float"
            },
            "width": {
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
              "type": "number",
              "format": "float"
            }
          }
        },
        "createdDate": {
          "description": "The time at which the Team Drive was created (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "restrictions": {
          "description": "A set of restrictions that apply to this Team Drive or items inside this Team Drive.",
          "type": "object",
          "properties": {
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this Team Drive.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "description": "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive.",
              "type": "boolean"
            },
            "teamMembersOnly": {
              "description": "Whether access to items inside this Team Drive is restricted to members of this Team Drive.",
              "type": "boolean"
            },
            "adminManagedRestrictions": {
              "description": "Whether administrative privileges on this Team Drive are required to modify restrictions.",
              "type": "boolean"
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.",
              "type": "boolean"
            }
          }
        },
        "orgUnitId": {
          "description": "The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`.",
          "type": "string"
        }
      }
    },
    "Drive": {
      "id": "Drive",
      "description": "Representation of a shared drive. Some resource methods (such as `drives.update`) require a `driveId`. Use the `drives.list` method to retrieve the ID for a shared drive.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The ID of this shared drive which is also the ID of the top level folder of this shared drive.",
          "type": "string"
        },
        "name": {
          "description": "The name of this shared drive.",
          "annotations": {
            "required": [
              "drive.drives.insert"
            ]
          },
          "type": "string"
        },
        "colorRgb": {
          "description": "The color of this shared drive as an RGB hex string. It can only be set on a `drive.drives.update` request that does not set `themeId`.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#drive`",
          "default": "drive#drive",
          "type": "string"
        },
        "backgroundImageLink": {
          "description": "Output only. A short-lived link to this shared drive's background image.",
          "type": "string"
        },
        "capabilities": {
          "description": "Output only. Capabilities the current user has on this shared drive.",
          "type": "object",
          "properties": {
            "canAddChildren": {
              "description": "Output only. Whether the current user can add children to folders in this shared drive.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on files in this shared drive.",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Output only. Whether the current user can copy files in this shared drive.",
              "type": "boolean"
            },
            "canDeleteDrive": {
              "description": "Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.",
              "type": "boolean"
            },
            "canDownload": {
              "description": "Output only. Whether the current user can download files in this shared drive.",
              "type": "boolean"
            },
            "canEdit": {
              "description": "Output only. Whether the current user can edit files in this shared drive",
              "type": "boolean"
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of folders in this shared drive.",
              "type": "boolean"
            },
            "canManageMembers": {
              "description": "Output only. Whether the current user can add members to this shared drive or remove them or change their role.",
              "type": "boolean"
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of files in this shared drive.",
              "type": "boolean"
            },
            "canRename": {
              "description": "Output only. Whether the current user can rename files or folders in this shared drive.",
              "type": "boolean"
            },
            "canRenameDrive": {
              "description": "Output only. Whether the current user can rename this shared drive.",
              "type": "boolean"
            },
            "canChangeDriveBackground": {
              "description": "Output only. Whether the current user can change the background of this shared drive.",
              "type": "boolean"
            },
            "canShare": {
              "description": "Output only. Whether the current user can share files or folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive.",
              "type": "boolean"
            },
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canChangeDriveMembersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "description": "Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive.",
              "type": "boolean"
            },
            "canResetDriveRestrictions": {
              "description": "Output only. Whether the current user can reset the shared drive restrictions to defaults.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children from folders in this shared drive.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children from folders in this shared drive.",
              "type": "boolean"
            }
          }
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `driveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.drives.insert` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on `drive.drives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The ID of an image file in Google Drive to use for the background image.",
              "type": "string"
            },
            "xCoordinate": {
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "type": "number",
              "format": "float"
            },
            "yCoordinate": {
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "type": "number",
              "format": "float"
            },
            "width": {
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
              "type": "number",
              "format": "float"
            }
          }
        },
        "createdDate": {
          "description": "The time at which the shared drive was created (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "hidden": {
          "description": "Whether the shared drive is hidden from default view.",
          "type": "boolean"
        },
        "restrictions": {
          "description": "A set of restrictions that apply to this shared drive or items inside this shared drive.",
          "type": "object",
          "properties": {
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this shared drive.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "description": "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.",
              "type": "boolean"
            },
            "driveMembersOnly": {
              "description": "Whether access to items inside this shared drive is restricted to its members.",
              "type": "boolean"
            },
            "adminManagedRestrictions": {
              "description": "Whether administrative privileges on this shared drive are required to modify restrictions.",
              "type": "boolean"
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.",
              "type": "boolean"
            }
          }
        },
        "orgUnitId": {
          "description": "Output only. The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`.",
          "type": "string"
        }
      }
    },
    "StartPageToken": {
      "id": "StartPageToken",
      "type": "object",
      "properties": {
        "startPageToken": {
          "description": "The starting page token for listing changes.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#startPageToken\"`.",
          "default": "drive#startPageToken",
          "type": "string"
        }
      }
    },
    "ChangeList": {
      "id": "ChangeList",
      "description": "A list of changes for a user.",
      "type": "object",
      "properties": {
        "largestChangeId": {
          "description": "The current largest change ID.",
          "type": "string",
          "format": "int64"
        },
        "nextPageToken": {
          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#changeList`.",
          "default": "drive#changeList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "newStartPageToken": {
          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextLink": {
          "description": "A link to the next page of changes.",
          "type": "string"
        },
        "items": {
          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Change"
          }
        }
      }
    },
    "Channel": {
      "id": "Channel",
      "description": "A notification channel used to watch for resource changes.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "type": "boolean"
        },
        "id": {
          "description": "A UUID or similar unique string that identifies this channel.",
          "type": "string"
        },
        "resourceId": {
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "type": "string"
        },
        "resourceUri": {
          "description": "A version-specific identifier for the watched resource.",
          "type": "string"
        },
        "token": {
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "type": "string"
        },
        "expiration": {
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "type": "string",
          "format": "int64"
        },
        "type": {
          "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" or \"webhook\".",
          "type": "string"
        },
        "address": {
          "description": "The address where notifications are delivered for this channel.",
          "type": "string"
        },
        "params": {
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.",
          "default": "api#channel",
          "type": "string"
        }
      }
    },
    "ChildReference": {
      "id": "ChildReference",
      "description": "A reference to a folder's child. Some resource methods (such as `children.get`) require a `childId`. Use the `children.list` method to retrieve the ID of the child.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the child.",
          "annotations": {
            "required": [
              "drive.children.insert"
            ]
          },
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. A link back to this reference.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#childReference`.",
          "default": "drive#childReference",
          "type": "string"
        },
        "childLink": {
          "description": "Output only. A link to the child.",
          "type": "string"
        }
      }
    },
    "ChildList": {
      "id": "ChildList",
      "description": "A list of children of a file.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#childList`.",
          "default": "drive#childList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextLink": {
          "description": "A link to the next page of children.",
          "type": "string"
        },
        "items": {
          "description": "The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "ChildReference"
          }
        }
      }
    },
    "Comment": {
      "id": "Comment",
      "description": "A comment on a file in Google Drive. Some resource methods (such as `comments.update`) require a `commentId`. Use the `comments.list` method to retrieve the ID for a comment in a file.",
      "type": "object",
      "properties": {
        "commentId": {
          "description": "Output only. The ID of the comment.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#comment`.",
          "default": "drive#comment",
          "type": "string"
        },
        "createdDate": {
          "description": "The date when this comment was first created.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedDate": {
          "description": "The date when this comment or any of its replies were last modified.",
          "type": "string",
          "format": "date-time"
        },
        "fileId": {
          "description": "Output only. The file which this comment is addressing.",
          "type": "string"
        },
        "status": {
          "description": "Output only. The status of this comment. Status can be changed by posting a reply to a comment with the desired status. * `open` - The comment is still open. * `resolved` - The comment has been resolved by one of its replies.",
          "type": "string"
        },
        "anchor": {
          "description": "A region of the document represented as a JSON string. For details on defining anchor properties, refer to [Add comments and replies](https://developers.google.com/drive/api/v2/manage-comments).",
          "type": "string"
        },
        "replies": {
          "description": "Output only. Replies to this post.",
          "type": "array",
          "items": {
            "$ref": "CommentReply"
          }
        },
        "author": {
          "description": "Output only. The author of the comment. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "deleted": {
          "description": "Output only. Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed.",
          "type": "boolean"
        },
        "selfLink": {
          "description": "Output only. A link back to this comment.",
          "type": "string"
        },
        "htmlContent": {
          "description": "Output only. HTML formatted content for this comment.",
          "type": "string"
        },
        "content": {
          "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
          "annotations": {
            "required": [
              "drive.comments.insert",
              "drive.comments.patch",
              "drive.comments.update"
            ]
          },
          "type": "string"
        },
        "context": {
          "description": "The context of the file which is being commented on.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The MIME type of the context snippet.",
              "type": "string"
            },
            "value": {
              "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about.",
              "type": "string"
            }
          }
        },
        "fileTitle": {
          "description": "Output only. The title of the file which this comment is addressing.",
          "type": "string"
        }
      }
    },
    "CommentReply": {
      "id": "CommentReply",
      "description": "A comment on a file in Google Drive. Some resource methods (such as `replies.update`) require a `replyId`. Use the `replies.list` method to retrieve the ID for a reply.",
      "type": "object",
      "properties": {
        "replyId": {
          "description": "Output only. The ID of the reply.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#commentReply`.",
          "default": "drive#commentReply",
          "type": "string"
        },
        "createdDate": {
          "description": "The date when this reply was first created.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedDate": {
          "description": "The date when this reply was last modified.",
          "type": "string",
          "format": "date-time"
        },
        "verb": {
          "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are: * `resolve` - To resolve a comment. * `reopen` - To reopen (un-resolve) a comment.",
          "type": "string"
        },
        "author": {
          "description": "Output only. The author of the reply. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "deleted": {
          "description": "Output only. Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.",
          "type": "boolean"
        },
        "htmlContent": {
          "description": "Output only. HTML formatted content for this reply.",
          "type": "string"
        },
        "content": {
          "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
          "annotations": {
            "required": [
              "drive.replies.patch",
              "drive.replies.update"
            ]
          },
          "type": "string"
        }
      }
    },
    "CommentList": {
      "id": "CommentList",
      "description": "A list of comments on a file in Google Drive.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#commentList`.",
          "default": "drive#commentList",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextLink": {
          "description": "A link to the next page of comments.",
          "type": "string"
        },
        "items": {
          "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Comment"
          }
        },
        "nextPageToken": {
          "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        }
      }
    },
    "DriveList": {
      "id": "DriveList",
      "description": "A list of shared drives.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#driveList`",
          "default": "drive#driveList",
          "type": "string"
        },
        "items": {
          "description": "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Drive"
          }
        }
      }
    },
    "GeneratedIds": {
      "id": "GeneratedIds",
      "description": "A list of generated IDs which can be provided in insert requests",
      "type": "object",
      "properties": {
        "ids": {
          "description": "The IDs generated for the requesting user in the specified space.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "space": {
          "description": "The type of file that can be created with these IDs.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#generatedIds`",
          "default": "drive#generatedIds",
          "type": "string"
        }
      }
    },
    "FileList": {
      "id": "FileList",
      "description": "A list of files.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#fileList`.",
          "default": "drive#fileList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "incompleteSearch": {
          "description": "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"drive\".",
          "type": "boolean"
        },
        "nextLink": {
          "description": "A link to the next page of files.",
          "type": "string"
        },
        "items": {
          "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "File"
          }
        }
      }
    },
    "LabelList": {
      "id": "LabelList",
      "description": "A list of labels applied to a file.",
      "type": "object",
      "properties": {
        "items": {
          "description": "The list of labels.",
          "type": "array",
          "items": {
            "$ref": "Label"
          }
        },
        "nextPageToken": {
          "description": "The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#labelList`",
          "default": "drive#labelList",
          "type": "string"
        }
      }
    },
    "ModifyLabelsRequest": {
      "id": "ModifyLabelsRequest",
      "description": "A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail atomically.",
      "type": "object",
      "properties": {
        "labelModifications": {
          "description": "The list of modifications to apply to the labels on the file.",
          "type": "array",
          "items": {
            "$ref": "LabelModification"
          }
        },
        "kind": {
          "description": "This is always `drive#modifyLabelsRequest`.",
          "default": "drive#modifyLabelsRequest",
          "type": "string"
        }
      }
    },
    "LabelModification": {
      "id": "LabelModification",
      "description": "A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file.",
      "type": "object",
      "properties": {
        "labelId": {
          "description": "The ID of the label to modify.",
          "annotations": {
            "required": [
              "drive.files.modifyLabels"
            ]
          },
          "type": "string"
        },
        "fieldModifications": {
          "description": "The list of modifications to this label's fields.",
          "type": "array",
          "items": {
            "$ref": "LabelFieldModification"
          }
        },
        "removeLabel": {
          "description": "If true, the label will be removed from the file.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always `drive#labelModification`.",
          "default": "drive#labelModification",
          "type": "string"
        }
      }
    },
    "LabelFieldModification": {
      "id": "LabelFieldModification",
      "description": "A modification to a label's field.",
      "type": "object",
      "properties": {
        "fieldId": {
          "description": "The ID of the field to be modified.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#labelFieldModification`.",
          "default": "drive#labelFieldModification",
          "type": "string"
        },
        "setDateValues": {
          "description": "Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "setTextValues": {
          "description": "Sets the value of a `text` field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "setSelectionValues": {
          "description": "Replaces a `selection` field with these new values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "setIntegerValues": {
          "description": "Replaces the value of an `integer` field with these new values.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "setUserValues": {
          "description": "Replaces a `user` field with these new values. The values must be valid email addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsetValues": {
          "description": "Unsets the values for this field.",
          "type": "boolean"
        }
      }
    },
    "ModifyLabelsResponse": {
      "id": "ModifyLabelsResponse",
      "description": "Response to a ModifyLabels request. This contains only those labels which were added or updated by the request.",
      "type": "object",
      "properties": {
        "modifiedLabels": {
          "description": "The list of labels which were added or updated by the request.",
          "type": "array",
          "items": {
            "$ref": "Label"
          }
        },
        "kind": {
          "description": "This is always `drive#modifyLabelsResponse`",
          "default": "drive#modifyLabelsResponse",
          "type": "string"
        }
      }
    },
    "ParentList": {
      "id": "ParentList",
      "description": "A list of a file's parents.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#parentList`.",
          "default": "drive#parentList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "description": "The list of parents.",
          "type": "array",
          "items": {
            "$ref": "ParentReference"
          }
        }
      }
    },
    "PermissionId": {
      "id": "PermissionId",
      "description": "An ID for a user or group as seen in Permission items.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#permissionId`.",
          "default": "drive#permissionId",
          "type": "string"
        },
        "id": {
          "description": "The permission ID.",
          "type": "string"
        }
      }
    },
    "PermissionList": {
      "id": "PermissionList",
      "description": "A list of permissions associated with a file.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#permissionList`.",
          "default": "drive#permissionList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "description": "The list of permissions.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        }
      }
    },
    "PropertyList": {
      "id": "PropertyList",
      "description": "A collection of properties, key-value pairs that are either public or private to an application.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#propertyList`.",
          "default": "drive#propertyList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "The link back to this list.",
          "type": "string"
        },
        "items": {
          "description": "The list of properties.",
          "type": "array",
          "items": {
            "$ref": "Property"
          }
        }
      }
    },
    "CommentReplyList": {
      "id": "CommentReplyList",
      "description": "A list of replies to a comment on a file in Google Drive.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `drive#commentReplyList`.",
          "default": "drive#commentReplyList",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "nextLink": {
          "description": "A link to the next page of replies.",
          "type": "string"
        },
        "items": {
          "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "CommentReply"
          }
        },
        "nextPageToken": {
          "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        }
      }
    },
    "Revision": {
      "id": "Revision",
      "description": "A revision of a file. Some resource methods (such as `revisions.update`) require a `revisionId`. Use the `revisions.list` method to retrieve the ID for a revision.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The ID of the revision.",
          "type": "string"
        },
        "mimeType": {
          "description": "Output only. The MIME type of the revision.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. This is always `drive#revision`.",
          "default": "drive#revision",
          "type": "string"
        },
        "published": {
          "description": "Whether this revision is published. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. The ETag of the revision.",
          "type": "string"
        },
        "exportLinks": {
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pinned": {
          "description": "Whether this revision is pinned to prevent automatic purging. If not set, the revision is automatically purged 30 days after newer content is uploaded. This field can only be modified on files with content stored in Drive, excluding Docs Editors files. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter. Pinned revisions are stored indefinitely using additional storage quota, up to a maximum of 200 revisions.",
          "type": "boolean"
        },
        "md5Checksum": {
          "description": "Output only. An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive.",
          "type": "string"
        },
        "modifiedDate": {
          "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
          "type": "string",
          "format": "date-time"
        },
        "lastModifyingUserName": {
          "description": "Output only. Name of the last user to modify this revision.",
          "type": "string"
        },
        "downloadUrl": {
          "description": "Output only. Short term download URL for the file. This will only be populated on files with content stored in Drive.",
          "type": "string"
        },
        "publishAuto": {
          "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "publishedOutsideDomain": {
          "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Docs Editors files.",
          "type": "boolean"
        },
        "publishedLink": {
          "description": "Output only. A link to the published revision. This is only populated for Google Sites files.",
          "type": "string"
        },
        "fileSize": {
          "description": "Output only. The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
          "type": "string",
          "format": "int64"
        },
        "originalFilename": {
          "description": "Output only. The original filename when this revision was created. This will only be populated on files with content stored in Drive.",
          "type": "string"
        },
        "lastModifyingUser": {
          "description": "Output only. The last user to modify this revision.",
          "$ref": "User"
        },
        "selfLink": {
          "description": "Output only. A link back to this revision.",
          "type": "string"
        }
      }
    },
    "RevisionList": {
      "id": "RevisionList",
      "description": "A list of revisions of a file.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#revisionList`.",
          "default": "drive#revisionList",
          "type": "string"
        },
        "etag": {
          "description": "The ETag of the list.",
          "type": "string"
        },
        "selfLink": {
          "description": "A link back to this list.",
          "type": "string"
        },
        "items": {
          "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Revision"
          }
        }
      }
    },
    "TeamDriveList": {
      "id": "TeamDriveList",
      "description": "A list of Team Drives.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of Team Drives.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `drive#teamDriveList`",
          "default": "drive#teamDriveList",
          "type": "string"
        },
        "items": {
          "description": "The list of Team Drives.",
          "type": "array",
          "items": {
            "$ref": "TeamDrive"
          }
        }
      }
    }
  },
  "title": "Google Drive API",
  "resources": {
    "about": {
      "methods": {
        "get": {
          "id": "drive.about.get",
          "path": "about",
          "flatPath": "about",
          "httpMethod": "GET",
          "parameters": {
            "includeSubscribed": {
              "description": "Whether to count changes outside the My Drive hierarchy. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the `maxChangeIdCount`.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "maxChangeIdCount": {
              "description": "Maximum number of remaining change IDs to count",
              "default": "1",
              "location": "query",
              "type": "string",
              "format": "int64"
            },
            "startChangeId": {
              "description": "Change ID to start counting from when calculating number of remaining change IDs",
              "location": "query",
              "type": "string",
              "format": "int64"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "About"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets the information about the current user along with Drive API settings"
        }
      }
    },
    "apps": {
      "methods": {
        "get": {
          "id": "drive.apps.get",
          "path": "apps/{appId}",
          "flatPath": "apps/{appId}",
          "httpMethod": "GET",
          "parameters": {
            "appId": {
              "description": "The ID of the app.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "appId"
          ],
          "response": {
            "$ref": "App"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific app."
        },
        "list": {
          "id": "drive.apps.list",
          "path": "apps",
          "flatPath": "apps",
          "httpMethod": "GET",
          "parameters": {
            "appFilterExtensions": {
              "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If `appFilterMimeTypes` are provided as well, the result is a union of the two resulting app lists.",
              "default": "",
              "location": "query",
              "type": "string"
            },
            "appFilterMimeTypes": {
              "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If `appFilterExtensions` are provided as well, the result is a union of the two resulting app lists.",
              "default": "",
              "location": "query",
              "type": "string"
            },
            "languageCode": {
              "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "AppList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive.apps.readonly"
          ],
          "description": "Lists a user's installed apps."
        }
      }
    },
    "changes": {
      "methods": {
        "get": {
          "id": "drive.changes.get",
          "path": "changes/{changeId}",
          "flatPath": "changes/{changeId}",
          "httpMethod": "GET",
          "parameters": {
            "changeId": {
              "description": "The ID of the change.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "driveId": {
              "description": "The shared drive from which the change will be returned.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "changeId"
          ],
          "response": {
            "$ref": "Change"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Deprecated: Use `changes.getStartPageToken` and `changes.list` to retrieve recent changes."
        },
        "getStartPageToken": {
          "id": "drive.changes.getStartPageToken",
          "path": "changes/startPageToken",
          "flatPath": "changes/startPageToken",
          "httpMethod": "GET",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "StartPageToken"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets the starting pageToken for listing future changes."
        },
        "list": {
          "id": "drive.changes.list",
          "path": "changes",
          "flatPath": "changes",
          "httpMethod": "GET",
          "parameters": {
            "driveId": {
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
              "location": "query",
              "type": "string"
            },
            "includeCorpusRemovals": {
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includeDeleted": {
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "includeItemsFromAllDrives": {
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includeSubscribed": {
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "includeTeamDriveItems": {
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "maxResults": {
              "description": "Maximum number of changes to return.",
              "default": "100",
              "minimum": "1",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method.",
              "location": "query",
              "type": "string"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`.",
              "location": "query",
              "type": "string"
            },
            "startChangeId": {
              "description": "Deprecated: Use `pageToken` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "format": "int64"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "supportsSubscription": true,
          "response": {
            "$ref": "ChangeList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists the changes for a user or shared drive."
        },
        "watch": {
          "id": "drive.changes.watch",
          "path": "changes/watch",
          "flatPath": "changes/watch",
          "httpMethod": "POST",
          "parameters": {
            "driveId": {
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
              "location": "query",
              "type": "string"
            },
            "includeCorpusRemovals": {
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includeDeleted": {
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "includeItemsFromAllDrives": {
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includeSubscribed": {
              "description": "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "includeTeamDriveItems": {
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "maxResults": {
              "description": "Maximum number of changes to return.",
              "default": "100",
              "minimum": "1",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response or to the response from the getStartPageToken method.",
              "location": "query",
              "type": "string"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, `appDataFolder` and `photos`.",
              "location": "query",
              "type": "string"
            },
            "startChangeId": {
              "description": "Deprecated: Use `pageToken` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "format": "int64"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "supportsSubscription": true,
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "response": {
            "$ref": "Channel"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Subscribe to changes for a user."
        }
      }
    },
    "channels": {
      "methods": {
        "stop": {
          "id": "drive.channels.stop",
          "path": "channels/stop",
          "flatPath": "channels/stop",
          "httpMethod": "POST",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Stops watching resources through this channel."
        }
      }
    },
    "children": {
      "methods": {
        "delete": {
          "id": "drive.children.delete",
          "path": "files/{folderId}/children/{childId}",
          "flatPath": "files/{folderId}/children/{childId}",
          "httpMethod": "DELETE",
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "childId": {
              "description": "The ID of the child.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "folderId",
            "childId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Removes a child from a folder."
        },
        "get": {
          "id": "drive.children.get",
          "path": "files/{folderId}/children/{childId}",
          "flatPath": "files/{folderId}/children/{childId}",
          "httpMethod": "GET",
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "childId": {
              "description": "The ID of the child.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "folderId",
            "childId"
          ],
          "response": {
            "$ref": "ChildReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific child reference."
        },
        "insert": {
          "id": "drive.children.insert",
          "path": "files/{folderId}/children",
          "flatPath": "files/{folderId}/children",
          "httpMethod": "POST",
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "folderId"
          ],
          "request": {
            "$ref": "ChildReference"
          },
          "response": {
            "$ref": "ChildReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Inserts a file into a folder."
        },
        "list": {
          "id": "drive.children.list",
          "path": "files/{folderId}/children",
          "flatPath": "files/{folderId}/children",
          "httpMethod": "GET",
          "parameters": {
            "folderId": {
              "description": "The ID of the folder.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of children to return.",
              "default": "100",
              "minimum": "0",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "orderBy": {
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, and `title`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "description": "Page token for children.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "description": "Query string for searching children.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "folderId"
          ],
          "response": {
            "$ref": "ChildList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a folder's children."
        }
      }
    },
    "comments": {
      "methods": {
        "delete": {
          "id": "drive.comments.delete",
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a comment."
        },
        "get": {
          "id": "drive.comments.get",
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "includeDeleted": {
              "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a comment by ID."
        },
        "insert": {
          "id": "drive.comments.insert",
          "path": "files/{fileId}/comments",
          "flatPath": "files/{fileId}/comments",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Creates a new comment on the given file."
        },
        "list": {
          "id": "drive.comments.list",
          "path": "files/{fileId}/comments",
          "flatPath": "files/{fileId}/comments",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "includeDeleted": {
              "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "maxResults": {
              "description": "The maximum number of discussions to include in the response, used for paging.",
              "default": "20",
              "minimum": "0",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
              "location": "query",
              "type": "string"
            },
            "updatedMin": {
              "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "CommentList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's comments."
        },
        "patch": {
          "id": "drive.comments.patch",
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates an existing comment."
        },
        "update": {
          "id": "drive.comments.update",
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "request": {
            "$ref": "Comment"
          },
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates an existing comment."
        }
      }
    },
    "drives": {
      "methods": {
        "delete": {
          "id": "drive.drives.delete",
          "path": "drives/{driveId}",
          "flatPath": "drives/{driveId}",
          "httpMethod": "DELETE",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "allowItemDeletion": {
              "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Permanently deletes a shared drive for which the user is an `organizer`. The shared drive cannot contain any untrashed items."
        },
        "get": {
          "id": "drive.drives.get",
          "path": "drives/{driveId}",
          "flatPath": "drives/{driveId}",
          "httpMethod": "GET",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a shared drive's metadata by ID."
        },
        "hide": {
          "id": "drive.drives.hide",
          "path": "drives/{driveId}/hide",
          "flatPath": "drives/{driveId}/hide",
          "httpMethod": "POST",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Hides a shared drive from the default view."
        },
        "insert": {
          "id": "drive.drives.insert",
          "path": "drives",
          "flatPath": "drives",
          "httpMethod": "POST",
          "parameters": {
            "requestId": {
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
              "location": "query",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "requestId"
          ],
          "request": {
            "$ref": "Drive"
          },
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Creates a new shared drive."
        },
        "list": {
          "id": "drive.drives.list",
          "path": "drives",
          "flatPath": "drives",
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "description": "Maximum number of shared drives to return per page.",
              "default": "10",
              "minimum": "1",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token for shared drives.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "description": "Query string for searching shared drives.",
              "location": "query",
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "DriveList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": " Lists the user's shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/drive/api/guides/search-shareddrives) guide."
        },
        "unhide": {
          "id": "drive.drives.unhide",
          "path": "drives/{driveId}/unhide",
          "flatPath": "drives/{driveId}/unhide",
          "httpMethod": "POST",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Restores a shared drive to the default view."
        },
        "update": {
          "id": "drive.drives.update",
          "path": "drives/{driveId}",
          "flatPath": "drives/{driveId}",
          "httpMethod": "PUT",
          "parameters": {
            "driveId": {
              "description": "The ID of the shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "request": {
            "$ref": "Drive"
          },
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Updates the metadata for a shared drive."
        }
      }
    },
    "files": {
      "methods": {
        "copy": {
          "id": "drive.files.copy",
          "path": "files/{fileId}/copy",
          "flatPath": "files/{fileId}/copy",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to copy.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "convert": {
              "description": "Whether to convert this file to the corresponding Docs Editors format.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Copying files into multiple folders is no longer supported. Use shortcuts instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "ocr": {
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "ocrLanguage": {
              "description": "If `ocr` is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            },
            "pinned": {
              "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "location": "query",
              "type": "string"
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "location": "query",
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
              "default": "DEFAULT",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ],
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ]
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "File"
          },
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.photos.readonly"
          ],
          "description": "Creates a copy of the specified file."
        },
        "delete": {
          "id": "drive.files.delete",
          "path": "files/{fileId}",
          "flatPath": "files/{fileId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to delete.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive, the user must be an `organizer` on the parent folder. If the target is a folder, all descendants owned by the user are also deleted."
        },
        "emptyTrash": {
          "id": "drive.files.emptyTrash",
          "path": "files/trash",
          "flatPath": "files/trash",
          "httpMethod": "DELETE",
          "parameters": {
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item is placed under its owner's root.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "driveId": {
              "description": "If set, empties the trash of the provided shared drive.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Permanently deletes all of the user's trashed files."
        },
        "export": {
          "id": "drive.files.export",
          "path": "files/{fileId}/export",
          "flatPath": "files/{fileId}/export",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "mimeType": {
              "description": "Required. The MIME type of the format requested for this export.",
              "location": "query",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "mimeType"
          ],
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB."
        },
        "generateIds": {
          "id": "drive.files.generateIds",
          "path": "files/generateIds",
          "flatPath": "files/generateIds",
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "description": "Maximum number of IDs to return.",
              "default": "10",
              "minimum": "1",
              "maximum": "1000",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "space": {
              "description": "The space in which the IDs can be used to create new files. Supported values are `drive` and `appDataFolder`. (Default: `drive`)",
              "default": "drive",
              "location": "query",
              "type": "string"
            },
            "type": {
              "description": "The type of items which the IDs can be used for. Supported values are `files` and `shortcuts`. Note that `shortcuts` are only supported in the `drive` `space`. (Default: `files`)",
              "default": "files",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "GeneratedIds"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Generates a set of file IDs which can be provided in insert or copy requests."
        },
        "get": {
          "id": "drive.files.get",
          "path": "files/{fileId}",
          "flatPath": "files/{fileId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID for the file in question.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "acknowledgeAbuse": {
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "projection": {
              "description": "Deprecated: This parameter has no function.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "enum": [
                "BASIC",
                "FULL"
              ]
            },
            "revisionId": {
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "updateViewedDate": {
              "description": "Deprecated: Use `files.update` with `modifiedDateBehavior=noChange, updateViewedDate=true` and an empty request body.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "supportsSubscription": true,
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": " Gets a file's metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/drive/api/reference/rest/v2/files/export) instead. For more information, see [Download & export files](/drive/api/guides/manage-downloads)."
        },
        "insert": {
          "id": "drive.files.insert",
          "path": "files",
          "flatPath": "files",
          "httpMethod": "POST",
          "parameters": {
            "convert": {
              "description": "Whether to convert this file to the corresponding Docs Editors format.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Creating files in multiple folders is no longer supported.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "ocr": {
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            },
            "pinned": {
              "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "location": "query",
              "type": "string"
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "location": "query",
              "type": "string"
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the content as indexable text.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "visibility": {
              "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
              "default": "DEFAULT",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
              ],
              "enum": [
                "DEFAULT",
                "PRIVATE"
              ]
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "maxSize": "5497558138880",
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
              },
              "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
              }
            }
          },
          "request": {
            "$ref": "File"
          },
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": " Inserts a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.insert` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `title` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"title\": \"cat.jpg\"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file's MIME type."
        },
        "list": {
          "id": "drive.files.list",
          "path": "files",
          "flatPath": "files",
          "httpMethod": "GET",
          "parameters": {
            "corpora": {
              "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are `default`, `domain`, `drive` and `allDrives`. Prefer `default` or `drive` to `allDrives` for efficiency.",
              "location": "query",
              "type": "string"
            },
            "corpus": {
              "description": "Deprecated: The body of items (files/documents) to which the query applies. Use `corpora` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
              ],
              "enum": [
                "DEFAULT",
                "DOMAIN"
              ]
            },
            "driveId": {
              "description": "ID of the shared drive to search.",
              "location": "query",
              "type": "string"
            },
            "includeItemsFromAllDrives": {
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includeTeamDriveItems": {
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "maxResults": {
              "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",
              "default": "100",
              "minimum": "0",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "orderBy": {
              "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, `title`, and `title_natural`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "description": "Page token for files.",
              "location": "query",
              "type": "string"
            },
            "projection": {
              "description": "Deprecated: This parameter has no function.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "enum": [
                "BASIC",
                "FULL"
              ]
            },
            "q": {
              "description": "Query string for searching files.",
              "location": "query",
              "type": "string"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query. Supported values are `drive`, and `appDataFolder`.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "location": "query",
              "deprecated": true,
              "type": "string"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "FileList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results."
        },
        "listLabels": {
          "id": "drive.files.listLabels",
          "path": "files/{fileId}/listLabels",
          "flatPath": "files/{fileId}/listLabels",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID for the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of labels to return per page. When not set, defaults to 100.",
              "default": "100",
              "minimum": "1",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "LabelList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists the labels on a file."
        },
        "modifyLabels": {
          "id": "drive.files.modifyLabels",
          "path": "files/{fileId}/modifyLabels",
          "flatPath": "files/{fileId}/modifyLabels",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to which the labels belong.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "ModifyLabelsRequest"
          },
          "response": {
            "$ref": "ModifyLabelsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Modifies the set of labels applied to a file. Returns a list of the labels that were added or modified."
        },
        "patch": {
          "id": "drive.files.patch",
          "path": "files/{fileId}",
          "flatPath": "files/{fileId}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to update.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "addParents": {
              "description": "Comma-separated list of parent IDs to add.",
              "location": "query",
              "type": "string"
            },
            "convert": {
              "description": "Deprecated: This parameter has no function.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "modifiedDateBehavior": {
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ]
            },
            "newRevision": {
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045). Note that this field is ignored if there is no payload in the request.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "ocr": {
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            },
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions. Note that this field is ignored if there is no payload in the request.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "removeParents": {
              "description": "Comma-separated list of parent IDs to remove.",
              "location": "query",
              "type": "string"
            },
            "setModifiedDate": {
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "location": "query",
              "type": "string"
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "location": "query",
              "type": "string"
            },
            "updateViewedDate": {
              "description": "Whether to update the view date after successfully updating the file.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the content as indexable text.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "File"
          },
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ],
          "description": "Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might change automatically, such as modifiedDate. This method supports patch semantics."
        },
        "touch": {
          "id": "drive.files.touch",
          "path": "files/{fileId}/touch",
          "flatPath": "files/{fileId}/touch",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to update.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Set the file's updated time to the current server time."
        },
        "trash": {
          "id": "drive.files.trash",
          "path": "files/{fileId}/trash",
          "flatPath": "files/{fileId}/trash",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to trash.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Moves a file to the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files."
        },
        "untrash": {
          "id": "drive.files.untrash",
          "path": "files/{fileId}/untrash",
          "flatPath": "files/{fileId}/untrash",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to untrash.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Restores a file from the trash. The currently authenticated user must own the file or be at least a `fileOrganizer` on the parent for shared drive files."
        },
        "update": {
          "id": "drive.files.update",
          "path": "files/{fileId}",
          "flatPath": "files/{fileId}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID of the file to update.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "addParents": {
              "description": "Comma-separated list of parent IDs to add.",
              "location": "query",
              "type": "string"
            },
            "convert": {
              "description": "Deprecated: This parameter has no function.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "modifiedDateBehavior": {
              "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Set `modifiedDate` to the value provided in the body of the request. No change if no value was provided.",
                "Set `modifiedDate` to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of `modifiedDate`.",
                "Set `modifiedDate` to the current time.",
                "Set `modifiedDate` to the current time depending on contents of the update."
              ],
              "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
              ]
            },
            "newRevision": {
              "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045).",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "ocr": {
              "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "ocrLanguage": {
              "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
              "location": "query",
              "type": "string"
            },
            "pinned": {
              "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "removeParents": {
              "description": "Comma-separated list of parent IDs to remove.",
              "location": "query",
              "type": "string"
            },
            "setModifiedDate": {
              "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "timedTextLanguage": {
              "description": "The language of the timed text.",
              "location": "query",
              "type": "string"
            },
            "timedTextTrackName": {
              "description": "The timed text track name.",
              "location": "query",
              "type": "string"
            },
            "updateViewedDate": {
              "description": "Whether to update the view date after successfully updating the file.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the content as indexable text.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "supportsMediaUpload": true,
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "maxSize": "5497558138880",
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
              },
              "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
              }
            }
          },
          "request": {
            "$ref": "File"
          },
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ],
          "description": " Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads)."
        },
        "watch": {
          "id": "drive.files.watch",
          "path": "files/{fileId}/watch",
          "flatPath": "files/{fileId}/watch",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID for the file in question.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "acknowledgeAbuse": {
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            },
            "revisionId": {
              "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
              "location": "query",
              "type": "string"
            },
            "updateViewedDate": {
              "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "projection": {
              "description": "Deprecated: This parameter has no function.",
              "location": "query",
              "deprecated": true,
              "type": "string",
              "enumDescriptions": [
                "Deprecated.",
                "Deprecated."
              ],
              "enum": [
                "BASIC",
                "FULL"
              ]
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "supportsSubscription": true,
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "response": {
            "$ref": "Channel"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Subscribes to changes to a file."
        }
      }
    },
    "parents": {
      "methods": {
        "delete": {
          "id": "drive.parents.delete",
          "path": "files/{fileId}/parents/{parentId}",
          "flatPath": "files/{fileId}/parents/{parentId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "parentId": {
              "description": "The ID of the parent.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: If an item is not in a shared drive and its last parent is removed, the item is placed under its owner's root.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Removes a parent from a file."
        },
        "get": {
          "id": "drive.parents.get",
          "path": "files/{fileId}/parents/{parentId}",
          "flatPath": "files/{fileId}/parents/{parentId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "parentId": {
              "description": "The ID of the parent.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "parentId"
          ],
          "response": {
            "$ref": "ParentReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific parent reference."
        },
        "insert": {
          "id": "drive.parents.insert",
          "path": "files/{fileId}/parents",
          "flatPath": "files/{fileId}/parents",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "ParentReference"
          },
          "response": {
            "$ref": "ParentReference"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Adds a parent folder for a file."
        },
        "list": {
          "id": "drive.parents.list",
          "path": "files/{fileId}/parents",
          "flatPath": "files/{fileId}/parents",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "ParentList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's parents."
        }
      }
    },
    "permissions": {
      "methods": {
        "delete": {
          "id": "drive.permissions.delete",
          "path": "files/{fileId}/permissions/{permissionId}",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "permissionId": {
              "description": "The ID for the permission.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a permission from a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."
        },
        "get": {
          "id": "drive.permissions.get",
          "path": "files/{fileId}/permissions/{permissionId}",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "permissionId": {
              "description": "The ID for the permission.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a permission by ID."
        },
        "getIdForEmail": {
          "id": "drive.permissions.getIdForEmail",
          "path": "permissionIds/{email}",
          "flatPath": "permissionIds/{email}",
          "httpMethod": "GET",
          "parameters": {
            "email": {
              "description": "The email address for which to return a permission ID",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "email"
          ],
          "response": {
            "$ref": "PermissionId"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.apps.readonly",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Returns the permission ID for an email address."
        },
        "insert": {
          "id": "drive.permissions.insert",
          "path": "files/{fileId}/permissions",
          "flatPath": "files/{fileId}/permissions",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "emailMessage": {
              "description": "A plain text custom message to include in notification emails.",
              "location": "query",
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: See `moveToNewOwnersRoot` for details.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "moveToNewOwnersRoot": {
              "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "sendNotificationEmails": {
              "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the `role` is `owner`.",
              "default": "true",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "Permission"
          },
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Inserts a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."
        },
        "list": {
          "id": "drive.permissions.list",
          "path": "files/{fileId}/permissions",
          "flatPath": "files/{fileId}/permissions",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.",
              "minimum": "1",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from the previous response.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "PermissionList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's or shared drive's permissions."
        },
        "patch": {
          "id": "drive.permissions.patch",
          "path": "files/{fileId}/permissions/{permissionId}",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "permissionId": {
              "description": "The ID for the permission.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "removeExpiration": {
              "description": "Whether to remove the expiration date.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "transferOwnership": {
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "request": {
            "$ref": "Permission"
          },
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a permission using patch semantics. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."
        },
        "update": {
          "id": "drive.permissions.update",
          "path": "files/{fileId}/permissions/{permissionId}",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID for the file or shared drive.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "permissionId": {
              "description": "The ID for the permission.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "removeExpiration": {
              "description": "Whether to remove the expiration date.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "location": "query",
              "deprecated": true,
              "type": "boolean"
            },
            "transferOwnership": {
              "description": "Whether changing a role to `owner` downgrades the current owners to writers. Does nothing if the specified role is not `owner`.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "request": {
            "$ref": "Permission"
          },
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a permission. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."
        }
      }
    },
    "properties": {
      "methods": {
        "delete": {
          "id": "drive.properties.delete",
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "propertyKey": {
              "description": "The key of the property.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the property.",
              "default": "private",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Deletes a property."
        },
        "get": {
          "id": "drive.properties.get",
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "propertyKey": {
              "description": "The key of the property.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the property.",
              "default": "private",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "response": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a property by its key."
        },
        "insert": {
          "id": "drive.properties.insert",
          "path": "files/{fileId}/properties",
          "flatPath": "files/{fileId}/properties",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "Property"
          },
          "response": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Adds a property to a file, or updates it if it already exists."
        },
        "list": {
          "id": "drive.properties.list",
          "path": "files/{fileId}/properties",
          "flatPath": "files/{fileId}/properties",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "PropertyList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's properties."
        },
        "patch": {
          "id": "drive.properties.patch",
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "propertyKey": {
              "description": "The key of the property.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "default": "private",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "request": {
            "$ref": "Property"
          },
          "response": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Updates a property."
        },
        "update": {
          "id": "drive.properties.update",
          "path": "files/{fileId}/properties/{propertyKey}",
          "flatPath": "files/{fileId}/properties/{propertyKey}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "propertyKey": {
              "description": "The key of the property.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "visibility": {
              "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)",
              "default": "private",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "propertyKey"
          ],
          "request": {
            "$ref": "Property"
          },
          "response": {
            "$ref": "Property"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "description": "Updates a property."
        }
      }
    },
    "replies": {
      "methods": {
        "delete": {
          "id": "drive.replies.delete",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "replyId": {
              "description": "The ID of the reply.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a reply."
        },
        "get": {
          "id": "drive.replies.get",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "replyId": {
              "description": "The ID of the reply.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "includeDeleted": {
              "description": "If set, this will succeed when retrieving a deleted reply.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a reply."
        },
        "insert": {
          "id": "drive.replies.insert",
          "path": "files/{fileId}/comments/{commentId}/replies",
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "httpMethod": "POST",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "request": {
            "$ref": "CommentReply"
          },
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Creates a new reply to the given comment."
        },
        "list": {
          "id": "drive.replies.list",
          "path": "files/{fileId}/comments/{commentId}/replies",
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "includeDeleted": {
              "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            },
            "maxResults": {
              "description": "The maximum number of replies to include in the response, used for paging.",
              "default": "20",
              "minimum": "0",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "response": {
            "$ref": "CommentReplyList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists all of the replies to a comment."
        },
        "patch": {
          "id": "drive.replies.patch",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "replyId": {
              "description": "The ID of the reply.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "request": {
            "$ref": "CommentReply"
          },
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates an existing reply."
        },
        "update": {
          "id": "drive.replies.update",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "description": "The ID of the comment.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "replyId": {
              "description": "The ID of the reply.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "request": {
            "$ref": "CommentReply"
          },
          "response": {
            "$ref": "CommentReply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates an existing reply."
        }
      }
    },
    "revisions": {
      "methods": {
        "delete": {
          "id": "drive.revisions.delete",
          "path": "files/{fileId}/revisions/{revisionId}",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "DELETE",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "revisionId": {
              "description": "The ID of the revision.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted."
        },
        "get": {
          "id": "drive.revisions.get",
          "path": "files/{fileId}/revisions/{revisionId}",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "revisionId": {
              "description": "The ID of the revision.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "response": {
            "$ref": "Revision"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Gets a specific revision."
        },
        "list": {
          "id": "drive.revisions.list",
          "path": "files/{fileId}/revisions",
          "flatPath": "files/{fileId}/revisions",
          "httpMethod": "GET",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of revisions to return.",
              "default": "200",
              "minimum": "1",
              "maximum": "1000",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token for revisions. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "response": {
            "$ref": "RevisionList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Lists a file's revisions."
        },
        "patch": {
          "id": "drive.revisions.patch",
          "path": "files/{fileId}/revisions/{revisionId}",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "PATCH",
          "parameters": {
            "fileId": {
              "description": "The ID for the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "revisionId": {
              "description": "The ID for the revision.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "request": {
            "$ref": "Revision"
          },
          "response": {
            "$ref": "Revision"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a revision."
        },
        "update": {
          "id": "drive.revisions.update",
          "path": "files/{fileId}/revisions/{revisionId}",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "httpMethod": "PUT",
          "parameters": {
            "fileId": {
              "description": "The ID for the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "revisionId": {
              "description": "The ID for the revision.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "request": {
            "$ref": "Revision"
          },
          "response": {
            "$ref": "Revision"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a revision."
        }
      }
    },
    "teamdrives": {
      "methods": {
        "delete": {
          "id": "drive.teamdrives.delete",
          "path": "teamdrives/{teamDriveId}",
          "flatPath": "teamdrives/{teamDriveId}",
          "httpMethod": "DELETE",
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "teamDriveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Deprecated: Use `drives.delete` instead."
        },
        "get": {
          "id": "drive.teamdrives.get",
          "path": "teamdrives/{teamDriveId}",
          "flatPath": "teamdrives/{teamDriveId}",
          "httpMethod": "GET",
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "teamDriveId"
          ],
          "response": {
            "$ref": "TeamDrive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Deprecated: Use `drives.get` instead."
        },
        "insert": {
          "id": "drive.teamdrives.insert",
          "path": "teamdrives",
          "flatPath": "teamdrives",
          "httpMethod": "POST",
          "parameters": {
            "requestId": {
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.",
              "location": "query",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "requestId"
          ],
          "request": {
            "$ref": "TeamDrive"
          },
          "response": {
            "$ref": "TeamDrive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Deprecated: Use `drives.insert` instead."
        },
        "list": {
          "id": "drive.teamdrives.list",
          "path": "teamdrives",
          "flatPath": "teamdrives",
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "description": "Maximum number of Team Drives to return.",
              "default": "10",
              "minimum": "1",
              "maximum": "100",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Page token for Team Drives.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "description": "Query string for searching Team Drives.",
              "location": "query",
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "TeamDriveList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "description": "Deprecated: Use `drives.list` instead."
        },
        "update": {
          "id": "drive.teamdrives.update",
          "path": "teamdrives/{teamDriveId}",
          "flatPath": "teamdrives/{teamDriveId}",
          "httpMethod": "PUT",
          "parameters": {
            "teamDriveId": {
              "description": "The ID of the Team Drive",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "teamDriveId"
          ],
          "request": {
            "$ref": "TeamDrive"
          },
          "response": {
            "$ref": "TeamDrive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Deprecated: Use `drives.update` instead."
        }
      }
    }
  },
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.appdata": {
          "description": "See, create, and delete its own configuration data in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.apps.readonly": {
          "description": "View your Google Drive apps"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/drive.metadata": {
          "description": "View and manage metadata of files in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.metadata.readonly": {
          "description": "See information about your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.photos.readonly": {
          "description": "View the photos, videos and albums in your Google Photos"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.scripts": {
          "description": "Modify your Google Apps Script scripts' behavior"
        }
      }
    }
  },
  "version": "v2",
  "discoveryVersion": "v1",
  "revision": "20240110",
  "basePath": "/drive/v2/",
  "name": "drive",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "kind": "discovery#restDescription",
  "documentationLink": "https://developers.google.com/drive/",
  "id": "drive:v2",
  "description": "The Google Drive API allows clients to access resources from Google Drive.",
  "baseUrl": "https://www.googleapis.com/drive/v2/",
  "ownerName": "Google",
  "servicePath": "drive/v2/",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "batchPath": "batch/drive/v2",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "rootUrl": "https://www.googleapis.com/"
}

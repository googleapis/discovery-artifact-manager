{
  "basePath": "/drive/v3/",
  "baseUrl": "https://www.googleapis.com/drive/v3/",
  "name": "drive",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "rootUrl": "https://www.googleapis.com/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "documentationLink": "https://developers.google.com/drive/",
  "batchPath": "batch/drive/v3",
  "description": "The Google Drive API allows clients to access resources from Google Drive.",
  "protocol": "rest",
  "resources": {
    "about": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "flatPath": "about",
          "description": "Gets information about the user, the user's Drive, and system capabilities.",
          "response": {
            "$ref": "About"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "about",
          "id": "drive.about.get",
          "parameters": {},
          "parameterOrder": []
        }
      }
    },
    "replies": {
      "methods": {
        "create": {
          "request": {
            "$ref": "Reply"
          },
          "response": {
            "$ref": "Reply"
          },
          "path": "files/{fileId}/comments/{commentId}/replies",
          "description": "Creates a reply to a comment.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "flatPath": "files/{fileId}/comments/{commentId}/replies",
          "parameters": {
            "fileId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the file.",
              "required": true
            },
            "commentId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the comment."
            }
          },
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "id": "drive.replies.create",
          "httpMethod": "POST"
        },
        "delete": {
          "description": "Deletes a reply.",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "commentId": {
              "location": "path",
              "required": true,
              "description": "The ID of the comment.",
              "type": "string"
            },
            "fileId": {
              "description": "The ID of the file.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "replyId": {
              "location": "path",
              "description": "The ID of the reply.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "id": "drive.replies.delete"
        },
        "list": {
          "path": "files/{fileId}/comments/{commentId}/replies",
          "httpMethod": "GET",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "maximum": "100",
              "default": "20",
              "minimum": "1",
              "description": "The maximum number of replies to return per page."
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
              "location": "query",
              "type": "string"
            },
            "fileId": {
              "location": "path",
              "description": "The ID of the file.",
              "type": "string",
              "required": true
            },
            "includeDeleted": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether to include deleted replies. Deleted replies will not include their original content."
            },
            "commentId": {
              "description": "The ID of the comment.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "description": "Lists a comment's replies.",
          "id": "drive.replies.list",
          "response": {
            "$ref": "ReplyList"
          },
          "flatPath": "files/{fileId}/comments/{commentId}/replies"
        },
        "update": {
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ],
          "description": "Updates a reply with patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "response": {
            "$ref": "Reply"
          },
          "request": {
            "$ref": "Reply"
          },
          "id": "drive.replies.update",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "commentId": {
              "location": "path",
              "required": true,
              "description": "The ID of the comment.",
              "type": "string"
            },
            "replyId": {
              "description": "The ID of the reply.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "httpMethod": "PATCH"
        },
        "get": {
          "parameters": {
            "fileId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the file.",
              "required": true
            },
            "commentId": {
              "location": "path",
              "required": true,
              "description": "The ID of the comment.",
              "type": "string"
            },
            "includeDeleted": {
              "description": "Whether to return deleted replies. Deleted replies will not include their original content.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "replyId": {
              "location": "path",
              "description": "The ID of the reply.",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",
          "response": {
            "$ref": "Reply"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.replies.get",
          "description": "Gets a reply by ID.",
          "parameterOrder": [
            "fileId",
            "commentId",
            "replyId"
          ]
        }
      }
    },
    "drives": {
      "methods": {
        "delete": {
          "description": "Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items.",
          "path": "drives/{driveId}",
          "parameters": {
            "allowItemDeletion": {
              "default": "false",
              "location": "query",
              "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query"
            },
            "driveId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the shared drive."
            }
          },
          "parameterOrder": [
            "driveId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "httpMethod": "DELETE",
          "id": "drive.drives.delete",
          "flatPath": "drives/{driveId}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "driveId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the shared drive."
            },
            "useDomainAdminAccess": {
              "location": "query",
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false"
            }
          },
          "httpMethod": "GET",
          "id": "drive.drives.get",
          "flatPath": "drives/{driveId}",
          "response": {
            "$ref": "Drive"
          },
          "description": "Gets a shared drive's metadata by ID.",
          "path": "drives/{driveId}",
          "parameterOrder": [
            "driveId"
          ]
        },
        "update": {
          "description": "Updates the metadate for a shared drive.",
          "flatPath": "drives/{driveId}",
          "response": {
            "$ref": "Drive"
          },
          "parameterOrder": [
            "driveId"
          ],
          "parameters": {
            "driveId": {
              "required": true,
              "type": "string",
              "description": "The ID of the shared drive.",
              "location": "path"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "id": "drive.drives.update",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "path": "drives/{driveId}",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Drive"
          }
        },
        "create": {
          "path": "drives",
          "flatPath": "drives",
          "httpMethod": "POST",
          "response": {
            "$ref": "Drive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "id": "drive.drives.create",
          "parameterOrder": [
            "requestId"
          ],
          "parameters": {
            "requestId": {
              "location": "query",
              "type": "string",
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
              "required": true
            }
          },
          "request": {
            "$ref": "Drive"
          },
          "description": "Creates a shared drive."
        },
        "hide": {
          "parameterOrder": [
            "driveId"
          ],
          "flatPath": "drives/{driveId}/hide",
          "id": "drive.drives.hide",
          "path": "drives/{driveId}/hide",
          "response": {
            "$ref": "Drive"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "description": "Hides a shared drive from the default view.",
          "parameters": {
            "driveId": {
              "required": true,
              "description": "The ID of the shared drive.",
              "location": "path",
              "type": "string"
            }
          }
        },
        "unhide": {
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameterOrder": [
            "driveId"
          ],
          "description": "Restores a shared drive to the default view.",
          "httpMethod": "POST",
          "id": "drive.drives.unhide",
          "path": "drives/{driveId}/unhide",
          "response": {
            "$ref": "Drive"
          },
          "parameters": {
            "driveId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the shared drive.",
              "required": true
            }
          },
          "flatPath": "drives/{driveId}/unhide"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [],
          "parameters": {
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "pageToken": {
              "description": "Page token for shared drives.",
              "type": "string",
              "location": "query"
            },
            "q": {
              "description": "Query string for searching shared drives.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "format": "int32",
              "default": "10",
              "maximum": "100",
              "minimum": "1",
              "description": "Maximum number of shared drives to return per page.",
              "type": "integer"
            }
          },
          "flatPath": "drives",
          "path": "drives",
          "httpMethod": "GET",
          "description": " Lists the user's shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/drive/api/guides/search-shareddrives) guide.",
          "id": "drive.drives.list",
          "response": {
            "$ref": "DriveList"
          }
        }
      }
    },
    "comments": {
      "methods": {
        "get": {
          "id": "drive.comments.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Comment"
          },
          "description": "Gets a comment by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/comments/{commentId}",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "parameters": {
            "commentId": {
              "required": true,
              "location": "path",
              "description": "The ID of the comment.",
              "type": "string"
            },
            "includeDeleted": {
              "description": "Whether to return deleted comments. Deleted comments will not include their original content.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "fileId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the file."
            }
          },
          "flatPath": "files/{fileId}/comments/{commentId}"
        },
        "create": {
          "request": {
            "$ref": "Comment"
          },
          "description": "Creates a comment on a file.",
          "flatPath": "files/{fileId}/comments",
          "response": {
            "$ref": "Comment"
          },
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "path": "files/{fileId}/comments",
          "id": "drive.comments.create",
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ]
        },
        "delete": {
          "path": "files/{fileId}/comments/{commentId}",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Deletes a comment.",
          "id": "drive.comments.delete",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "httpMethod": "DELETE",
          "parameters": {
            "commentId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the comment.",
              "required": true
            },
            "fileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the file."
            }
          }
        },
        "list": {
          "description": "Lists a file's comments.",
          "response": {
            "$ref": "CommentList"
          },
          "id": "drive.comments.list",
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
              "type": "string"
            },
            "includeDeleted": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Whether to include deleted comments. Deleted comments will not include their original content."
            },
            "pageSize": {
              "minimum": "1",
              "location": "query",
              "default": "20",
              "description": "The maximum number of comments to return per page.",
              "maximum": "100",
              "type": "integer",
              "format": "int32"
            },
            "startModifiedTime": {
              "location": "query",
              "description": "The minimum value of 'modifiedTime' for the result comments (RFC 3339 date-time).",
              "type": "string"
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "GET",
          "flatPath": "files/{fileId}/comments",
          "path": "files/{fileId}/comments",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "update": {
          "path": "files/{fileId}/comments/{commentId}",
          "flatPath": "files/{fileId}/comments/{commentId}",
          "description": "Updates a comment with patch semantics.",
          "response": {
            "$ref": "Comment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "parameters": {
            "commentId": {
              "required": true,
              "location": "path",
              "description": "The ID of the comment.",
              "type": "string"
            },
            "fileId": {
              "description": "The ID of the file.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "id": "drive.comments.update",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "fileId",
            "commentId"
          ],
          "request": {
            "$ref": "Comment"
          }
        }
      }
    },
    "permissions": {
      "methods": {
        "create": {
          "parameters": {
            "emailMessage": {
              "description": "A plain text custom message to include in the notification email.",
              "type": "string",
              "location": "query"
            },
            "transferOwnership": {
              "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "sendNotificationEmail": {
              "description": "Whether to send a notification email when sharing to users or groups. This defaults to true for users and groups, and is not allowed for other requests. It must not be disabled for ownership transfers.",
              "type": "boolean",
              "location": "query"
            },
            "moveToNewOwnersRoot": {
              "type": "boolean",
              "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed.",
              "default": "false",
              "location": "query"
            },
            "fileId": {
              "description": "The ID of the file or shared drive.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "useDomainAdminAccess": {
              "default": "false",
              "type": "boolean",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "type": "boolean",
              "default": "false",
              "deprecated": true
            },
            "enforceSingleParent": {
              "type": "boolean",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: See `moveToNewOwnersRoot` for details.",
              "location": "query"
            }
          },
          "request": {
            "$ref": "Permission"
          },
          "description": "Creates a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "path": "files/{fileId}/permissions",
          "flatPath": "files/{fileId}/permissions",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Permission"
          },
          "parameterOrder": [
            "fileId"
          ],
          "id": "drive.permissions.create"
        },
        "get": {
          "description": "Gets a permission by ID.",
          "path": "files/{fileId}/permissions/{permissionId}",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "id": "drive.permissions.get",
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "permissionId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the permission."
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "default": "false"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "required": true,
              "location": "path"
            },
            "supportsAllDrives": {
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          }
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false"
            },
            "fileId": {
              "description": "The ID of the file or shared drive.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "includePermissionsForView": {
              "type": "string",
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.",
              "type": "integer",
              "location": "query",
              "minimum": "1",
              "maximum": "100",
              "format": "int32"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "files/{fileId}/permissions",
          "response": {
            "$ref": "PermissionList"
          },
          "parameterOrder": [
            "fileId"
          ],
          "httpMethod": "GET",
          "description": "Lists a file's or shared drive's permissions.",
          "flatPath": "files/{fileId}/permissions",
          "id": "drive.permissions.list"
        },
        "update": {
          "path": "files/{fileId}/permissions/{permissionId}",
          "id": "drive.permissions.update",
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID of the file or shared drive.",
              "required": true,
              "type": "string"
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "deprecated": true,
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            },
            "permissionId": {
              "description": "The ID of the permission.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs."
            },
            "supportsAllDrives": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "transferOwnership": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect."
            },
            "removeExpiration": {
              "default": "false",
              "description": "Whether to remove the expiration date.",
              "type": "boolean",
              "location": "query"
            }
          },
          "request": {
            "$ref": "Permission"
          },
          "response": {
            "$ref": "Permission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "description": "Updates a permission with patch semantics. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "DELETE",
          "id": "drive.permissions.delete",
          "path": "files/{fileId}/permissions/{permissionId}",
          "parameterOrder": [
            "fileId",
            "permissionId"
          ],
          "flatPath": "files/{fileId}/permissions/{permissionId}",
          "description": "Deletes a permission. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
          "parameters": {
            "permissionId": {
              "description": "The ID of the permission.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "useDomainAdminAccess": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs."
            },
            "supportsAllDrives": {
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "type": "boolean"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file or shared drive.",
              "location": "path",
              "required": true
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            }
          }
        }
      }
    },
    "changes": {
      "methods": {
        "getStartPageToken": {
          "description": "Gets the starting pageToken for listing future changes.",
          "parameters": {
            "supportsTeamDrives": {
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "location": "query",
              "default": "false"
            },
            "teamDriveId": {
              "deprecated": true,
              "location": "query",
              "description": "Deprecated: Use `driveId` instead.",
              "type": "string"
            },
            "driveId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            }
          },
          "flatPath": "changes/startPageToken",
          "id": "drive.changes.getStartPageToken",
          "httpMethod": "GET",
          "response": {
            "$ref": "StartPageToken"
          },
          "path": "changes/startPageToken",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "watch": {
          "description": "Subscribes to changes for a user.",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.changes.watch",
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "path": "changes/watch",
          "httpMethod": "POST",
          "parameterOrder": [
            "pageToken"
          ],
          "parameters": {
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "pageToken": {
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "type": "string",
              "location": "query"
            },
            "includeCorpusRemovals": {
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "includeItemsFromAllDrives": {
              "location": "query",
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "default": "false",
              "type": "boolean"
            },
            "teamDriveId": {
              "deprecated": true,
              "type": "string",
              "location": "query",
              "description": "Deprecated: Use `driveId` instead."
            },
            "includeTeamDriveItems": {
              "deprecated": true,
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "type": "boolean"
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "location": "query",
              "default": "false",
              "deprecated": true
            },
            "driveId": {
              "type": "string",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",
              "location": "query"
            },
            "pageSize": {
              "maximum": "1000",
              "location": "query",
              "default": "100",
              "minimum": "1",
              "type": "integer",
              "description": "The maximum number of changes to return per page.",
              "format": "int32"
            },
            "spaces": {
              "default": "drive",
              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",
              "type": "string",
              "location": "query"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string",
              "location": "query"
            },
            "includeRemoved": {
              "type": "boolean",
              "location": "query",
              "default": "true",
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access."
            },
            "restrictToMyDrive": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive."
            }
          },
          "supportsSubscription": true,
          "response": {
            "$ref": "Channel"
          },
          "flatPath": "changes/watch"
        },
        "list": {
          "flatPath": "changes",
          "httpMethod": "GET",
          "path": "changes",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [
            "pageToken"
          ],
          "response": {
            "$ref": "ChangeList"
          },
          "supportsSubscription": true,
          "id": "drive.changes.list",
          "description": "Lists the changes for a user or shared drive.",
          "parameters": {
            "teamDriveId": {
              "description": "Deprecated: Use `driveId` instead.",
              "type": "string",
              "deprecated": true,
              "location": "query"
            },
            "includeLabels": {
              "type": "string",
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "includeItemsFromAllDrives": {
              "type": "boolean",
              "description": "Whether both My Drive and shared drive items should be included in results.",
              "location": "query",
              "default": "false"
            },
            "includeRemoved": {
              "type": "boolean",
              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
              "default": "true",
              "location": "query"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "location": "query",
              "type": "boolean",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "default": "100",
              "minimum": "1",
              "maximum": "1000",
              "description": "The maximum number of changes to return per page.",
              "location": "query"
            },
            "includeTeamDriveItems": {
              "default": "false",
              "type": "boolean",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "location": "query",
              "deprecated": true
            },
            "restrictToMyDrive": {
              "description": "Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.",
              "location": "query",
              "type": "boolean",
              "default": "false"
            },
            "spaces": {
              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",
              "type": "string",
              "default": "drive",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
              "required": true
            },
            "includePermissionsForView": {
              "location": "query",
              "type": "string",
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported."
            },
            "driveId": {
              "type": "string",
              "location": "query",
              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier."
            },
            "includeCorpusRemovals": {
              "type": "boolean",
              "location": "query",
              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
              "default": "false"
            }
          }
        }
      }
    },
    "files": {
      "methods": {
        "generateIds": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "httpMethod": "GET",
          "flatPath": "files/generateIds",
          "description": "Generates a set of file IDs which can be provided in create or copy requests.",
          "parameters": {
            "space": {
              "description": "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'. (Default: 'drive')",
              "type": "string",
              "default": "drive",
              "location": "query"
            },
            "count": {
              "minimum": "1",
              "location": "query",
              "type": "integer",
              "maximum": "1000",
              "description": "The number of IDs to return.",
              "default": "10",
              "format": "int32"
            },
            "type": {
              "type": "string",
              "location": "query",
              "default": "files",
              "description": "The type of items which the IDs can be used for. Supported values are 'files' and 'shortcuts'. Note that 'shortcuts' are only supported in the `drive` 'space'. (Default: 'files')"
            }
          },
          "path": "files/generateIds",
          "parameterOrder": [],
          "response": {
            "$ref": "GeneratedIds"
          },
          "id": "drive.files.generateIds"
        },
        "emptyTrash": {
          "parameterOrder": [],
          "httpMethod": "DELETE",
          "description": "Permanently deletes all of the user's trashed files.",
          "parameters": {
            "driveId": {
              "description": "If set, empties the trash of the provided shared drive.",
              "type": "string",
              "location": "query"
            },
            "enforceSingleParent": {
              "location": "query",
              "type": "boolean",
              "default": "false",
              "deprecated": true,
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "path": "files/trash",
          "id": "drive.files.emptyTrash",
          "flatPath": "files/trash"
        },
        "create": {
          "httpMethod": "POST",
          "mediaUpload": {
            "maxSize": "5497558138880",
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/drive/v3/files"
              },
              "resumable": {
                "path": "/resumable/upload/drive/v3/files",
                "multipart": true
              }
            }
          },
          "parameters": {
            "enforceSingleParent": {
              "description": "Deprecated. Creating files in multiple folders is no longer supported.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "keepRevisionForever": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions."
            },
            "useContentAsIndexableText": {
              "description": "Whether to use the uploaded content as indexable text.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            },
            "ignoreDefaultVisibility": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders."
            },
            "supportsTeamDrives": {
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean",
              "deprecated": true,
              "location": "query"
            },
            "supportsAllDrives": {
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "default": "false",
              "location": "query"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "location": "query",
              "type": "string"
            },
            "ocrLanguage": {
              "type": "string",
              "location": "query",
              "description": "A language hint for OCR processing during image import (ISO 639-1 code)."
            }
          },
          "parameterOrder": [],
          "id": "drive.files.create",
          "response": {
            "$ref": "File"
          },
          "path": "files",
          "description": " Creates a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.create` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `name` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"name\": \"cat.jpg\"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file's MIME type.",
          "flatPath": "files",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "request": {
            "$ref": "File"
          },
          "supportsMediaUpload": true
        },
        "modifyLabels": {
          "path": "files/{fileId}/modifyLabels",
          "response": {
            "$ref": "ModifyLabelsResponse"
          },
          "parameterOrder": [
            "fileId"
          ],
          "request": {
            "$ref": "ModifyLabelsRequest"
          },
          "description": "Modifies the set of labels applied to a file. Returns a list of the labels that were added or modified.",
          "flatPath": "files/{fileId}/modifyLabels",
          "parameters": {
            "fileId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the file to which the labels belong."
            }
          },
          "id": "drive.files.modifyLabels",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata"
          ],
          "httpMethod": "POST"
        },
        "get": {
          "supportsMediaDownload": true,
          "description": " Gets a file's metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/drive/api/reference/rest/v3/files/export) instead. For more information, see [Download & export files](/drive/api/guides/manage-downloads).",
          "flatPath": "files/{fileId}",
          "response": {
            "$ref": "File"
          },
          "path": "files/{fileId}",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "useMediaDownloadService": true,
          "parameterOrder": [
            "fileId"
          ],
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "location": "query",
              "type": "string"
            },
            "acknowledgeAbuse": {
              "type": "boolean",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media.",
              "default": "false",
              "location": "query"
            },
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            },
            "supportsTeamDrives": {
              "default": "false",
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "default": "false",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean"
            }
          },
          "supportsSubscription": true,
          "id": "drive.files.get"
        },
        "copy": {
          "response": {
            "$ref": "File"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.photos.readonly"
          ],
          "id": "drive.files.copy",
          "httpMethod": "POST",
          "parameterOrder": [
            "fileId"
          ],
          "description": "Creates a copy of a file and applies any requested updates with patch semantics.",
          "request": {
            "$ref": "File"
          },
          "parameters": {
            "keepRevisionForever": {
              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.",
              "type": "boolean",
              "default": "false",
              "location": "query"
            },
            "ignoreDefaultVisibility": {
              "type": "boolean",
              "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders.",
              "default": "false",
              "location": "query"
            },
            "supportsTeamDrives": {
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "type": "boolean",
              "location": "query"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "type": "string",
              "location": "query"
            },
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            },
            "ocrLanguage": {
              "description": "A language hint for OCR processing during image import (ISO 639-1 code).",
              "location": "query",
              "type": "string"
            },
            "fileId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the file."
            },
            "enforceSingleParent": {
              "description": "Deprecated. Copying files into multiple folders is no longer supported. Use shortcuts instead.",
              "location": "query",
              "default": "false",
              "type": "boolean"
            },
            "supportsAllDrives": {
              "default": "false",
              "type": "boolean",
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            }
          },
          "flatPath": "files/{fileId}/copy",
          "path": "files/{fileId}/copy"
        },
        "update": {
          "path": "files/{fileId}",
          "response": {
            "$ref": "File"
          },
          "mediaUpload": {
            "protocols": {
              "simple": {
                "path": "/upload/drive/v3/files/{fileId}",
                "multipart": true
              },
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v3/files/{fileId}"
              }
            },
            "maxSize": "5497558138880",
            "accept": [
              "*/*"
            ]
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.scripts"
          ],
          "parameterOrder": [
            "fileId"
          ],
          "description": " Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads).",
          "request": {
            "$ref": "File"
          },
          "flatPath": "files/{fileId}",
          "id": "drive.files.update",
          "supportsMediaUpload": true,
          "parameters": {
            "includeLabels": {
              "location": "query",
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "type": "string"
            },
            "keepRevisionForever": {
              "location": "query",
              "default": "false",
              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.",
              "type": "boolean"
            },
            "addParents": {
              "description": "A comma-separated list of parent IDs to add.",
              "location": "query",
              "type": "string"
            },
            "removeParents": {
              "description": "A comma-separated list of parent IDs to remove.",
              "type": "string",
              "location": "query"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "location": "query",
              "type": "string"
            },
            "enforceSingleParent": {
              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use shortcuts instead.",
              "location": "query",
              "deprecated": true,
              "type": "boolean",
              "default": "false"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            },
            "ocrLanguage": {
              "location": "query",
              "description": "A language hint for OCR processing during image import (ISO 639-1 code).",
              "type": "string"
            },
            "useContentAsIndexableText": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Whether to use the uploaded content as indexable text."
            },
            "supportsAllDrives": {
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "supportsTeamDrives": {
              "location": "query",
              "type": "boolean",
              "deprecated": true,
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead."
            }
          },
          "httpMethod": "PATCH"
        },
        "watch": {
          "supportsSubscription": true,
          "flatPath": "files/{fileId}/watch",
          "parameters": {
            "supportsTeamDrives": {
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true,
              "type": "boolean",
              "location": "query"
            },
            "includePermissionsForView": {
              "type": "string",
              "location": "query",
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported."
            },
            "supportsAllDrives": {
              "default": "false",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "location": "query",
              "type": "boolean"
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            },
            "acknowledgeAbuse": {
              "type": "boolean",
              "location": "query",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media.",
              "default": "false"
            },
            "fileId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the file."
            }
          },
          "parameterOrder": [
            "fileId"
          ],
          "description": "Subscribes to changes to a file.",
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/watch",
          "id": "drive.files.watch",
          "httpMethod": "POST",
          "response": {
            "$ref": "Channel"
          }
        },
        "list": {
          "flatPath": "files",
          "path": "files",
          "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.",
          "httpMethod": "GET",
          "parameters": {
            "spaces": {
              "default": "drive",
              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",
              "location": "query",
              "type": "string"
            },
            "corpus": {
              "enum": [
                "domain",
                "user"
              ],
              "location": "query",
              "type": "string",
              "description": "Deprecated: The source of files to list. Use 'corpora' instead.",
              "enumDescriptions": [
                "Files shared to the user's domain.",
                "Files owned by or shared to the user."
              ],
              "deprecated": true
            },
            "q": {
              "location": "query",
              "description": "A query for filtering the file results. See the \"Search for files & folders\" guide for supported syntax.",
              "type": "string"
            },
            "driveId": {
              "location": "query",
              "type": "string",
              "description": "ID of the shared drive to search."
            },
            "includeLabels": {
              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",
              "location": "query",
              "type": "string"
            },
            "supportsAllDrives": {
              "location": "query",
              "description": "Whether the requesting application supports both My Drives and shared drives.",
              "type": "boolean",
              "default": "false"
            },
            "orderBy": {
              "type": "string",
              "description": "A comma-separated list of sort keys. Valid keys are 'createdTime', 'folder', 'modifiedByMeTime', 'modifiedTime', 'name', 'name_natural', 'quotaBytesUsed', 'recency', 'sharedWithMeTime', 'starred', and 'viewedByMeTime'. Each key sorts ascending by default, but can be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedTime desc,name.",
              "location": "query"
            },
            "includePermissionsForView": {
              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
              "type": "string",
              "location": "query"
            },
            "includeItemsFromAllDrives": {
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Whether both My Drive and shared drive items should be included in results."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response."
            },
            "includeTeamDriveItems": {
              "deprecated": true,
              "type": "boolean",
              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",
              "location": "query",
              "default": "false"
            },
            "corpora": {
              "location": "query",
              "type": "string",
              "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are 'user', 'domain', 'drive', and 'allDrives'. Prefer 'user' or 'drive' to 'allDrives' for efficiency. By default, corpora is set to 'user'. However, this can change depending on the filter set through the 'q' parameter."
            },
            "supportsTeamDrives": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "deprecated": true
            },
            "pageSize": {
              "minimum": "1",
              "location": "query",
              "type": "integer",
              "default": "100",
              "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",
              "format": "int32",
              "maximum": "1000"
            },
            "teamDriveId": {
              "type": "string",
              "location": "query",
              "description": "Deprecated: Use `driveId` instead.",
              "deprecated": true
            }
          },
          "response": {
            "$ref": "FileList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameterOrder": [],
          "id": "drive.files.list"
        },
        "delete": {
          "httpMethod": "DELETE",
          "id": "drive.files.delete",
          "flatPath": "files/{fileId}",
          "parameters": {
            "supportsAllDrives": {
              "location": "query",
              "default": "false",
              "type": "boolean",
              "description": "Whether the requesting application supports both My Drives and shared drives."
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "required": true,
              "location": "path"
            },
            "supportsTeamDrives": {
              "location": "query",
              "deprecated": true,
              "description": "Deprecated: Use `supportsAllDrives` instead.",
              "default": "false",
              "type": "boolean"
            },
            "enforceSingleParent": {
              "deprecated": true,
              "type": "boolean",
              "default": "false",
              "location": "query",
              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}",
          "description": "Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive the user must be an organizer on the parent. If the target is a folder, all descendants owned by the user are also deleted.",
          "parameterOrder": [
            "fileId"
          ]
        },
        "listLabels": {
          "httpMethod": "GET",
          "id": "drive.files.listLabels",
          "response": {
            "$ref": "LabelList"
          },
          "description": "Lists the labels on a file.",
          "parameterOrder": [
            "fileId"
          ],
          "parameters": {
            "fileId": {
              "location": "path",
              "description": "The ID for the file or shared drive.",
              "required": true,
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of labels to return per page. When not set, defaults to 100.",
              "default": "100",
              "maximum": "100",
              "location": "query",
              "format": "int32",
              "minimum": "1"
            }
          },
          "path": "files/{fileId}/listLabels",
          "flatPath": "files/{fileId}/listLabels",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ]
        },
        "export": {
          "parameters": {
            "fileId": {
              "description": "The ID of the file.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "mimeType": {
              "type": "string",
              "description": "Required. The MIME type of the format requested for this export.",
              "location": "query",
              "required": true
            }
          },
          "useMediaDownloadService": true,
          "id": "drive.files.export",
          "flatPath": "files/{fileId}/export",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "path": "files/{fileId}/export",
          "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB.",
          "supportsMediaDownload": true,
          "parameterOrder": [
            "fileId",
            "mimeType"
          ]
        }
      }
    },
    "channels": {
      "methods": {
        "stop": {
          "path": "channels/stop",
          "request": {
            "parameterName": "resource",
            "$ref": "Channel"
          },
          "id": "drive.channels.stop",
          "flatPath": "channels/stop",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {},
          "httpMethod": "POST",
          "description": "Stops watching resources through this channel.",
          "parameterOrder": []
        }
      }
    },
    "revisions": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "id": "drive.revisions.delete",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ],
          "path": "files/{fileId}/revisions/{revisionId}",
          "parameters": {
            "revisionId": {
              "required": true,
              "type": "string",
              "description": "The ID of the revision.",
              "location": "path"
            },
            "fileId": {
              "type": "string",
              "description": "The ID of the file.",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content in Google Drive, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted."
        },
        "get": {
          "description": "Gets a revision's metadata or content by ID.",
          "id": "drive.revisions.get",
          "supportsMediaDownload": true,
          "path": "files/{fileId}/revisions/{revisionId}",
          "useMediaDownloadService": true,
          "response": {
            "$ref": "Revision"
          },
          "httpMethod": "GET",
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "parameters": {
            "revisionId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the revision."
            },
            "acknowledgeAbuse": {
              "default": "false",
              "location": "query",
              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when alt=media.",
              "type": "boolean"
            },
            "fileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the file."
            }
          }
        },
        "list": {
          "path": "files/{fileId}/revisions",
          "flatPath": "files/{fileId}/revisions",
          "parameterOrder": [
            "fileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.metadata",
            "https://www.googleapis.com/auth/drive.metadata.readonly",
            "https://www.googleapis.com/auth/drive.photos.readonly",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.revisions.list",
          "description": "Lists a file's revisions.",
          "response": {
            "$ref": "RevisionList"
          },
          "parameters": {
            "pageSize": {
              "minimum": "1",
              "description": "The maximum number of revisions to return per page.",
              "type": "integer",
              "location": "query",
              "format": "int32",
              "maximum": "1000",
              "default": "200"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response."
            },
            "fileId": {
              "required": true,
              "description": "The ID of the file.",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "GET"
        },
        "update": {
          "flatPath": "files/{fileId}/revisions/{revisionId}",
          "parameterOrder": [
            "fileId",
            "revisionId"
          ],
          "request": {
            "$ref": "Revision"
          },
          "path": "files/{fileId}/revisions/{revisionId}",
          "description": "Updates a revision with patch semantics.",
          "response": {
            "$ref": "Revision"
          },
          "parameters": {
            "revisionId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the revision."
            },
            "fileId": {
              "required": true,
              "location": "path",
              "description": "The ID of the file.",
              "type": "string"
            }
          },
          "httpMethod": "PATCH",
          "id": "drive.revisions.update",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.appdata",
            "https://www.googleapis.com/auth/drive.file"
          ]
        }
      }
    },
    "teamdrives": {
      "methods": {
        "update": {
          "parameters": {
            "useDomainAdminAccess": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs."
            },
            "teamDriveId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the Team Drive"
            }
          },
          "description": "Deprecated: Use `drives.update` instead.",
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "request": {
            "$ref": "TeamDrive"
          },
          "path": "teamdrives/{teamDriveId}",
          "httpMethod": "PATCH",
          "id": "drive.teamdrives.update",
          "flatPath": "teamdrives/{teamDriveId}",
          "response": {
            "$ref": "TeamDrive"
          },
          "parameterOrder": [
            "teamDriveId"
          ]
        },
        "create": {
          "description": "Deprecated: Use `drives.create` instead.",
          "parameters": {
            "requestId": {
              "required": true,
              "type": "string",
              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "TeamDrive"
          },
          "flatPath": "teamdrives",
          "response": {
            "$ref": "TeamDrive"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "path": "teamdrives",
          "id": "drive.teamdrives.create",
          "parameterOrder": [
            "requestId"
          ]
        },
        "delete": {
          "flatPath": "teamdrives/{teamDriveId}",
          "path": "teamdrives/{teamDriveId}",
          "parameters": {
            "teamDriveId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the Team Drive"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive"
          ],
          "parameterOrder": [
            "teamDriveId"
          ],
          "httpMethod": "DELETE",
          "description": "Deprecated: Use `drives.delete` instead.",
          "id": "drive.teamdrives.delete"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "id": "drive.teamdrives.get",
          "response": {
            "$ref": "TeamDrive"
          },
          "parameters": {
            "teamDriveId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the Team Drive"
            },
            "useDomainAdminAccess": {
              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
              "default": "false",
              "location": "query",
              "type": "boolean"
            }
          },
          "path": "teamdrives/{teamDriveId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "teamDriveId"
          ],
          "flatPath": "teamdrives/{teamDriveId}",
          "description": "Deprecated: Use `drives.get` instead."
        },
        "list": {
          "response": {
            "$ref": "TeamDriveList"
          },
          "id": "drive.teamdrives.list",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly"
          ],
          "httpMethod": "GET",
          "path": "teamdrives",
          "flatPath": "teamdrives",
          "parameters": {
            "q": {
              "description": "Query string for searching Team Drives.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "description": "Page token for Team Drives.",
              "location": "query",
              "type": "string"
            },
            "useDomainAdminAccess": {
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned."
            },
            "pageSize": {
              "type": "integer",
              "description": "Maximum number of Team Drives to return.",
              "location": "query",
              "minimum": "1",
              "default": "10",
              "format": "int32",
              "maximum": "100"
            }
          },
          "parameterOrder": [],
          "description": "Deprecated: Use `drives.list` instead."
        }
      }
    }
  },
  "schemas": {
    "LabelList": {
      "description": "A list of labels applied to a file.",
      "properties": {
        "kind": {
          "description": "This is always drive#labelList",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "description": "The list of labels.",
          "items": {
            "$ref": "Label"
          }
        }
      },
      "id": "LabelList",
      "type": "object"
    },
    "Revision": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Output only. The ID of the revision."
        },
        "publishAuto": {
          "description": "Whether subsequent revisions will be automatically republished. This is only applicable to Docs Editors files.",
          "type": "boolean"
        },
        "publishedLink": {
          "description": "Output only. A link to the published revision. This is only populated for Google Sites files.",
          "type": "string"
        },
        "keepForever": {
          "type": "boolean",
          "description": "Whether to keep this revision forever, even if it is no longer the head revision. If not set, the revision will be automatically purged 30 days after newer content is uploaded. This can be set on a maximum of 200 revisions for a file. This field is only applicable to files with binary content in Drive."
        },
        "published": {
          "type": "boolean",
          "description": "Whether this revision is published. This is only applicable to Docs Editors files."
        },
        "size": {
          "format": "int64",
          "description": "Output only. The size of the revision's content in bytes. This is only applicable to files with binary content in Drive.",
          "type": "string"
        },
        "publishedOutsideDomain": {
          "description": "Whether this revision is published outside the domain. This is only applicable to Docs Editors files.",
          "type": "boolean"
        },
        "originalFilename": {
          "type": "string",
          "description": "Output only. The original filename used to create this revision. This is only applicable to files with binary content in Drive."
        },
        "modifiedTime": {
          "description": "The last time the revision was modified (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "lastModifyingUser": {
          "$ref": "User",
          "description": "Output only. The last user to modify this revision."
        },
        "md5Checksum": {
          "type": "string",
          "description": "Output only. The MD5 checksum of the revision's content. This is only applicable to files with binary content in Drive."
        },
        "exportLinks": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Links for exporting Docs Editors files to specific formats."
        },
        "kind": {
          "type": "string",
          "default": "drive#revision",
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#revision\"`."
        },
        "mimeType": {
          "type": "string",
          "description": "Output only. The MIME type of the revision."
        }
      },
      "id": "Revision",
      "description": "The metadata for a revision to a file."
    },
    "File": {
      "id": "File",
      "description": "The metadata for a file.",
      "properties": {
        "createdTime": {
          "type": "string",
          "description": "The time at which the file was created (RFC 3339 date-time).",
          "format": "date-time"
        },
        "version": {
          "type": "string",
          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the user.",
          "format": "int64"
        },
        "contentHints": {
          "description": "Additional information about the content of the file. These fields are never populated in responses.",
          "type": "object",
          "properties": {
            "indexableText": {
              "type": "string",
              "description": "Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements."
            },
            "thumbnail": {
              "properties": {
                "mimeType": {
                  "type": "string",
                  "description": "The MIME type of the thumbnail."
                },
                "image": {
                  "description": "The thumbnail data encoded with URL-safe Base64 (RFC 4648 section 5).",
                  "format": "byte",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "A thumbnail for the file. This will only be used if Google Drive cannot generate a standard thumbnail."
            }
          }
        },
        "sharingUser": {
          "$ref": "User",
          "description": "Output only. The user who shared the file with the requesting user, if applicable."
        },
        "spaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The list of spaces which contain the file. The currently supported values are 'drive', 'appDataFolder' and 'photos'."
        },
        "teamDriveId": {
          "description": "Deprecated: Output only. Use `driveId` instead.",
          "type": "string"
        },
        "explicitlyTrashed": {
          "description": "Output only. Whether the file has been explicitly trashed, as opposed to recursively trashed from a parent folder.",
          "type": "boolean"
        },
        "quotaBytesUsed": {
          "format": "int64",
          "description": "Output only. The number of storage quota bytes used by the file. This includes the head revision as well as previous revisions with `keepForever` enabled.",
          "type": "string"
        },
        "modifiedTime": {
          "description": "he last time the file was modified by anyone (RFC 3339 date-time). Note that setting modifiedTime will also update modifiedByMeTime for the user.",
          "format": "date-time",
          "type": "string"
        },
        "parents": {
          "description": "The IDs of the parent folders which contain the file. If not specified as part of a create request, the file is placed directly in the user's My Drive folder. If not specified as part of a copy request, the file inherits any discoverable parents of the source file. Update requests must use the `addParents` and `removeParents` parameters to modify the parents list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "viewersCanCopyContent": {
          "description": "Deprecated: Use `copyRequiresWriterPermission` instead.",
          "type": "boolean"
        },
        "shortcutDetails": {
          "properties": {
            "targetId": {
              "type": "string",
              "description": "The ID of the file that this shortcut points to."
            },
            "targetMimeType": {
              "type": "string",
              "description": "Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created."
            },
            "targetResourceKey": {
              "type": "string",
              "description": "Output only. The ResourceKey for the target file."
            }
          },
          "type": "object",
          "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`."
        },
        "shared": {
          "type": "boolean",
          "description": "Output only. Whether the file has been shared. Not populated for items in shared drives."
        },
        "md5Checksum": {
          "type": "string",
          "description": "Output only. The MD5 checksum for the content of the file. This is only applicable to files with binary content in Google Drive."
        },
        "resourceKey": {
          "description": "Output only. A key needed to access the item via a shared link.",
          "type": "string"
        },
        "lastModifyingUser": {
          "description": "Output only. The last user to modify the file.",
          "$ref": "User"
        },
        "id": {
          "description": "The ID of the file.",
          "type": "string"
        },
        "ownedByMe": {
          "description": "Output only. Whether the user owns the file. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "thumbnailLink": {
          "type": "string",
          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content."
        },
        "description": {
          "type": "string",
          "description": "A short description of the file."
        },
        "capabilities": {
          "properties": {
            "canMoveItemWithinDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed."
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canMoveItemIntoTeamDrive": {
              "description": "Deprecated: Output only. Use `canMoveItemOutOfDrive` instead.",
              "type": "boolean"
            },
            "canDownload": {
              "description": "Output only. Whether the current user can download this file.",
              "type": "boolean"
            },
            "canEdit": {
              "type": "boolean",
              "description": "Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`."
            },
            "canModifyContentRestriction": {
              "description": "Output only. Whether the current user can modify restrictions on content of this file.",
              "type": "boolean"
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canComment": {
              "type": "boolean",
              "description": "Output only. Whether the current user can comment on this file."
            },
            "canReadTeamDrive": {
              "type": "boolean",
              "description": "Deprecated: Output only. Use `canReadDrive` instead."
            },
            "canMoveTeamDriveItem": {
              "type": "boolean",
              "description": "Deprecated: Output only. Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead."
            },
            "canCopy": {
              "type": "boolean",
              "description": "Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder."
            },
            "canReadRevisions": {
              "description": "Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
              "type": "boolean"
            },
            "canDelete": {
              "description": "Output only. Whether the current user can delete this file.",
              "type": "boolean"
            },
            "canReadLabels": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the labels on the file."
            },
            "canRemoveChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead."
            },
            "canAddFolderFromAnotherDrive": {
              "description": "Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
              "type": "boolean"
            },
            "canMoveChildrenOutOfTeamDrive": {
              "description": "Deprecated: Output only. Use `canMoveChildrenOutOfDrive` instead.",
              "type": "boolean"
            },
            "canUntrash": {
              "type": "boolean",
              "description": "Output only. Whether the current user can restore this file from trash."
            },
            "canModifyLabels": {
              "description": "Output only. Whether the current user can modify the labels on the file.",
              "type": "boolean"
            },
            "canTrash": {
              "description": "Output only. Whether the current user can move this file to trash.",
              "type": "boolean"
            },
            "canRename": {
              "type": "boolean",
              "description": "Output only. Whether the current user can rename this file."
            },
            "canChangeViewersCanCopyContent": {
              "description": "Deprecated: Output only.",
              "type": "boolean"
            },
            "canMoveChildrenWithinDrive": {
              "description": "Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermission": {
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.",
              "type": "boolean"
            },
            "canAddChildren": {
              "description": "Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canRemoveMyDriveParent": {
              "type": "boolean",
              "description": "Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files."
            },
            "canMoveItemOutOfDrive": {
              "description": "Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
              "type": "boolean"
            },
            "canAddMyDriveParent": {
              "description": "Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
              "type": "boolean"
            },
            "canMoveChildrenWithinTeamDrive": {
              "type": "boolean",
              "description": "Deprecated: Output only. Use `canMoveChildrenWithinDrive` instead."
            },
            "canReadDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives."
            },
            "canMoveChildrenOutOfDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives."
            },
            "canShare": {
              "description": "Output only. Whether the current user can modify the sharing settings for this file.",
              "type": "boolean"
            },
            "canChangeSecurityUpdateEnabled": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata."
            },
            "canMoveItemOutOfTeamDrive": {
              "type": "boolean",
              "description": "Deprecated: Output only. Use `canMoveItemOutOfDrive` instead."
            },
            "canModifyContent": {
              "type": "boolean",
              "description": "Output only. Whether the current user can modify the content of this file."
            },
            "canMoveItemWithinTeamDrive": {
              "type": "boolean",
              "description": "Deprecated: Output only. Use `canMoveItemWithinDrive` instead."
            },
            "canListChildren": {
              "description": "Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
              "type": "boolean"
            },
            "canAcceptOwnership": {
              "description": "Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.",
              "type": "boolean"
            }
          },
          "type": "object",
          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take."
        },
        "trashed": {
          "type": "boolean",
          "description": "Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file, and other users cannot see files in the owner's trash."
        },
        "iconLink": {
          "description": "Output only. A static, unauthenticated link to the file's icon.",
          "type": "string"
        },
        "starred": {
          "type": "boolean",
          "description": "Whether the user has starred the file."
        },
        "kind": {
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#file\"`.",
          "type": "string",
          "default": "drive#file"
        },
        "sharedWithMeTime": {
          "format": "date-time",
          "type": "string",
          "description": "The time at which the file was shared with the user, if applicable (RFC 3339 date-time)."
        },
        "videoMediaMetadata": {
          "type": "object",
          "description": "Output only. Additional metadata about video media. This may not be available immediately upon upload.",
          "properties": {
            "height": {
              "type": "integer",
              "description": "Output only. The height of the video in pixels.",
              "format": "int32"
            },
            "width": {
              "type": "integer",
              "description": "Output only. The width of the video in pixels.",
              "format": "int32"
            },
            "durationMillis": {
              "type": "string",
              "description": "Output only. The duration of the video in milliseconds.",
              "format": "int64"
            }
          }
        },
        "folderColorRgb": {
          "type": "string",
          "description": "The color for a folder or a shortcut to a folder as an RGB hex string. The supported colors are published in the `folderColorPalette` field of the About resource. If an unsupported color is specified, the closest color in the palette is used instead."
        },
        "permissions": {
          "items": {
            "$ref": "Permission"
          },
          "type": "array",
          "description": "Output only. The full list of permissions for the file. This is only available if the requesting user can share the file. Not populated for items in shared drives."
        },
        "properties": {
          "description": "A collection of arbitrary key-value pairs which are visible to all apps.\nEntries with null values are cleared in update and copy requests.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hasThumbnail": {
          "type": "boolean",
          "description": "Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field."
        },
        "headRevisionId": {
          "description": "Output only. The ID of the file's head revision. This is currently only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "imageMediaMetadata": {
          "properties": {
            "isoSpeed": {
              "format": "int32",
              "description": "Output only. The ISO speed used to create the photo.",
              "type": "integer"
            },
            "width": {
              "format": "int32",
              "description": "Output only. The width of the image in pixels.",
              "type": "integer"
            },
            "cameraModel": {
              "type": "string",
              "description": "Output only. The model of the camera used to create the photo."
            },
            "exposureMode": {
              "type": "string",
              "description": "Output only. The exposure mode used to create the photo."
            },
            "exposureTime": {
              "description": "Output only. The length of the exposure, in seconds.",
              "type": "number",
              "format": "float"
            },
            "time": {
              "description": "Output only. The date and time the photo was taken (EXIF DateTime).",
              "type": "string"
            },
            "colorSpace": {
              "description": "Output only. The color space of the photo.",
              "type": "string"
            },
            "height": {
              "type": "integer",
              "format": "int32",
              "description": "Output only. The height of the image in pixels."
            },
            "maxApertureValue": {
              "format": "float",
              "description": "Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
              "type": "number"
            },
            "lens": {
              "type": "string",
              "description": "Output only. The lens used to create the photo."
            },
            "exposureBias": {
              "format": "float",
              "type": "number",
              "description": "Output only. The exposure bias of the photo (APEX value)."
            },
            "meteringMode": {
              "type": "string",
              "description": "Output only. The metering mode used to create the photo."
            },
            "focalLength": {
              "description": "Output only. The focal length used to create the photo, in millimeters.",
              "format": "float",
              "type": "number"
            },
            "cameraMake": {
              "type": "string",
              "description": "Output only. The make of the camera used to create the photo."
            },
            "aperture": {
              "type": "number",
              "format": "float",
              "description": "Output only. The aperture used to create the photo (f-number)."
            },
            "whiteBalance": {
              "description": "Output only. The white balance mode used to create the photo.",
              "type": "string"
            },
            "location": {
              "description": "Output only. Geographic location information stored in the image.",
              "type": "object",
              "properties": {
                "longitude": {
                  "type": "number",
                  "description": "Output only. The longitude stored in the image.",
                  "format": "double"
                },
                "latitude": {
                  "description": "Output only. The latitude stored in the image.",
                  "type": "number",
                  "format": "double"
                },
                "altitude": {
                  "format": "double",
                  "type": "number",
                  "description": "Output only. The altitude stored in the image."
                }
              }
            },
            "flashUsed": {
              "description": "Output only. Whether a flash was used to create the photo.",
              "type": "boolean"
            },
            "subjectDistance": {
              "description": "Output only. The distance to the subject of the photo, in meters.",
              "format": "int32",
              "type": "integer"
            },
            "rotation": {
              "type": "integer",
              "description": "Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
              "format": "int32"
            },
            "sensor": {
              "description": "Output only. The type of sensor used to create the photo.",
              "type": "string"
            }
          },
          "description": "Output only. Additional metadata about image media, if available.",
          "type": "object"
        },
        "webViewLink": {
          "type": "string",
          "description": "Output only. A link for opening the file in a relevant Google editor or viewer in a browser."
        },
        "trashedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the item was trashed (RFC 3339 date-time). Only populated for items in shared drives."
        },
        "contentRestrictions": {
          "items": {
            "$ref": "ContentRestriction"
          },
          "type": "array",
          "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists."
        },
        "labelInfo": {
          "properties": {
            "labels": {
              "type": "array",
              "items": {
                "$ref": "Label"
              },
              "description": "Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned."
            }
          },
          "description": "Output only. An overview of the labels on the file.",
          "type": "object"
        },
        "sha1Checksum": {
          "type": "string",
          "description": "Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files."
        },
        "linkShareMetadata": {
          "type": "object",
          "description": "Contains details about the link URLs that clients are using to refer to this item.",
          "properties": {
            "securityUpdateEligible": {
              "type": "boolean",
              "description": "Output only. Whether the file is eligible for security update."
            },
            "securityUpdateEnabled": {
              "description": "Output only. Whether the security update is enabled for this file.",
              "type": "boolean"
            }
          }
        },
        "thumbnailVersion": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The thumbnail version for use in thumbnail cache invalidation."
        },
        "webContentLink": {
          "description": "Output only. A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "driveId": {
          "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",
          "type": "string"
        },
        "size": {
          "description": "Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders.",
          "type": "string",
          "format": "int64"
        },
        "writersCanShare": {
          "description": "Whether users with only `writer` permission can modify the file's permissions. Not populated for items in shared drives.",
          "type": "boolean"
        },
        "viewedByMeTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the file was viewed by the user (RFC 3339 date-time)."
        },
        "name": {
          "description": "The name of the file. This is not necessarily unique within a folder. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the name is constant.",
          "type": "string"
        },
        "copyRequiresWriterPermission": {
          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",
          "type": "boolean"
        },
        "hasAugmentedPermissions": {
          "description": "Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
          "type": "boolean"
        },
        "appProperties": {
          "description": "A collection of arbitrary key-value pairs which are private to the requesting app.\nEntries with null values are cleared in update and copy requests. These properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "fullFileExtension": {
          "type": "string",
          "description": "Output only. The full file extension extracted from the `name` field. May contain multiple concatenated extensions, such as \"tar.gz\". This is only available for files with binary content in Google Drive. This is automatically updated when the `name` field changes, however it is not cleared if the new name does not contain a valid extension."
        },
        "modifiedByMeTime": {
          "type": "string",
          "description": "The last time the file was modified by the user (RFC 3339 date-time).",
          "format": "date-time"
        },
        "originalFilename": {
          "description": "The original filename of the uploaded content if available, or else the original value of the `name` field. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "sha256Checksum": {
          "description": "Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
          "type": "string"
        },
        "permissionIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. List of permission IDs for users with access to this file."
        },
        "fileExtension": {
          "description": "Output only. The final component of `fullFileExtension`. This is only available for files with binary content in Google Drive.",
          "type": "string"
        },
        "modifiedByMe": {
          "description": "Output only. Whether the file has been modified by this user.",
          "type": "boolean"
        },
        "trashingUser": {
          "$ref": "User",
          "description": "Output only. If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives."
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of the file. Google Drive attempts to automatically detect an appropriate value from uploaded content, if no value is provided. The value cannot be changed unless a new revision is uploaded. If a file is created with a Google Doc MIME type, the uploaded content is imported, if possible. The supported import formats are published in the About resource."
        },
        "isAppAuthorized": {
          "type": "boolean",
          "description": "Output only. Whether the file was created or opened by the requesting app."
        },
        "owners": {
          "description": "Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
          "type": "array",
          "items": {
            "$ref": "User"
          }
        },
        "viewedByMe": {
          "type": "boolean",
          "description": "Output only. Whether the file has been viewed by this user."
        },
        "exportLinks": {
          "readOnly": true,
          "description": "Output only. Links for exporting Docs Editors files to specific formats.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "LabelFieldModification": {
      "description": "A modification to a label's field.",
      "type": "object",
      "id": "LabelFieldModification",
      "properties": {
        "setUserValues": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Replaces a `user` field with these new values. The values must be valid email addresses."
        },
        "setDateValues": {
          "items": {
            "type": "string",
            "format": "date"
          },
          "description": "Replaces the value of a dateString Field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.",
          "type": "array"
        },
        "setTextValues": {
          "type": "array",
          "description": "Sets the value of a `text` field.",
          "items": {
            "type": "string"
          }
        },
        "fieldId": {
          "type": "string",
          "description": "The ID of the field to be modified."
        },
        "kind": {
          "type": "string",
          "description": "This is always drive#labelFieldModification."
        },
        "setSelectionValues": {
          "type": "array",
          "description": "Replaces a `selection` field with these new values.",
          "items": {
            "type": "string"
          }
        },
        "setIntegerValues": {
          "description": "Replaces the value of an `integer` field with these new values.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "unsetValues": {
          "type": "boolean",
          "description": "Unsets the values for this field."
        }
      }
    },
    "RevisionList": {
      "type": "object",
      "description": "A list of revisions of a file.",
      "id": "RevisionList",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of revisions. This will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "revisions": {
          "items": {
            "$ref": "Revision"
          },
          "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array"
        },
        "kind": {
          "default": "drive#revisionList",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#revisionList\"`."
        }
      }
    },
    "Reply": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "The action the reply performed to the parent comment. Valid values are: * `resolve` * `reopen`"
        },
        "htmlContent": {
          "type": "string",
          "description": "Output only. The content of the reply with HTML formatting."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the reply was created (RFC 3339 date-time)."
        },
        "modifiedTime": {
          "description": "The last time the reply was modified (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "description": "Output only. The ID of the reply."
        },
        "kind": {
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#reply\"`.",
          "type": "string",
          "default": "drive#reply"
        },
        "author": {
          "description": "Output only. The author of the reply. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. Whether the reply has been deleted. A deleted reply has no content."
        },
        "content": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.replies.update"
            ]
          },
          "description": "The plain text content of the reply. This field is used for setting the content, while `htmlContent` should be displayed. This is required on creates if no `action` is specified."
        }
      },
      "description": "A reply to a comment on a file.",
      "id": "Reply"
    },
    "ModifyLabelsRequest": {
      "properties": {
        "labelModifications": {
          "items": {
            "$ref": "LabelModification"
          },
          "type": "array",
          "description": "The list of modifications to apply to the labels on the file."
        },
        "kind": {
          "type": "string",
          "description": "This is always drive#modifyLabelsRequest."
        }
      },
      "description": "A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail atomically.",
      "id": "ModifyLabelsRequest",
      "type": "object"
    },
    "ContentRestriction": {
      "id": "ContentRestriction",
      "type": "object",
      "description": "A restriction for accessing the content of the file.",
      "properties": {
        "type": {
          "description": "Output only. The type of the content restriction. Currently the only possible value is `globalContentRestriction`.",
          "type": "string"
        },
        "restrictingUser": {
          "description": "Output only. The user who set the content restriction. Only populated if `readOnly` is true.",
          "$ref": "User"
        },
        "reason": {
          "type": "string",
          "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set `readOnly=true`."
        },
        "readOnly": {
          "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.",
          "type": "boolean"
        },
        "restrictionTime": {
          "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.",
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "LabelField": {
      "properties": {
        "selection": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Only present if `valueType` is `selection`"
        },
        "user": {
          "description": "Only present if `valueType` is `user`.",
          "items": {
            "$ref": "User"
          },
          "type": "array"
        },
        "text": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Only present if `valueType` is `text`."
        },
        "valueType": {
          "type": "string",
          "description": "The field type. While new values may be supported in the future, the following are currently allowed: * `dateString` * `integer` * `selection` * `text` * `user`"
        },
        "integer": {
          "description": "Only present if `valueType` is `integer`.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always drive#labelField."
        },
        "id": {
          "type": "string",
          "description": "The identifier of this label field."
        },
        "dateString": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          },
          "description": "Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD."
        }
      },
      "description": "Representation of field, which is a typed key-value pair.",
      "type": "object",
      "id": "LabelField"
    },
    "ChangeList": {
      "properties": {
        "newStartPageToken": {
          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "changes": {
          "items": {
            "$ref": "Change"
          },
          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array"
        },
        "kind": {
          "default": "drive#changeList",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#changeList\"`.",
          "type": "string"
        }
      },
      "id": "ChangeList",
      "description": "A list of changes for a user.",
      "type": "object"
    },
    "About": {
      "type": "object",
      "id": "About",
      "properties": {
        "exportFormats": {
          "type": "object",
          "description": "A map of source MIME type to possible targets for all supported exports.",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "appInstalled": {
          "description": "Whether the user has installed the requesting app.",
          "type": "boolean"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#about\"`.",
          "type": "string",
          "default": "drive#about"
        },
        "importFormats": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "A map of source MIME type to possible targets for all supported imports."
        },
        "maxImportSizes": {
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "description": "A map of maximum import sizes by MIME type, in bytes."
        },
        "maxUploadSize": {
          "format": "int64",
          "type": "string",
          "description": "The maximum upload size in bytes."
        },
        "driveThemes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "backgroundImageLink": {
                "description": "A link to this theme's background image.",
                "type": "string"
              },
              "id": {
                "type": "string",
                "description": "The ID of the theme."
              },
              "colorRgb": {
                "description": "The color of this theme as an RGB hex string.",
                "type": "string"
              }
            }
          },
          "description": "A list of themes that are supported for shared drives."
        },
        "user": {
          "$ref": "User",
          "description": "The authenticated user."
        },
        "canCreateTeamDrives": {
          "type": "boolean",
          "description": "Deprecated: Use `canCreateDrives` instead."
        },
        "teamDriveThemes": {
          "description": "Deprecated: Use `driveThemes` instead.",
          "type": "array",
          "items": {
            "properties": {
              "colorRgb": {
                "description": "Deprecated: Use `driveThemes/colorRgb` instead.",
                "type": "string"
              },
              "backgroundImageLink": {
                "type": "string",
                "description": "Deprecated: Use `driveThemes/backgroundImageLink` instead."
              },
              "id": {
                "type": "string",
                "description": "Deprecated: Use `driveThemes/id` instead."
              }
            },
            "type": "object"
          }
        },
        "canCreateDrives": {
          "description": "Whether the user can create shared drives.",
          "type": "boolean"
        },
        "folderColorPalette": {
          "items": {
            "type": "string"
          },
          "description": "The currently supported folder colors as RGB hex strings.",
          "type": "array"
        },
        "storageQuota": {
          "description": "The user's storage quota limits and usage. All fields are measured in bytes.",
          "properties": {
            "usageInDriveTrash": {
              "format": "int64",
              "type": "string",
              "description": "The usage by trashed files in Google Drive."
            },
            "usage": {
              "type": "string",
              "format": "int64",
              "description": "The total usage across all services."
            },
            "usageInDrive": {
              "type": "string",
              "format": "int64",
              "description": "The usage by all files in Google Drive."
            },
            "limit": {
              "format": "int64",
              "description": "The usage limit, if applicable. This will not be present if the user has unlimited storage.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "description": "Information about the user, the user's Drive, and system capabilities."
    },
    "User": {
      "properties": {
        "permissionId": {
          "type": "string",
          "description": "Output only. The user's ID as visible in Permission resources."
        },
        "emailAddress": {
          "description": "Output only. The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. A plain text displayable name for this user.",
          "type": "string"
        },
        "kind": {
          "default": "drive#user",
          "type": "string",
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#user\"`."
        },
        "photoLink": {
          "type": "string",
          "description": "Output only. A link to the user's profile photo, if available."
        },
        "me": {
          "description": "Output only. Whether this user is the requesting user.",
          "type": "boolean"
        }
      },
      "id": "User",
      "description": "Information about a Drive user.",
      "type": "object"
    },
    "Channel": {
      "id": "Channel",
      "properties": {
        "kind": {
          "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.",
          "default": "api#channel",
          "type": "string"
        },
        "type": {
          "description": "The type of delivery mechanism used for this channel.",
          "type": "string"
        },
        "resourceUri": {
          "type": "string",
          "description": "A version-specific identifier for the watched resource."
        },
        "expiration": {
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
        },
        "resourceId": {
          "type": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
        },
        "address": {
          "description": "The address where notifications are delivered for this channel.",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "type": "object"
        },
        "id": {
          "type": "string",
          "description": "A UUID or similar unique string that identifies this channel."
        },
        "payload": {
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A notification channel used to watch for resource changes."
    },
    "CommentList": {
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "Comment"
          },
          "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#commentList\"`.",
          "type": "string",
          "default": "drive#commentList"
        }
      },
      "type": "object",
      "id": "CommentList",
      "description": "A list of comments on a file."
    },
    "ReplyList": {
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#replyList\"`.",
          "type": "string",
          "default": "drive#replyList"
        },
        "replies": {
          "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Reply"
          }
        }
      },
      "type": "object",
      "description": "A list of replies to a comment on a file.",
      "id": "ReplyList"
    },
    "Permission": {
      "description": "A permission for a file. A permission grants a user, group, domain or the world access to a file or a folder hierarchy.",
      "id": "Permission",
      "properties": {
        "id": {
          "description": "Output only. The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as `permissionId`. IDs should be treated as opaque values.",
          "type": "string"
        },
        "pendingOwner": {
          "type": "boolean",
          "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive."
        },
        "view": {
          "type": "string",
          "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. 'published' is the only supported value."
        },
        "type": {
          "type": "string",
          "description": "The type of the grantee. Valid values are: * `user` * `group` * `domain` * `anyone` When creating a permission, if `type` is `user` or `group`, you must provide an `emailAddress` for the user or group. When `type` is `domain`, you must provide a `domain`. There isn't extra information required for an `anyone` type.",
          "annotations": {
            "required": [
              "drive.permissions.create"
            ]
          }
        },
        "expirationTime": {
          "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions: - They can only be set on user and group permissions - The time must be in the future - The time cannot be more than a year in the future",
          "type": "string",
          "format": "date-time"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The \"pretty\" name of the value of the permission. The following is a list of examples for each type of permission: * `user` - User's full name, as defined for their Google account, such as \"Joe Smith.\" * `group` - Name of the Google Group, such as \"The Company Administrators.\" * `domain` - String domain name, such as \"thecompany.com.\" * `anyone` - No `displayName` is present."
        },
        "role": {
          "description": "The role granted by this permission. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `commenter` * `reader`",
          "type": "string",
          "annotations": {
            "required": [
              "drive.permissions.create"
            ]
          }
        },
        "teamDrivePermissionDetails": {
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "inherited": {
                "description": "Deprecated: Output only. Use `permissionDetails/inherited` instead.",
                "type": "boolean"
              },
              "teamDrivePermissionType": {
                "type": "string",
                "description": "Deprecated: Output only. Use `permissionDetails/permissionType` instead."
              },
              "role": {
                "type": "string",
                "description": "Deprecated: Output only. Use `permissionDetails/role` instead."
              },
              "inheritedFrom": {
                "description": "Deprecated: Output only. Use `permissionDetails/inheritedFrom` instead.",
                "type": "string"
              }
            }
          },
          "description": "Output only. Deprecated: Output only. Use `permissionDetails` instead.",
          "type": "array"
        },
        "allowFileDiscovery": {
          "description": "Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type `domain` or `anyone`.",
          "type": "boolean"
        },
        "emailAddress": {
          "description": "The email address of the user or group to which this permission refers.",
          "type": "string"
        },
        "deleted": {
          "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#permission\"`.",
          "default": "drive#permission"
        },
        "photoLink": {
          "type": "string",
          "description": "Output only. A link to the user's profile photo, if available."
        },
        "domain": {
          "description": "The domain to which this permission refers.",
          "type": "string"
        },
        "permissionDetails": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "inherited": {
                "type": "boolean",
                "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field."
              },
              "role": {
                "type": "string",
                "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `commenter` * `reader`"
              },
              "permissionType": {
                "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                "type": "string"
              },
              "inheritedFrom": {
                "type": "string",
                "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field."
              }
            },
            "type": "object"
          },
          "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items."
        }
      },
      "type": "object"
    },
    "LabelModification": {
      "properties": {
        "labelId": {
          "annotations": {
            "required": [
              "drive.files.modifyLabels"
            ]
          },
          "type": "string",
          "description": "The ID of the label to modify."
        },
        "fieldModifications": {
          "items": {
            "$ref": "LabelFieldModification"
          },
          "type": "array",
          "description": "The list of modifications to this label's fields."
        },
        "kind": {
          "description": "This is always drive#labelModification.",
          "type": "string"
        },
        "removeLabel": {
          "description": "If true, the label will be removed from the file.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file.",
      "id": "LabelModification"
    },
    "StartPageToken": {
      "type": "object",
      "id": "StartPageToken",
      "properties": {
        "startPageToken": {
          "type": "string",
          "description": "The starting page token for listing changes."
        },
        "kind": {
          "type": "string",
          "default": "drive#startPageToken",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#startPageToken\"`."
        }
      }
    },
    "PermissionList": {
      "id": "PermissionList",
      "type": "object",
      "description": "A list of permissions for a file.",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#permissionList\"`.",
          "default": "drive#permissionList",
          "type": "string"
        },
        "permissions": {
          "description": "The list of permissions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        },
        "nextPageToken": {
          "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        }
      }
    },
    "Label": {
      "description": "Representation of label and label fields.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always drive#label"
        },
        "revisionId": {
          "type": "string",
          "description": "The revision ID of the label."
        },
        "id": {
          "type": "string",
          "description": "The ID of the label."
        },
        "fields": {
          "additionalProperties": {
            "$ref": "LabelField"
          },
          "description": "A map of the fields on the label, keyed by the field's ID.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "Label"
    },
    "DriveList": {
      "id": "DriveList",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        },
        "drives": {
          "items": {
            "$ref": "Drive"
          },
          "description": "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#driveList\"`.",
          "type": "string",
          "default": "drive#driveList"
        }
      },
      "type": "object",
      "description": "A list of shared drives."
    },
    "Change": {
      "id": "Change",
      "properties": {
        "teamDrive": {
          "$ref": "TeamDrive",
          "description": "Deprecated: Use `drive` instead."
        },
        "file": {
          "$ref": "File",
          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes."
        },
        "drive": {
          "$ref": "Drive",
          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted."
        },
        "time": {
          "type": "string",
          "description": "The time of this change (RFC 3339 date-time).",
          "format": "date-time"
        },
        "kind": {
          "default": "drive#change",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#change\"`."
        },
        "type": {
          "description": "Deprecated: Use `changeType` instead.",
          "type": "string"
        },
        "removed": {
          "type": "boolean",
          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access."
        },
        "fileId": {
          "description": "The ID of the file which has changed.",
          "type": "string"
        },
        "driveId": {
          "type": "string",
          "description": "The ID of the shared drive associated with this change."
        },
        "teamDriveId": {
          "type": "string",
          "description": "Deprecated: Use `driveId` instead."
        },
        "changeType": {
          "type": "string",
          "description": "The type of the change. Possible values are `file` and `drive`."
        }
      },
      "description": "A change to a file or shared drive.",
      "type": "object"
    },
    "Comment": {
      "description": "A comment on a file.",
      "properties": {
        "anchor": {
          "type": "string",
          "description": "A region of the document represented as a JSON string. For details on defining anchor properties, refer to [Manage comments and replies](https://developers.google.com/drive/api/v3/manage-comments)."
        },
        "replies": {
          "items": {
            "$ref": "Reply"
          },
          "type": "array",
          "description": "Output only. The full list of replies to the comment in chronological order."
        },
        "quotedFileContent": {
          "properties": {
            "mimeType": {
              "description": "The MIME type of the quoted content.",
              "type": "string"
            },
            "value": {
              "description": "The quoted content itself. This is interpreted as plain text if set through the API.",
              "type": "string"
            }
          },
          "description": "The file content to which the comment refers, typically within the anchor region. For a text file, for example, this would be the text at the location of the comment.",
          "type": "object"
        },
        "resolved": {
          "description": "Output only. Whether the comment has been resolved by one of its replies.",
          "type": "boolean"
        },
        "content": {
          "type": "string",
          "annotations": {
            "required": [
              "drive.comments.create",
              "drive.comments.update"
            ]
          },
          "description": "The plain text content of the comment. This field is used for setting the content, while `htmlContent` should be displayed."
        },
        "htmlContent": {
          "description": "Output only. The content of the comment with HTML formatting.",
          "type": "string"
        },
        "id": {
          "description": "Output only. The ID of the comment.",
          "type": "string"
        },
        "deleted": {
          "description": "Output only. Whether the comment has been deleted. A deleted comment has no content.",
          "type": "boolean"
        },
        "createdTime": {
          "type": "string",
          "description": "The time at which the comment was created (RFC 3339 date-time).",
          "format": "date-time"
        },
        "author": {
          "description": "Output only. The author of the comment. The author's email address and permission ID will not be populated.",
          "$ref": "User"
        },
        "modifiedTime": {
          "format": "date-time",
          "type": "string",
          "description": "The last time the comment or any of its replies was modified (RFC 3339 date-time)."
        },
        "kind": {
          "type": "string",
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#comment\"`.",
          "default": "drive#comment"
        }
      },
      "id": "Comment",
      "type": "object"
    },
    "TeamDriveList": {
      "id": "TeamDriveList",
      "description": "A list of Team Drives.",
      "type": "object",
      "properties": {
        "kind": {
          "default": "drive#teamDriveList",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#teamDriveList\"`."
        },
        "teamDrives": {
          "description": "The list of Team Drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array",
          "items": {
            "$ref": "TeamDrive"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The page token for the next page of Team Drives. This will be absent if the end of the Team Drives list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
        }
      }
    },
    "FileList": {
      "properties": {
        "nextPageToken": {
          "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
          "type": "string"
        },
        "incompleteSearch": {
          "type": "boolean",
          "description": "Whether the search process was incomplete. If true, then some search results might be missing, since all documents were not searched. This can occur when searching multiple drives with the 'allDrives' corpora, but all corpora couldn't be searched. When this happens, it's suggested that clients narrow their query by choosing a different corpus such as 'user' or 'drive'."
        },
        "files": {
          "items": {
            "$ref": "File"
          },
          "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
          "type": "array"
        },
        "kind": {
          "default": "drive#fileList",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#fileList\"`.",
          "type": "string"
        }
      },
      "description": "A list of files.",
      "id": "FileList",
      "type": "object"
    },
    "GeneratedIds": {
      "properties": {
        "ids": {
          "description": "The IDs generated for the requesting user in the specified space.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "space": {
          "type": "string",
          "description": "The type of file that can be created with these IDs."
        },
        "kind": {
          "type": "string",
          "default": "drive#generatedIds",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#generatedIds\"`."
        }
      },
      "id": "GeneratedIds",
      "type": "object",
      "description": "A list of generated file IDs which can be provided in create requests."
    },
    "Drive": {
      "description": "Representation of a shared drive.",
      "id": "Drive",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#drive\"`.",
          "type": "string",
          "default": "drive#drive"
        },
        "hidden": {
          "type": "boolean",
          "description": "Whether the shared drive is hidden from default view."
        },
        "colorRgb": {
          "type": "string",
          "description": "The color of this shared drive as an RGB hex string. It can only be set on a `drive.drives.update` request that does not set `themeId`."
        },
        "orgUnitId": {
          "type": "string",
          "description": "Output only. The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`."
        },
        "capabilities": {
          "type": "object",
          "description": "Output only. Capabilities the current user has on this shared drive.",
          "properties": {
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "description": "Output only. Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this shared drive.",
              "type": "boolean"
            },
            "canShare": {
              "type": "boolean",
              "description": "Output only. Whether the current user can share files or folders in this shared drive."
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this shared drive."
            },
            "canDeleteChildren": {
              "description": "Output only. Whether the current user can delete children from folders in this shared drive.",
              "type": "boolean"
            },
            "canComment": {
              "description": "Output only. Whether the current user can comment on files in this shared drive.",
              "type": "boolean"
            },
            "canRename": {
              "description": "Output only. Whether the current user can rename files or folders in this shared drive.",
              "type": "boolean"
            },
            "canListChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can list the children of folders in this shared drive."
            },
            "canRenameDrive": {
              "type": "boolean",
              "description": "Output only. Whether the current user can rename this shared drive."
            },
            "canDownload": {
              "type": "boolean",
              "description": "Output only. Whether the current user can download files in this shared drive."
            },
            "canTrashChildren": {
              "description": "Output only. Whether the current user can trash children from folders in this shared drive.",
              "type": "boolean"
            },
            "canChangeDriveBackground": {
              "type": "boolean",
              "description": "Output only. Whether the current user can change the background of this shared drive."
            },
            "canChangeDriveMembersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `driveMembersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canChangeDomainUsersOnlyRestriction": {
              "description": "Output only. Whether the current user can change the `domainUsersOnly` restriction of this shared drive.",
              "type": "boolean"
            },
            "canResetDriveRestrictions": {
              "type": "boolean",
              "description": "Output only. Whether the current user can reset the shared drive restrictions to defaults."
            },
            "canEdit": {
              "type": "boolean",
              "description": "Output only. Whether the current user can edit files in this shared drive"
            },
            "canReadRevisions": {
              "type": "boolean",
              "description": "Output only. Whether the current user can read the revisions resource of files in this shared drive."
            },
            "canCopy": {
              "description": "Output only. Whether the current user can copy files in this shared drive.",
              "type": "boolean"
            },
            "canManageMembers": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add members to this shared drive or remove them or change their role."
            },
            "canDeleteDrive": {
              "description": "Output only. Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.",
              "type": "boolean"
            },
            "canAddChildren": {
              "type": "boolean",
              "description": "Output only. Whether the current user can add children to folders in this shared drive."
            }
          }
        },
        "backgroundImageLink": {
          "type": "string",
          "description": "Output only. A short-lived link to this shared drive's background image."
        },
        "id": {
          "description": "Output only. The ID of this shared drive which is also the ID of the top level folder of this shared drive.",
          "type": "string"
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `driveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.drives.create` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "createdTime": {
          "type": "string",
          "description": "The time at which the shared drive was created (RFC 3339 date-time).",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "description": "The name of this shared drive."
        },
        "restrictions": {
          "properties": {
            "adminManagedRestrictions": {
              "type": "boolean",
              "description": "Whether administrative privileges on this shared drive are required to modify restrictions."
            },
            "domainUsersOnly": {
              "type": "boolean",
              "description": "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive."
            },
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this shared drive.",
              "type": "boolean"
            },
            "driveMembersOnly": {
              "type": "boolean",
              "description": "Whether access to items inside this shared drive is restricted to its members."
            },
            "sharingFoldersRequiresOrganizerPermission": {
              "type": "boolean",
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders."
            }
          },
          "description": "A set of restrictions that apply to this shared drive or items inside this shared drive.",
          "type": "object"
        },
        "backgroundImageFile": {
          "type": "object",
          "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on `drive.drives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of an image file in Google Drive to use for the background image."
            },
            "yCoordinate": {
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "format": "float",
              "type": "number"
            },
            "width": {
              "type": "number",
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
              "format": "float"
            },
            "xCoordinate": {
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "format": "float",
              "type": "number"
            }
          }
        }
      }
    },
    "TeamDrive": {
      "type": "object",
      "id": "TeamDrive",
      "description": "Deprecated: use the drive collection instead.",
      "properties": {
        "backgroundImageLink": {
          "description": "A short-lived link to this Team Drive's background image.",
          "type": "string"
        },
        "orgUnitId": {
          "type": "string",
          "description": "The organizational unit of this shared drive. This field is only populated on `drives.list` responses when the `useDomainAdminAccess` parameter is set to `true`."
        },
        "colorRgb": {
          "description": "The color of this Team Drive as an RGB hex string. It can only be set on a `drive.teamdrives.update` request that does not set `themeId`.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "drive#teamDrive",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#teamDrive\"`."
        },
        "themeId": {
          "description": "The ID of the theme from which the background image and color will be set. The set of possible `teamDriveThemes` can be retrieved from a `drive.about.get` response. When not specified on a `drive.teamdrives.create` request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set `colorRgb` or `backgroundImageFile`.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The ID of this Team Drive which is also the ID of the top level folder of this Team Drive."
        },
        "createdTime": {
          "description": "The time at which the Team Drive was created (RFC 3339 date-time).",
          "type": "string",
          "format": "date-time"
        },
        "restrictions": {
          "type": "object",
          "description": "A set of restrictions that apply to this Team Drive or items inside this Team Drive.",
          "properties": {
            "sharingFoldersRequiresOrganizerPermission": {
              "description": "If true, only users with the organizer role can share folders. If false, users with either the organizer role or the file organizer role can share folders.",
              "type": "boolean"
            },
            "adminManagedRestrictions": {
              "description": "Whether administrative privileges on this Team Drive are required to modify restrictions.",
              "type": "boolean"
            },
            "domainUsersOnly": {
              "description": "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive.",
              "type": "boolean"
            },
            "teamMembersOnly": {
              "description": "Whether access to items inside this Team Drive is restricted to members of this Team Drive.",
              "type": "boolean"
            },
            "copyRequiresWriterPermission": {
              "description": "Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to `true`, it will override the similarly named field to `true` for any file inside this Team Drive.",
              "type": "boolean"
            }
          }
        },
        "name": {
          "type": "string",
          "description": "The name of this Team Drive."
        },
        "backgroundImageFile": {
          "description": "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on `drive.teamdrives.update` requests that don't set `themeId`. When specified, all fields of the `backgroundImageFile` must be set.",
          "properties": {
            "yCoordinate": {
              "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
              "format": "float",
              "type": "number"
            },
            "xCoordinate": {
              "type": "number",
              "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
              "format": "float"
            },
            "width": {
              "type": "number",
              "format": "float",
              "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high."
            },
            "id": {
              "description": "The ID of an image file in Drive to use for the background image.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "capabilities": {
          "properties": {
            "canChangeDomainUsersOnlyRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `domainUsersOnly` restriction of this Team Drive."
            },
            "canDownload": {
              "type": "boolean",
              "description": "Whether the current user can download files in this Team Drive."
            },
            "canTrashChildren": {
              "description": "Whether the current user can trash children from folders in this Team Drive.",
              "type": "boolean"
            },
            "canDeleteTeamDrive": {
              "type": "boolean",
              "description": "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive."
            },
            "canEdit": {
              "type": "boolean",
              "description": "Whether the current user can edit files in this Team Drive"
            },
            "canListChildren": {
              "description": "Whether the current user can list the children of folders in this Team Drive.",
              "type": "boolean"
            },
            "canCopy": {
              "description": "Whether the current user can copy files in this Team Drive.",
              "type": "boolean"
            },
            "canChangeCopyRequiresWriterPermissionRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `copyRequiresWriterPermission` restriction of this Team Drive."
            },
            "canReadRevisions": {
              "type": "boolean",
              "description": "Whether the current user can read the revisions resource of files in this Team Drive."
            },
            "canAddChildren": {
              "description": "Whether the current user can add children to folders in this Team Drive.",
              "type": "boolean"
            },
            "canRename": {
              "description": "Whether the current user can rename files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canResetTeamDriveRestrictions": {
              "type": "boolean",
              "description": "Whether the current user can reset the Team Drive restrictions to defaults."
            },
            "canChangeTeamDriveBackground": {
              "description": "Whether the current user can change the background of this Team Drive.",
              "type": "boolean"
            },
            "canChangeTeamMembersOnlyRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `teamMembersOnly` restriction of this Team Drive."
            },
            "canShare": {
              "description": "Whether the current user can share files or folders in this Team Drive.",
              "type": "boolean"
            },
            "canRemoveChildren": {
              "type": "boolean",
              "description": "Deprecated: Use `canDeleteChildren` or `canTrashChildren` instead."
            },
            "canRenameTeamDrive": {
              "description": "Whether the current user can rename this Team Drive.",
              "type": "boolean"
            },
            "canChangeSharingFoldersRequiresOrganizerPermissionRestriction": {
              "type": "boolean",
              "description": "Whether the current user can change the `sharingFoldersRequiresOrganizerPermission` restriction of this Team Drive."
            },
            "canComment": {
              "description": "Whether the current user can comment on files in this Team Drive.",
              "type": "boolean"
            },
            "canDeleteChildren": {
              "description": "Whether the current user can delete children from folders in this Team Drive.",
              "type": "boolean"
            },
            "canManageMembers": {
              "type": "boolean",
              "description": "Whether the current user can add members to this Team Drive or remove them or change their role."
            }
          },
          "description": "Capabilities the current user has on this Team Drive.",
          "type": "object"
        }
      }
    },
    "ModifyLabelsResponse": {
      "id": "ModifyLabelsResponse",
      "properties": {
        "modifiedLabels": {
          "items": {
            "$ref": "Label"
          },
          "type": "array",
          "description": "The list of labels which were added or updated by the request."
        },
        "kind": {
          "type": "string",
          "description": "This is always drive#modifyLabelsResponse"
        }
      },
      "description": "Response to a ModifyLabels request. This contains only those labels which were added or updated by the request.",
      "type": "object"
    }
  },
  "id": "drive:v3",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "title": "Google Drive API",
  "discoveryVersion": "v1",
  "version": "v3",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/drive.metadata": {
          "description": "View and manage metadata of files in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive.scripts": {
          "description": "Modify your Google Apps Script scripts' behavior"
        },
        "https://www.googleapis.com/auth/drive.appdata": {
          "description": "See, create, and delete its own configuration data in your Google Drive"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.metadata.readonly": {
          "description": "See information about your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.photos.readonly": {
          "description": "View the photos, videos and albums in your Google Photos"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20230520",
  "servicePath": "drive/v3/"
}

{
  "title": "OS Config API",
  "documentationLink": "https://cloud.google.com/compute/docs/osconfig/rest",
  "resources": {
    "projects": {
      "resources": {
        "patchDeployments": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "osconfig.projects.patchDeployments.delete",
              "path": "v1/{+name}",
              "description": "Delete an OS Config patch deployment."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`.",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "id": "osconfig.projects.patchDeployments.get",
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "PatchDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an OS Config patch deployment.",
              "path": "v1/{+name}"
            },
            "patch": {
              "id": "osconfig.projects.patchDeployments.patch",
              "response": {
                "$ref": "PatchDeployment"
              },
              "request": {
                "$ref": "PatchDeployment"
              },
              "description": "Update an OS Config patch deployment.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Optional. Field mask that controls which fields of the patch deployment should be updated.",
                  "location": "query"
                },
                "name": {
                  "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "pause": {
              "description": "Change state of patch deployment to \"PAUSED\". Patch deployment in paused state doesn't generate patch jobs.",
              "request": {
                "$ref": "PausePatchDeploymentRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}:pause",
              "id": "osconfig.projects.patchDeployments.pause",
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:pause",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "required": true,
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`.",
                  "location": "path",
                  "type": "string"
                }
              }
            },
            "list": {
              "id": "osconfig.projects.patchDeployments.list",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The resource name of the parent in the form `projects/*`.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments that indicates where this listing should continue from."
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100."
                }
              },
              "path": "v1/{+parent}/patchDeployments",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of OS Config patch deployments.",
              "httpMethod": "GET"
            },
            "create": {
              "description": "Create an OS Config patch deployment.",
              "request": {
                "$ref": "PatchDeployment"
              },
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameters": {
                "patchDeploymentId": {
                  "location": "query",
                  "description": "Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The project to apply this patch deployment to in the form `projects/*`."
                }
              },
              "httpMethod": "POST",
              "id": "osconfig.projects.patchDeployments.create",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/patchDeployments"
            },
            "resume": {
              "response": {
                "$ref": "PatchDeployment"
              },
              "id": "osconfig.projects.patchDeployments.resume",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "ResumePatchDeploymentRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "required": true,
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:resume",
              "path": "v1/{+name}:resume",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Change state of patch deployment back to \"ACTIVE\". Patch deployment in active state continues to generate patch jobs.",
              "httpMethod": "POST"
            }
          }
        },
        "locations": {
          "resources": {
            "osPolicyAssignments": {
              "resources": {
                "operations": {
                  "methods": {
                    "cancel": {
                      "path": "v1/{+name}:cancel",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "POST",
                      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                      "id": "osconfig.projects.locations.osPolicyAssignments.operations.cancel",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:cancel",
                      "request": {
                        "$ref": "CancelOperationRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "The name of the operation resource to be cancelled.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+/operations/[^/]+$"
                        }
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The name of the operation resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+/operations/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "id": "osconfig.projects.locations.osPolicyAssignments.operations.get",
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "listRevisions": {
                  "description": "List the OS policy assignment revisions for a given OS policy assignment.",
                  "id": "osconfig.projects.locations.osPolicyAssignments.listRevisions",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:listRevisions",
                  "response": {
                    "$ref": "ListOSPolicyAssignmentRevisionsResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+$",
                      "description": "Required. The name of the OS policy assignment to list revisions for.",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to `ListOSPolicyAssignmentRevisions` that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of revisions to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}:listRevisions"
                },
                "patch": {
                  "request": {
                    "$ref": "OSPolicyAssignment"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Field mask that controls which fields of the assignment should be updated."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment."
                    }
                  },
                  "id": "osconfig.projects.locations.osPolicyAssignments.patch",
                  "httpMethod": "PATCH",
                  "description": "Update an existing OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "osconfig.projects.locations.osPolicyAssignments.get",
                  "description": "Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "OSPolicyAssignment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of OS policy assignment. Format: `projects/{project}/locations/{location}/osPolicyAssignments/{os_policy_assignment}@{revisionId}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/osPolicyAssignments/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the OS policy assignment to be deleted"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "osconfig.projects.locations.osPolicyAssignments.delete",
                  "description": "Delete the OS policy assignment. This method creates a new revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. If the LRO completes and is not cancelled, all revisions associated with the OS policy assignment are deleted. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel)."
                },
                "create": {
                  "path": "v1/{+parent}/osPolicyAssignments",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "osconfig.projects.locations.osPolicyAssignments.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "OSPolicyAssignment"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Create an OS policy assignment. This method also creates the first revision of the OS policy assignment. This method returns a long running operation (LRO) that contains the rollout details. The rollout can be cancelled by cancelling the LRO. For more information, see [Method: projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).",
                  "parameters": {
                    "osPolicyAssignmentId": {
                      "description": "Required. The logical name of the OS policy assignment in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource name in the form: projects/{project}/locations/{location}. Note: Specify the zone of your VMs as the location.",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "list": {
                  "id": "osconfig.projects.locations.osPolicyAssignments.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/osPolicyAssignments",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of assignments to return.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource name.",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to `ListOSPolicyAssignments` that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List the OS policy assignments under the parent resource. For each OS policy assignment, the latest revision is returned.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments",
                  "response": {
                    "$ref": "ListOSPolicyAssignmentsResponse"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "instances": {
              "resources": {
                "vulnerabilityReports": {
                  "methods": {
                    "get": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReport",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/vulnerabilityReport$",
                          "description": "Required. API resource name for vulnerability resource. Format: `projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided.",
                          "location": "path"
                        }
                      },
                      "id": "osconfig.projects.locations.instances.vulnerabilityReports.get",
                      "response": {
                        "$ref": "VulnerabilityReport"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the vulnerability report for the specified VM instance. Only VMs with inventory data have vulnerability reports associated with them."
                    },
                    "list": {
                      "httpMethod": "GET",
                      "id": "osconfig.projects.locations.instances.vulnerabilityReports.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/vulnerabilityReports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReports",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "This field supports filtering by the severity level for the vulnerability. For a list of severity levels, see [Severity levels for vulnerabilities](https://cloud.google.com/container-analysis/docs/container-scanning-overview#severity_levels_for_vulnerabilities). The filter field follows the rules described in the [AIP-160](https://google.aip.dev/160) guidelines as follows: + **Filter for a specific severity type**: you can list reports that contain vulnerabilities that are classified as medium by specifying `vulnerabilities.details.severity:MEDIUM`. + **Filter for a range of severities** : you can list reports that have vulnerabilities that are classified as critical or high by specifying `vulnerabilities.details.severity:HIGH OR vulnerabilities.details.severity:CRITICAL`"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided."
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "The maximum number of results to return.",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A pagination token returned from a previous call to `ListVulnerabilityReports` that indicates where this listing should continue from."
                        }
                      },
                      "description": "List vulnerability reports for all VM instances in the specified zone.",
                      "response": {
                        "$ref": "ListVulnerabilityReportsResponse"
                      }
                    }
                  }
                },
                "osPolicyAssignments": {
                  "resources": {
                    "reports": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/reports",
                          "path": "v1/{+parent}/reports",
                          "id": "osconfig.projects.locations.instances.osPolicyAssignments.reports.list",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListOSPolicyAssignmentReportsResponse"
                          },
                          "description": "List OS policy assignment reports for all Compute Engine VM instances in the specified zone.",
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "description": "The maximum number of results to return.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/osPolicyAssignments/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/reports` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either `instance-name`, `instance-id`, or `-` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all instances in the project/location. For `{assignment}`, either `assignment-id` or `-` can be provided. If '-' is provided, the response will include OSPolicyAssignmentReports for all OSPolicyAssignments in the project/location. Either {instance} or {assignment} must be `-`. For example: `projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/-/reports` returns all reports for the instance `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/{assignment-id}/reports` returns all the reports for the given assignment across all instances. `projects/{project}/locations/{location}/instances/-/osPolicyAssignments/-/reports` returns all the reports for all assignments across all instances.",
                              "location": "path"
                            },
                            "filter": {
                              "description": "If provided, this field specifies the criteria that must be met by the `OSPolicyAssignmentReport` API resource that is included in the response.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A pagination token returned from a previous call to the `ListOSPolicyAssignmentReports` method that indicates where this listing should continue from."
                            }
                          }
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "OSPolicyAssignmentReport"
                          },
                          "description": "Get the OS policy assignment report for the specified Compute Engine VM instance.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/report",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "description": "Required. API resource name for OS policy assignment report. Format: `/projects/{project}/locations/{location}/instances/{instance}/osPolicyAssignments/{assignment}/report` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance_id}`, either Compute Engine `instance-id` or `instance-name` can be provided. For `{assignment_id}`, the OSPolicyAssignment id must be provided.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/osPolicyAssignments/[^/]+/report$"
                            }
                          },
                          "id": "osconfig.projects.locations.instances.osPolicyAssignments.reports.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "httpMethod": "GET"
                        }
                      }
                    }
                  }
                },
                "inventories": {
                  "methods": {
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventory",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Inventory"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. API resource name for inventory resource. Format: `projects/{project}/locations/{location}/instances/{instance}/inventory` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/inventory$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "view": {
                          "type": "string",
                          "description": "Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC.",
                          "enum": [
                            "INVENTORY_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "enumDescriptions": [
                            "The default value. The API defaults to the BASIC view.",
                            "Returns the basic inventory information that includes `os_info`.",
                            "Returns all fields."
                          ],
                          "location": "query"
                        }
                      },
                      "id": "osconfig.projects.locations.instances.inventories.get",
                      "description": "Get inventory data for the specified VM instance. If the VM has no associated inventory, the message `NOT_FOUND` is returned."
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventories",
                      "description": "List inventory data for all VM instances in the specified zone.",
                      "path": "v1/{+parent}/inventories",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListInventoriesResponse"
                      },
                      "id": "osconfig.projects.locations.instances.inventories.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A pagination token returned from a previous call to `ListInventories` that indicates where this listing should continue from."
                        },
                        "view": {
                          "enumDescriptions": [
                            "The default value. The API defaults to the BASIC view.",
                            "Returns the basic inventory information that includes `os_info`.",
                            "Returns all fields."
                          ],
                          "description": "Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC.",
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "INVENTORY_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "filter": {
                          "description": "If provided, this field specifies the criteria that must be met by a `Inventory` API resource to be included in the response.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of results to return."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                          "description": "Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "patchJobs": {
          "methods": {
            "execute": {
              "flatPath": "v1/projects/{projectsId}/patchJobs:execute",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "ExecutePatchJobRequest"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project in which to run this patch in the form `projects/*`",
                  "type": "string"
                }
              },
              "id": "osconfig.projects.patchJobs.execute",
              "response": {
                "$ref": "PatchJob"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Patch VM instances by creating and running a patch job.",
              "path": "v1/{+parent}/patchJobs:execute"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/patchJobs",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. In the form of `projects/*`",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call that indicates where this listing should continue from.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "If provided, this field specifies the criteria that must be met by patch jobs to be included in the response. Currently, filtering is only available on the patch_deployment field."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of instance status to return.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Get a list of patch jobs.",
              "id": "osconfig.projects.patchJobs.list",
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "path": "v1/{+parent}/patchJobs",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "cancel": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "PatchJob"
              },
              "path": "v1/{+name}:cancel",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`"
                }
              },
              "id": "osconfig.projects.patchJobs.cancel",
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs cannot be restarted.",
              "request": {
                "$ref": "CancelPatchJobRequest"
              }
            },
            "get": {
              "description": "Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "osconfig.projects.patchJobs.get",
              "response": {
                "$ref": "PatchJob"
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "type": "string"
                }
              }
            }
          },
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "path": "v1/{+parent}/instanceDetails",
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails",
                  "httpMethod": "GET",
                  "description": "Get a list of instance details for a given patch job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "A filter expression that filters results listed in the response. This field supports filtering results by instance zone, name, state, or `failure_reason`.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent for the instances are in the form of `projects/*/patchJobs/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of instance details records to return. Default is 100.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "osconfig.projects.patchJobs.instanceDetails.list"
                }
              }
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://osconfig.googleapis.com/",
  "version_module": true,
  "rootUrl": "https://osconfig.googleapis.com/",
  "discoveryVersion": "v1",
  "basePath": "",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ExecStepConfig": {
      "type": "object",
      "description": "Common configurations for an ExecStep.",
      "id": "ExecStepConfig",
      "properties": {
        "allowedSuccessCodes": {
          "type": "array",
          "description": "Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "localPath": {
          "type": "string",
          "description": "An absolute path to the executable on the VM."
        },
        "interpreter": {
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "NONE",
            "SHELL",
            "POWERSHELL"
          ],
          "enumDescriptions": [
            "If the interpreter is not specified, the value defaults to `NONE`.",
            "Indicates that the file is run as follows on each operating system: + For Linux VMs, the file is ran as an executable and the interpreter might be parsed from the [shebang line](https://wikipedia.org/wiki/Shebang_(Unix)) of the file. + For Windows VM, this value is not supported.",
            "Indicates that the file is run with `/bin/sh` on Linux and `cmd` on Windows.",
            "Indicates that the file is run with PowerShell."
          ],
          "type": "string"
        },
        "gcsObject": {
          "description": "A Cloud Storage object containing the executable.",
          "$ref": "GcsObject"
        }
      }
    },
    "Operation": {
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "InventoryWindowsQuickFixEngineeringPackage": {
      "description": "Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering",
      "type": "object",
      "id": "InventoryWindowsQuickFixEngineeringPackage",
      "properties": {
        "installTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Date that the QFE update was installed. Mapped from installed_on field."
        },
        "description": {
          "type": "string",
          "description": "A textual description of the QFE update."
        },
        "hotFixId": {
          "type": "string",
          "description": "Unique identifier associated with a particular QFE update."
        },
        "caption": {
          "description": "A short textual description of the QFE update.",
          "type": "string"
        }
      }
    },
    "MonthlySchedule": {
      "type": "object",
      "id": "MonthlySchedule",
      "properties": {
        "weekDayOfMonth": {
          "description": "Required. Week day in a month.",
          "$ref": "WeekDayOfMonth"
        },
        "monthDay": {
          "type": "integer",
          "format": "int32",
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc."
        }
      },
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\"."
    },
    "InventoryWindowsApplication": {
      "type": "object",
      "description": "Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key",
      "id": "InventoryWindowsApplication",
      "properties": {
        "publisher": {
          "description": "The name of the manufacturer for the product or application.",
          "type": "string"
        },
        "displayName": {
          "description": "The name of the application or product.",
          "type": "string"
        },
        "helpLink": {
          "description": "The internet address for technical support.",
          "type": "string"
        },
        "displayVersion": {
          "type": "string",
          "description": "The version of the product or application in string format."
        },
        "installDate": {
          "$ref": "Date",
          "description": "The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the command-line option is used to repair the product."
        }
      }
    },
    "CVSSv3": {
      "type": "object",
      "id": "CVSSv3",
      "properties": {
        "privilegesRequired": {
          "enumDescriptions": [
            "Invalid value.",
            "The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.",
            "The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.",
            "The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files."
          ],
          "type": "string",
          "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.",
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ]
        },
        "scope": {
          "type": "string",
          "description": "The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
          "enumDescriptions": [
            "Invalid value.",
            "An exploited vulnerability can only affect resources managed by the same security authority.",
            "An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component."
          ],
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string",
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ]
        },
        "userInteraction": {
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable system can be exploited without interaction from any user.",
            "Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited."
          ],
          "description": "This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.",
          "type": "string",
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "confidentialityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
          "type": "string"
        },
        "impactScore": {
          "type": "number",
          "format": "float",
          "description": "The Impact sub-score equation is derived from the Base Impact metrics."
        },
        "exploitabilityScore": {
          "type": "number",
          "description": "The Exploitability sub-score equation is derived from the Base Exploitability metrics. https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics",
          "format": "float"
        },
        "attackComplexity": {
          "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.",
            "A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected."
          ],
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ]
        },
        "baseScore": {
          "type": "number",
          "description": "The base score is a function of the base metric scores. https://www.first.org/cvss/specification-document#Base-Metrics",
          "format": "float"
        },
        "attackVector": {
          "description": "This metric reflects the context by which vulnerability exploitation is possible.",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.",
            "The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.",
            "The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.",
            "The attack requires the attacker to physically touch or manipulate the vulnerable component."
          ],
          "type": "string"
        },
        "availabilityImpact": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability."
        }
      },
      "description": "Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document"
    },
    "AptSettings": {
      "type": "object",
      "description": "Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ],
          "description": "By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.",
          "type": "string"
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of packages to exclude from update. These packages will be excluded"
        },
        "exclusivePackages": {
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
          "type": "array"
        }
      },
      "id": "AptSettings"
    },
    "OSPolicyAssignmentRollout": {
      "properties": {
        "disruptionBudget": {
          "description": "Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.",
          "$ref": "FixedOrPercent"
        },
        "minWaitDuration": {
          "description": "Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "id": "OSPolicyAssignmentRollout",
      "type": "object",
      "description": "Message to configure the rollout at the zonal level for the OS policy assignment."
    },
    "OSPolicyResourcePackageResourceDeb": {
      "properties": {
        "source": {
          "description": "Required. A deb package.",
          "$ref": "OSPolicyResourceFile"
        },
        "pullDeps": {
          "type": "boolean",
          "description": "Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`"
        }
      },
      "type": "object",
      "id": "OSPolicyResourcePackageResourceDeb",
      "description": "A deb package file. dpkg packages only support INSTALLED state."
    },
    "OSPolicyResourcePackageResourceYUM": {
      "type": "object",
      "description": "A package managed by YUM. - install: `yum -y install package` - remove: `yum -y remove package`",
      "properties": {
        "name": {
          "description": "Required. Package name.",
          "type": "string"
        }
      },
      "id": "OSPolicyResourcePackageResourceYUM"
    },
    "OSPolicy": {
      "description": "An OS policy defines the desired state configuration for a VM.",
      "properties": {
        "description": {
          "description": "Policy description. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "id": {
          "description": "Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.",
          "type": "string"
        },
        "mode": {
          "enumDescriptions": [
            "Invalid mode",
            "This mode checks if the configuration resources in the policy are in their desired state. No actions are performed if they are not in the desired state. This mode is used for reporting purposes.",
            "This mode checks if the configuration resources in the policy are in their desired state, and if not, enforces the desired state."
          ],
          "description": "Required. Policy mode",
          "enum": [
            "MODE_UNSPECIFIED",
            "VALIDATION",
            "ENFORCEMENT"
          ],
          "type": "string"
        },
        "resourceGroups": {
          "items": {
            "$ref": "OSPolicyResourceGroup"
          },
          "description": "Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`",
          "type": "array"
        },
        "allowNoResourceGroupMatch": {
          "description": "This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.",
          "type": "boolean"
        }
      },
      "id": "OSPolicy",
      "type": "object"
    },
    "OSPolicyAssignmentReportOSPolicyCompliance": {
      "description": "Compliance data for an OS policy",
      "id": "OSPolicyAssignmentReportOSPolicyCompliance",
      "type": "object",
      "properties": {
        "complianceStateReason": {
          "type": "string",
          "description": "The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy."
        },
        "complianceState": {
          "enum": [
            "UNKNOWN",
            "COMPLIANT",
            "NON_COMPLIANT"
          ],
          "type": "string",
          "enumDescriptions": [
            "The policy is in an unknown compliance state. Refer to the field `compliance_state_reason` to learn the exact reason for the policy to be in this compliance state.",
            "Policy is compliant. The policy is compliant if all the underlying resources are also compliant.",
            "Policy is non-compliant. The policy is non-compliant if one or more underlying resources are non-compliant."
          ],
          "description": "The compliance state of the OS policy."
        },
        "osPolicyId": {
          "description": "The OS policy id",
          "type": "string"
        },
        "osPolicyResourceCompliances": {
          "type": "array",
          "items": {
            "$ref": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance"
          },
          "description": "Compliance data for each resource within the policy that is applied to the VM."
        }
      }
    },
    "OSPolicyResource": {
      "type": "object",
      "id": "OSPolicyResource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy."
        },
        "exec": {
          "$ref": "OSPolicyResourceExecResource",
          "description": "Exec resource"
        },
        "file": {
          "description": "File resource",
          "$ref": "OSPolicyResourceFileResource"
        },
        "repository": {
          "description": "Package repository resource",
          "$ref": "OSPolicyResourceRepositoryResource"
        },
        "pkg": {
          "description": "Package resource",
          "$ref": "OSPolicyResourcePackageResource"
        }
      },
      "description": "An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state."
    },
    "PatchJobInstanceDetails": {
      "type": "object",
      "description": "Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).",
      "id": "PatchJobInstanceDetails",
      "properties": {
        "attemptCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of times the agent that the agent attempts to apply the patch."
        },
        "failureReason": {
          "type": "string",
          "description": "If the patch fails, this field provides the reason."
        },
        "instanceSystemId": {
          "description": "The unique identifier for the instance. This identifier is defined by the server.",
          "type": "string"
        },
        "state": {
          "description": "Current state of instance patch.",
          "enumDescriptions": [
            "Unspecified.",
            "The instance is not yet notified.",
            "Instance is inactive and cannot be patched.",
            "The instance is notified that it should be patched.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The instance name in the form `projects/*/zones/*/instances/*`"
        }
      }
    },
    "OSPolicyResourcePackageResource": {
      "properties": {
        "yum": {
          "$ref": "OSPolicyResourcePackageResourceYUM",
          "description": "A package managed by YUM."
        },
        "msi": {
          "$ref": "OSPolicyResourcePackageResourceMSI",
          "description": "An MSI package."
        },
        "rpm": {
          "description": "An rpm package file.",
          "$ref": "OSPolicyResourcePackageResourceRPM"
        },
        "deb": {
          "description": "A deb package file.",
          "$ref": "OSPolicyResourcePackageResourceDeb"
        },
        "apt": {
          "description": "A package managed by Apt.",
          "$ref": "OSPolicyResourcePackageResourceAPT"
        },
        "zypper": {
          "description": "A package managed by Zypper.",
          "$ref": "OSPolicyResourcePackageResourceZypper"
        },
        "googet": {
          "description": "A package managed by GooGet.",
          "$ref": "OSPolicyResourcePackageResourceGooGet"
        },
        "desiredState": {
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Ensure that the package is installed.",
            "The agent ensures that the package is not installed and uninstalls it if detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "REMOVED"
          ],
          "type": "string",
          "description": "Required. The desired state the agent should maintain for this package."
        }
      },
      "id": "OSPolicyResourcePackageResource",
      "type": "object",
      "description": "A resource that manages a system package."
    },
    "VulnerabilityReportVulnerabilityDetailsReference": {
      "properties": {
        "source": {
          "type": "string",
          "description": "The source of the reference e.g. NVD."
        },
        "url": {
          "description": "The url of the reference.",
          "type": "string"
        }
      },
      "id": "VulnerabilityReportVulnerabilityDetailsReference",
      "description": "A reference for this vulnerability.",
      "type": "object"
    },
    "VulnerabilityReportVulnerabilityDetails": {
      "properties": {
        "description": {
          "description": "The note or description describing the vulnerability from the distro.",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "Assigned severity/impact ranking from the distro."
        },
        "references": {
          "items": {
            "$ref": "VulnerabilityReportVulnerabilityDetailsReference"
          },
          "description": "Corresponds to the references attached to the `VulnerabilityDetails`.",
          "type": "array"
        },
        "cvssV2Score": {
          "format": "float",
          "type": "number",
          "description": "The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity."
        },
        "cvssV3": {
          "description": "The full description of the CVSSv3 for this vulnerability from NVD.",
          "$ref": "CVSSv3"
        },
        "cve": {
          "type": "string",
          "description": "The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM."
        }
      },
      "type": "object",
      "id": "VulnerabilityReportVulnerabilityDetails",
      "description": "Contains metadata information for the vulnerability. This information is collected from the upstream feed of the operating system."
    },
    "OSPolicyResourcePackageResourceGooGet": {
      "description": "A package managed by GooGet. - install: `googet -noconfirm install package` - remove: `googet -noconfirm remove package`",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Package name.",
          "type": "string"
        }
      },
      "id": "OSPolicyResourcePackageResourceGooGet"
    },
    "ListInventoriesResponse": {
      "description": "A response message for listing inventory data for all VMs in a specified location.",
      "type": "object",
      "id": "ListInventoriesResponse",
      "properties": {
        "inventories": {
          "items": {
            "$ref": "Inventory"
          },
          "description": "List of inventory objects.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of inventory objects.",
          "type": "string"
        }
      }
    },
    "InventoryZypperPatch": {
      "description": "Details related to a Zypper Patch.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The category of the patch."
        },
        "severity": {
          "description": "The severity specified for this patch",
          "type": "string"
        },
        "summary": {
          "description": "Any summary information provided about this patch.",
          "type": "string"
        },
        "patchName": {
          "type": "string",
          "description": "The name of the patch."
        }
      },
      "id": "InventoryZypperPatch",
      "type": "object"
    },
    "ZypperSettings": {
      "id": "ZypperSettings",
      "type": "object",
      "properties": {
        "excludes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of patches to exclude from update."
        },
        "exclusivePatches": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields."
        },
        "withUpdate": {
          "type": "boolean",
          "description": "Adds the `--with-update` flag, to `zypper patch`."
        },
        "severities": {
          "type": "array",
          "description": "Install only patches with these severities. Common severities include critical, important, moderate, and low.",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "description": "Install only patches with these categories. Common categories include security, recommended, and feature.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "withOptional": {
          "description": "Adds the `--with-optional` flag to `zypper patch`.",
          "type": "boolean"
        }
      },
      "description": "Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual."
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "RecurringSchedule": {
      "properties": {
        "monthly": {
          "description": "Required. Schedule with monthly executions.",
          "$ref": "MonthlySchedule"
        },
        "timeOfDay": {
          "description": "Required. Time of the day to run a recurring deployment.",
          "$ref": "TimeOfDay"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment."
        },
        "frequency": {
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the frequency of recurrence should be expressed in terms of weeks.",
            "Indicates that the frequency of recurrence should be expressed in terms of months.",
            "Indicates that the frequency of recurrence should be expressed in terms of days."
          ],
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY",
            "DAILY"
          ],
          "description": "Required. The frequency unit of this recurring schedule.",
          "type": "string"
        },
        "lastExecuteTime": {
          "type": "string",
          "description": "Output only. The time the last patch job ran successfully.",
          "format": "google-datetime",
          "readOnly": true
        },
        "timeZone": {
          "$ref": "TimeZone",
          "description": "Required. Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone."
        },
        "nextExecuteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the next patch job is scheduled to run."
        },
        "weekly": {
          "description": "Required. Schedule with weekly executions.",
          "$ref": "WeeklySchedule"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The end time at which a recurring patch deployment schedule is no longer active."
        }
      },
      "type": "object",
      "description": "Sets the time for recurring patch deployments.",
      "id": "RecurringSchedule"
    },
    "VulnerabilityReportVulnerabilityItem": {
      "id": "VulnerabilityReportVulnerabilityItem",
      "properties": {
        "availableInventoryItemId": {
          "type": "string",
          "description": "Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability."
        },
        "fixedCpeUri": {
          "description": "The recommended [CPE URI](https://cpe.mitre.org/specification/) update that contains a fix for this vulnerability.",
          "type": "string"
        },
        "upstreamFix": {
          "type": "string",
          "description": "The upstream OS patch, packages or KB that fixes the vulnerability."
        },
        "installedInventoryItemId": {
          "type": "string",
          "description": "Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some operating systems, this field might be empty."
        }
      },
      "type": "object",
      "description": "OS inventory item that is affected by a vulnerability or fixed as a result of a vulnerability."
    },
    "YumSettings": {
      "description": "Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
      "type": "object",
      "id": "YumSettings",
      "properties": {
        "excludes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag."
        },
        "exclusivePackages": {
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
          "type": "array"
        },
        "minimal": {
          "type": "boolean",
          "description": "Will cause patch to run `yum update-minimal` instead."
        },
        "security": {
          "description": "Adds the `--security` flag to `yum update`. Not supported on all platforms.",
          "type": "boolean"
        }
      }
    },
    "OSPolicyAssignmentOperationMetadata": {
      "id": "OSPolicyAssignmentOperationMetadata",
      "properties": {
        "osPolicyAssignment": {
          "type": "string",
          "description": "Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`"
        },
        "rolloutStartTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Rollout start time"
        },
        "rolloutUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Rollout update time"
        },
        "apiMethod": {
          "enumDescriptions": [
            "Invalid value",
            "Create OS policy assignment API method",
            "Update OS policy assignment API method",
            "Delete OS policy assignment API method"
          ],
          "type": "string",
          "enum": [
            "API_METHOD_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ],
          "description": "The OS policy assignment API method."
        },
        "rolloutState": {
          "enumDescriptions": [
            "Invalid value",
            "The rollout is in progress.",
            "The rollout is being cancelled.",
            "The rollout is cancelled.",
            "The rollout has completed successfully."
          ],
          "type": "string",
          "description": "State of the rollout",
          "enum": [
            "ROLLOUT_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED"
          ]
        }
      },
      "type": "object",
      "description": "OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations."
    },
    "OSPolicyResourceExecResource": {
      "description": "A resource that allows executing scripts on the VM. The `ExecResource` has 2 stages: `validate` and `enforce` and both stages accept a script as an argument to execute. When the `ExecResource` is applied by the agent, it first executes the script in the `validate` stage. The `validate` stage can signal that the `ExecResource` is already in the desired state by returning an exit code of `100`. If the `ExecResource` is not in the desired state, it should return an exit code of `101`. Any other exit code returned by this stage is considered an error. If the `ExecResource` is not in the desired state based on the exit code from the `validate` stage, the agent proceeds to execute the script from the `enforce` stage. If the `ExecResource` is already in the desired state, the `enforce` stage will not be run. Similar to `validate` stage, the `enforce` stage should return an exit code of `100` to indicate that the resource in now in its desired state. Any other exit code is considered an error. NOTE: An exit code of `100` was chosen over `0` (and `101` vs `1`) to have an explicit indicator of `in desired state`, `not in desired state` and errors. Because, for example, Powershell will always return an exit code of `0` unless an `exit` statement is provided in the script. So, for reasons of consistency and being explicit, exit codes `100` and `101` were chosen.",
      "id": "OSPolicyResourceExecResource",
      "properties": {
        "validate": {
          "description": "Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates \"in desired state\", and exit code of 101 indicates \"not in desired state\". Any other exit code indicates a failure running validate.",
          "$ref": "OSPolicyResourceExecResourceExec"
        },
        "enforce": {
          "description": "What to run to bring this resource into the desired state. An exit code of 100 indicates \"success\", any other exit code indicates a failure running enforce.",
          "$ref": "OSPolicyResourceExecResourceExec"
        }
      },
      "type": "object"
    },
    "GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata": {
      "properties": {
        "osPolicyAssignment": {
          "type": "string",
          "description": "Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`"
        },
        "rolloutStartTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Rollout start time"
        },
        "apiMethod": {
          "enumDescriptions": [
            "Invalid value",
            "Create OS policy assignment API method",
            "Update OS policy assignment API method",
            "Delete OS policy assignment API method"
          ],
          "enum": [
            "API_METHOD_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ],
          "description": "The OS policy assignment API method.",
          "type": "string"
        },
        "rolloutUpdateTime": {
          "type": "string",
          "description": "Rollout update time",
          "format": "google-datetime"
        },
        "rolloutState": {
          "type": "string",
          "description": "State of the rollout",
          "enum": [
            "ROLLOUT_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED"
          ],
          "enumDescriptions": [
            "Invalid value",
            "The rollout is in progress.",
            "The rollout is being cancelled.",
            "The rollout is cancelled.",
            "The rollout has completed successfully."
          ]
        }
      },
      "type": "object",
      "description": "OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations.",
      "id": "GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata"
    },
    "OSPolicyResourcePackageResourceZypper": {
      "properties": {
        "name": {
          "description": "Required. Package name.",
          "type": "string"
        }
      },
      "id": "OSPolicyResourcePackageResourceZypper",
      "type": "object",
      "description": "A package managed by Zypper. - install: `zypper -y install package` - remove: `zypper -y rm package`"
    },
    "OSPolicyResourceFile": {
      "properties": {
        "localPath": {
          "description": "A local path within the VM to use.",
          "type": "string"
        },
        "allowInsecure": {
          "type": "boolean",
          "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified."
        },
        "remote": {
          "description": "A generic remote file.",
          "$ref": "OSPolicyResourceFileRemote"
        },
        "gcs": {
          "description": "A Cloud Storage object.",
          "$ref": "OSPolicyResourceFileGcs"
        }
      },
      "description": "A remote or local file.",
      "id": "OSPolicyResourceFile",
      "type": "object"
    },
    "PatchDeployment": {
      "type": "object",
      "id": "PatchDeployment",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment."
        },
        "recurringSchedule": {
          "description": "Required. Schedule recurring executions.",
          "$ref": "RecurringSchedule"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "readOnly": true
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Optional. Patch configuration that is applied."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters."
        },
        "lastExecuteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "duration": {
          "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
          "format": "google-duration",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Required. VM instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "state": {
          "description": "Output only. Current state of the patch deployment.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "PAUSED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Active value means that patch deployment generates Patch Jobs.",
            "Paused value means that patch deployment does not generate Patch jobs. Requires user action to move in and out from this state."
          ],
          "type": "string",
          "readOnly": true
        },
        "oneTimeSchedule": {
          "description": "Required. Schedule a one-time execution.",
          "$ref": "OneTimeSchedule"
        },
        "rollout": {
          "$ref": "PatchRollout",
          "description": "Optional. Rollout strategy of the patch job."
        }
      },
      "description": "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs)."
    },
    "InventoryWindowsUpdatePackageWindowsUpdateCategory": {
      "description": "Categories specified by the Windows Update.",
      "id": "InventoryWindowsUpdatePackageWindowsUpdateCategory",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the windows update category."
        },
        "id": {
          "type": "string",
          "description": "The identifier of the windows update category."
        }
      },
      "type": "object"
    },
    "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep": {
      "type": "object",
      "description": "Step performed by the OS Config agent for configuring an `OSPolicy` resource to its desired state.",
      "id": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Checks for resource conflicts such as schema errors.",
            "Checks the current status of the desired state for a resource.",
            "Enforces the desired state for a resource that is not in desired state.",
            "Re-checks the status of the desired state. This check is done for a resource after the enforcement of all OS policies. This step is used to determine the final desired state status for the resource. It accounts for any resources that might have drifted from their desired state due to side effects from executing other resources."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "VALIDATION",
            "DESIRED_STATE_CHECK",
            "DESIRED_STATE_ENFORCEMENT",
            "DESIRED_STATE_CHECK_POST_ENFORCEMENT"
          ],
          "description": "Configuration step type.",
          "type": "string"
        },
        "errorMessage": {
          "description": "An error message recorded during the execution of this step. Only populated if errors were encountered during this step execution.",
          "type": "string"
        }
      }
    },
    "ListVulnerabilityReportsResponse": {
      "id": "ListVulnerabilityReportsResponse",
      "type": "object",
      "description": "A response message for listing vulnerability reports for all VM instances in the specified location.",
      "properties": {
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of vulnerabilityReports object.",
          "type": "string"
        },
        "vulnerabilityReports": {
          "type": "array",
          "items": {
            "$ref": "VulnerabilityReport"
          },
          "description": "List of vulnerabilityReport objects."
        }
      }
    },
    "ListPatchJobsResponse": {
      "properties": {
        "patchJobs": {
          "description": "The list of patch jobs.",
          "type": "array",
          "items": {
            "$ref": "PatchJob"
          }
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A response message for listing patch jobs.",
      "id": "ListPatchJobsResponse"
    },
    "OSPolicyResourcePackageResourceRPM": {
      "id": "OSPolicyResourcePackageResourceRPM",
      "type": "object",
      "properties": {
        "pullDeps": {
          "description": "Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`",
          "type": "boolean"
        },
        "source": {
          "$ref": "OSPolicyResourceFile",
          "description": "Required. An rpm package."
        }
      },
      "description": "An RPM package file. RPM packages only support INSTALLED state."
    },
    "OSPolicyResourceExecResourceExec": {
      "type": "object",
      "properties": {
        "interpreter": {
          "enumDescriptions": [
            "Invalid value, the request will return validation error.",
            "If an interpreter is not specified, the source is executed directly. This execution, without an interpreter, only succeeds for executables and scripts that have shebang lines.",
            "Indicates that the script runs with `/bin/sh` on Linux and `cmd.exe` on Windows.",
            "Indicates that the script runs with PowerShell."
          ],
          "description": "Required. The script interpreter to use.",
          "type": "string",
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "NONE",
            "SHELL",
            "POWERSHELL"
          ]
        },
        "args": {
          "description": "Optional arguments to pass to the source during execution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputFilePath": {
          "type": "string",
          "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes."
        },
        "file": {
          "description": "A remote or local file.",
          "$ref": "OSPolicyResourceFile"
        },
        "script": {
          "type": "string",
          "description": "An inline script. The size of the script is limited to 32KiB."
        }
      },
      "id": "OSPolicyResourceExecResourceExec",
      "description": "A file or script to execute."
    },
    "WindowsUpdateSettings": {
      "type": "object",
      "id": "WindowsUpdateSettings",
      "properties": {
        "exclusivePatches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations."
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of KBs to exclude from update."
        },
        "classifications": {
          "description": "Only apply updates of these windows update classifications. If empty, all updates are applied.",
          "items": {
            "enumDescriptions": [
              "Invalid. If classifications are included, they must be specified.",
              "\"A widely released fix for a specific problem that addresses a critical, non-security-related bug.\" [1]",
              "\"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low.\" [1]",
              "\"A widely released and frequent software update that contains additions to a product's definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail.\" [1]",
              "\"Software that controls the input and output of a device.\" [1]",
              "\"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release.\" [1]",
              "\"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features.\" [1]",
              "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
              "\"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS).\" [1]",
              "\"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug.\" [1]"
            ],
            "type": "string",
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ]
          },
          "type": "array"
        }
      },
      "description": "Windows patching is performed using the Windows Update Agent."
    },
    "OSPolicyResourceRepositoryResourceGooRepository": {
      "description": "Represents a Goo package repository. These are added to a repo file that is managed at `C:/ProgramData/GooGet/repos/google_osconfig.repo`.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the repository."
        },
        "url": {
          "description": "Required. The url of the repository.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OSPolicyResourceRepositoryResourceGooRepository"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "TimeZone"
    },
    "OSPolicyResourceRepositoryResourceAptRepository": {
      "description": "Represents a single apt package repository. These will be added to a repo file that will be managed at `/etc/apt/sources.list.d/google_osconfig.list`.",
      "type": "object",
      "id": "OSPolicyResourceRepositoryResourceAptRepository",
      "properties": {
        "gpgKey": {
          "description": "URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.",
          "type": "string"
        },
        "archiveType": {
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Deb indicates that the archive contains binary files.",
            "Deb-src indicates that the archive contains source files."
          ],
          "description": "Required. Type of archive files in this repository.",
          "type": "string",
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "DEB",
            "DEB_SRC"
          ]
        },
        "distribution": {
          "type": "string",
          "description": "Required. Distribution of this repository."
        },
        "uri": {
          "type": "string",
          "description": "Required. URI for this repository."
        },
        "components": {
          "description": "Required. List of components for this repository. Must contain at least one item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OSPolicyInventoryFilter": {
      "id": "OSPolicyInventoryFilter",
      "type": "object",
      "description": "Filtering criteria to select VMs based on inventory details.",
      "properties": {
        "osShortName": {
          "type": "string",
          "description": "Required. The OS short name"
        },
        "osVersion": {
          "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.",
          "type": "string"
        }
      }
    },
    "ListOSPolicyAssignmentRevisionsResponse": {
      "type": "object",
      "description": "A response message for listing all revisions for a OS policy assignment.",
      "properties": {
        "osPolicyAssignments": {
          "description": "The OS policy assignment revisions",
          "type": "array",
          "items": {
            "$ref": "OSPolicyAssignment"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of OS policy assignment revisions."
        }
      },
      "id": "ListOSPolicyAssignmentRevisionsResponse"
    },
    "ListPatchJobInstanceDetailsResponse": {
      "id": "ListPatchJobInstanceDetailsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        },
        "patchJobInstanceDetails": {
          "items": {
            "$ref": "PatchJobInstanceDetails"
          },
          "description": "A list of instance status.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "A response message for listing the instances details for a patch job."
    },
    "ListOSPolicyAssignmentReportsResponse": {
      "type": "object",
      "properties": {
        "osPolicyAssignmentReports": {
          "description": "List of OS policy assignment reports.",
          "items": {
            "$ref": "OSPolicyAssignmentReport"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of OS policy assignment report objects.",
          "type": "string"
        }
      },
      "description": "A response message for listing OS Policy assignment reports including the page of results and page token.",
      "id": "ListOSPolicyAssignmentReportsResponse"
    },
    "FixedOrPercent": {
      "description": "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
      "id": "FixedOrPercent",
      "properties": {
        "percent": {
          "format": "int32",
          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
          "type": "integer"
        },
        "fixed": {
          "format": "int32",
          "description": "Specifies a fixed value.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ExecutePatchJobRequest": {
      "properties": {
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        },
        "dryRun": {
          "description": "If this patch is a dry-run only, instances are contacted but will do nothing.",
          "type": "boolean"
        },
        "instanceFilter": {
          "description": "Required. Instances to patch, either explicitly or filtered by some criteria such as zone or labels.",
          "$ref": "PatchInstanceFilter"
        },
        "description": {
          "description": "Description of the patch job. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied. If omitted, instances are patched using the default configurations."
        },
        "rollout": {
          "description": "Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job times out.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "ExecutePatchJobRequest",
      "description": "A request message to initiate patching across Compute Engine instances.",
      "type": "object"
    },
    "ResumePatchDeploymentRequest": {
      "type": "object",
      "description": "A request message for resuming a patch deployment.",
      "properties": {},
      "id": "ResumePatchDeploymentRequest"
    },
    "OSPolicyAssignment": {
      "id": "OSPolicyAssignment",
      "type": "object",
      "description": "OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information about the OS policy resource definitions and examples, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).",
      "properties": {
        "reconciling": {
          "type": "boolean",
          "description": "Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "The etag for this OS policy assignment. If this is provided on update, it must match the server's etag."
        },
        "rolloutState": {
          "readOnly": true,
          "description": "Output only. OS policy assignment rollout state",
          "enum": [
            "ROLLOUT_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid value",
            "The rollout is in progress.",
            "The rollout is being cancelled.",
            "The rollout is cancelled.",
            "The rollout has completed successfully."
          ]
        },
        "instanceFilter": {
          "description": "Required. Filter to select VMs.",
          "$ref": "OSPolicyAssignmentInstanceFilter"
        },
        "deleted": {
          "description": "Output only. Indicates that this revision deletes the OS policy assignment.",
          "type": "boolean",
          "readOnly": true
        },
        "baseline": {
          "description": "Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.",
          "type": "boolean",
          "readOnly": true
        },
        "description": {
          "description": "OS policy assignment description. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server generated unique id for the OS policy assignment resource."
        },
        "rollout": {
          "$ref": "OSPolicyAssignmentRollout",
          "description": "Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted."
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment"
        },
        "osPolicies": {
          "items": {
            "$ref": "OSPolicy"
          },
          "type": "array",
          "description": "Required. List of OS policies to be applied to the VMs."
        },
        "revisionCreateTime": {
          "description": "Output only. The timestamp that the revision was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment."
        }
      }
    },
    "WeeklySchedule": {
      "id": "WeeklySchedule",
      "description": "Represents a weekly schedule.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "description": "Required. Day of the week.",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        }
      }
    },
    "OSPolicyResourceFileRemote": {
      "properties": {
        "sha256Checksum": {
          "description": "SHA256 checksum of the remote file.",
          "type": "string"
        },
        "uri": {
          "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Specifies a file available via some URI.",
      "id": "OSPolicyResourceFileRemote"
    },
    "WeekDayOfMonth": {
      "properties": {
        "dayOfWeek": {
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "type": "string",
          "description": "Required. A day of the week.",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOffset": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Represents the number of days before or after the given week day of month that the patch deployment is scheduled for. For example if `week_ordinal` and `day_of_week` values point to the second day of the month and this `day_offset` value is set to `3`, the patch deployment takes place three days after the second Tuesday of the month. If this value is negative, for example -5, the patches are deployed five days before before the second Tuesday of the month. Allowed values are in range [-30, 30]."
        },
        "weekOrdinal": {
          "type": "integer",
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
          "format": "int32"
        }
      },
      "id": "WeekDayOfMonth",
      "type": "object",
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\"."
    },
    "GcsObject": {
      "type": "object",
      "description": "Cloud Storage object representation.",
      "id": "GcsObject",
      "properties": {
        "object": {
          "description": "Required. Name of the Cloud Storage object.",
          "type": "string"
        },
        "generationNumber": {
          "format": "int64",
          "type": "string",
          "description": "Required. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change."
        },
        "bucket": {
          "type": "string",
          "description": "Required. Bucket of the Cloud Storage object."
        }
      }
    },
    "VulnerabilityReportVulnerability": {
      "id": "VulnerabilityReportVulnerability",
      "properties": {
        "updateTime": {
          "description": "The timestamp for when the vulnerability was last modified.",
          "format": "google-datetime",
          "type": "string"
        },
        "availableInventoryItemIds": {
          "items": {
            "type": "string"
          },
          "description": "Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability.",
          "deprecated": true,
          "type": "array"
        },
        "createTime": {
          "description": "The timestamp for when the vulnerability was first detected.",
          "type": "string",
          "format": "google-datetime"
        },
        "installedInventoryItemIds": {
          "deprecated": true,
          "type": "array",
          "description": "Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some distros, this field may be empty.",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "description": "Contains metadata as per the upstream feed of the operating system and NVD.",
          "$ref": "VulnerabilityReportVulnerabilityDetails"
        },
        "items": {
          "items": {
            "$ref": "VulnerabilityReportVulnerabilityItem"
          },
          "description": "List of items affected by the vulnerability.",
          "type": "array"
        }
      },
      "description": "A vulnerability affecting the VM instance.",
      "type": "object"
    },
    "OSPolicyResourcePackageResourceAPT": {
      "type": "object",
      "id": "OSPolicyResourcePackageResourceAPT",
      "properties": {
        "name": {
          "description": "Required. Package name.",
          "type": "string"
        }
      },
      "description": "A package managed by APT. - install: `apt-get update && apt-get -y install [name]` - remove: `apt-get -y remove [name]`"
    },
    "InventorySoftwarePackage": {
      "properties": {
        "zypperPatch": {
          "$ref": "InventoryZypperPatch",
          "description": "Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
        },
        "wuaPackage": {
          "$ref": "InventoryWindowsUpdatePackage",
          "description": "Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update."
        },
        "qfePackage": {
          "$ref": "InventoryWindowsQuickFixEngineeringPackage",
          "description": "Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering."
        },
        "aptPackage": {
          "description": "Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt.",
          "$ref": "InventoryVersionedPackage"
        },
        "googetPackage": {
          "description": "Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet.",
          "$ref": "InventoryVersionedPackage"
        },
        "zypperPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
        },
        "windowsApplication": {
          "$ref": "InventoryWindowsApplication",
          "description": "Details of Windows Application."
        },
        "yumPackage": {
          "description": "Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum.",
          "$ref": "InventoryVersionedPackage"
        },
        "cosPackage": {
          "description": "Details of a COS package.",
          "$ref": "InventoryVersionedPackage"
        }
      },
      "id": "InventorySoftwarePackage",
      "description": "Software package information of the operating system.",
      "type": "object"
    },
    "OSPolicyResourceFileGcs": {
      "description": "Specifies a file available as a Cloud Storage Object.",
      "type": "object",
      "id": "OSPolicyResourceFileGcs",
      "properties": {
        "bucket": {
          "description": "Required. Bucket of the Cloud Storage object.",
          "type": "string"
        },
        "generation": {
          "description": "Generation number of the Cloud Storage object.",
          "format": "int64",
          "type": "string"
        },
        "object": {
          "description": "Required. Name of the Cloud Storage object.",
          "type": "string"
        }
      }
    },
    "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput": {
      "properties": {
        "enforcementOutput": {
          "type": "string",
          "description": "Output from enforcement phase output file (if run). Output size is limited to 100K bytes.",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "ExecResource specific output.",
      "id": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput"
    },
    "PausePatchDeploymentRequest": {
      "id": "PausePatchDeploymentRequest",
      "properties": {},
      "description": "A request message for pausing a patch deployment.",
      "type": "object"
    },
    "OSPolicyAssignmentInstanceFilter": {
      "properties": {
        "all": {
          "type": "boolean",
          "description": "Target all VMs in the project. If true, no other criteria is permitted."
        },
        "exclusionLabels": {
          "type": "array",
          "items": {
            "$ref": "OSPolicyAssignmentLabelSet"
          },
          "description": "List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM."
        },
        "inclusionLabels": {
          "description": "List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.",
          "type": "array",
          "items": {
            "$ref": "OSPolicyAssignmentLabelSet"
          }
        },
        "inventories": {
          "type": "array",
          "description": "List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.",
          "items": {
            "$ref": "OSPolicyAssignmentInstanceFilterInventory"
          }
        }
      },
      "type": "object",
      "id": "OSPolicyAssignmentInstanceFilter",
      "description": "Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them."
    },
    "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance": {
      "type": "object",
      "description": "Compliance data for an OS policy resource.",
      "id": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance",
      "properties": {
        "complianceStateReason": {
          "description": "A reason for the resource to be in the given compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. The following values are supported when `compliance_state == UNKNOWN` * `execution-errors`: Errors were encountered by the agent while executing the resource and the compliance state couldn't be determined. * `execution-skipped-by-agent`: Resource execution was skipped by the agent because errors were encountered while executing prior resources in the OS policy. * `os-policy-execution-attempt-failed`: The execution of the OS policy containing this resource failed and the compliance state couldn't be determined.",
          "type": "string"
        },
        "configSteps": {
          "type": "array",
          "description": "Ordered list of configuration completed by the agent for the OS policy resource.",
          "items": {
            "$ref": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep"
          }
        },
        "execResourceOutput": {
          "description": "ExecResource specific output.",
          "$ref": "OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput"
        },
        "osPolicyResourceId": {
          "description": "The ID of the OS policy resource.",
          "type": "string"
        },
        "complianceState": {
          "enum": [
            "UNKNOWN",
            "COMPLIANT",
            "NON_COMPLIANT"
          ],
          "enumDescriptions": [
            "The resource is in an unknown compliance state. To get more details about why the policy is in this state, review the output of the `compliance_state_reason` field.",
            "Resource is compliant.",
            "Resource is non-compliant."
          ],
          "description": "The compliance state of the resource.",
          "type": "string"
        }
      }
    },
    "OSPolicyResourceRepositoryResource": {
      "type": "object",
      "id": "OSPolicyResourceRepositoryResource",
      "properties": {
        "apt": {
          "$ref": "OSPolicyResourceRepositoryResourceAptRepository",
          "description": "An Apt Repository."
        },
        "zypper": {
          "$ref": "OSPolicyResourceRepositoryResourceZypperRepository",
          "description": "A Zypper Repository."
        },
        "yum": {
          "$ref": "OSPolicyResourceRepositoryResourceYumRepository",
          "description": "A Yum Repository."
        },
        "goo": {
          "$ref": "OSPolicyResourceRepositoryResourceGooRepository",
          "description": "A Goo Repository."
        }
      },
      "description": "A resource that manages a package repository."
    },
    "ExecStep": {
      "id": "ExecStep",
      "description": "A step that runs an executable for a PatchJob.",
      "type": "object",
      "properties": {
        "linuxExecStepConfig": {
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        },
        "windowsExecStepConfig": {
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        }
      }
    },
    "PatchInstanceFilterGroupLabel": {
      "id": "PatchInstanceFilterGroupLabel",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Compute Engine instance labels that must be present for a VM instance to be targeted by this filter."
        }
      },
      "description": "Targets a group of VM instances by using their [assigned labels](https://cloud.google.com/compute/docs/labeling-resources). Labels are key-value pairs. A `GroupLabel` is a combination of labels that is used to target VMs for a patch job. For example, a patch job can target VMs that have the following `GroupLabel`: `{\"env\":\"test\", \"app\":\"web\"}`. This means that the patch job is applied to VMs that have both the labels `env=test` and `app=web`.",
      "type": "object"
    },
    "VulnerabilityReport": {
      "id": "VulnerabilityReport",
      "description": "This API resource represents the vulnerability report for a specified Compute Engine virtual machine (VM) instance at a given point in time. For more information, see [Vulnerability reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).",
      "properties": {
        "vulnerabilities": {
          "type": "array",
          "items": {
            "$ref": "VulnerabilityReportVulnerability"
          },
          "readOnly": true,
          "description": "Output only. List of vulnerabilities affecting the VM."
        },
        "name": {
          "type": "string",
          "description": "Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp for when the last vulnerability report was generated for the VM.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "TimeOfDay": {
      "type": "object",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "properties": {
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32",
          "type": "integer"
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "TimeOfDay"
    },
    "ListPatchDeploymentsResponse": {
      "id": "ListPatchDeploymentsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of patch deployments."
        },
        "patchDeployments": {
          "items": {
            "$ref": "PatchDeployment"
          },
          "description": "The list of patch deployments.",
          "type": "array"
        }
      },
      "description": "A response message for listing patch deployments."
    },
    "PatchJob": {
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "If this patch job failed, this message provides information about the failure."
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.",
          "type": "boolean"
        },
        "patchDeployment": {
          "readOnly": true,
          "description": "Output only. Name of the patch deployment that created this patch job.",
          "type": "string"
        },
        "description": {
          "description": "Description of the patch job. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "duration": {
          "format": "google-duration",
          "description": "Duration of the patch job. After the duration ends, the patch job times out.",
          "type": "string"
        },
        "patchConfig": {
          "description": "Patch configuration being applied.",
          "$ref": "PatchConfig"
        },
        "rollout": {
          "description": "Rollout strategy being applied.",
          "$ref": "PatchRollout"
        },
        "createTime": {
          "description": "Time this patch job was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "The current state of the PatchJob.",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ],
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job timed out."
          ]
        },
        "updateTime": {
          "description": "Last time this patch job was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Instances to patch."
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for this patch job in the form `projects/*/patchJobs/*`"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for this patch job. This is not a unique identifier."
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete."
        },
        "instanceDetailsSummary": {
          "$ref": "PatchJobInstanceDetailsSummary",
          "description": "Summary of instance details."
        }
      },
      "id": "PatchJob",
      "description": "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use `ListPatchJobInstanceDetails`. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).",
      "type": "object"
    },
    "ListOSPolicyAssignmentsResponse": {
      "id": "ListOSPolicyAssignmentsResponse",
      "description": "A response message for listing all assignments under given parent.",
      "properties": {
        "nextPageToken": {
          "description": "The pagination token to retrieve the next page of OS policy assignments.",
          "type": "string"
        },
        "osPolicyAssignments": {
          "description": "The list of assignments",
          "items": {
            "$ref": "OSPolicyAssignment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InventoryItem": {
      "id": "InventoryItem",
      "description": "A single piece of inventory on a VM.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "When this inventory item was first detected.",
          "type": "string",
          "format": "google-datetime"
        },
        "availablePackage": {
          "$ref": "InventorySoftwarePackage",
          "description": "Software package available to be installed on the VM instance."
        },
        "id": {
          "description": "Identifier for this item, unique across items for this VM.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The specific type of inventory, correlating to its specific details.",
          "enumDescriptions": [
            "Invalid. An type must be specified.",
            "This represents a package that is installed on the VM.",
            "This represents an update that is available for a package."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "INSTALLED_PACKAGE",
            "AVAILABLE_PACKAGE"
          ]
        },
        "originType": {
          "type": "string",
          "enum": [
            "ORIGIN_TYPE_UNSPECIFIED",
            "INVENTORY_REPORT"
          ],
          "description": "The origin of this inventory item.",
          "enumDescriptions": [
            "Invalid. An origin type must be specified.",
            "This inventory item was discovered as the result of the agent reporting inventory via the reporting API."
          ]
        },
        "installedPackage": {
          "description": "Software package present on the VM instance.",
          "$ref": "InventorySoftwarePackage"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "When this inventory item was last modified."
        }
      }
    },
    "InventoryOsInfo": {
      "properties": {
        "shortName": {
          "description": "The operating system short name. For example, 'windows' or 'debian'.",
          "type": "string"
        },
        "kernelVersion": {
          "description": "The kernel version of the operating system.",
          "type": "string"
        },
        "kernelRelease": {
          "description": "The kernel release of the operating system.",
          "type": "string"
        },
        "hostname": {
          "description": "The VM hostname.",
          "type": "string"
        },
        "longName": {
          "description": "The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.",
          "type": "string"
        },
        "version": {
          "description": "The version of the operating system.",
          "type": "string"
        },
        "osconfigAgentVersion": {
          "type": "string",
          "description": "The current version of the OS Config agent running on the VM."
        },
        "architecture": {
          "description": "The system architecture of the operating system.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "InventoryOsInfo",
      "description": "Operating system information for the VM."
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation."
    },
    "OSPolicyResourceFileResource": {
      "type": "object",
      "id": "OSPolicyResourceFileResource",
      "description": "A resource that manages the state of a file.",
      "properties": {
        "permissions": {
          "type": "string",
          "description": "Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified is invalid.",
            "Ensure file at path is present.",
            "Ensure file at path is absent.",
            "Ensure the contents of the file at path matches. If the file does not exist it will be created."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "PRESENT",
            "ABSENT",
            "CONTENTS_MATCH"
          ],
          "description": "Required. Desired state of the file."
        },
        "path": {
          "type": "string",
          "description": "Required. The absolute path of the file within the VM."
        },
        "file": {
          "description": "A remote or local source.",
          "$ref": "OSPolicyResourceFile"
        },
        "content": {
          "description": "A a file with this content. The size of the content is limited to 32KiB.",
          "type": "string"
        }
      }
    },
    "Date": {
      "properties": {
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "id": "Date"
    },
    "Inventory": {
      "id": "Inventory",
      "description": "This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time. You can use this API resource to determine the inventory data of your VM. For more information, see [Information provided by OS inventory management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).",
      "properties": {
        "items": {
          "additionalProperties": {
            "$ref": "InventoryItem"
          },
          "type": "object",
          "description": "Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version."
        },
        "osInfo": {
          "description": "Base level operating system information for the VM.",
          "$ref": "InventoryOsInfo"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp of the last reported inventory for the VM.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OSPolicyAssignmentReport": {
      "description": "A report of the OS policy assignment status for a given instance.",
      "id": "OSPolicyAssignmentReport",
      "properties": {
        "name": {
          "type": "string",
          "description": "The `OSPolicyAssignmentReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`"
        },
        "lastRunId": {
          "type": "string",
          "description": "Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs."
        },
        "osPolicyCompliances": {
          "description": "Compliance data for each `OSPolicy` that is applied to the VM.",
          "type": "array",
          "items": {
            "$ref": "OSPolicyAssignmentReportOSPolicyCompliance"
          }
        },
        "instance": {
          "description": "The Compute Engine VM instance name.",
          "type": "string"
        },
        "updateTime": {
          "description": "Timestamp for when the report was last generated.",
          "type": "string",
          "format": "google-datetime"
        },
        "osPolicyAssignment": {
          "description": "Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PatchInstanceFilter": {
      "description": "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.",
      "type": "object",
      "id": "PatchInstanceFilter",
      "properties": {
        "all": {
          "description": "Target all VM instances in the project. If true, no other criteria is permitted.",
          "type": "boolean"
        },
        "instanceNamePrefixes": {
          "description": "Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`"
        },
        "zones": {
          "description": "Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupLabels": {
          "description": "Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          },
          "type": "array"
        }
      }
    },
    "GooSettings": {
      "type": "object",
      "properties": {},
      "description": "Googet patching is performed by running `googet update`.",
      "id": "GooSettings"
    },
    "OneTimeSchedule": {
      "description": "Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
      "properties": {
        "executeTime": {
          "description": "Required. The desired patch job execution time.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OneTimeSchedule",
      "type": "object"
    },
    "OSPolicyResourceRepositoryResourceYumRepository": {
      "id": "OSPolicyResourceRepositoryResourceYumRepository",
      "properties": {
        "baseUrl": {
          "type": "string",
          "description": "Required. The location of the repository directory."
        },
        "gpgKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "URIs of GPG keys."
        },
        "id": {
          "type": "string",
          "description": "Required. A one word, unique name for this repository. This is the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for resource conflicts."
        },
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a single yum package repository. These are added to a repo file that is managed at `/etc/yum.repos.d/google_osconfig.repo`."
    },
    "PatchConfig": {
      "type": "object",
      "properties": {
        "windowsUpdate": {
          "description": "Windows update settings. Use this override the default windows patch rules.",
          "$ref": "WindowsUpdateSettings"
        },
        "preStep": {
          "description": "The `ExecStep` to run before the patch update.",
          "$ref": "ExecStep"
        },
        "postStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run after the patch update."
        },
        "apt": {
          "description": "Apt update settings. Use this setting to override the default `apt` patch rules.",
          "$ref": "AptSettings"
        },
        "zypper": {
          "$ref": "ZypperSettings",
          "description": "Zypper update settings. Use this setting to override the default `zypper` patch rules."
        },
        "goo": {
          "description": "Goo update settings. Use this setting to override the default `goo` patch rules.",
          "$ref": "GooSettings"
        },
        "rebootConfig": {
          "description": "Post-patch reboot settings.",
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent decides if a reboot is necessary by checking signals such as registry keys on Windows or `/var/run/reboot-required` on APT based systems. On RPM based systems, a set of core system package install times are compared with system boot time.",
            "Always reboot the machine after the update completes.",
            "Never reboot the machine after the update completes."
          ],
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ],
          "type": "string"
        },
        "yum": {
          "description": "Yum update settings. Use this setting to override the default `yum` patch rules.",
          "$ref": "YumSettings"
        },
        "migInstancesAllowed": {
          "type": "boolean",
          "description": "Allows the patch job to run on Managed instance groups (MIGs)."
        }
      },
      "id": "PatchConfig",
      "description": "Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance."
    },
    "OSPolicyResourcePackageResourceMSI": {
      "properties": {
        "properties": {
          "description": "Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "source": {
          "description": "Required. The MSI package.",
          "$ref": "OSPolicyResourceFile"
        }
      },
      "type": "object",
      "description": "An MSI package. MSI packages only support INSTALLED state.",
      "id": "OSPolicyResourcePackageResourceMSI"
    },
    "OSPolicyAssignmentInstanceFilterInventory": {
      "id": "OSPolicyAssignmentInstanceFilterInventory",
      "properties": {
        "osShortName": {
          "type": "string",
          "description": "Required. The OS short name"
        },
        "osVersion": {
          "type": "string",
          "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions."
        }
      },
      "type": "object",
      "description": "VM inventory details."
    },
    "CancelPatchJobRequest": {
      "id": "CancelPatchJobRequest",
      "properties": {},
      "type": "object",
      "description": "Message for canceling a patch job."
    },
    "InventoryVersionedPackage": {
      "type": "object",
      "description": "Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.",
      "properties": {
        "packageName": {
          "type": "string",
          "description": "The name of the package."
        },
        "version": {
          "description": "The version of the package.",
          "type": "string"
        },
        "architecture": {
          "type": "string",
          "description": "The system architecture this package is intended for."
        }
      },
      "id": "InventoryVersionedPackage"
    },
    "PatchRollout": {
      "type": "object",
      "id": "PatchRollout",
      "properties": {
        "disruptionBudget": {
          "$ref": "FixedOrPercent",
          "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops."
        },
        "mode": {
          "type": "string",
          "description": "Mode of the patch rollout.",
          "enum": [
            "MODE_UNSPECIFIED",
            "ZONE_BY_ZONE",
            "CONCURRENT_ZONES"
          ],
          "enumDescriptions": [
            "Mode must be specified.",
            "Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order.",
            "Patches are applied to VMs in all zones at the same time."
          ]
        }
      },
      "description": "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs."
    },
    "PatchJobInstanceDetailsSummary": {
      "description": "A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.",
      "properties": {
        "postPatchStepInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that are running the post-patch step."
        },
        "pendingInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances pending patch job."
        },
        "succeededInstanceCount": {
          "description": "Number of instances that have completed successfully.",
          "format": "int64",
          "type": "string"
        },
        "prePatchStepInstanceCount": {
          "format": "int64",
          "description": "Number of instances that are running the pre-patch step.",
          "type": "string"
        },
        "succeededRebootRequiredInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that require reboot."
        },
        "notifiedInstanceCount": {
          "description": "Number of instances notified about patch job.",
          "type": "string",
          "format": "int64"
        },
        "downloadingPatchesInstanceCount": {
          "format": "int64",
          "description": "Number of instances that are downloading patches.",
          "type": "string"
        },
        "failedInstanceCount": {
          "type": "string",
          "description": "Number of instances that failed.",
          "format": "int64"
        },
        "inactiveInstanceCount": {
          "description": "Number of instances that are inactive.",
          "format": "int64",
          "type": "string"
        },
        "applyingPatchesInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that are applying patches."
        },
        "ackedInstanceCount": {
          "format": "int64",
          "description": "Number of instances that have acked and will start shortly.",
          "type": "string"
        },
        "rebootingInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances rebooting."
        },
        "timedOutInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that exceeded the time out while applying the patch."
        },
        "startedInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that have started."
        },
        "noAgentDetectedInstanceCount": {
          "type": "string",
          "description": "Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.",
          "format": "int64"
        }
      },
      "id": "PatchJobInstanceDetailsSummary",
      "type": "object"
    },
    "OSPolicyResourceGroup": {
      "properties": {
        "inventoryFilters": {
          "items": {
            "$ref": "OSPolicyInventoryFilter"
          },
          "type": "array",
          "description": "List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally."
        },
        "resources": {
          "description": "Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.",
          "items": {
            "$ref": "OSPolicyResource"
          },
          "type": "array"
        }
      },
      "id": "OSPolicyResourceGroup",
      "type": "object",
      "description": "Resource groups provide a mechanism to group OS policy resources. Resource groups enable OS policy authors to create a single OS policy to be applied to VMs running different operating Systems. When the OS policy is applied to a target VM, the appropriate resource group within the OS policy is selected based on the `OSFilter` specified within the resource group."
    },
    "OSPolicyResourceRepositoryResourceZypperRepository": {
      "id": "OSPolicyResourceRepositoryResourceZypperRepository",
      "description": "Represents a single zypper package repository. These are added to a repo file that is managed at `/etc/zypp/repos.d/google_osconfig.repo`.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the repository."
        },
        "gpgKeys": {
          "items": {
            "type": "string"
          },
          "description": "URIs of GPG keys.",
          "type": "array"
        },
        "baseUrl": {
          "description": "Required. The location of the repository directory.",
          "type": "string"
        }
      }
    },
    "InventoryWindowsUpdatePackage": {
      "id": "InventoryWindowsUpdatePackage",
      "properties": {
        "moreInfoUrls": {
          "type": "array",
          "description": "A collection of URLs that provide more information about the update package.",
          "items": {
            "type": "string"
          }
        },
        "supportUrl": {
          "description": "A hyperlink to the language-specific support information for the update.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "The localized title of the update package."
        },
        "revisionNumber": {
          "format": "int32",
          "type": "integer",
          "description": "The revision number of this update package."
        },
        "updateId": {
          "description": "Gets the identifier of an update package. Stays the same across revisions.",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "description": "The categories that are associated with this update package.",
          "items": {
            "$ref": "InventoryWindowsUpdatePackageWindowsUpdateCategory"
          }
        },
        "lastDeploymentChangeTime": {
          "format": "google-datetime",
          "description": "The last published date of the update, in (UTC) date and time.",
          "type": "string"
        },
        "kbArticleIds": {
          "type": "array",
          "description": "A collection of Microsoft Knowledge Base article IDs that are associated with the update package.",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "The localized description of the update package."
        }
      },
      "type": "object",
      "description": "Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated."
    },
    "OSPolicyAssignmentLabelSet": {
      "properties": {
        "labels": {
          "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Message representing label set. * A label is a key value pair set for a VM. * A LabelSet is a set of labels. * Labels within a LabelSet are ANDed. In other words, a LabelSet is applicable for a VM only if it matches all the labels in the LabelSet. * Example: A LabelSet with 2 labels: `env=prod` and `type=webserver` will only be applicable for those VMs with both labels present.",
      "id": "OSPolicyAssignmentLabelSet"
    }
  },
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "revision": "20230827",
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "OS Config",
  "version": "v1",
  "id": "osconfig:v1",
  "servicePath": "",
  "mtlsRootUrl": "https://osconfig.mtls.googleapis.com/",
  "name": "osconfig",
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances."
}

{
  "title": "OS Config API",
  "version_module": true,
  "rootUrl": "https://osconfig.googleapis.com/",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "protocol": "rest",
  "servicePath": "",
  "name": "osconfig",
  "version": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20210803",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "batchPath": "batch",
  "resources": {
    "projects": {
      "resources": {
        "patchJobs": {
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of instance details records to return. Default is 100.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "description": "A filter expression that filters results listed in the response. This field supports filtering results by instance zone, name, state, or `failure_reason`.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call that indicates where this listing should continue from."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                      "description": "Required. The parent for the instances are in the form of `projects/*/patchJobs/*`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get a list of instance details for a given patch job.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails",
                  "path": "v1/{+parent}/instanceDetails",
                  "id": "osconfig.projects.patchJobs.instanceDetails.list",
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  }
                }
              }
            }
          },
          "methods": {
            "cancel": {
              "path": "v1/{+name}:cancel",
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs cannot be restarted.",
              "request": {
                "$ref": "CancelPatchJobRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "id": "osconfig.projects.patchJobs.cancel",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "PatchJob"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "execute": {
              "description": "Patch VM instances by creating and running a patch job.",
              "request": {
                "$ref": "ExecutePatchJobRequest"
              },
              "path": "v1/{+parent}/patchJobs:execute",
              "flatPath": "v1/projects/{projectsId}/patchJobs:execute",
              "parameters": {
                "parent": {
                  "description": "Required. The project in which to run this patch in the form `projects/*`",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "id": "osconfig.projects.patchJobs.execute",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "path": "v1/{+parent}/patchJobs",
              "description": "Get a list of patch jobs.",
              "httpMethod": "GET",
              "id": "osconfig.projects.patchJobs.list",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of instance status to return.",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. In the form of `projects/*`",
                  "required": true,
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call that indicates where this listing should continue from."
                },
                "filter": {
                  "description": "If provided, this field specifies the criteria that must be met by patch jobs to be included in the response. Currently, filtering is only available on the patch_deployment field.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1/projects/{projectsId}/patchJobs"
            },
            "get": {
              "id": "osconfig.projects.patchJobs.get",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$"
                }
              },
              "response": {
                "$ref": "PatchJob"
              },
              "flatPath": "v1/projects/{projectsId}/patchJobs/{patchJobsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs."
            }
          }
        },
        "locations": {
          "resources": {
            "instances": {
              "resources": {
                "inventories": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "filter": {
                          "description": "If provided, this field specifies the criteria that must be met by a `Inventory` API resource to be included in the response.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of results to return.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                        },
                        "view": {
                          "description": "Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC.",
                          "enum": [
                            "INVENTORY_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The default value. The API defaults to the BASIC view.",
                            "Returns the basic inventory information that includes `os_info`.",
                            "Returns all fields."
                          ]
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A pagination token returned from a previous call to `ListInventories` that indicates where this listing should continue from."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventories",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/inventories",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List inventory data for all VM instances in the specified zone.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListInventoriesResponse"
                      },
                      "id": "osconfig.projects.locations.instances.inventories.list"
                    },
                    "get": {
                      "response": {
                        "$ref": "Inventory"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventory",
                      "id": "osconfig.projects.locations.instances.inventories.get",
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "The default value. The API defaults to the BASIC view.",
                            "Returns the basic inventory information that includes `os_info`.",
                            "Returns all fields."
                          ],
                          "enum": [
                            "INVENTORY_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "type": "string",
                          "description": "Inventory view indicating what information should be included in the inventory resource. If unspecified, the default view is BASIC."
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/inventory$",
                          "description": "Required. API resource name for inventory resource. Format: `projects/{project}/locations/{location}/instances/{instance}/inventory` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "description": "Get inventory data for the specified VM instance. If the VM has no associated inventory, the message `NOT_FOUND` is returned.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}"
                    }
                  }
                },
                "vulnerabilityReports": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "VulnerabilityReport"
                      },
                      "httpMethod": "GET",
                      "id": "osconfig.projects.locations.instances.vulnerabilityReports.get",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+/vulnerabilityReport$",
                          "required": true,
                          "description": "Required. API resource name for vulnerability resource. Format: `projects/{project}/locations/{location}/instances/{instance}/vulnerabilityReport` For `{project}`, either `project-number` or `project-id` can be provided. For `{instance}`, either Compute Engine `instance-id` or `instance-name` can be provided."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReport",
                      "description": "Gets the vulnerability report for the specified VM instance. Only VMs with inventory data have vulnerability reports associated with them.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListVulnerabilityReportsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReports",
                      "id": "osconfig.projects.locations.instances.vulnerabilityReports.list",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "If provided, this field specifies the criteria that must be met by a `vulnerabilityReport` API resource to be included in the response.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A pagination token returned from a previous call to `ListVulnerabilityReports` that indicates where this listing should continue from.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The parent resource name. Format: `projects/{project}/locations/{location}/instances/-` For `{project}`, either `project-number` or `project-id` can be provided.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of results to return.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/vulnerabilityReports",
                      "description": "List vulnerability reports for all VM instances in the specified zone."
                    }
                  }
                }
              }
            }
          }
        },
        "patchDeployments": {
          "methods": {
            "get": {
              "response": {
                "$ref": "PatchDeployment"
              },
              "httpMethod": "GET",
              "id": "osconfig.projects.patchDeployments.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "required": true,
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`."
                }
              },
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "path": "v1/{+name}",
              "description": "Get an OS Config patch deployment."
            },
            "create": {
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/patchDeployments",
              "description": "Create an OS Config patch deployment.",
              "request": {
                "$ref": "PatchDeployment"
              },
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The project to apply this patch deployment to in the form `projects/*`."
                },
                "patchDeploymentId": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project."
                }
              },
              "id": "osconfig.projects.patchDeployments.create",
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "description": "Delete an OS Config patch deployment.",
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`.",
                  "type": "string"
                }
              },
              "id": "osconfig.projects.patchDeployments.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/patchDeployments",
              "httpMethod": "GET",
              "id": "osconfig.projects.patchDeployments.list",
              "parameters": {
                "pageToken": {
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The resource name of the parent in the form `projects/*`.",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "description": "Get a page of OS Config patch deployments.",
              "path": "v1/{+parent}/patchDeployments"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^operations/.*$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "flatPath": "v1/operations/{operationsId}",
          "id": "osconfig.operations.delete",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Empty"
          }
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "flatPath": "v1/operations",
          "id": "osconfig.operations.list",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^operations$",
              "description": "The name of the operation's parent resource.",
              "required": true,
              "location": "path"
            },
            "pageSize": {
              "location": "query",
              "description": "The standard list page size.",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "path": "v1/{+name}"
        }
      }
    }
  },
  "baseUrl": "https://osconfig.googleapis.com/",
  "ownerDomain": "google.com",
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.",
  "schemas": {
    "OSPolicyAssignmentOperationMetadata": {
      "properties": {
        "rolloutState": {
          "enum": [
            "ROLLOUT_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED"
          ],
          "enumDescriptions": [
            "Invalid value",
            "The rollout is in progress.",
            "The rollout is being cancelled.",
            "The rollout is cancelled.",
            "The rollout has completed successfully."
          ],
          "description": "State of the rollout",
          "type": "string"
        },
        "rolloutStartTime": {
          "type": "string",
          "description": "Rollout start time",
          "format": "google-datetime"
        },
        "osPolicyAssignment": {
          "type": "string",
          "description": "Reference to the `OSPolicyAssignment` API resource. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`"
        },
        "apiMethod": {
          "enumDescriptions": [
            "Invalid value",
            "Create OS policy assignment API method",
            "Update OS policy assignment API method",
            "Delete OS policy assignment API method"
          ],
          "enum": [
            "API_METHOD_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ],
          "type": "string",
          "description": "The OS policy assignment API method."
        },
        "rolloutUpdateTime": {
          "description": "Rollout update time",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "OSPolicyAssignmentOperationMetadata",
      "description": "OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations.",
      "type": "object"
    },
    "ListVulnerabilityReportsResponse": {
      "description": "A response message for listing vulnerability reports for all VM instances in the specified location.",
      "type": "object",
      "id": "ListVulnerabilityReportsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of vulnerabilityReports object."
        },
        "vulnerabilityReports": {
          "items": {
            "$ref": "VulnerabilityReport"
          },
          "type": "array",
          "description": "List of vulnerabilityReport objects."
        }
      }
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "TimeOfDay": {
      "properties": {
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        },
        "seconds": {
          "format": "int32",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "hours": {
          "type": "integer",
          "format": "int32",
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        }
      },
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object"
    },
    "InventorySoftwarePackage": {
      "description": "Software package information of the operating system.",
      "id": "InventorySoftwarePackage",
      "type": "object",
      "properties": {
        "zypperPatch": {
          "$ref": "InventoryZypperPatch",
          "description": "Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
        },
        "wuaPackage": {
          "description": "Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update.",
          "$ref": "InventoryWindowsUpdatePackage"
        },
        "zypperPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
        },
        "aptPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt."
        },
        "googetPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet."
        },
        "qfePackage": {
          "description": "Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering.",
          "$ref": "InventoryWindowsQuickFixEngineeringPackage"
        },
        "yumPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum."
        },
        "cosPackage": {
          "$ref": "InventoryVersionedPackage",
          "description": "Details of a COS package."
        }
      }
    },
    "ListPatchDeploymentsResponse": {
      "id": "ListPatchDeploymentsResponse",
      "type": "object",
      "properties": {
        "patchDeployments": {
          "items": {
            "$ref": "PatchDeployment"
          },
          "description": "The list of patch deployments.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of patch deployments.",
          "type": "string"
        }
      },
      "description": "A response message for listing patch deployments."
    },
    "InventoryWindowsQuickFixEngineeringPackage": {
      "id": "InventoryWindowsQuickFixEngineeringPackage",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A textual description of the QFE update."
        },
        "hotFixId": {
          "description": "Unique identifier associated with a particular QFE update.",
          "type": "string"
        },
        "caption": {
          "description": "A short textual description of the QFE update.",
          "type": "string"
        },
        "installTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Date that the QFE update was installed. Mapped from installed_on field."
        }
      },
      "description": "Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering"
    },
    "RecurringSchedule": {
      "id": "RecurringSchedule",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment."
        },
        "monthly": {
          "description": "Required. Schedule with monthly executions.",
          "$ref": "MonthlySchedule"
        },
        "timeZone": {
          "description": "Required. Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone.",
          "$ref": "TimeZone"
        },
        "timeOfDay": {
          "description": "Required. Time of the day to run a recurring deployment.",
          "$ref": "TimeOfDay"
        },
        "weekly": {
          "$ref": "WeeklySchedule",
          "description": "Required. Schedule with weekly executions."
        },
        "frequency": {
          "description": "Required. The frequency unit of this recurring schedule.",
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ],
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the frequency should be expressed in terms of weeks.",
            "Indicates that the frequency should be expressed in terms of months."
          ],
          "type": "string"
        },
        "lastExecuteTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the last patch job ran successfully."
        },
        "nextExecuteTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the next patch job is scheduled to run."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. The end time at which a recurring patch deployment schedule is no longer active."
        }
      },
      "description": "Sets the time for recurring patch deployments."
    },
    "Inventory": {
      "properties": {
        "updateTime": {
          "description": "Output only. Timestamp of the last reported inventory for the VM.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "osInfo": {
          "description": "Base level operating system information for the VM.",
          "$ref": "InventoryOsInfo"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`"
        },
        "items": {
          "type": "object",
          "description": "Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.",
          "additionalProperties": {
            "$ref": "InventoryItem"
          }
        }
      },
      "description": "This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time. You can use this API resource to determine the inventory data of your VM. For more information, see [Information provided by OS inventory management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).",
      "type": "object",
      "id": "Inventory"
    },
    "WeekDayOfMonth": {
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "description": "Required. A day of the week.",
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ]
        },
        "weekOrdinal": {
          "type": "integer",
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
          "format": "int32"
        }
      },
      "id": "WeekDayOfMonth",
      "type": "object"
    },
    "InventoryZypperPatch": {
      "type": "object",
      "properties": {
        "patchName": {
          "description": "The name of the patch.",
          "type": "string"
        },
        "summary": {
          "description": "Any summary information provided about this patch.",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "The severity specified for this patch"
        },
        "category": {
          "type": "string",
          "description": "The category of the patch."
        }
      },
      "id": "InventoryZypperPatch",
      "description": "Details related to a Zypper Patch."
    },
    "InventoryWindowsUpdatePackage": {
      "properties": {
        "supportUrl": {
          "type": "string",
          "description": "A hyperlink to the language-specific support information for the update."
        },
        "moreInfoUrls": {
          "type": "array",
          "description": "A collection of URLs that provide more information about the update package.",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "description": "The localized title of the update package.",
          "type": "string"
        },
        "lastDeploymentChangeTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last published date of the update, in (UTC) date and time."
        },
        "description": {
          "description": "The localized description of the update package.",
          "type": "string"
        },
        "updateId": {
          "description": "Gets the identifier of an update package. Stays the same across revisions.",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "InventoryWindowsUpdatePackageWindowsUpdateCategory"
          },
          "description": "The categories that are associated with this update package."
        },
        "revisionNumber": {
          "description": "The revision number of this update package.",
          "format": "int32",
          "type": "integer"
        },
        "kbArticleIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of Microsoft Knowledge Base article IDs that are associated with the update package."
        }
      },
      "description": "Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated.",
      "id": "InventoryWindowsUpdatePackage",
      "type": "object"
    },
    "VulnerabilityReportVulnerabilityDetails": {
      "id": "VulnerabilityReportVulnerabilityDetails",
      "properties": {
        "references": {
          "items": {
            "$ref": "VulnerabilityReportVulnerabilityDetailsReference"
          },
          "type": "array",
          "description": "Corresponds to the references attached to the `VulnerabilityDetails`."
        },
        "description": {
          "description": "The note or description describing the vulnerability from the distro.",
          "type": "string"
        },
        "cvssV2Score": {
          "description": "The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.",
          "type": "number",
          "format": "float"
        },
        "severity": {
          "description": "Assigned severity/impact ranking from the distro.",
          "type": "string"
        },
        "cvssV3": {
          "description": "The full description of the CVSSv3 for this vulnerability from NVD.",
          "$ref": "CVSSv3"
        },
        "cve": {
          "description": "The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM.",
          "type": "string"
        }
      },
      "description": "Contains metadata information for the vulnerability. This information is collected from the upstream feed of the operating system.",
      "type": "object"
    },
    "PatchJob": {
      "id": "PatchJob",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the patch job. Length of the description is limited to 1024 characters."
        },
        "instanceDetailsSummary": {
          "$ref": "PatchJobInstanceDetailsSummary",
          "description": "Summary of instance details."
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied."
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for this patch job. This is not a unique identifier."
        },
        "percentComplete": {
          "description": "Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.",
          "format": "double",
          "type": "number"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time this patch job was created."
        },
        "errorMessage": {
          "description": "If this patch job failed, this message provides information about the failure.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ],
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job timed out."
          ],
          "description": "The current state of the PatchJob."
        },
        "rollout": {
          "$ref": "PatchRollout",
          "description": "Rollout strategy being applied."
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job times out.",
          "type": "string",
          "format": "google-duration"
        },
        "patchDeployment": {
          "description": "Output only. Name of the patch deployment that created this patch job.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Unique identifier for this patch job in the form `projects/*/patchJobs/*`",
          "type": "string"
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Instances to patch."
        },
        "updateTime": {
          "description": "Last time this patch job was updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use ListPatchJobInstanceDetails. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job)."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "ExecStepConfig": {
      "properties": {
        "gcsObject": {
          "$ref": "GcsObject",
          "description": "A Cloud Storage object containing the executable."
        },
        "localPath": {
          "description": "An absolute path to the executable on the VM.",
          "type": "string"
        },
        "allowedSuccessCodes": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
          "type": "array"
        },
        "interpreter": {
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ],
          "type": "string",
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
          "enumDescriptions": [
            "Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the interpreter will be parsed from the shebang line of the script if unspecified.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd` on Windows.",
            "Indicates that the file is run with PowerShell flags `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`."
          ]
        }
      },
      "description": "Common configurations for an ExecStep.",
      "type": "object",
      "id": "ExecStepConfig"
    },
    "GooSettings": {
      "description": "Googet patching is performed by running `googet update`.",
      "type": "object",
      "properties": {},
      "id": "GooSettings"
    },
    "ListInventoriesResponse": {
      "properties": {
        "inventories": {
          "type": "array",
          "description": "List of inventory objects.",
          "items": {
            "$ref": "Inventory"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of inventory objects."
        }
      },
      "description": "A response message for listing inventory data for all VMs in a specified location.",
      "type": "object",
      "id": "ListInventoriesResponse"
    },
    "PatchRollout": {
      "type": "object",
      "properties": {
        "disruptionBudget": {
          "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.",
          "$ref": "FixedOrPercent"
        },
        "mode": {
          "enumDescriptions": [
            "Mode must be specified.",
            "Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order.",
            "Patches are applied to VMs in all zones at the same time."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "ZONE_BY_ZONE",
            "CONCURRENT_ZONES"
          ],
          "description": "Mode of the patch rollout.",
          "type": "string"
        }
      },
      "description": "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
      "id": "PatchRollout"
    },
    "PatchDeployment": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters."
        },
        "instanceFilter": {
          "description": "Required. VM instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "name": {
          "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.",
          "type": "string"
        },
        "lastExecuteTime": {
          "description": "Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Optional. Patch configuration that is applied."
        },
        "rollout": {
          "$ref": "PatchRollout",
          "description": "Optional. Rollout strategy of the patch job."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "recurringSchedule": {
          "$ref": "RecurringSchedule",
          "description": "Required. Schedule recurring executions."
        },
        "duration": {
          "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
          "type": "string",
          "format": "google-duration"
        },
        "oneTimeSchedule": {
          "$ref": "OneTimeSchedule",
          "description": "Required. Schedule a one-time execution."
        }
      },
      "description": "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).",
      "id": "PatchDeployment",
      "type": "object"
    },
    "InventoryOsInfo": {
      "id": "InventoryOsInfo",
      "properties": {
        "kernelVersion": {
          "type": "string",
          "description": "The kernel version of the operating system."
        },
        "longName": {
          "description": "The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'.",
          "type": "string"
        },
        "architecture": {
          "type": "string",
          "description": "The system architecture of the operating system."
        },
        "version": {
          "type": "string",
          "description": "The version of the operating system."
        },
        "osconfigAgentVersion": {
          "description": "The current version of the OS Config agent running on the VM.",
          "type": "string"
        },
        "kernelRelease": {
          "type": "string",
          "description": "The kernel release of the operating system."
        },
        "hostname": {
          "description": "The VM hostname.",
          "type": "string"
        },
        "shortName": {
          "type": "string",
          "description": "The operating system short name. For example, 'windows' or 'debian'."
        }
      },
      "type": "object",
      "description": "Operating system information for the VM."
    },
    "WindowsUpdateSettings": {
      "description": "Windows patching is performed using the Windows Update Agent.",
      "properties": {
        "classifications": {
          "description": "Only apply updates of these windows update classifications. If empty, all updates are applied.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Invalid. If classifications are included, they must be specified.",
              "\"A widely released fix for a specific problem that addresses a critical, non-security-related bug.\" [1]",
              "\"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low.\" [1]",
              "\"A widely released and frequent software update that contains additions to a product's definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail.\" [1]",
              "\"Software that controls the input and output of a device.\" [1]",
              "\"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release.\" [1]",
              "\"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features.\" [1]",
              "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
              "\"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS).\" [1]",
              "\"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug.\" [1]"
            ],
            "type": "string",
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ]
          }
        },
        "exclusivePatches": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations."
        },
        "excludes": {
          "type": "array",
          "description": "List of KBs to exclude from update.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "WindowsUpdateSettings"
    },
    "VulnerabilityReportVulnerabilityDetailsReference": {
      "properties": {
        "source": {
          "description": "The source of the reference e.g. NVD.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "The url of the reference."
        }
      },
      "id": "VulnerabilityReportVulnerabilityDetailsReference",
      "type": "object",
      "description": "A reference for this vulnerability."
    },
    "PatchInstanceFilter": {
      "properties": {
        "instanceNamePrefixes": {
          "description": "Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupLabels": {
          "description": "Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          },
          "type": "array"
        },
        "instances": {
          "items": {
            "type": "string"
          },
          "description": "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
          "type": "array"
        },
        "all": {
          "description": "Target all VM instances in the project. If true, no other criteria is permitted.",
          "type": "boolean"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone."
        }
      },
      "type": "object",
      "id": "PatchInstanceFilter",
      "description": "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones."
    },
    "PatchInstanceFilterGroupLabel": {
      "id": "PatchInstanceFilterGroupLabel",
      "description": "Targets a group of VM instances by using their [assigned labels](https://cloud.google.com/compute/docs/labeling-resources). Labels are key-value pairs. A `GroupLabel` is a combination of labels that is used to target VMs for a patch job. For example, a patch job can target VMs that have the following `GroupLabel`: `{\"env\":\"test\", \"app\":\"web\"}`. This means that the patch job is applied to VMs that have both the labels `env=test` and `app=web`.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Compute Engine instance labels that must be present for a VM instance to be targeted by this filter."
        }
      },
      "type": "object"
    },
    "FixedOrPercent": {
      "description": "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
      "id": "FixedOrPercent",
      "type": "object",
      "properties": {
        "fixed": {
          "description": "Specifies a fixed value.",
          "format": "int32",
          "type": "integer"
        },
        "percent": {
          "format": "int32",
          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
          "type": "integer"
        }
      }
    },
    "InventoryItem": {
      "id": "InventoryItem",
      "type": "object",
      "properties": {
        "installedPackage": {
          "$ref": "InventorySoftwarePackage",
          "description": "Software package present on the VM instance."
        },
        "availablePackage": {
          "$ref": "InventorySoftwarePackage",
          "description": "Software package available to be installed on the VM instance."
        },
        "id": {
          "type": "string",
          "description": "Identifier for this item, unique across items for this VM."
        },
        "type": {
          "description": "The specific type of inventory, correlating to its specific details.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "INSTALLED_PACKAGE",
            "AVAILABLE_PACKAGE"
          ],
          "enumDescriptions": [
            "Invalid. An type must be specified.",
            "This represents a package that is installed on the VM.",
            "This represents an update that is available for a package."
          ]
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "When this inventory item was first detected."
        },
        "originType": {
          "description": "The origin of this inventory item.",
          "enum": [
            "ORIGIN_TYPE_UNSPECIFIED",
            "INVENTORY_REPORT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid. An origin type must be specified.",
            "This inventory item was discovered as the result of the agent reporting inventory via the reporting API."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "When this inventory item was last modified."
        }
      },
      "description": "A single piece of inventory on a VM."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {}
    },
    "InventoryWindowsUpdatePackageWindowsUpdateCategory": {
      "description": "Categories specified by the Windows Update.",
      "properties": {
        "id": {
          "description": "The identifier of the windows update category.",
          "type": "string"
        },
        "name": {
          "description": "The name of the windows update category.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "InventoryWindowsUpdatePackageWindowsUpdateCategory"
    },
    "CancelPatchJobRequest": {
      "id": "CancelPatchJobRequest",
      "properties": {},
      "description": "Message for canceling a patch job.",
      "type": "object"
    },
    "ZypperSettings": {
      "type": "object",
      "id": "ZypperSettings",
      "description": "Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
      "properties": {
        "exclusivePatches": {
          "description": "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "withOptional": {
          "type": "boolean",
          "description": "Adds the `--with-optional` flag to `zypper patch`."
        },
        "severities": {
          "description": "Install only patches with these severities. Common severities include critical, important, moderate, and low.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "withUpdate": {
          "description": "Adds the `--with-update` flag, to `zypper patch`.",
          "type": "boolean"
        },
        "categories": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Install only patches with these categories. Common categories include security, recommended, and feature."
        },
        "excludes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of patches to exclude from update."
        }
      }
    },
    "PatchConfig": {
      "description": "Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.",
      "properties": {
        "windowsUpdate": {
          "$ref": "WindowsUpdateSettings",
          "description": "Windows update settings. Use this override the default windows patch rules."
        },
        "rebootConfig": {
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent decides if a reboot is necessary by checking signals such as registry keys on Windows or `/var/run/reboot-required` on APT based systems. On RPM based systems, a set of core system package install times are compared with system boot time.",
            "Always reboot the machine after the update completes.",
            "Never reboot the machine after the update completes."
          ],
          "type": "string",
          "description": "Post-patch reboot settings.",
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ]
        },
        "postStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run after the patch update."
        },
        "goo": {
          "$ref": "GooSettings",
          "description": "Goo update settings. Use this setting to override the default `goo` patch rules."
        },
        "preStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run before the patch update."
        },
        "apt": {
          "description": "Apt update settings. Use this setting to override the default `apt` patch rules.",
          "$ref": "AptSettings"
        },
        "yum": {
          "description": "Yum update settings. Use this setting to override the default `yum` patch rules.",
          "$ref": "YumSettings"
        },
        "zypper": {
          "description": "Zypper update settings. Use this setting to override the default `zypper` patch rules.",
          "$ref": "ZypperSettings"
        }
      },
      "id": "PatchConfig",
      "type": "object"
    },
    "GcsObject": {
      "type": "object",
      "description": "Cloud Storage object representation.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Required. Bucket of the Cloud Storage object."
        },
        "object": {
          "type": "string",
          "description": "Required. Name of the Cloud Storage object."
        },
        "generationNumber": {
          "description": "Required. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GcsObject"
    },
    "CVSSv3": {
      "id": "CVSSv3",
      "description": "Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document",
      "type": "object",
      "properties": {
        "exploitabilityScore": {
          "type": "number",
          "description": "The Exploitability sub-score equation is derived from the Base Exploitability metrics. https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics",
          "format": "float"
        },
        "scope": {
          "type": "string",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ],
          "description": "The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
          "enumDescriptions": [
            "Invalid value.",
            "An exploited vulnerability can only affect resources managed by the same security authority.",
            "An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component."
          ]
        },
        "impactScore": {
          "type": "number",
          "format": "float",
          "description": "The Impact sub-score equation is derived from the Base Impact metrics."
        },
        "confidentialityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "type": "string"
        },
        "attackVector": {
          "description": "This metric reflects the context by which vulnerability exploitation is possible.",
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.",
            "The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.",
            "The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.",
            "The attack requires the attacker to physically touch or manipulate the vulnerable component."
          ],
          "type": "string",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "attackComplexity": {
          "enumDescriptions": [
            "Invalid value.",
            "Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.",
            "A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected."
          ],
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ],
          "type": "string",
          "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability."
        },
        "baseScore": {
          "format": "float",
          "type": "number",
          "description": "The base score is a function of the base metric scores. https://www.first.org/cvss/specification-document#Base-Metrics"
        },
        "integrityImpact": {
          "type": "string",
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "privilegesRequired": {
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.",
            "The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.",
            "The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files."
          ],
          "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability."
        },
        "userInteraction": {
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable system can be exploited without interaction from any user.",
            "Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited."
          ],
          "description": "This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.",
          "type": "string"
        },
        "availabilityImpact": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability."
        }
      }
    },
    "TimeZone": {
      "type": "object",
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      }
    },
    "OneTimeSchedule": {
      "properties": {
        "executeTime": {
          "type": "string",
          "description": "Required. The desired patch job execution time.",
          "format": "google-datetime"
        }
      },
      "description": "Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
      "id": "OneTimeSchedule",
      "type": "object"
    },
    "InventoryVersionedPackage": {
      "type": "object",
      "description": "Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.",
      "properties": {
        "packageName": {
          "type": "string",
          "description": "The name of the package."
        },
        "architecture": {
          "type": "string",
          "description": "The system architecture this package is intended for."
        },
        "version": {
          "type": "string",
          "description": "The version of the package."
        }
      },
      "id": "InventoryVersionedPackage"
    },
    "PatchJobInstanceDetails": {
      "description": "Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).",
      "type": "object",
      "id": "PatchJobInstanceDetails",
      "properties": {
        "failureReason": {
          "description": "If the patch fails, this field provides the reason.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The instance is not yet notified.",
            "Instance is inactive and cannot be patched.",
            "The instance is notified that it should be patched.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ],
          "description": "Current state of instance patch."
        },
        "instanceSystemId": {
          "description": "The unique identifier for the instance. This identifier is defined by the server.",
          "type": "string"
        },
        "attemptCount": {
          "format": "int64",
          "description": "The number of times the agent that the agent attempts to apply the patch.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The instance name in the form `projects/*/zones/*/instances/*`"
        }
      }
    },
    "VulnerabilityReportVulnerability": {
      "id": "VulnerabilityReportVulnerability",
      "type": "object",
      "description": "A vulnerability affecting the VM instance.",
      "properties": {
        "updateTime": {
          "description": "The timestamp for when the vulnerability was last modified.",
          "format": "google-datetime",
          "type": "string"
        },
        "availableInventoryItemIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability."
        },
        "installedInventoryItemIds": {
          "description": "Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some distros, this field may be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "details": {
          "$ref": "VulnerabilityReportVulnerabilityDetails",
          "description": "Contains metadata as per the upstream feed of the operating system and NVD."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The timestamp for when the vulnerability was first detected.",
          "type": "string"
        }
      }
    },
    "PatchJobInstanceDetailsSummary": {
      "description": "A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.",
      "properties": {
        "ackedInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that have acked and will start shortly."
        },
        "succeededInstanceCount": {
          "description": "Number of instances that have completed successfully.",
          "format": "int64",
          "type": "string"
        },
        "downloadingPatchesInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that are downloading patches."
        },
        "pendingInstanceCount": {
          "description": "Number of instances pending patch job.",
          "type": "string",
          "format": "int64"
        },
        "noAgentDetectedInstanceCount": {
          "type": "string",
          "description": "Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.",
          "format": "int64"
        },
        "succeededRebootRequiredInstanceCount": {
          "format": "int64",
          "description": "Number of instances that require reboot.",
          "type": "string"
        },
        "applyingPatchesInstanceCount": {
          "format": "int64",
          "description": "Number of instances that are applying patches.",
          "type": "string"
        },
        "rebootingInstanceCount": {
          "format": "int64",
          "description": "Number of instances rebooting.",
          "type": "string"
        },
        "postPatchStepInstanceCount": {
          "format": "int64",
          "description": "Number of instances that are running the post-patch step.",
          "type": "string"
        },
        "failedInstanceCount": {
          "format": "int64",
          "description": "Number of instances that failed.",
          "type": "string"
        },
        "startedInstanceCount": {
          "type": "string",
          "description": "Number of instances that have started.",
          "format": "int64"
        },
        "inactiveInstanceCount": {
          "type": "string",
          "description": "Number of instances that are inactive.",
          "format": "int64"
        },
        "prePatchStepInstanceCount": {
          "type": "string",
          "description": "Number of instances that are running the pre-patch step.",
          "format": "int64"
        },
        "notifiedInstanceCount": {
          "type": "string",
          "description": "Number of instances notified about patch job.",
          "format": "int64"
        },
        "timedOutInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that exceeded the time out while applying the patch."
        }
      },
      "id": "PatchJobInstanceDetailsSummary",
      "type": "object"
    },
    "ExecutePatchJobRequest": {
      "properties": {
        "description": {
          "description": "Description of the patch job. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "patchConfig": {
          "description": "Patch configuration being applied. If omitted, instances are patched using the default configurations.",
          "$ref": "PatchConfig"
        },
        "rollout": {
          "description": "Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        },
        "dryRun": {
          "type": "boolean",
          "description": "If this patch is a dry-run only, instances are contacted but will do nothing."
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Duration of the patch job. After the duration ends, the patch job times out."
        },
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Required. Instances to patch, either explicitly or filtered by some criteria such as zone or labels.",
          "$ref": "PatchInstanceFilter"
        }
      },
      "id": "ExecutePatchJobRequest",
      "description": "A request message to initiate patching across Compute Engine instances.",
      "type": "object"
    },
    "AptSettings": {
      "type": "object",
      "id": "AptSettings",
      "properties": {
        "exclusivePackages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ],
          "description": "By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead."
        },
        "excludes": {
          "type": "array",
          "description": "List of packages to exclude from update. These packages will be excluded",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed."
    },
    "ListPatchJobsResponse": {
      "type": "object",
      "properties": {
        "patchJobs": {
          "items": {
            "$ref": "PatchJob"
          },
          "type": "array",
          "description": "The list of patch jobs."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        }
      },
      "description": "A response message for listing patch jobs.",
      "id": "ListPatchJobsResponse"
    },
    "WeeklySchedule": {
      "id": "WeeklySchedule",
      "properties": {
        "dayOfWeek": {
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "description": "Required. Day of the week."
        }
      },
      "type": "object",
      "description": "Represents a weekly schedule."
    },
    "ListPatchJobInstanceDetailsResponse": {
      "properties": {
        "patchJobInstanceDetails": {
          "items": {
            "$ref": "PatchJobInstanceDetails"
          },
          "description": "A list of instance status.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        }
      },
      "id": "ListPatchJobInstanceDetailsResponse",
      "type": "object",
      "description": "A response message for listing the instances details for a patch job."
    },
    "VulnerabilityReport": {
      "type": "object",
      "description": "This API resource represents the vulnerability report for a specified Compute Engine virtual machine (VM) instance at a given point in time. For more information, see [Vulnerability reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).",
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp for when the last vulnerability report was generated for the VM."
        },
        "vulnerabilities": {
          "type": "array",
          "description": "Output only. List of vulnerabilities affecting the VM.",
          "readOnly": true,
          "items": {
            "$ref": "VulnerabilityReportVulnerability"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`",
          "readOnly": true
        }
      },
      "id": "VulnerabilityReport"
    },
    "ExecStep": {
      "type": "object",
      "id": "ExecStep",
      "properties": {
        "linuxExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob."
        },
        "windowsExecStepConfig": {
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        }
      },
      "description": "A step that runs an executable for a PatchJob."
    },
    "MonthlySchedule": {
      "type": "object",
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
      "id": "MonthlySchedule",
      "properties": {
        "weekDayOfMonth": {
          "$ref": "WeekDayOfMonth",
          "description": "Required. Week day in a month."
        },
        "monthDay": {
          "type": "integer",
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
          "format": "int32"
        }
      }
    },
    "YumSettings": {
      "description": "Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
      "properties": {
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag."
        },
        "security": {
          "description": "Adds the `--security` flag to `yum update`. Not supported on all platforms.",
          "type": "boolean"
        },
        "exclusivePackages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields."
        },
        "minimal": {
          "type": "boolean",
          "description": "Will cause patch to run `yum update-minimal` instead."
        }
      },
      "id": "YumSettings",
      "type": "object"
    }
  },
  "basePath": "",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://osconfig.mtls.googleapis.com/",
  "canonicalName": "OS Config",
  "kind": "discovery#restDescription",
  "id": "osconfig:v1",
  "ownerName": "Google",
  "documentationLink": "https://cloud.google.com/compute/docs/osconfig/rest",
  "fullyEncodeReservedExpansion": true
}

{
  "batchPath": "batch",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "OrgPolicy API",
  "ownerName": "Google",
  "description": "The Org Policy API allows users to configure governance rules on their GCP resources across the Cloud Resource Hierarchy.",
  "schemas": {
    "GoogleCloudOrgpolicyV2AlternatePolicySpec": {
      "properties": {
        "spec": {
          "$ref": "GoogleCloudOrgpolicyV2PolicySpec",
          "description": "Specify constraint for configurations of Google Cloud resources."
        },
        "launch": {
          "description": "Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.",
          "type": "string"
        }
      },
      "description": "Similar to PolicySpec but with an extra 'launch' field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.",
      "id": "GoogleCloudOrgpolicyV2AlternatePolicySpec",
      "type": "object"
    },
    "GoogleCloudOrgpolicyV2ListPoliciesResponse": {
      "id": "GoogleCloudOrgpolicyV2ListPoliciesResponse",
      "description": "The response returned from the ListPolicies method. It will be empty if no policies are set on the resource.",
      "properties": {
        "policies": {
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2Policy"
          },
          "type": "array",
          "description": "All policies that exist on the resource. It will be empty if no policies are set."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."
        }
      },
      "type": "object"
    },
    "GoogleCloudOrgpolicyV2ListCustomConstraintsResponse": {
      "type": "object",
      "id": "GoogleCloudOrgpolicyV2ListCustomConstraintsResponse",
      "properties": {
        "customConstraints": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
          },
          "description": "All custom constraints that exist on the organization resource. It will be empty if no custom constraints are set."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."
        }
      },
      "description": "The response returned from the ListCustomConstraints method. It will be empty if no custom constraints are set on the organization resource."
    },
    "GoogleCloudOrgpolicyV2PolicySpecPolicyRule": {
      "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
      "description": "A rule used to express this policy.",
      "type": "object",
      "properties": {
        "values": {
          "$ref": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
          "description": "List of values to be used for this policy rule. This field can be set only in policies for list constraints."
        },
        "allowAll": {
          "type": "boolean",
          "description": "Setting this to true means that all values are allowed. This field can be set only in policies for list constraints."
        },
        "denyAll": {
          "type": "boolean",
          "description": "Setting this to true means that all values are denied. This field can be set only in policies for list constraints."
        },
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
        },
        "enforce": {
          "description": "If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudOrgpolicyV2ConstraintListConstraint": {
      "id": "GoogleCloudOrgpolicyV2ConstraintListConstraint",
      "properties": {
        "supportsIn": {
          "description": "Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"in:Python\"` would match any value in the 'Python' group.",
          "type": "boolean"
        },
        "supportsUnder": {
          "description": "Indicates whether subtrees of the Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"under:folders/123\"` would match any resource under the 'folders/123' folder.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A constraint that allows or disallows a list of string values, which are configured by an Organization Policy administrator with a policy."
    },
    "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint": {
      "description": "A constraint that is either enforced or not. For example, a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint"
    },
    "GoogleCloudOrgpolicyV2Policy": {
      "type": "object",
      "id": "GoogleCloudOrgpolicyV2Policy",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the policy. Must be one of the following forms, where constraint_name is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
        },
        "spec": {
          "$ref": "GoogleCloudOrgpolicyV2PolicySpec",
          "description": "Basic information about the Organization Policy."
        },
        "alternate": {
          "$ref": "GoogleCloudOrgpolicyV2AlternatePolicySpec",
          "description": "Deprecated."
        },
        "dryRunSpec": {
          "$ref": "GoogleCloudOrgpolicyV2PolicySpec",
          "description": "Dry-run policy. Audit-only policy, can be used to monitor how the policy would have impacted the existing and future resources if it's enforced."
        }
      },
      "description": "Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources."
    },
    "GoogleCloudOrgpolicyV2ListConstraintsResponse": {
      "type": "object",
      "properties": {
        "constraints": {
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2Constraint"
          },
          "type": "array",
          "description": "The collection of constraints that are available on the targeted resource."
        },
        "nextPageToken": {
          "description": "Page token used to retrieve the next page. This is currently not used.",
          "type": "string"
        }
      },
      "description": "The response returned from the ListConstraints method.",
      "id": "GoogleCloudOrgpolicyV2ListConstraintsResponse"
    },
    "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues": {
      "description": "A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a \":\". Values prefixed with \"is:\" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - \"projects/\", e.g. \"projects/tokyo-rain-123\" - \"folders/\", e.g. \"folders/1234\" - \"organizations/\", e.g. \"organizations/1234\" The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.",
      "properties": {
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of values allowed at this resource."
        },
        "deniedValues": {
          "description": "List of values denied at this resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
      "type": "object"
    },
    "GoogleCloudOrgpolicyV2CustomConstraint": {
      "type": "object",
      "description": "A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.",
      "id": "GoogleCloudOrgpolicyV2CustomConstraint",
      "properties": {
        "actionType": {
          "enumDescriptions": [
            "Unspecified. Results in an error.",
            "Allowed action type.",
            "Deny action type."
          ],
          "type": "string",
          "enum": [
            "ACTION_TYPE_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ],
          "description": "Allow or deny type."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "One line display name for the UI. The max length of the display_name is 200 characters.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Detailed information about this custom policy constraint. The max length of the description is 2000 characters."
        },
        "condition": {
          "description": "Org policy condition/expression. For example: `resource.instanceName.matches(\"[production|test]_.*_(\\d)+\")'` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters.",
          "type": "string"
        },
        "resourceTypes": {
          "type": "array",
          "description": "Immutable. The resource instance type on which this policy applies. Format will be of the form : \"/\" Example: * `compute.googleapis.com/Instance`.",
          "items": {
            "type": "string"
          }
        },
        "methodTypes": {
          "description": "All the operations being applied for this constraint.",
          "items": {
            "enumDescriptions": [
              "Unspecified. Results in an error.",
              "Constraint applied when creating the resource.",
              "Constraint applied when updating the resource.",
              "Constraint applied when deleting the resource. Not supported yet."
            ],
            "type": "string",
            "enum": [
              "METHOD_TYPE_UNSPECIFIED",
              "CREATE",
              "UPDATE",
              "DELETE"
            ]
          },
          "type": "array"
        },
        "name": {
          "description": "Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      },
      "type": "object",
      "id": "GoogleTypeExpr"
    },
    "GoogleCloudOrgpolicyV2Constraint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\"."
        },
        "supportsDryRun": {
          "type": "boolean",
          "description": "Shows if dry run is supported for this constraint or not."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of what this constraint controls as well as how and where it is enforced. Mutable."
        },
        "listConstraint": {
          "description": "Defines this constraint as being a ListConstraint.",
          "$ref": "GoogleCloudOrgpolicyV2ConstraintListConstraint"
        },
        "constraintDefault": {
          "type": "string",
          "enumDescriptions": [
            "This is only used for distinguishing unset values and should never be used.",
            "Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints.",
            "Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints."
          ],
          "description": "The evaluation behavior of this constraint in the absence of a policy.",
          "enum": [
            "CONSTRAINT_DEFAULT_UNSPECIFIED",
            "ALLOW",
            "DENY"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The human readable name. Mutable."
        },
        "booleanConstraint": {
          "$ref": "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
          "description": "Defines this constraint as being a BooleanConstraint."
        }
      },
      "id": "GoogleCloudOrgpolicyV2Constraint",
      "description": "A constraint describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which Google Cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. Constraints can be configured by the organization policy administrator to fit the needs of the organization by setting a policy that includes constraints at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. Constraints have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a policy being defined or inherited for the resource in question."
    },
    "GoogleCloudOrgpolicyV2PolicySpec": {
      "properties": {
        "inheritFromParent": {
          "type": "boolean",
          "description": "Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure list constraints."
        },
        "reset": {
          "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.",
          "type": "boolean"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy.",
          "readOnly": true,
          "type": "string"
        },
        "rules": {
          "type": "array",
          "description": "Up to 10 policy rules are allowed. In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.",
          "items": {
            "$ref": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule"
          }
        },
        "etag": {
          "type": "string",
          "description": "An opaque tag indicating the current version of the policy, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policy to use when executing a read-modify-write loop. When the policy is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
        }
      },
      "type": "object",
      "id": "GoogleCloudOrgpolicyV2PolicySpec",
      "description": "Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources."
    }
  },
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    }
  },
  "revision": "20230304",
  "baseUrl": "https://orgpolicy.googleapis.com/",
  "resources": {
    "folders": {
      "resources": {
        "policies": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameters": {
                "name": {
                  "description": "Required. Name of the policy to delete. See the policy entry for naming rules.",
                  "pattern": "^folders/[^/]+/policies/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "orgpolicy.folders.policies.delete",
              "flatPath": "v2/folders/{foldersId}/policies/{policiesId}",
              "description": "Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or organization policy does not exist."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "orgpolicy.folders.policies.get",
              "parameters": {
                "name": {
                  "description": "Required. Resource name of the policy. See `Policy` for naming requirements.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^folders/[^/]+/policies/[^/]+$",
                  "required": true
                }
              },
              "description": "Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.",
              "flatPath": "v2/folders/{foldersId}/policies/{policiesId}",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}"
            },
            "list": {
              "path": "v2/{+parent}/policies",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListPoliciesResponse"
              },
              "description": "Retrieves all of the policies that exist on a particular resource.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The target Google Cloud resource that parents the set of constraints and policies that will be returned from this call. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^folders/[^/]+$"
                }
              },
              "flatPath": "v2/folders/{foldersId}/policies",
              "id": "orgpolicy.folders.policies.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET"
            },
            "create": {
              "path": "v2/{+parent}/policies",
              "parameters": {
                "parent": {
                  "description": "Required. The Google Cloud resource that will parent the new policy. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "pattern": "^folders/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "flatPath": "v2/folders/{foldersId}/policies",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "httpMethod": "POST",
              "description": "Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Google Cloud resource.",
              "id": "orgpolicy.folders.policies.create"
            },
            "getEffectivePolicy": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/folders/{foldersId}/policies/{policiesId}:getEffectivePolicy",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the effective policy on a resource. This is the result of merging policies in the resource hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition` set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.",
              "id": "orgpolicy.folders.policies.getEffectivePolicy",
              "path": "v2/{+name}:getEffectivePolicy",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^folders/[^/]+/policies/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The effective policy to compute. See `Policy` for naming rules."
                }
              }
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Field mask used to specify the fields to be overwritten in the policy by the set. The fields specified in the update_mask are relative to the policy, not the full request.",
                  "format": "google-fieldmask"
                },
                "name": {
                  "location": "path",
                  "description": "Immutable. The resource name of the policy. Must be one of the following forms, where constraint_name is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.",
                  "pattern": "^folders/[^/]+/policies/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "orgpolicy.folders.policies.patch",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "path": "v2/{+name}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "flatPath": "v2/folders/{foldersId}/policies/{policiesId}",
              "description": "Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields."
            }
          }
        },
        "constraints": {
          "methods": {
            "list": {
              "id": "orgpolicy.folders.constraints.list",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListConstraintsResponse"
              },
              "path": "v2/{+parent}/constraints",
              "flatPath": "v2/folders/{foldersId}/constraints",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^folders/[^/]+$",
                  "description": "Required. The Google Cloud resource that parents the constraint. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Lists constraints that could be applied on the specified resource."
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "constraints": {
          "methods": {
            "list": {
              "path": "v2/{+parent}/constraints",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "description": "Required. The Google Cloud resource that parents the constraint. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListConstraintsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/constraints",
              "id": "orgpolicy.projects.constraints.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists constraints that could be applied on the specified resource."
            }
          }
        },
        "policies": {
          "methods": {
            "create": {
              "flatPath": "v2/projects/{projectsId}/policies",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The Google Cloud resource that will parent the new policy. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "type": "string"
                }
              },
              "id": "orgpolicy.projects.policies.create",
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "description": "Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Google Cloud resource.",
              "path": "v2/{+parent}/policies",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              }
            },
            "get": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/policies/[^/]+$",
                  "location": "path",
                  "description": "Required. Resource name of the policy. See `Policy` for naming requirements.",
                  "type": "string"
                }
              },
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/policies/{policiesId}",
              "id": "orgpolicy.projects.policies.get",
              "description": "Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "flatPath": "v2/projects/{projectsId}/policies/{policiesId}",
              "description": "Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or organization policy does not exist.",
              "parameters": {
                "name": {
                  "description": "Required. Name of the policy to delete. See the policy entry for naming rules.",
                  "pattern": "^projects/[^/]+/policies/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "id": "orgpolicy.projects.policies.delete",
              "httpMethod": "DELETE"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "description": "Required. The target Google Cloud resource that parents the set of constraints and policies that will be returned from this call. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "description": "Retrieves all of the policies that exist on a particular resource.",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListPoliciesResponse"
              },
              "path": "v2/{+parent}/policies",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "orgpolicy.projects.policies.list",
              "flatPath": "v2/projects/{projectsId}/policies",
              "parameterOrder": [
                "parent"
              ]
            },
            "patch": {
              "description": "Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Immutable. The resource name of the policy. Must be one of the following forms, where constraint_name is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/policies/[^/]+$"
                },
                "updateMask": {
                  "type": "string",
                  "description": "Field mask used to specify the fields to be overwritten in the policy by the set. The fields specified in the update_mask are relative to the policy, not the full request.",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "httpMethod": "PATCH",
              "path": "v2/{+name}",
              "id": "orgpolicy.projects.policies.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/policies/{policiesId}"
            },
            "getEffectivePolicy": {
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "flatPath": "v2/projects/{projectsId}/policies/{policiesId}:getEffectivePolicy",
              "httpMethod": "GET",
              "path": "v2/{+name}:getEffectivePolicy",
              "description": "Gets the effective policy on a resource. This is the result of merging policies in the resource hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition` set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The effective policy to compute. See `Policy` for naming rules.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/policies/[^/]+$",
                  "required": true
                }
              },
              "id": "orgpolicy.projects.policies.getEffectivePolicy"
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "constraints": {
          "methods": {
            "list": {
              "id": "orgpolicy.organizations.constraints.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/organizations/{organizationsId}/constraints",
              "httpMethod": "GET",
              "description": "Lists constraints that could be applied on the specified resource.",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListConstraintsResponse"
              },
              "parameters": {
                "pageSize": {
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "description": "Required. The Google Cloud resource that parents the constraint. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field."
                }
              },
              "path": "v2/{+parent}/constraints",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "policies": {
          "methods": {
            "getEffectivePolicy": {
              "path": "v2/{+name}:getEffectivePolicy",
              "id": "orgpolicy.organizations.policies.getEffectivePolicy",
              "parameters": {
                "name": {
                  "description": "Required. The effective policy to compute. See `Policy` for naming rules.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/policies/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "description": "Gets the effective policy on a resource. This is the result of merging policies in the resource hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition` set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.",
              "flatPath": "v2/organizations/{organizationsId}/policies/{policiesId}:getEffectivePolicy"
            },
            "patch": {
              "id": "orgpolicy.organizations.policies.patch",
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "flatPath": "v2/organizations/{organizationsId}/policies/{policiesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "description": "Immutable. The resource name of the policy. Must be one of the following forms, where constraint_name is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/policies/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Field mask used to specify the fields to be overwritten in the policy by the set. The fields specified in the update_mask are relative to the policy, not the full request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "httpMethod": "PATCH"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Retrieves all of the policies that exist on a particular resource.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "description": "Required. The target Google Cloud resource that parents the set of constraints and policies that will be returned from this call. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$"
                },
                "pageToken": {
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v2/organizations/{organizationsId}/policies",
              "path": "v2/{+parent}/policies",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListPoliciesResponse"
              },
              "id": "orgpolicy.organizations.policies.list",
              "httpMethod": "GET"
            },
            "get": {
              "path": "v2/{+name}",
              "flatPath": "v2/organizations/{organizationsId}/policies/{policiesId}",
              "id": "orgpolicy.organizations.policies.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/policies/[^/]+$",
                  "description": "Required. Resource name of the policy. See `Policy` for naming requirements."
                }
              },
              "description": "Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.",
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "description": "Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or organization policy does not exist.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/policies/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. Name of the policy to delete. See the policy entry for naming rules."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "orgpolicy.organizations.policies.delete",
              "flatPath": "v2/organizations/{organizationsId}/policies/{policiesId}",
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "httpMethod": "DELETE"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2Policy"
              },
              "path": "v2/{+parent}/policies",
              "httpMethod": "POST",
              "description": "Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Google Cloud resource.",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The Google Cloud resource that will parent the new policy. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "orgpolicy.organizations.policies.create",
              "flatPath": "v2/organizations/{organizationsId}/policies"
            }
          }
        },
        "customConstraints": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the custom constraint does not exist.",
              "flatPath": "v2/organizations/{organizationsId}/customConstraints/{customConstraintsId}",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
              },
              "path": "v2/{+name}",
              "id": "orgpolicy.organizations.customConstraints.get",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Resource name of the custom constraint. See the custom constraint entry for naming requirements.",
                  "pattern": "^organizations/[^/]+/customConstraints/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "id": "orgpolicy.organizations.customConstraints.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The target Google Cloud resource that parents the set of custom constraints that will be returned from this call. Must be in one of the following forms: * `organizations/{organization_id}`",
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Page token used to retrieve the next page. This is currently unsupported and will be ignored. The server may at any point start using this field."
                },
                "pageSize": {
                  "description": "Size of the pages to be returned. This is currently unsupported and will be ignored. The server may at any point start using this field to limit page size.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2ListCustomConstraintsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/organizations/{organizationsId}/customConstraints",
              "path": "v2/{+parent}/customConstraints",
              "description": "Retrieves all of the custom constraints that exist on a particular organization resource."
            },
            "create": {
              "description": "Creates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the organization does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.",
              "flatPath": "v2/organizations/{organizationsId}/customConstraints",
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
              },
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Must be in the following form: * `organizations/{organization_id}`",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v2/{+parent}/customConstraints",
              "id": "orgpolicy.organizations.customConstraints.create",
              "httpMethod": "POST"
            },
            "patch": {
              "flatPath": "v2/organizations/{organizationsId}/customConstraints/{customConstraintsId}",
              "response": {
                "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
              },
              "id": "orgpolicy.organizations.customConstraints.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/customConstraints/[^/]+$",
                  "location": "path",
                  "description": "Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted.",
                  "type": "string"
                }
              },
              "path": "v2/{+name}",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudOrgpolicyV2CustomConstraint"
              },
              "description": "Updates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Note: the supplied policy will perform a full overwrite of all fields."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "id": "orgpolicy.organizations.customConstraints.delete",
              "flatPath": "v2/organizations/{organizationsId}/customConstraints/{customConstraintsId}",
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the custom constraint to delete. See the custom constraint entry for naming rules.",
                  "pattern": "^organizations/[^/]+/customConstraints/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/orgpolicy/docs/reference/rest/index.html",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://orgpolicy.googleapis.com/",
  "mtlsRootUrl": "https://orgpolicy.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Organization Policy API",
  "version": "v2",
  "basePath": "",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "name": "orgpolicy",
  "version_module": true,
  "id": "orgpolicy:v2"
}

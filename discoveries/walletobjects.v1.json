{
  "ownerName": "Google",
  "mtlsRootUrl": "https://walletobjects.mtls.googleapis.com/",
  "version": "v1",
  "revision": "20240312",
  "resources": {
    "giftcardclass": {
      "methods": {
        "patch": {
          "id": "walletobjects.giftcardclass.patch",
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "request": {
            "$ref": "GiftCardClass"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "httpMethod": "PATCH",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "response": {
            "$ref": "GiftCardClass"
          },
          "description": "Updates the gift card class referenced by the given class ID. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "parameterOrder": [
            "resourceId"
          ],
          "id": "walletobjects.giftcardclass.update",
          "request": {
            "$ref": "GiftCardClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "response": {
            "$ref": "GiftCardClass"
          },
          "description": "Updates the gift card class referenced by the given class ID.",
          "httpMethod": "PUT",
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "parameters": {
            "resourceId": {
              "required": true,
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path"
            }
          }
        },
        "list": {
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "GiftCardClassListResponse"
          },
          "id": "walletobjects.giftcardclass.list",
          "description": "Returns a list of all gift card classes for a given issuer ID.",
          "httpMethod": "GET",
          "path": "walletobjects/v1/giftCardClass",
          "parameters": {
            "token": {
              "location": "query",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes.",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "walletobjects/v1/giftCardClass"
        },
        "addmessage": {
          "parameters": {
            "resourceId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "request": {
            "$ref": "AddMessageRequest"
          },
          "path": "walletobjects/v1/giftCardClass/{resourceId}/addMessage",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}/addMessage",
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Adds a message to the gift card class referenced by the given class ID.",
          "httpMethod": "POST",
          "response": {
            "$ref": "GiftCardClassAddMessageResponse"
          },
          "id": "walletobjects.giftcardclass.addmessage",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "request": {
            "$ref": "GiftCardClass"
          },
          "path": "walletobjects/v1/giftCardClass",
          "flatPath": "walletobjects/v1/giftCardClass",
          "id": "walletobjects.giftcardclass.insert",
          "parameters": {},
          "response": {
            "$ref": "GiftCardClass"
          },
          "httpMethod": "POST",
          "description": "Inserts an gift card class with the given ID and properties.",
          "parameterOrder": []
        },
        "get": {
          "httpMethod": "GET",
          "id": "walletobjects.giftcardclass.get",
          "parameters": {
            "resourceId": {
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "type": "string"
            }
          },
          "description": "Returns the gift card class with the given class ID.",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "response": {
            "$ref": "GiftCardClass"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "eventticketclass": {
      "methods": {
        "get": {
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Returns the event ticket class with the given class ID.",
          "path": "walletobjects/v1/eventTicketClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "id": "walletobjects.eventticketclass.get",
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "EventTicketClass"
          }
        },
        "patch": {
          "parameterOrder": [
            "resourceId"
          ],
          "request": {
            "$ref": "EventTicketClass"
          },
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "httpMethod": "PATCH",
          "description": "Updates the event ticket class referenced by the given class ID. This method supports patch semantics.",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "response": {
            "$ref": "EventTicketClass"
          },
          "path": "walletobjects/v1/eventTicketClass/{resourceId}",
          "id": "walletobjects.eventticketclass.patch",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "addmessage": {
          "path": "walletobjects/v1/eventTicketClass/{resourceId}/addMessage",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}/addMessage",
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path"
            }
          },
          "request": {
            "$ref": "AddMessageRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Adds a message to the event ticket class referenced by the given class ID.",
          "response": {
            "$ref": "EventTicketClassAddMessageResponse"
          },
          "id": "walletobjects.eventticketclass.addmessage",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "response": {
            "$ref": "EventTicketClassListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "issuerId": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "The ID of the issuer authorized to list classes."
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined."
            },
            "token": {
              "location": "query",
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes."
            }
          },
          "flatPath": "walletobjects/v1/eventTicketClass",
          "parameterOrder": [],
          "id": "walletobjects.eventticketclass.list",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/eventTicketClass",
          "description": "Returns a list of all event ticket classes for a given issuer ID."
        },
        "insert": {
          "httpMethod": "POST",
          "path": "walletobjects/v1/eventTicketClass",
          "description": "Inserts an event ticket class with the given ID and properties.",
          "parameterOrder": [],
          "id": "walletobjects.eventticketclass.insert",
          "parameters": {},
          "flatPath": "walletobjects/v1/eventTicketClass",
          "request": {
            "$ref": "EventTicketClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "EventTicketClass"
          }
        },
        "update": {
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "httpMethod": "PUT",
          "description": "Updates the event ticket class referenced by the given class ID.",
          "response": {
            "$ref": "EventTicketClass"
          },
          "id": "walletobjects.eventticketclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "request": {
            "$ref": "EventTicketClass"
          },
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/eventTicketClass/{resourceId}"
        }
      }
    },
    "loyaltyclass": {
      "methods": {
        "insert": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": "Inserts an loyalty class with the given ID and properties.",
          "path": "walletobjects/v1/loyaltyClass",
          "parameters": {},
          "flatPath": "walletobjects/v1/loyaltyClass",
          "request": {
            "$ref": "LoyaltyClass"
          },
          "id": "walletobjects.loyaltyclass.insert",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "LoyaltyClass"
          }
        },
        "list": {
          "path": "walletobjects/v1/loyaltyClass",
          "response": {
            "$ref": "LoyaltyClassListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "flatPath": "walletobjects/v1/loyaltyClass",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.loyaltyclass.list",
          "parameters": {
            "issuerId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64"
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "location": "query"
            },
            "token": {
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes.",
              "location": "query"
            }
          },
          "description": "Returns a list of all loyalty classes for a given issuer ID."
        },
        "patch": {
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "id": "walletobjects.loyaltyclass.patch",
          "response": {
            "$ref": "LoyaltyClass"
          },
          "request": {
            "$ref": "LoyaltyClass"
          },
          "description": "Updates the loyalty class referenced by the given class ID. This method supports patch semantics.",
          "httpMethod": "PATCH"
        },
        "addmessage": {
          "httpMethod": "POST",
          "path": "walletobjects/v1/loyaltyClass/{resourceId}/addMessage",
          "parameters": {
            "resourceId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "request": {
            "$ref": "AddMessageRequest"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}/addMessage",
          "id": "walletobjects.loyaltyclass.addmessage",
          "description": "Adds a message to the loyalty class referenced by the given class ID.",
          "response": {
            "$ref": "LoyaltyClassAddMessageResponse"
          }
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Returns the loyalty class with the given class ID.",
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.loyaltyclass.get",
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "response": {
            "$ref": "LoyaltyClass"
          }
        },
        "update": {
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "id": "walletobjects.loyaltyclass.update",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Updates the loyalty class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "response": {
            "$ref": "LoyaltyClass"
          },
          "httpMethod": "PUT",
          "request": {
            "$ref": "LoyaltyClass"
          }
        }
      }
    },
    "offerobject": {
      "methods": {
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "OfferObject"
          },
          "path": "walletobjects/v1/offerObject/{resourceId}",
          "httpMethod": "PUT",
          "description": "Updates the offer object referenced by the given object ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string"
            }
          },
          "flatPath": "walletobjects/v1/offerObject/{resourceId}",
          "id": "walletobjects.offerobject.update",
          "request": {
            "$ref": "OfferObject"
          }
        },
        "list": {
          "httpMethod": "GET",
          "id": "walletobjects.offerobject.list",
          "path": "walletobjects/v1/offerObject",
          "parameterOrder": [],
          "response": {
            "$ref": "OfferObjectListResponse"
          },
          "description": "Returns a list of all offer objects for a given issuer ID.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameters": {
            "token": {
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects.",
              "location": "query"
            },
            "classId": {
              "location": "query",
              "description": "The ID of the class whose objects will be listed.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined."
            }
          },
          "flatPath": "walletobjects/v1/offerObject"
        },
        "get": {
          "httpMethod": "GET",
          "id": "walletobjects.offerobject.get",
          "description": "Returns the offer object with the given object ID.",
          "response": {
            "$ref": "OfferObject"
          },
          "flatPath": "walletobjects/v1/offerObject/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/offerObject/{resourceId}"
        },
        "patch": {
          "parameterOrder": [
            "resourceId"
          ],
          "response": {
            "$ref": "OfferObject"
          },
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/offerObject/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "request": {
            "$ref": "OfferObject"
          },
          "id": "walletobjects.offerobject.patch",
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "description": "Updates the offer object referenced by the given object ID. This method supports patch semantics.",
          "flatPath": "walletobjects/v1/offerObject/{resourceId}"
        },
        "addmessage": {
          "description": "Adds a message to the offer object referenced by the given object ID.",
          "path": "walletobjects/v1/offerObject/{resourceId}/addMessage",
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/offerObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.offerobject.addmessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "parameters": {
            "resourceId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "response": {
            "$ref": "OfferObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "flatPath": "walletobjects/v1/offerObject",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Inserts an offer object with the given ID and properties.",
          "request": {
            "$ref": "OfferObject"
          },
          "parameterOrder": [],
          "parameters": {},
          "id": "walletobjects.offerobject.insert",
          "path": "walletobjects/v1/offerObject",
          "httpMethod": "POST",
          "response": {
            "$ref": "OfferObject"
          }
        }
      }
    },
    "flightobject": {
      "methods": {
        "list": {
          "id": "walletobjects.flightobject.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "token": {
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects.",
              "location": "query"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            }
          },
          "path": "walletobjects/v1/flightObject",
          "response": {
            "$ref": "FlightObjectListResponse"
          },
          "description": "Returns a list of all flight objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/flightObject"
        },
        "addmessage": {
          "response": {
            "$ref": "FlightObjectAddMessageResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Adds a message to the flight object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/flightObject/{resourceId}/addMessage",
          "path": "walletobjects/v1/flightObject/{resourceId}/addMessage",
          "parameters": {
            "resourceId": {
              "location": "path",
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "id": "walletobjects.flightobject.addmessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "parameterOrder": [
            "resourceId"
          ]
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "description": "Updates the flight object referenced by the given object ID. This method supports patch semantics.",
          "request": {
            "$ref": "FlightObject"
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "id": "walletobjects.flightobject.patch",
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "response": {
            "$ref": "FlightObject"
          }
        },
        "insert": {
          "parameterOrder": [],
          "description": "Inserts an flight object with the given ID and properties.",
          "path": "walletobjects/v1/flightObject",
          "request": {
            "$ref": "FlightObject"
          },
          "response": {
            "$ref": "FlightObject"
          },
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/flightObject",
          "id": "walletobjects.flightobject.insert"
        },
        "get": {
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "response": {
            "$ref": "FlightObject"
          },
          "httpMethod": "GET",
          "description": "Returns the flight object with the given object ID.",
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "resourceId"
          ],
          "id": "walletobjects.flightobject.get"
        },
        "update": {
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "id": "walletobjects.flightobject.update",
          "request": {
            "$ref": "FlightObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "httpMethod": "PUT",
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string"
            }
          },
          "description": "Updates the flight object referenced by the given object ID.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "response": {
            "$ref": "FlightObject"
          }
        }
      }
    },
    "offerclass": {
      "methods": {
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Updates the offer class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "id": "walletobjects.offerclass.update",
          "request": {
            "$ref": "OfferClass"
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "OfferClass"
          },
          "httpMethod": "PUT"
        },
        "get": {
          "response": {
            "$ref": "OfferClass"
          },
          "httpMethod": "GET",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "description": "Returns the offer class with the given class ID.",
          "parameters": {
            "resourceId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "id": "walletobjects.offerclass.get"
        },
        "list": {
          "description": "Returns a list of all offer classes for a given issuer ID.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/offerClass",
          "parameters": {
            "maxResults": {
              "format": "int32",
              "location": "query",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "type": "integer"
            },
            "token": {
              "location": "query",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes.",
              "type": "string"
            },
            "issuerId": {
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "The ID of the issuer authorized to list classes."
            }
          },
          "id": "walletobjects.offerclass.list",
          "parameterOrder": [],
          "flatPath": "walletobjects/v1/offerClass",
          "response": {
            "$ref": "OfferClassListResponse"
          },
          "httpMethod": "GET"
        },
        "insert": {
          "flatPath": "walletobjects/v1/offerClass",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/offerClass",
          "response": {
            "$ref": "OfferClass"
          },
          "parameters": {},
          "httpMethod": "POST",
          "id": "walletobjects.offerclass.insert",
          "description": "Inserts an offer class with the given ID and properties.",
          "parameterOrder": [],
          "request": {
            "$ref": "OfferClass"
          }
        },
        "patch": {
          "description": "Updates the offer class referenced by the given class ID. This method supports patch semantics.",
          "id": "walletobjects.offerclass.patch",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "request": {
            "$ref": "OfferClass"
          },
          "response": {
            "$ref": "OfferClass"
          },
          "httpMethod": "PATCH"
        },
        "addmessage": {
          "flatPath": "walletobjects/v1/offerClass/{resourceId}/addMessage",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "OfferClassAddMessageResponse"
          },
          "id": "walletobjects.offerclass.addmessage",
          "httpMethod": "POST",
          "path": "walletobjects/v1/offerClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "description": "Adds a message to the offer class referenced by the given class ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path"
            }
          }
        }
      }
    },
    "permissions": {
      "methods": {
        "update": {
          "path": "walletobjects/v1/permissions/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/permissions/{resourceId}",
          "response": {
            "$ref": "Permissions"
          },
          "id": "walletobjects.permissions.update",
          "request": {
            "$ref": "Permissions"
          },
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "format": "int64",
              "type": "string",
              "description": "The unique identifier for an issuer. This ID must be unique across all issuers."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "PUT",
          "description": "Updates the permissions for the given issuer."
        },
        "get": {
          "response": {
            "$ref": "Permissions"
          },
          "description": "Returns the permissions for the given issuer id.",
          "id": "walletobjects.permissions.get",
          "path": "walletobjects/v1/permissions/{resourceId}",
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for an issuer. This ID must be unique across all issuers.",
              "format": "int64"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/permissions/{resourceId}"
        }
      }
    },
    "smarttap": {
      "methods": {
        "insert": {
          "id": "walletobjects.smarttap.insert",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "SmartTap"
          },
          "request": {
            "$ref": "SmartTap"
          },
          "httpMethod": "POST",
          "parameters": {},
          "path": "walletobjects/v1/smartTap",
          "flatPath": "walletobjects/v1/smartTap",
          "description": "Inserts the smart tap.",
          "parameterOrder": []
        }
      }
    },
    "media": {
      "methods": {
        "upload": {
          "description": "Uploads rotating barcode values for the transit object referenced by the given object ID. Note the max upload size is specified in google3/production/config/cdd/apps-upload/customers/payments-consumer-passes/config.gcl and enforced by Scotty.",
          "mediaUpload": {
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/walletobjects/v1/transitObject/{resourceId}/uploadRotatingBarcodeValues"
              }
            },
            "accept": [
              "*/*"
            ]
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "walletobjects/v1/transitObject/{resourceId}/uploadRotatingBarcodeValues",
          "httpMethod": "POST",
          "request": {
            "$ref": "TransitObjectUploadRotatingBarcodeValuesRequest"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/transitObject/{resourceId}/uploadRotatingBarcodeValues",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "supportsMediaUpload": true,
          "response": {
            "$ref": "TransitObjectUploadRotatingBarcodeValuesResponse"
          },
          "id": "walletobjects.media.upload"
        },
        "download": {
          "flatPath": "walletobjects/v1/transitObject/{resourceId}/downloadRotatingBarcodeValues",
          "response": {
            "$ref": "Media"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "supportsMediaDownload": true,
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "resourceId"
          ],
          "useMediaDownloadService": true,
          "description": "Downloads rotating barcode values for the transit object referenced by the given object ID.",
          "id": "walletobjects.media.download",
          "path": "walletobjects/v1/transitObject/{resourceId}/downloadRotatingBarcodeValues"
        }
      }
    },
    "transitobject": {
      "methods": {
        "addmessage": {
          "httpMethod": "POST",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "parameters": {
            "resourceId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Adds a message to the transit object referenced by the given object ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "path": "walletobjects/v1/transitObject/{resourceId}/addMessage",
          "flatPath": "walletobjects/v1/transitObject/{resourceId}/addMessage",
          "id": "walletobjects.transitobject.addmessage",
          "response": {
            "$ref": "TransitObjectAddMessageResponse"
          }
        },
        "list": {
          "path": "walletobjects/v1/transitObject",
          "flatPath": "walletobjects/v1/transitObject",
          "response": {
            "$ref": "TransitObjectListResponse"
          },
          "description": "Returns a list of all transit objects for a given issuer ID.",
          "httpMethod": "GET",
          "parameters": {
            "token": {
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects.",
              "location": "query"
            },
            "classId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the class whose objects will be listed."
            },
            "maxResults": {
              "format": "int32",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "location": "query",
              "type": "integer"
            }
          },
          "id": "walletobjects.transitobject.list",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": []
        },
        "patch": {
          "flatPath": "walletobjects/v1/transitObject/{resourceId}",
          "description": "Updates the transit object referenced by the given object ID. This method supports patch semantics.",
          "path": "walletobjects/v1/transitObject/{resourceId}",
          "request": {
            "$ref": "TransitObject"
          },
          "response": {
            "$ref": "TransitObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "id": "walletobjects.transitobject.patch",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "PATCH"
        },
        "get": {
          "response": {
            "$ref": "TransitObject"
          },
          "description": "Returns the transit object with the given object ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "location": "path",
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "flatPath": "walletobjects/v1/transitObject/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.transitobject.get",
          "httpMethod": "GET",
          "path": "walletobjects/v1/transitObject/{resourceId}"
        },
        "insert": {
          "id": "walletobjects.transitobject.insert",
          "flatPath": "walletobjects/v1/transitObject",
          "response": {
            "$ref": "TransitObject"
          },
          "request": {
            "$ref": "TransitObject"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": "Inserts an transit object with the given ID and properties.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameters": {},
          "path": "walletobjects/v1/transitObject"
        },
        "update": {
          "id": "walletobjects.transitobject.update",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "TransitObject"
          },
          "path": "walletobjects/v1/transitObject/{resourceId}",
          "httpMethod": "PUT",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "description": "Updates the transit object referenced by the given object ID.",
          "request": {
            "$ref": "TransitObject"
          },
          "flatPath": "walletobjects/v1/transitObject/{resourceId}"
        }
      }
    },
    "eventticketobject": {
      "methods": {
        "patch": {
          "response": {
            "$ref": "EventTicketObject"
          },
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/eventTicketObject/{resourceId}",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "id": "walletobjects.eventticketobject.patch",
          "description": "Updates the event ticket object referenced by the given object ID. This method supports patch semantics.",
          "request": {
            "$ref": "EventTicketObject"
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ]
        },
        "addmessage": {
          "path": "walletobjects/v1/eventTicketObject/{resourceId}/addMessage",
          "id": "walletobjects.eventticketobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "description": "Adds a message to the event ticket object referenced by the given object ID.",
          "response": {
            "$ref": "EventTicketObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "POST"
        },
        "list": {
          "response": {
            "$ref": "EventTicketObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Returns a list of all event ticket objects for a given issuer ID.",
          "parameterOrder": [],
          "flatPath": "walletobjects/v1/eventTicketObject",
          "id": "walletobjects.eventticketobject.list",
          "path": "walletobjects/v1/eventTicketObject",
          "parameters": {
            "classId": {
              "location": "query",
              "description": "The ID of the class whose objects will be listed.",
              "type": "string"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query"
            }
          },
          "httpMethod": "GET"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "httpMethod": "PUT",
          "description": "Updates the event ticket object referenced by the given object ID.",
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "id": "walletobjects.eventticketobject.update",
          "response": {
            "$ref": "EventTicketObject"
          },
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "request": {
            "$ref": "EventTicketObject"
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}"
        },
        "modifylinkedofferobjects": {
          "response": {
            "$ref": "EventTicketObject"
          },
          "id": "walletobjects.eventticketobject.modifylinkedofferobjects",
          "description": "Modifies linked offer objects for the event ticket object with the given ID.",
          "request": {
            "$ref": "ModifyLinkedOfferObjectsRequest"
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}/modifyLinkedOfferObjects",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}/modifyLinkedOfferObjects",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "POST",
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          }
        },
        "get": {
          "id": "walletobjects.eventticketobject.get",
          "path": "walletobjects/v1/eventTicketObject/{resourceId}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "EventTicketObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Returns the event ticket object with the given object ID."
        },
        "insert": {
          "path": "walletobjects/v1/eventTicketObject",
          "id": "walletobjects.eventticketobject.insert",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "EventTicketObject"
          },
          "description": "Inserts an event ticket object with the given ID and properties.",
          "flatPath": "walletobjects/v1/eventTicketObject",
          "parameters": {},
          "response": {
            "$ref": "EventTicketObject"
          }
        }
      }
    },
    "flightclass": {
      "methods": {
        "insert": {
          "request": {
            "$ref": "FlightClass"
          },
          "parameterOrder": [],
          "description": "Inserts an flight class with the given ID and properties.",
          "parameters": {},
          "response": {
            "$ref": "FlightClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "POST",
          "id": "walletobjects.flightclass.insert",
          "path": "walletobjects/v1/flightClass",
          "flatPath": "walletobjects/v1/flightClass"
        },
        "update": {
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/flightClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/flightClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.flightclass.update",
          "description": "Updates the flight class referenced by the given class ID.",
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "location": "path"
            }
          },
          "request": {
            "$ref": "FlightClass"
          },
          "response": {
            "$ref": "FlightClass"
          }
        },
        "addmessage": {
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "parameterOrder": [
            "resourceId"
          ],
          "httpMethod": "POST",
          "description": "Adds a message to the flight class referenced by the given class ID.",
          "response": {
            "$ref": "FlightClassAddMessageResponse"
          },
          "request": {
            "$ref": "AddMessageRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/flightClass/{resourceId}/addMessage",
          "path": "walletobjects/v1/flightClass/{resourceId}/addMessage",
          "id": "walletobjects.flightclass.addmessage"
        },
        "get": {
          "description": "Returns the flight class with the given class ID.",
          "httpMethod": "GET",
          "id": "walletobjects.flightclass.get",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/flightClass/{resourceId}",
          "response": {
            "$ref": "FlightClass"
          },
          "parameters": {
            "resourceId": {
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/flightClass/{resourceId}"
        },
        "list": {
          "id": "walletobjects.flightclass.list",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/flightClass",
          "description": "Returns a list of all flight classes for a given issuer ID.",
          "path": "walletobjects/v1/flightClass",
          "response": {
            "$ref": "FlightClassListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "location": "query",
              "description": "The ID of the issuer authorized to list classes.",
              "type": "string",
              "format": "int64"
            },
            "maxResults": {
              "type": "integer",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes.",
              "type": "string",
              "location": "query"
            }
          }
        },
        "patch": {
          "parameterOrder": [
            "resourceId"
          ],
          "response": {
            "$ref": "FlightClass"
          },
          "description": "Updates the flight class referenced by the given class ID. This method supports patch semantics.",
          "request": {
            "$ref": "FlightClass"
          },
          "flatPath": "walletobjects/v1/flightClass/{resourceId}",
          "id": "walletobjects.flightclass.patch",
          "httpMethod": "PATCH",
          "parameters": {
            "resourceId": {
              "required": true,
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/flightClass/{resourceId}"
        }
      }
    },
    "transitclass": {
      "methods": {
        "patch": {
          "id": "walletobjects.transitclass.patch",
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "request": {
            "$ref": "TransitClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "TransitClass"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Updates the transit class referenced by the given class ID. This method supports patch semantics."
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Inserts a transit class with the given ID and properties.",
          "path": "walletobjects/v1/transitClass",
          "parameters": {},
          "flatPath": "walletobjects/v1/transitClass",
          "request": {
            "$ref": "TransitClass"
          },
          "parameterOrder": [],
          "response": {
            "$ref": "TransitClass"
          },
          "httpMethod": "POST",
          "id": "walletobjects.transitclass.insert"
        },
        "list": {
          "parameters": {
            "token": {
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "location": "query",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "type": "integer"
            },
            "issuerId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "The ID of the issuer authorized to list classes."
            }
          },
          "id": "walletobjects.transitclass.list",
          "description": "Returns a list of all transit classes for a given issuer ID.",
          "response": {
            "$ref": "TransitClassListResponse"
          },
          "flatPath": "walletobjects/v1/transitClass",
          "path": "walletobjects/v1/transitClass",
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "response": {
            "$ref": "TransitClass"
          },
          "parameters": {
            "resourceId": {
              "location": "path",
              "type": "string",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "description": "Returns the transit class with the given class ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.transitclass.get",
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "httpMethod": "GET"
        },
        "addmessage": {
          "path": "walletobjects/v1/transitClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "parameters": {
            "resourceId": {
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "walletobjects/v1/transitClass/{resourceId}/addMessage",
          "response": {
            "$ref": "TransitClassAddMessageResponse"
          },
          "description": "Adds a message to the transit class referenced by the given class ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "id": "walletobjects.transitclass.addmessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "id": "walletobjects.transitclass.update",
          "response": {
            "$ref": "TransitClass"
          },
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "httpMethod": "PUT",
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "request": {
            "$ref": "TransitClass"
          },
          "description": "Updates the transit class referenced by the given class ID.",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "location": "path"
            }
          }
        }
      }
    },
    "jwt": {
      "methods": {
        "insert": {
          "request": {
            "$ref": "JwtResource"
          },
          "id": "walletobjects.jwt.insert",
          "httpMethod": "POST",
          "path": "walletobjects/v1/jwt",
          "description": "Inserts the resources in the JWT.",
          "parameters": {},
          "parameterOrder": [],
          "flatPath": "walletobjects/v1/jwt",
          "response": {
            "$ref": "JwtInsertResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "genericobject": {
      "methods": {
        "list": {
          "response": {
            "$ref": "GenericObjectListResponse"
          },
          "httpMethod": "GET",
          "id": "walletobjects.genericobject.list",
          "flatPath": "walletobjects/v1/genericObject",
          "parameters": {
            "token": {
              "type": "string",
              "location": "query",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects."
            },
            "classId": {
              "type": "string",
              "description": "The ID of the class whose objects will be listed.",
              "location": "query"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            }
          },
          "path": "walletobjects/v1/genericObject",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [],
          "description": "Returns a list of all generic objects for a given issuer ID."
        },
        "addmessage": {
          "path": "walletobjects/v1/genericObject/{resourceId}/addMessage",
          "flatPath": "walletobjects/v1/genericObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.genericobject.addmessage",
          "httpMethod": "POST",
          "parameters": {
            "resourceId": {
              "location": "path",
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "response": {
            "$ref": "GenericObjectAddMessageResponse"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Adds a message to the generic object referenced by the given object ID."
        },
        "update": {
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "request": {
            "$ref": "GenericObject"
          },
          "response": {
            "$ref": "GenericObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "id": "walletobjects.genericobject.update",
          "flatPath": "walletobjects/v1/genericObject/{resourceId}",
          "path": "walletobjects/v1/genericObject/{resourceId}",
          "description": "Updates the generic object referenced by the given object ID.",
          "parameters": {
            "resourceId": {
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "required": true,
              "location": "path"
            }
          }
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/genericObject/{resourceId}",
          "request": {
            "$ref": "GenericObject"
          },
          "id": "walletobjects.genericobject.patch",
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/genericObject/{resourceId}",
          "parameters": {
            "resourceId": {
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "GenericObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "description": "Updates the generic object referenced by the given object ID. This method supports patch semantics."
        },
        "get": {
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "walletobjects/v1/genericObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.genericobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/genericObject/{resourceId}",
          "response": {
            "$ref": "GenericObject"
          },
          "description": "Returns the generic object with the given object ID."
        },
        "insert": {
          "request": {
            "$ref": "GenericObject"
          },
          "response": {
            "$ref": "GenericObject"
          },
          "description": "Inserts a generic object with the given ID and properties.",
          "flatPath": "walletobjects/v1/genericObject",
          "path": "walletobjects/v1/genericObject",
          "parameterOrder": [],
          "parameters": {},
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.genericobject.insert"
        }
      }
    },
    "giftcardobject": {
      "methods": {
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/giftCardObject",
          "parameters": {},
          "response": {
            "$ref": "GiftCardObject"
          },
          "parameterOrder": [],
          "description": "Inserts an gift card object with the given ID and properties.",
          "httpMethod": "POST",
          "id": "walletobjects.giftcardobject.insert",
          "flatPath": "walletobjects/v1/giftCardObject",
          "request": {
            "$ref": "GiftCardObject"
          }
        },
        "get": {
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "id": "walletobjects.giftcardobject.get",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "type": "string",
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "httpMethod": "GET",
          "description": "Returns the gift card object with the given object ID.",
          "response": {
            "$ref": "GiftCardObject"
          }
        },
        "addmessage": {
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}/addMessage",
          "parameterOrder": [
            "resourceId"
          ],
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}/addMessage",
          "id": "walletobjects.giftcardobject.addmessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "description": "Adds a message to the gift card object referenced by the given object ID.",
          "response": {
            "$ref": "GiftCardObjectAddMessageResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "httpMethod": "PUT",
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "response": {
            "$ref": "GiftCardObject"
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "request": {
            "$ref": "GiftCardObject"
          },
          "description": "Updates the gift card object referenced by the given object ID.",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.giftcardobject.update",
          "parameterOrder": [
            "resourceId"
          ]
        },
        "list": {
          "parameters": {
            "classId": {
              "location": "query",
              "type": "string",
              "description": "The ID of the class whose objects will be listed."
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "id": "walletobjects.giftcardobject.list",
          "httpMethod": "GET",
          "path": "walletobjects/v1/giftCardObject",
          "description": "Returns a list of all gift card objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/giftCardObject",
          "response": {
            "$ref": "GiftCardObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "response": {
            "$ref": "GiftCardObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "request": {
            "$ref": "GiftCardObject"
          },
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "httpMethod": "PATCH",
          "description": "Updates the gift card object referenced by the given object ID. This method supports patch semantics.",
          "id": "walletobjects.giftcardobject.patch",
          "parameters": {
            "resourceId": {
              "required": true,
              "type": "string",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path"
            }
          }
        }
      }
    },
    "genericclass": {
      "methods": {
        "get": {
          "path": "walletobjects/v1/genericClass/{resourceId}",
          "description": "Returns the generic class with the given class ID.",
          "flatPath": "walletobjects/v1/genericClass/{resourceId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "GenericClass"
          },
          "parameters": {
            "resourceId": {
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "required": true,
              "type": "string"
            }
          },
          "id": "walletobjects.genericclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/genericClass/{resourceId}",
          "id": "walletobjects.genericclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "GenericClass"
          },
          "request": {
            "$ref": "GenericClass"
          },
          "description": "Updates the generic class referenced by the given class ID. This method supports patch semantics.",
          "flatPath": "walletobjects/v1/genericClass/{resourceId}"
        },
        "insert": {
          "path": "walletobjects/v1/genericClass",
          "parameters": {},
          "response": {
            "$ref": "GenericClass"
          },
          "description": "Inserts a generic class with the given ID and properties.",
          "request": {
            "$ref": "GenericClass"
          },
          "flatPath": "walletobjects/v1/genericClass",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.genericclass.insert",
          "parameterOrder": [],
          "httpMethod": "POST"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "id": "walletobjects.genericclass.update",
          "description": "Updates the Generic class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/genericClass/{resourceId}",
          "httpMethod": "PUT",
          "parameters": {
            "resourceId": {
              "location": "path",
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/genericClass/{resourceId}",
          "response": {
            "$ref": "GenericClass"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "request": {
            "$ref": "GenericClass"
          }
        },
        "addmessage": {
          "parameterOrder": [
            "resourceId"
          ],
          "id": "walletobjects.genericclass.addmessage",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "GenericClassAddMessageResponse"
          },
          "request": {
            "$ref": "AddMessageRequest"
          },
          "path": "walletobjects/v1/genericClass/{resourceId}/addMessage",
          "description": "Adds a message to the generic class referenced by the given class ID.",
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "walletobjects/v1/genericClass/{resourceId}/addMessage"
        },
        "list": {
          "flatPath": "walletobjects/v1/genericClass",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "description": "Returns a list of all generic classes for a given issuer ID.",
          "parameterOrder": [],
          "httpMethod": "GET",
          "id": "walletobjects.genericclass.list",
          "parameters": {
            "issuerId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "The ID of the issuer authorized to list classes."
            },
            "token": {
              "location": "query",
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` classes are available in a list. For example, if you have a list of 200 classes and you call list with `maxResults` set to 20, list will return the first 20 classes and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 classes."
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined."
            }
          },
          "response": {
            "$ref": "GenericClassListResponse"
          },
          "path": "walletobjects/v1/genericClass"
        }
      }
    },
    "loyaltyobject": {
      "methods": {
        "get": {
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "response": {
            "$ref": "LoyaltyObject"
          },
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "id": "walletobjects.loyaltyobject.get",
          "description": "Returns the loyalty object with the given object ID.",
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "flatPath": "walletobjects/v1/loyaltyObject",
          "path": "walletobjects/v1/loyaltyObject",
          "description": "Inserts an loyalty object with the given ID and properties.",
          "parameterOrder": [],
          "id": "walletobjects.loyaltyobject.insert",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "LoyaltyObject"
          },
          "request": {
            "$ref": "LoyaltyObject"
          },
          "parameters": {}
        },
        "patch": {
          "parameterOrder": [
            "resourceId"
          ],
          "response": {
            "$ref": "LoyaltyObject"
          },
          "id": "walletobjects.loyaltyobject.patch",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "parameters": {
            "resourceId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "request": {
            "$ref": "LoyaltyObject"
          },
          "httpMethod": "PATCH",
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "description": "Updates the loyalty object referenced by the given object ID. This method supports patch semantics."
        },
        "list": {
          "parameters": {
            "classId": {
              "type": "string",
              "location": "query",
              "description": "The ID of the class whose objects will be listed."
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "Identifies the max number of results returned by a list. All results are returned if `maxResults` isn't defined.",
              "format": "int32"
            },
            "token": {
              "location": "query",
              "type": "string",
              "description": "Used to get the next set of results if `maxResults` is specified, but more than `maxResults` objects are available in a list. For example, if you have a list of 200 objects and you call list with `maxResults` set to 20, list will return the first 20 objects and a token. Call list again with `maxResults` set to 20 and the token to get the next 20 objects."
            }
          },
          "response": {
            "$ref": "LoyaltyObjectListResponse"
          },
          "flatPath": "walletobjects/v1/loyaltyObject",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "GET",
          "path": "walletobjects/v1/loyaltyObject",
          "description": "Returns a list of all loyalty objects for a given issuer ID.",
          "parameterOrder": [],
          "id": "walletobjects.loyaltyobject.list"
        },
        "modifylinkedofferobjects": {
          "request": {
            "$ref": "ModifyLinkedOfferObjectsRequest"
          },
          "httpMethod": "POST",
          "parameters": {
            "resourceId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
            }
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "path": "walletobjects/v1/loyaltyObject/{resourceId}/modifyLinkedOfferObjects",
          "id": "walletobjects.loyaltyobject.modifylinkedofferobjects",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}/modifyLinkedOfferObjects",
          "description": "Modifies linked offer objects for the loyalty object with the given ID."
        },
        "update": {
          "httpMethod": "PUT",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "request": {
            "$ref": "LoyaltyObject"
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "description": "Updates the loyalty object referenced by the given object ID.",
          "id": "walletobjects.loyaltyobject.update",
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "parameters": {
            "resourceId": {
              "required": true,
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "type": "string"
            }
          }
        },
        "addmessage": {
          "request": {
            "$ref": "AddMessageRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "response": {
            "$ref": "LoyaltyObjectAddMessageResponse"
          },
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}/addMessage",
          "description": "Adds a message to the loyalty object referenced by the given object ID.",
          "path": "walletobjects/v1/loyaltyObject/{resourceId}/addMessage",
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          }
        }
      }
    },
    "issuer": {
      "methods": {
        "update": {
          "request": {
            "$ref": "Issuer"
          },
          "response": {
            "$ref": "Issuer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "httpMethod": "PUT",
          "description": "Updates the issuer referenced by the given issuer ID.",
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64",
              "description": "The unique identifier for an issuer."
            }
          },
          "id": "walletobjects.issuer.update",
          "path": "walletobjects/v1/issuer/{resourceId}"
        },
        "patch": {
          "id": "walletobjects.issuer.patch",
          "path": "walletobjects/v1/issuer/{resourceId}",
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "resourceId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "Issuer"
          },
          "description": "Updates the issuer referenced by the given issuer ID. This method supports patch semantics.",
          "parameters": {
            "resourceId": {
              "format": "int64",
              "type": "string",
              "description": "The unique identifier for an issuer.",
              "location": "path",
              "required": true
            }
          },
          "request": {
            "$ref": "Issuer"
          }
        },
        "get": {
          "id": "walletobjects.issuer.get",
          "parameterOrder": [
            "resourceId"
          ],
          "httpMethod": "GET",
          "path": "walletobjects/v1/issuer/{resourceId}",
          "parameters": {
            "resourceId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string",
              "description": "The unique identifier for an issuer."
            }
          },
          "description": "Returns the issuer with the given issuer ID.",
          "response": {
            "$ref": "Issuer"
          },
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "flatPath": "walletobjects/v1/issuer",
          "description": "Returns a list of all issuers shared to the caller.",
          "id": "walletobjects.issuer.list",
          "parameterOrder": [],
          "path": "walletobjects/v1/issuer",
          "parameters": {},
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "IssuerListResponse"
          }
        },
        "insert": {
          "path": "walletobjects/v1/issuer",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ],
          "response": {
            "$ref": "Issuer"
          },
          "httpMethod": "POST",
          "description": "Inserts an issuer with the given ID and properties.",
          "request": {
            "$ref": "Issuer"
          },
          "flatPath": "walletobjects/v1/issuer",
          "parameters": {},
          "id": "walletobjects.issuer.insert"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "name": "walletobjects",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "description": "Data format for response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/wallet_object.issuer": {
          "description": "Private Service: https://www.googleapis.com/auth/wallet_object.issuer"
        }
      }
    }
  },
  "title": "Google Wallet API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "baseUrl": "https://walletobjects.googleapis.com/",
  "description": "API for issuers to save and manage Google Wallet Objects.",
  "documentationLink": "https://developers.google.com/pay/passes",
  "discoveryVersion": "v1",
  "basePath": "",
  "id": "walletobjects:v1",
  "rootUrl": "https://walletobjects.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Walletobjects",
  "schemas": {
    "TransitClassAddMessageResponse": {
      "id": "TransitClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "TransitClass",
          "description": "The updated TransitClass resource."
        }
      },
      "type": "object"
    },
    "FlightClassAddMessageResponse": {
      "id": "FlightClassAddMessageResponse",
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "FlightClass",
          "description": "The updated FlightClass resource."
        }
      }
    },
    "Barcode": {
      "id": "Barcode",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value encoded in the barcode."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#barcode\"`.",
          "deprecated": true
        },
        "showCodeText": {
          "$ref": "LocalizedString",
          "description": "Optional text that will be shown when the barcode is hidden behind a click action. This happens in cases where a pass has Smart Tap enabled. If not specified, a default is chosen by Google."
        },
        "alternateText": {
          "description": "An optional text that will override the default text that shows under the barcode. This field is intended for a human readable equivalent of the barcode value, used when the barcode cannot be scanned.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BARCODE_TYPE_UNSPECIFIED",
            "AZTEC",
            "aztec",
            "CODE_39",
            "code39",
            "CODE_128",
            "code128",
            "CODABAR",
            "codabar",
            "DATA_MATRIX",
            "dataMatrix",
            "EAN_8",
            "ean8",
            "EAN_13",
            "ean13",
            "EAN13",
            "ITF_14",
            "itf14",
            "PDF_417",
            "pdf417",
            "PDF417",
            "QR_CODE",
            "qrCode",
            "qrcode",
            "UPC_A",
            "upcA",
            "TEXT_ONLY",
            "textOnly"
          ],
          "description": "The type of barcode.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `AZTEC`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODE_39`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODE_128`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODABAR`. Deprecated. Not supported for Rotating Barcodes.",
            "A 2D matrix barcode consisting of black and white. Cells or modules are arranged in either a square or rectangle. Not supported for Rotating Barcodes.",
            "Legacy alias for `DATA_MATRIX`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_8`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_13`. Deprecated. Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_13`. Deprecated. Not supported for Rotating Barcodes.",
            "14 digit ITF code Not supported for Rotating Barcodes.",
            "Legacy alias for `ITF_14`. Deprecated. Not supported for Rotating Barcodes.",
            "Supported for Rotating Barcodes.",
            "Legacy alias for `PDF_417`. Deprecated.",
            "Legacy alias for `PDF_417`. Deprecated.",
            "Supported for Rotating Barcodes.",
            "Legacy alias for `QR_CODE`. Deprecated.",
            "Legacy alias for `QR_CODE`. Deprecated.",
            "11 or 12 digit codes Not supported for Rotating Barcodes.",
            "Legacy alias for `UPC_A`. Deprecated. Not supported for Rotating Barcodes.",
            "Renders the field as a text field. The `alternateText` field may not be used with a barcode of type `textOnly`. Not supported for Rotating Barcodes.",
            "Legacy alias for `TEXT_ONLY`. Deprecated. Not supported for Rotating Barcodes."
          ]
        },
        "renderEncoding": {
          "enum": [
            "RENDER_ENCODING_UNSPECIFIED",
            "UTF_8"
          ],
          "description": "The render encoding for the barcode. When specified, barcode is rendered in the given encoding. Otherwise best known encoding is chosen by Google.",
          "type": "string",
          "enumDescriptions": [
            "",
            "UTF_8 encoding for barcodes. This is only supported for barcode type qrCode."
          ]
        }
      }
    },
    "TransitObject": {
      "id": "TransitObject",
      "type": "object",
      "properties": {
        "groupingInfo": {
          "description": "Information that controls how passes are grouped together.",
          "$ref": "GroupingInfo"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both will be displayed."
        },
        "classId": {
          "type": "string",
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you."
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ]
        },
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "purchaseDetails": {
          "$ref": "PurchaseDetails",
          "description": "Purchase details for this ticket."
        },
        "passengerNames": {
          "type": "string",
          "description": "The name(s) of the passengers the ticket is assigned to. The above `passengerType` field is meant to give Google context on this field."
        },
        "concessionCategory": {
          "description": "The concession category for the ticket.",
          "enum": [
            "CONCESSION_CATEGORY_UNSPECIFIED",
            "ADULT",
            "adult",
            "CHILD",
            "child",
            "SENIOR",
            "senior"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ADULT`. Deprecated.",
            "",
            "Legacy alias for `CHILD`. Deprecated.",
            "",
            "Legacy alias for `SENIOR`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ]
        },
        "customConcessionCategory": {
          "$ref": "LocalizedString",
          "description": "A custom concession category to use when `concessionCategory` does not provide the right option. Both `concessionCategory` and `customConcessionCategory` may not be set."
        },
        "rotatingBarcode": {
          "$ref": "RotatingBarcode",
          "description": "The rotating barcode type and value."
        },
        "activationStatus": {
          "description": "The activation status for the object. Required if the class has `activationOptions` set.",
          "$ref": "ActivationStatus"
        },
        "messages": {
          "type": "array",
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          }
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "smartTapRedemptionValue": {
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported.",
          "type": "string"
        },
        "ticketLegs": {
          "description": "Each ticket may contain one or more legs. Each leg contains departure and arrival information along with boarding and seating information. If only one leg is to be specified then use the `ticketLeg` field instead. Both `ticketLeg` and `ticketLegs` may not be set.",
          "items": {
            "$ref": "TicketLeg"
          },
          "type": "array"
        },
        "locations": {
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "type": "array",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "ticketNumber": {
          "type": "string",
          "description": "The number of the ticket. This is a unique identifier for the ticket in the transit operator's system."
        },
        "customTicketStatus": {
          "$ref": "LocalizedString",
          "description": "A custom status to use for the ticket status value when `ticketStatus` does not provide the right option. Both `ticketStatus` and `customTicketStatus` may not be set."
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`."
        },
        "imageModulesData": {
          "type": "array",
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          }
        },
        "ticketStatus": {
          "description": "The status of the ticket. For states which affect display, use the `state` field instead.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `USED`. Deprecated.",
            "",
            "Legacy alias for `REFUNDED`. Deprecated.",
            "",
            "Legacy alias for `EXCHANGED`. Deprecated."
          ],
          "type": "string",
          "enum": [
            "TICKET_STATUS_UNSPECIFIED",
            "USED",
            "used",
            "REFUNDED",
            "refunded",
            "EXCHANGED",
            "exchanged"
          ]
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed."
        },
        "infoModuleData": {
          "description": "Deprecated. Use textModulesData instead.",
          "$ref": "InfoModuleData"
        },
        "classReference": {
          "$ref": "TransitClass",
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string",
          "deprecated": true
        },
        "tripType": {
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ROUND_TRIP`. Deprecated.",
            "",
            "Legacy alias for `ONE_WAY`. Deprecated."
          ],
          "enum": [
            "TRIP_TYPE_UNSPECIFIED",
            "ROUND_TRIP",
            "roundTrip",
            "ONE_WAY",
            "oneWay"
          ],
          "description": "Required. The type of trip this transit object represents. Used to determine the pass title and/or which symbol to use between the origin and destination.",
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ]
        },
        "ticketRestrictions": {
          "description": "Information about what kind of restrictions there are on using this ticket. For example, which days of the week it must be used, or which routes are allowed to be taken.",
          "$ref": "TicketRestrictions"
        },
        "passengerType": {
          "type": "string",
          "enum": [
            "PASSENGER_TYPE_UNSPECIFIED",
            "SINGLE_PASSENGER",
            "singlePassenger",
            "MULTIPLE_PASSENGERS",
            "multiplePassengers"
          ],
          "description": "The number of passengers.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SINGLE_PASSENGER`. Deprecated.",
            "",
            "Legacy alias for `MULTIPLE_PASSENGERS`. Deprecated."
          ]
        },
        "hasLinkedDevice": {
          "type": "boolean",
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information."
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed."
        },
        "deviceContext": {
          "$ref": "DeviceContext",
          "description": "Device context associated with the object."
        },
        "ticketLeg": {
          "description": "A single ticket leg contains departure and arrival information along with boarding and seating information. If more than one leg is to be specified then use the `ticketLegs` field instead. Both `ticketLeg` and `ticketLegs` may not be set.",
          "$ref": "TicketLeg"
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        },
        "tripId": {
          "type": "string",
          "description": "This id is used to group tickets together if the user has saved multiple tickets for the same trip."
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for offers.",
          "type": "boolean"
        }
      }
    },
    "CardRowTwoItems": {
      "id": "CardRowTwoItems",
      "type": "object",
      "properties": {
        "startItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the start of the row. This item will be aligned to the left."
        },
        "endItem": {
          "description": "The item to be displayed at the end of the row. This item will be aligned to the right.",
          "$ref": "TemplateItem"
        }
      }
    },
    "Money": {
      "id": "Money",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#money\"`.",
          "deprecated": true
        },
        "currencyCode": {
          "description": "The currency code, such as \"USD\" or \"EUR.\"",
          "type": "string"
        },
        "micros": {
          "format": "int64",
          "type": "string",
          "description": "The unit of money amount in micros. For example, $1 USD would be represented as 1000000 micros."
        }
      }
    },
    "DeviceContext": {
      "type": "object",
      "id": "DeviceContext",
      "description": "Device context associated with the object.",
      "properties": {
        "deviceToken": {
          "type": "string",
          "description": "If set, redemption information will only be returned to the given device upon activation of the object. This should not be used as a stable identifier to trace a user's device. It can change across different passes for the same device or even across different activations for the same device. When setting this, callers must also set has_linked_device on the object being activated."
        }
      }
    },
    "IssuerContactInfo": {
      "id": "IssuerContactInfo",
      "properties": {
        "alertsEmails": {
          "items": {
            "type": "string"
          },
          "description": "Email addresses which will receive alerts.",
          "type": "array"
        },
        "phone": {
          "type": "string",
          "description": "The primary contact phone number."
        },
        "name": {
          "type": "string",
          "description": "The primary contact name."
        },
        "email": {
          "type": "string",
          "description": "The primary contact email address."
        }
      },
      "type": "object"
    },
    "AddMessageRequest": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "Message"
        }
      },
      "description": "Resource used when the AddMessage endpoints are called.",
      "id": "AddMessageRequest"
    },
    "EventReservationInfo": {
      "type": "object",
      "id": "EventReservationInfo",
      "properties": {
        "confirmationCode": {
          "description": "The confirmation code of the event reservation. This may also take the form of an \"order number\", \"confirmation number\", \"reservation number\", or other equivalent.",
          "type": "string"
        },
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventReservationInfo\"`."
        }
      }
    },
    "GenericObjectListResponse": {
      "properties": {
        "resources": {
          "description": "Resources corresponding to the list request.",
          "type": "array",
          "items": {
            "$ref": "GenericObject"
          }
        },
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        }
      },
      "id": "GenericObjectListResponse",
      "description": "List response which contains the list of all generic objects for a given issuer ID.",
      "type": "object"
    },
    "CardRowTemplateInfo": {
      "id": "CardRowTemplateInfo",
      "properties": {
        "threeItems": {
          "description": "Template for a row containing three items. Exactly one of \"one_item\", \"two_items\", \"three_items\" must be set.",
          "$ref": "CardRowThreeItems"
        },
        "oneItem": {
          "$ref": "CardRowOneItem",
          "description": "Template for a row containing one item. Exactly one of \"one_item\", \"two_items\", \"three_items\" must be set."
        },
        "twoItems": {
          "$ref": "CardRowTwoItems",
          "description": "Template for a row containing two items. Exactly one of \"one_item\", \"two_items\", \"three_items\" must be set."
        }
      },
      "type": "object"
    },
    "FlightObjectListResponse": {
      "type": "object",
      "id": "FlightObjectListResponse",
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "type": "array",
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "FlightObject"
          }
        }
      }
    },
    "ExpiryNotification": {
      "properties": {
        "enableNotification": {
          "type": "boolean",
          "description": "Indicates if the object needs to have expiry notification enabled."
        }
      },
      "type": "object",
      "description": "Indicates that the issuer would like Google Wallet to send expiry notifications 2 days prior to the card expiration.",
      "id": "ExpiryNotification"
    },
    "SecurityAnimation": {
      "properties": {
        "animationType": {
          "enum": [
            "ANIMATION_UNSPECIFIED",
            "FOIL_SHIMMER",
            "foilShimmer"
          ],
          "description": "Type of animation.",
          "enumDescriptions": [
            "",
            "Default Foil & Shimmer animation",
            "Legacy alias for `FOIL_SHIMMER`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true
          ],
          "type": "string"
        }
      },
      "id": "SecurityAnimation",
      "type": "object"
    },
    "FlightCarrier": {
      "id": "FlightCarrier",
      "type": "object",
      "properties": {
        "carrierIataCode": {
          "type": "string",
          "description": "Two character IATA airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or `carrierIcaoCode` needs to be provided for `carrier` and `operatingCarrier`. eg: \"LX\" for Swiss Air"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#flightCarrier\"`.",
          "deprecated": true,
          "type": "string"
        },
        "airlineAllianceLogo": {
          "description": "A logo for the airline alliance, displayed below the QR code that the passenger scans to board.",
          "$ref": "Image"
        },
        "wideAirlineLogo": {
          "description": "The wide logo of the airline. When provided, this will be used in place of the airline logo in the top left of the card view.",
          "$ref": "Image"
        },
        "carrierIcaoCode": {
          "description": "Three character ICAO airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or `carrierIataCode` needs to be provided for `carrier` and `operatingCarrier`. eg: \"EZY\" for Easy Jet",
          "type": "string"
        },
        "airlineName": {
          "description": "A localized name of the airline specified by carrierIataCode. If unset, `issuer_name` or `localized_issuer_name` from `FlightClass` will be used for display purposes. eg: \"Swiss Air\" for \"LX\"",
          "$ref": "LocalizedString"
        },
        "airlineLogo": {
          "$ref": "Image",
          "description": "A logo for the airline described by carrierIataCode and localizedAirlineName. This logo will be rendered at the top of the detailed card view."
        }
      }
    },
    "CardTemplateOverride": {
      "properties": {
        "cardRowTemplateInfos": {
          "items": {
            "$ref": "CardRowTemplateInfo"
          },
          "description": "Template information for rows in the card view. At most three rows are allowed to be specified.",
          "type": "array"
        }
      },
      "id": "CardTemplateOverride",
      "type": "object"
    },
    "TransitObjectUploadRotatingBarcodeValuesRequest": {
      "description": "Request to upload rotating barcode values.",
      "type": "object",
      "properties": {
        "blob": {
          "description": "A reference to the rotating barcode values payload that was uploaded.",
          "$ref": "Media"
        },
        "mediaRequestInfo": {
          "$ref": "MediaRequestInfo",
          "description": "Extra information about the uploaded media."
        }
      },
      "id": "TransitObjectUploadRotatingBarcodeValuesRequest"
    },
    "JwtResource": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string",
          "description": "A string representing a JWT of the format described at https://developers.google.com/wallet/reference/rest/v1/Jwt"
        }
      },
      "id": "JwtResource"
    },
    "LoyaltyClass": {
      "type": "object",
      "id": "LoyaltyClass",
      "properties": {
        "localizedSecondaryRewardsTier": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the secondary_rewards_tier."
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated.",
          "deprecated": true
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ]
        },
        "infoModuleData": {
          "deprecated": true,
          "description": "Deprecated. Use textModulesData instead.",
          "$ref": "InfoModuleData"
        },
        "localizedSecondaryRewardsTierLabel": {
          "description": "Translated strings for the secondary_rewards_tier_label.",
          "$ref": "LocalizedString"
        },
        "linksModuleData": {
          "description": "Links module data. If links module data is also defined on the object, both will be displayed.",
          "$ref": "LinksModuleData"
        },
        "callbackOptions": {
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback.",
          "$ref": "CallbackOptions"
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display."
        },
        "localizedAccountIdLabel": {
          "description": "Translated strings for the account_id_label. Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "textModulesData": {
          "type": "array",
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "reviewStatus": {
          "type": "string",
          "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ],
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ]
        },
        "issuerName": {
          "type": "string",
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens."
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`."
        },
        "secondaryRewardsTierLabel": {
          "type": "string",
          "description": "The secondary rewards tier label, such as \"Rewards Tier.\""
        },
        "locations": {
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "localizedIssuerName": {
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "localizedAccountNameLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the account_name_label. Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens."
        },
        "localizedProgramName": {
          "description": "Translated strings for the program_name. The app may display an ellipsis after the first 20 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "rewardsTierLabel": {
          "type": "string",
          "description": "The rewards tier label, such as \"Rewards Tier.\" Recommended maximum length is 9 characters to ensure full string is displayed on smaller screens."
        },
        "redemptionIssuers": {
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and one of object level `smartTapRedemptionValue`, barcode.value`, or `accountId` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "enableSmartTap": {
          "type": "boolean",
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and one of object level `smartTapRedemptionLevel`, barcode.value`, or `accountId` fields must also be set up correctly in order for a pass to support Smart Tap."
        },
        "review": {
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`.",
          "$ref": "Review"
        },
        "localizedRewardsTierLabel": {
          "description": "Translated strings for the rewards_tier_label. Recommended maximum length is 9 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "securityAnimation": {
          "$ref": "SecurityAnimation",
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details."
        },
        "accountIdLabel": {
          "type": "string",
          "description": "The account ID label, such as \"Member ID.\" Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens."
        },
        "accountNameLabel": {
          "description": "The account name label, such as \"Member Name.\" Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width.",
          "$ref": "Image"
        },
        "messages": {
          "type": "array",
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          }
        },
        "programLogo": {
          "$ref": "Image",
          "description": "Required. The logo of the loyalty program or company. This logo is displayed in both the details and list views of the app."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string",
          "deprecated": true
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "rewardsTier": {
          "type": "string",
          "description": "The rewards tier, such as \"Gold\" or \"Platinum.\" Recommended maximum length is 7 characters to ensure full string is displayed on smaller screens."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#loyaltyClass\"`.",
          "type": "string",
          "deprecated": true
        },
        "wideProgramLogo": {
          "$ref": "Image",
          "description": "The wide logo of the loyalty program or company. When provided, this will be used in place of the program logo in the top left of the card view."
        },
        "discoverableProgram": {
          "$ref": "DiscoverableProgram",
          "description": "Information about how the class may be discovered and instantiated from within the Google Pay app."
        },
        "secondaryRewardsTier": {
          "type": "string",
          "description": "The secondary rewards tier, such as \"Gold\" or \"Platinum.\""
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object)."
        },
        "programName": {
          "description": "Required. The program name, such as \"Adam's Apparel\". The app may display an ellipsis after the first 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "type": "array",
          "items": {
            "$ref": "ImageModuleData"
          }
        },
        "viewUnlockRequirement": {
          "type": "string",
          "description": "View Unlock Requirement options for the loyalty card.",
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ]
        },
        "allowMultipleUsersPerObject": {
          "deprecated": true,
          "type": "boolean",
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead."
        },
        "localizedRewardsTier": {
          "description": "Translated strings for the rewards_tier. Recommended maximum length is 7 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
          "type": "string"
        }
      }
    },
    "FirstRowOption": {
      "id": "FirstRowOption",
      "properties": {
        "fieldOption": {
          "description": "A reference to the field to be displayed in the first row.",
          "$ref": "FieldSelector"
        },
        "transitOption": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ORIGIN_AND_DESTINATION_NAMES`. Deprecated.",
            "",
            "Legacy alias for `ORIGIN_AND_DESTINATION_CODES`. Deprecated.",
            "",
            "Legacy alias for `ORIGIN_NAME`. Deprecated."
          ],
          "enum": [
            "TRANSIT_OPTION_UNSPECIFIED",
            "ORIGIN_AND_DESTINATION_NAMES",
            "originAndDestinationNames",
            "ORIGIN_AND_DESTINATION_CODES",
            "originAndDestinationCodes",
            "ORIGIN_NAME",
            "originName"
          ]
        }
      },
      "type": "object"
    },
    "AirportInfo": {
      "type": "object",
      "id": "AirportInfo",
      "properties": {
        "gate": {
          "description": "A name of the gate. Eg: \"B59\" or \"59\"",
          "type": "string"
        },
        "terminal": {
          "type": "string",
          "description": "Terminal name. Eg: \"INTL\" or \"I\""
        },
        "airportIataCode": {
          "description": "Three character IATA airport code. This is a required field for `origin` and `destination`. Eg: \"SFO\"",
          "type": "string"
        },
        "airportNameOverride": {
          "description": "Optional field that overrides the airport city name defined by IATA. By default, Google takes the `airportIataCode` provided and maps it to the official airport city name defined by IATA. Official IATA airport city names can be found at IATA airport city names website. For example, for the airport IATA code \"LTN\", IATA website tells us that the corresponding airport city is \"London\". If this field is not populated, Google would display \"London\". However, populating this field with a custom name (eg: \"London Luton\") would override it.",
          "$ref": "LocalizedString"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#airportInfo\"`.",
          "type": "string",
          "deprecated": true
        }
      }
    },
    "ListTemplateOverride": {
      "properties": {
        "secondRowOption": {
          "$ref": "FieldSelector",
          "description": "A reference to the field to be displayed in the second row. This option is only displayed if there are not multiple user objects in a group. If there is a group, the second row will always display a field shared by all objects. To set this override, please set secondRowOption to the FieldSelector of you choice."
        },
        "firstRowOption": {
          "$ref": "FirstRowOption",
          "description": "Specifies from a predefined set of options or from a reference to the field what will be displayed in the first row. To set this override, set the FirstRowOption.fieldOption to the FieldSelector of your choice."
        },
        "thirdRowOption": {
          "description": "An unused/deprecated field. Setting it will have no effect on what the user sees.",
          "$ref": "FieldSelector",
          "deprecated": true
        }
      },
      "id": "ListTemplateOverride",
      "type": "object"
    },
    "ClassTemplateInfo": {
      "id": "ClassTemplateInfo",
      "properties": {
        "cardBarcodeSectionDetails": {
          "description": "Specifies extra information to be displayed above and below the barcode.",
          "$ref": "CardBarcodeSectionDetails"
        },
        "listTemplateOverride": {
          "$ref": "ListTemplateOverride",
          "description": "Override for the passes list view."
        },
        "cardTemplateOverride": {
          "description": "Override for the card view.",
          "$ref": "CardTemplateOverride"
        },
        "detailsTemplateOverride": {
          "$ref": "DetailsTemplateOverride",
          "description": "Override for the details view (beneath the card view)."
        }
      },
      "type": "object"
    },
    "OfferObjectListResponse": {
      "type": "object",
      "id": "OfferObjectListResponse",
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "type": "array",
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "OfferObject"
          }
        }
      }
    },
    "TicketSeat": {
      "id": "TicketSeat",
      "type": "object",
      "properties": {
        "seatAssignment": {
          "$ref": "LocalizedString",
          "description": "The passenger's seat assignment. Eg. \"no specific seat\". To be used when there is no specific identifier to use in `seat`."
        },
        "customFareClass": {
          "$ref": "LocalizedString",
          "description": "A custome fare class to be used if no `fareClass` applies. Both `fareClass` and `customFareClass` may not be set."
        },
        "seat": {
          "type": "string",
          "description": "The identifier of where the ticketed seat is located. Eg. \"42\". If there is no specific identifier, use `seatAssigment` instead."
        },
        "coach": {
          "type": "string",
          "description": "The identifier of the train car or coach in which the ticketed seat is located. Eg. \"10\""
        },
        "fareClass": {
          "description": "The fare class of the ticketed seat.",
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ECONOMY`. Deprecated.",
            "",
            "Legacy alias for `FIRST`. Deprecated.",
            "",
            "Legacy alias for `BUSINESS`. Deprecated."
          ],
          "enum": [
            "FARE_CLASS_UNSPECIFIED",
            "ECONOMY",
            "economy",
            "FIRST",
            "first",
            "BUSINESS",
            "business"
          ]
        }
      }
    },
    "EventVenue": {
      "properties": {
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventVenue\"`."
        },
        "name": {
          "description": "The name of the venue, such as \"AT&T Park\". This is required.",
          "$ref": "LocalizedString"
        },
        "address": {
          "$ref": "LocalizedString",
          "description": "The address of the venue, such as \"24 Willie Mays Plaza\\nSan Francisco, CA 94107\". Address lines are separated by line feed (`\\n`) characters. This is required."
        }
      },
      "id": "EventVenue",
      "type": "object"
    },
    "TransitClassListResponse": {
      "id": "TransitClassListResponse",
      "type": "object",
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "type": "array",
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "TransitClass"
          }
        }
      }
    },
    "GiftCardClassAddMessageResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "GiftCardClass",
          "description": "The updated GiftCardClass resource."
        }
      },
      "id": "GiftCardClassAddMessageResponse"
    },
    "LocalizedString": {
      "properties": {
        "translatedValues": {
          "description": "Contains the translations for the string.",
          "items": {
            "$ref": "TranslatedString"
          },
          "type": "array"
        },
        "defaultValue": {
          "description": "Contains the string to be displayed if no appropriate translation is available.",
          "$ref": "TranslatedString"
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
          "type": "string"
        }
      },
      "id": "LocalizedString",
      "type": "object"
    },
    "Permission": {
      "id": "Permission",
      "type": "object",
      "properties": {
        "emailAddress": {
          "description": "The email address of the user, group, or service account to which this permission refers to.",
          "type": "string"
        },
        "role": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "OWNER",
            "owner",
            "READER",
            "reader",
            "WRITER",
            "writer"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `OWNER`. Deprecated.",
            "",
            "Legacy alias for `READER`. Deprecated.",
            "",
            "Legacy alias for `WRITER`. Deprecated."
          ],
          "description": "The role granted by this permission."
        }
      }
    },
    "DateTime": {
      "type": "object",
      "properties": {
        "date": {
          "description": "An ISO 8601 extended format date/time. Offset may or may not be required (refer to the parent field's documentation). Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the date/time is intended for a physical location in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. Providing an offset makes this an absolute instant in time around the world. The date/time will be adjusted based on the user's time zone. For example, a time of `2018-06-19T18:30:00-04:00` will be 18:30:00 for a user in New York and 15:30:00 for a user in Los Angeles. Omitting the offset makes this a local date/time, representing several instants in time around the world. The date/time will always be in the user's current time zone. For example, a time of `2018-06-19T18:30:00` will be 18:30:00 for a user in New York and also 18:30:00 for a user in Los Angeles. This is useful when the same local date/time should apply to many physical locations across several time zones.",
          "type": "string"
        }
      },
      "id": "DateTime"
    },
    "ImageModuleData": {
      "id": "ImageModuleData",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with an image module. This field is here to enable ease of management of image modules."
        },
        "mainImage": {
          "description": "A 100% width image.",
          "$ref": "Image"
        }
      }
    },
    "PassConstraints": {
      "description": "Container for any constraints that may be placed on passes.",
      "id": "PassConstraints",
      "properties": {
        "screenshotEligibility": {
          "enum": [
            "SCREENSHOT_ELIGIBILITY_UNSPECIFIED",
            "ELIGIBLE",
            "INELIGIBLE"
          ],
          "type": "string",
          "description": "The screenshot eligibility for the pass.",
          "enumDescriptions": [
            "Default value, same as ELIGIBLE.",
            "Default behavior for all existing Passes if ScreenshotEligibility is not set. Allows screenshots to be taken on Android devices.",
            "Disallows screenshots to be taken on Android devices. Note that older versions of Wallet may still allow screenshots to be taken."
          ]
        },
        "nfcConstraint": {
          "type": "array",
          "items": {
            "enum": [
              "NFC_CONSTRAINT_UNSPECIFIED",
              "BLOCK_PAYMENT",
              "BLOCK_CLOSED_LOOP_TRANSIT"
            ],
            "type": "string",
            "enumDescriptions": [
              "Default value, no specified constraint.",
              "Payment cards will not be conveyed while the pass is open.",
              "Closed loop transit cards will not be conveyed while the pass is open."
            ]
          },
          "description": "The NFC constraints for the pass."
        }
      },
      "type": "object"
    },
    "BoardingAndSeatingPolicy": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#boardingAndSeatingPolicy\"`.",
          "deprecated": true
        },
        "boardingPolicy": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ZONE_BASED`. Deprecated.",
            "",
            "Legacy alias for `GROUP_BASED`. Deprecated.",
            "",
            "Legacy alias for `BOARDING_POLICY_OTHER`. Deprecated."
          ],
          "description": "Indicates the policy the airline uses for boarding. If unset, Google will default to `zoneBased`.",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "BOARDING_POLICY_UNSPECIFIED",
            "ZONE_BASED",
            "zoneBased",
            "GROUP_BASED",
            "groupBased",
            "BOARDING_POLICY_OTHER",
            "boardingPolicyOther"
          ]
        },
        "seatClassPolicy": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `CABIN_BASED`. Deprecated.",
            "",
            "Legacy alias for `CLASS_BASED`. Deprecated.",
            "",
            "Legacy alias for `TIER_BASED`. Deprecated.",
            "",
            "Legacy alias for `SEAT_CLASS_POLICY_OTHER`. Deprecated."
          ],
          "enum": [
            "SEAT_CLASS_POLICY_UNSPECIFIED",
            "CABIN_BASED",
            "cabinBased",
            "CLASS_BASED",
            "classBased",
            "TIER_BASED",
            "tierBased",
            "SEAT_CLASS_POLICY_OTHER",
            "seatClassPolicyOther"
          ],
          "description": "Seating policy which dictates how we display the seat class. If unset, Google will default to `cabinBased`."
        }
      },
      "id": "BoardingAndSeatingPolicy",
      "type": "object"
    },
    "DiscoverableProgram": {
      "id": "DiscoverableProgram",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "TRUSTED_TESTERS",
            "trustedTesters",
            "LIVE",
            "live",
            "DISABLED",
            "disabled"
          ],
          "enumDescriptions": [
            "",
            "Visible only to testers that have access to issuer account.",
            "Legacy alias for `TRUSTED_TESTERS`. Deprecated.",
            "Visible to all.",
            "Legacy alias for `LIVE`. Deprecated.",
            "Not visible.",
            "Legacy alias for `DISABLED`. Deprecated."
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "description": "Visibility state of the discoverable program."
        },
        "merchantSigninInfo": {
          "description": "Information about the ability to signin and add a valuable for this program through a merchant site. Used when MERCHANT_HOSTED_SIGNIN is enabled.",
          "$ref": "DiscoverableProgramMerchantSigninInfo"
        },
        "merchantSignupInfo": {
          "description": "Information about the ability to signup and add a valuable for this program through a merchant site. Used when MERCHANT_HOSTED_SIGNUP is enabled.",
          "$ref": "DiscoverableProgramMerchantSignupInfo"
        }
      },
      "description": "Information about how a class may be discovered and instantiated from within the Android Pay app. This is done by searching for a loyalty or gift card program and scanning or manually entering.",
      "type": "object"
    },
    "CardRowOneItem": {
      "properties": {
        "item": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed in the row. This item will be automatically centered."
        }
      },
      "id": "CardRowOneItem",
      "type": "object"
    },
    "GenericClass": {
      "description": "Generic Class",
      "type": "object",
      "properties": {
        "multipleDevicesAndHoldersAllowedStatus": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display."
        },
        "securityAnimation": {
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details.",
          "$ref": "SecurityAnimation"
        },
        "redemptionIssuers": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap."
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If `linksModuleData` is also defined on the object, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for the class. This ID must be unique across all from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`."
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If `textModulesData` is also defined on the object, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object.",
          "type": "array"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback."
        },
        "viewUnlockRequirement": {
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "description": "View Unlock Requirement options for the generic pass."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "imageModulesData": {
          "type": "array",
          "description": "Image module data. If `imageModulesData` is also defined on the object, both will be displayed. Only one of the image from class and one from object level will be rendered when both set.",
          "items": {
            "$ref": "ImageModuleData"
          }
        },
        "enableSmartTap": {
          "type": "boolean",
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance."
        }
      },
      "id": "GenericClass"
    },
    "TimeInterval": {
      "id": "TimeInterval",
      "properties": {
        "end": {
          "$ref": "DateTime",
          "description": "End time of the interval. Offset is not required. If an offset is provided and `start` time is set, `start` must also include an offset."
        },
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#timeInterval\"`."
        },
        "start": {
          "description": "Start time of the interval. Offset is not required. If an offset is provided and `end` time is set, `end` must also include an offset.",
          "$ref": "DateTime"
        }
      },
      "type": "object"
    },
    "DiscoverableProgramMerchantSigninInfo": {
      "description": "Information about the merchant hosted signin flow for a program.",
      "id": "DiscoverableProgramMerchantSigninInfo",
      "properties": {
        "signinWebsite": {
          "$ref": "Uri",
          "description": "The URL to direct the user to for the merchant's signin site."
        }
      },
      "type": "object"
    },
    "ModifyLinkedOfferObjectsRequest": {
      "id": "ModifyLinkedOfferObjectsRequest",
      "type": "object",
      "properties": {
        "linkedOfferObjectIds": {
          "description": "The linked offer object ids to add or remove from the object.",
          "$ref": "ModifyLinkedOfferObjects"
        }
      }
    },
    "EventTicketObject": {
      "properties": {
        "imageModulesData": {
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array",
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level."
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "linkedOfferIds": {
          "description": "A list of offer objects linked to this event ticket. The offer objects must already exist. Offer object IDs should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ticketNumber": {
          "description": "The number of the ticket. This can be a unique identifier across all tickets in an issuer's system, all tickets for the event (e.g. XYZ1234512345), or all tickets in the order (1, 2, 3, etc.).",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "type": "array"
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed.",
          "$ref": "Image"
        },
        "ticketType": {
          "$ref": "LocalizedString",
          "description": "The type of the ticket, such as \"Adult\" or \"Child\", or \"VIP\" or \"Standard\"."
        },
        "ticketHolderName": {
          "description": "Name of the ticket holder, if the ticket is assigned to a person. E.g. \"John Doe\" or \"Jane Doe\".",
          "type": "string"
        },
        "classId": {
          "type": "string",
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you."
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "version": {
          "description": "Deprecated",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "appLinkData": {
          "description": "Optional information about the partner app link.",
          "$ref": "AppLinkData"
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for offers.",
          "type": "boolean"
        },
        "state": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section.",
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "type": "string"
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed."
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        },
        "groupingInfo": {
          "description": "Information that controls how passes are grouped together.",
          "$ref": "GroupingInfo"
        },
        "faceValue": {
          "$ref": "Money",
          "description": "The face value of the ticket, matching what would be printed on a physical version of the ticket."
        },
        "rotatingBarcode": {
          "$ref": "RotatingBarcode",
          "description": "The rotating barcode type and value."
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both will be displayed."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "type": "array",
          "items": {
            "$ref": "Message"
          }
        },
        "reservationInfo": {
          "$ref": "EventReservationInfo",
          "description": "Reservation details for this ticket. This is expected to be shared amongst all tickets that were purchased in the same order."
        },
        "hasLinkedDevice": {
          "type": "boolean",
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information."
        },
        "seatInfo": {
          "$ref": "EventSeat",
          "description": "Seating details for this ticket."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventTicketObject\"`.",
          "deprecated": true
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`."
        },
        "classReference": {
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET.",
          "$ref": "EventTicketClass"
        },
        "smartTapRedemptionValue": {
          "type": "string",
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported."
        }
      },
      "type": "object",
      "id": "EventTicketObject"
    },
    "GenericObject": {
      "description": "Generic Object Next ID: 121",
      "properties": {
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you.",
          "type": "string"
        },
        "validTimeInterval": {
          "description": "The time period this object will be considered valid or usable. When the time period is passed, the object will be considered expired, which will affect the rendering on user's devices.",
          "$ref": "TimeInterval"
        },
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Information about the partner app link. The maximum number of these fields displayed is 10."
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set, the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used and if logo is not set, a color would be chosen by Google."
        },
        "smartTapRedemptionValue": {
          "type": "string",
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported."
        },
        "groupingInfo": {
          "$ref": "GroupingInfo",
          "description": "Information that controls how passes are grouped together."
        },
        "logo": {
          "$ref": "Image",
          "description": "The logo image of the pass. This image is displayed in the card detail view in upper left, and also on the list/thumbnail view. If the logo is not present, the first letter of `cardTitle` would be shown as logo."
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "genericType": {
          "type": "string",
          "description": "Specify which `GenericType` the card belongs to.",
          "enumDescriptions": [
            "Unspecified generic type.",
            "Season pass",
            "Utility bills",
            "Parking pass",
            "Voucher",
            "Gym membership cards",
            "Library membership cards",
            "Reservations",
            "Auto-insurance cards",
            "Home-insurance cards",
            "Entry tickets",
            "Receipts",
            "Other type"
          ],
          "enum": [
            "GENERIC_TYPE_UNSPECIFIED",
            "GENERIC_SEASON_PASS",
            "GENERIC_UTILITY_BILLS",
            "GENERIC_PARKING_PASS",
            "GENERIC_VOUCHER",
            "GENERIC_GYM_MEMBERSHIP",
            "GENERIC_LIBRARY_MEMBERSHIP",
            "GENERIC_RESERVATIONS",
            "GENERIC_AUTO_INSURANCE",
            "GENERIC_HOME_INSURANCE",
            "GENERIC_ENTRY_TICKET",
            "GENERIC_RECEIPT",
            "GENERIC_OTHER"
          ]
        },
        "wideLogo": {
          "$ref": "Image",
          "description": "The wide logo of the pass. When provided, this will be used in place of the logo in the top left of the card view."
        },
        "notifications": {
          "$ref": "Notifications",
          "description": "The notification settings that are enabled for this object."
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If `textModulesData` is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object.",
          "type": "array"
        },
        "subheader": {
          "$ref": "LocalizedString",
          "description": "The title label of the pass, such as location where this pass can be used. Appears right above the title in the title row in the pass detail view."
        },
        "heroImage": {
          "description": "Banner image displayed on the front of the card if present. The image will be displayed at 100% width.",
          "$ref": "Image"
        },
        "imageModulesData": {
          "type": "array",
          "description": "Image module data. Only one of the image from class and one from object level will be rendered when both set.",
          "items": {
            "$ref": "ImageModuleData"
          }
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`."
        },
        "header": {
          "description": "Required. The title of the pass, such as \"50% off coupon\" or \"Library card\" or \"Voucher\". This field is required and appears in the title row of the pass detail view.",
          "$ref": "LocalizedString"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If `linksModuleData` is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object."
        },
        "cardTitle": {
          "$ref": "LocalizedString",
          "description": "Required. The header of the pass. This is usually the Business name such as \"XXX Gym\", \"AAA Insurance\". This field is required and appears in the header row at the very top of the pass."
        },
        "rotatingBarcode": {
          "description": "The rotating barcode settings/details.",
          "$ref": "RotatingBarcode"
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value. If pass does not have a barcode, we can allow the issuer to set Barcode.alternate_text and display just that."
        },
        "state": {
          "type": "string",
          "description": "The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section. If this is not provided, the object would be considered `ACTIVE`.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ]
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        }
      },
      "id": "GenericObject",
      "type": "object"
    },
    "FieldSelector": {
      "description": "Custom field selector to use with field overrides.",
      "properties": {
        "fields": {
          "items": {
            "$ref": "FieldReference"
          },
          "type": "array",
          "description": "If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
        }
      },
      "id": "FieldSelector",
      "type": "object"
    },
    "LoyaltyObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "infoModuleData": {
          "description": "Deprecated. Use textModulesData instead.",
          "$ref": "InfoModuleData"
        },
        "version": {
          "description": "Deprecated",
          "deprecated": true,
          "format": "int64",
          "type": "string"
        },
        "passConstraints": {
          "$ref": "PassConstraints",
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors."
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications."
        },
        "messages": {
          "type": "array",
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          }
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information.",
          "type": "boolean"
        },
        "linkedOfferIds": {
          "type": "array",
          "description": "A list of offer objects linked to this loyalty card. The offer objects must already exist. Offer object IDs should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you.",
          "items": {
            "type": "string"
          }
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section.",
          "type": "string"
        },
        "appLinkData": {
          "description": "Optional information about the partner app link.",
          "$ref": "AppLinkData"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed."
        },
        "imageModulesData": {
          "type": "array",
          "items": {
            "$ref": "ImageModuleData"
          },
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level."
        },
        "linksModuleData": {
          "description": "Links module data. If links module data is also defined on the class, both will be displayed.",
          "$ref": "LinksModuleData"
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#loyaltyObject\"`.",
          "type": "string",
          "deprecated": true
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array"
        },
        "rotatingBarcode": {
          "description": "The rotating barcode type and value.",
          "$ref": "RotatingBarcode"
        },
        "accountId": {
          "type": "string",
          "description": "The loyalty account identifier. Recommended maximum length is 20 characters."
        },
        "smartTapRedemptionValue": {
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported. If this value is not set but the class level fields `enableSmartTap` and `redemptionIssuers` are set up correctly, the `barcode.value` or the `accountId` fields are used as fallback if present.",
          "type": "string"
        },
        "secondaryLoyaltyPoints": {
          "description": "The secondary loyalty reward points label, balance, and type. Shown in addition to the primary loyalty points.",
          "$ref": "LoyaltyPoints"
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for offers.",
          "type": "boolean"
        },
        "loyaltyPoints": {
          "description": "The loyalty reward points label, balance, and type.",
          "$ref": "LoyaltyPoints"
        },
        "barcode": {
          "description": "The barcode type and value.",
          "$ref": "Barcode"
        },
        "classReference": {
          "$ref": "LoyaltyClass",
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET."
        },
        "groupingInfo": {
          "description": "Information that controls how passes are grouped together.",
          "$ref": "GroupingInfo"
        },
        "accountName": {
          "description": "The loyalty account holder name, such as \"John Smith.\" Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed."
        }
      },
      "id": "LoyaltyObject"
    },
    "EventSeat": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventSeat\"`."
        },
        "seat": {
          "description": "The seat number, such as \"1\", \"2\", \"3\", or any other seat identifier. This field is localizable so you may translate words or use different alphabets for the characters in an identifier.",
          "$ref": "LocalizedString"
        },
        "section": {
          "$ref": "LocalizedString",
          "description": "The section of the seat, such as \"121\". This field is localizable so you may translate words or use different alphabets for the characters in an identifier."
        },
        "gate": {
          "description": "The gate the ticket holder should enter to get to their seat, such as \"A\" or \"West\". This field is localizable so you may translate words or use different alphabets for the characters in an identifier.",
          "$ref": "LocalizedString"
        },
        "row": {
          "$ref": "LocalizedString",
          "description": "The row of the seat, such as \"1\", E\", \"BB\", or \"A5\". This field is localizable so you may translate words or use different alphabets for the characters in an identifier."
        }
      },
      "id": "EventSeat"
    },
    "AppLinkData": {
      "type": "object",
      "id": "AppLinkData",
      "properties": {
        "webAppLinkInfo": {
          "$ref": "AppLinkDataAppLinkInfo",
          "description": "Optional information about the partner app link. If included, the app link link module will be rendered on the valuable details on the web client."
        },
        "androidAppLinkInfo": {
          "description": "Optional information about the partner app link. If included, the app link link module will be rendered on the valuable details on the android client.",
          "$ref": "AppLinkDataAppLinkInfo"
        },
        "iosAppLinkInfo": {
          "$ref": "AppLinkDataAppLinkInfo",
          "description": "Optional information about the partner app link. If included, the app link link module will be rendered on the valuable details on the ios client."
        }
      }
    },
    "LatLongPoint": {
      "type": "object",
      "properties": {
        "longitude": {
          "format": "double",
          "description": "The longitude specified in the range -180.0 through +180.0, both inclusive. Values outside these bounds will be rejected.",
          "type": "number"
        },
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#latLongPoint\"`."
        },
        "latitude": {
          "description": "The latitude specified as any value in the range of -90.0 through +90.0, both inclusive. Values outside these bounds will be rejected.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "LatLongPoint"
    },
    "ContentTypeInfo": {
      "properties": {
        "fromUrlPath": {
          "type": "string",
          "description": "The content type of the file derived from the file extension of the URL path. The URL path is assumed to represent a file name (which is typically only true for agents that are providing a REST API)."
        },
        "fromFileName": {
          "description": "The content type of the file derived from the file extension of the original file name used by the client.",
          "type": "string"
        },
        "bestGuess": {
          "type": "string",
          "description": "Scotty's best guess of what the content type of the file is."
        },
        "fromBytes": {
          "type": "string",
          "description": "The content type of the file derived by looking at specific bytes (i.e. \"magic bytes\") of the actual file."
        },
        "fromHeader": {
          "type": "string",
          "description": "The content type of the file as specified in the request headers, multipart headers, or RUPIO start request."
        }
      },
      "type": "object",
      "description": "Detailed Content-Type information from Scotty. The Content-Type of the media will typically be filled in by the header or Scotty's best_guess, but this extended information provides the backend with more information so that it can make a better decision if needed. This is only used on media upload requests from Scotty.",
      "id": "ContentTypeInfo"
    },
    "UpcomingNotification": {
      "id": "UpcomingNotification",
      "type": "object",
      "description": "Indicates that the issuer would like Google Wallet to send an upcoming card validity notification 1 day before card becomes valid/usable.",
      "properties": {
        "enableNotification": {
          "type": "boolean",
          "description": "Indicates if the object needs to have upcoming notification enabled."
        }
      }
    },
    "EventTicketObjectListResponse": {
      "id": "EventTicketObjectListResponse",
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "items": {
            "$ref": "EventTicketObject"
          },
          "type": "array",
          "description": "Resources corresponding to the list request."
        }
      }
    },
    "Message": {
      "properties": {
        "localizedHeader": {
          "description": "Translated strings for the message header.",
          "$ref": "LocalizedString"
        },
        "id": {
          "type": "string",
          "description": "The ID associated with a message. This field is here to enable ease of management of messages. Notice ID values could possibly duplicate across multiple messages in the same class/instance, and care must be taken to select a reasonable ID for each message."
        },
        "messageType": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "Renders the message as text on the card details screen. This is the default message type.",
            "Legacy alias for `TEXT`. Deprecated.",
            "Note: This enum is currently not supported.",
            "Legacy alias for `EXPIRATION_NOTIFICATION`. Deprecated."
          ],
          "description": "The message type.",
          "enum": [
            "MESSAGE_TYPE_UNSPECIFIED",
            "TEXT",
            "text",
            "EXPIRATION_NOTIFICATION",
            "expirationNotification"
          ],
          "type": "string"
        },
        "localizedBody": {
          "description": "Translated strings for the message body.",
          "$ref": "LocalizedString"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#walletObjectMessage\"`.",
          "deprecated": true
        },
        "body": {
          "type": "string",
          "description": "The message body."
        },
        "displayInterval": {
          "$ref": "TimeInterval",
          "description": "The period of time that the message will be displayed to users. You can define both a `startTime` and `endTime` for each message. A message is displayed immediately after a Wallet Object is inserted unless a `startTime` is set. The message will appear in a list of messages indefinitely if `endTime` is not provided."
        },
        "header": {
          "description": "The message header.",
          "type": "string"
        }
      },
      "id": "Message",
      "description": "A message that will be displayed with a Valuable",
      "type": "object"
    },
    "Media": {
      "properties": {
        "objectId": {
          "$ref": "ObjectId",
          "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."
        },
        "hash": {
          "deprecated": true,
          "description": "Deprecated, use one of explicit hash type fields instead. These two hash related fields will only be populated on Scotty based media uploads and will contain the content of the hash group in the NotificationRequest: http://cs/#google3/uploader/service/proto/upload_listener.proto&q=class:Hash Hex encoded hash value of the uploaded media.",
          "type": "string"
        },
        "length": {
          "description": "Size of the data, in bytes",
          "type": "string",
          "format": "int64"
        },
        "blobRef": {
          "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.",
          "format": "byte",
          "type": "string",
          "deprecated": true
        },
        "diffDownloadResponse": {
          "$ref": "DiffDownloadResponse",
          "description": "Set if reference_type is DIFF_DOWNLOAD_RESPONSE."
        },
        "referenceType": {
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "GET_MEDIA",
            "COMPOSITE_MEDIA",
            "BIGSTORE_REF",
            "DIFF_VERSION_RESPONSE",
            "DIFF_CHECKSUMS_RESPONSE",
            "DIFF_DOWNLOAD_RESPONSE",
            "DIFF_UPLOAD_REQUEST",
            "DIFF_UPLOAD_RESPONSE",
            "COSMO_BINARY_REFERENCE",
            "ARBITRARY_BYTES"
          ],
          "type": "string",
          "enumDescriptions": [
            "Reference contains a GFS path or a local path.",
            "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated.",
            "Data is included into this proto buffer",
            "Data should be accessed from the current service using the operation GetMedia.",
            "The content for this media object is stored across multiple partial media objects under the composite_media field.",
            "Reference points to a bigstore object",
            "Indicates the data is stored in diff_version_response.",
            "Indicates the data is stored in diff_checksums_response.",
            "Indicates the data is stored in diff_download_response.",
            "Indicates the data is stored in diff_upload_request.",
            "Indicates the data is stored in diff_upload_response.",
            "Indicates the data is stored in cosmo_binary_reference.",
            "Informs Scotty to generate a response payload with the size specified in the length field. The contents of the payload are generated by Scotty and are undefined. This is useful for testing download speeds between the user and Scotty without involving a real payload source. Note: range is not supported when using arbitrary_bytes."
          ],
          "description": "Describes what the field reference contains."
        },
        "sha1Hash": {
          "description": "Scotty-provided SHA1 hash for an upload.",
          "type": "string",
          "format": "byte"
        },
        "filename": {
          "type": "string",
          "description": "Original file name"
        },
        "sha256Hash": {
          "description": "Scotty-provided SHA256 hash for an upload.",
          "type": "string",
          "format": "byte"
        },
        "md5Hash": {
          "description": "Scotty-provided MD5 hash for an upload.",
          "type": "string",
          "format": "byte"
        },
        "contentTypeInfo": {
          "$ref": "ContentTypeInfo",
          "description": "Extended content type information provided for Scotty uploads."
        },
        "token": {
          "description": "A unique fingerprint/version id for the media data",
          "type": "string"
        },
        "inline": {
          "description": "Media data, set if reference_type is INLINE",
          "type": "string",
          "format": "byte"
        },
        "algorithm": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated, use one of explicit hash type fields instead. Algorithm used for calculating the hash. As of 2011/01/21, \"MD5\" is the only possible value for this field. New values may be added at any time."
        },
        "bigstoreObjectRef": {
          "type": "string",
          "description": "Use object_id instead.",
          "format": "byte",
          "deprecated": true
        },
        "diffChecksumsResponse": {
          "description": "Set if reference_type is DIFF_CHECKSUMS_RESPONSE.",
          "$ref": "DiffChecksumsResponse"
        },
        "hashVerified": {
          "type": "boolean",
          "description": "For Scotty uploads only. If a user sends a hash code and the backend has requested that Scotty verify the upload against the client hash, Scotty will perform the check on behalf of the backend and will reject it if the hashes don't match. This is set to true if Scotty performed this verification."
        },
        "downloadParameters": {
          "description": "Parameters for a media download.",
          "$ref": "DownloadParameters"
        },
        "blobstore2Info": {
          "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob.",
          "$ref": "Blobstore2Info"
        },
        "diffUploadRequest": {
          "description": "Set if reference_type is DIFF_UPLOAD_REQUEST.",
          "$ref": "DiffUploadRequest"
        },
        "crc32cHash": {
          "type": "integer",
          "format": "uint32",
          "description": "For Scotty Uploads: Scotty-provided hashes for uploads For Scotty Downloads: (WARNING: DO NOT USE WITHOUT PERMISSION FROM THE SCOTTY TEAM.) A Hash provided by the agent to be used to verify the data being downloaded. Currently only supported for inline payloads. Further, only crc32c_hash is currently supported."
        },
        "compositeMedia": {
          "items": {
            "$ref": "CompositeMedia"
          },
          "type": "array",
          "description": "A composite media composed of one or more media objects, set if reference_type is COMPOSITE_MEDIA. The media length field must be set to the sum of the lengths of all composite media objects. Note: All composite media must have length specified."
        },
        "mediaId": {
          "format": "byte",
          "type": "string",
          "description": "Media id to forward to the operation GetMedia. Can be set if reference_type is GET_MEDIA."
        },
        "path": {
          "type": "string",
          "description": "Path to the data, set if reference_type is PATH"
        },
        "contentType": {
          "description": "MIME type of the data",
          "type": "string"
        },
        "diffVersionResponse": {
          "$ref": "DiffVersionResponse",
          "description": "Set if reference_type is DIFF_VERSION_RESPONSE."
        },
        "isPotentialRetry": {
          "type": "boolean",
          "description": "|is_potential_retry| is set false only when Scotty is certain that it has not sent the request before. When a client resumes an upload, this field must be set true in agent calls, because Scotty cannot be certain that it has never sent the request before due to potential failure in the session state persistence."
        },
        "timestamp": {
          "type": "string",
          "format": "uint64",
          "description": "Time at which the media data was last updated, in milliseconds since UNIX epoch"
        },
        "diffUploadResponse": {
          "$ref": "DiffUploadResponse",
          "description": "Set if reference_type is DIFF_UPLOAD_RESPONSE."
        },
        "cosmoBinaryReference": {
          "description": "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.",
          "type": "string",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "A reference to data stored on the filesystem, on GFS or in blobstore.",
      "id": "Media"
    },
    "IssuerListResponse": {
      "type": "object",
      "id": "IssuerListResponse",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Issuer"
          },
          "description": "Resources corresponding to the list request."
        }
      }
    },
    "TransitObjectAddMessageResponse": {
      "id": "TransitObjectAddMessageResponse",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The updated TransitObject resource.",
          "$ref": "TransitObject"
        }
      }
    },
    "DetailsTemplateOverride": {
      "id": "DetailsTemplateOverride",
      "type": "object",
      "properties": {
        "detailsItemInfos": {
          "description": "Information for the \"nth\" item displayed in the details list.",
          "type": "array",
          "items": {
            "$ref": "DetailsItemInfo"
          }
        }
      }
    },
    "ActivationStatus": {
      "properties": {
        "state": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "Not-Activated, this is the default status",
            "Legacy alias for `NOT_ACTIVATED`. Deprecated.",
            "Activated",
            "Legacy alias for `ACTIVATED`. Deprecated."
          ],
          "enum": [
            "UNKNOWN_STATE",
            "NOT_ACTIVATED",
            "not_activated",
            "ACTIVATED",
            "activated"
          ]
        }
      },
      "id": "ActivationStatus",
      "type": "object",
      "description": "The activation status of the object. This field includes activation status if valuable supports activation."
    },
    "LoyaltyObjectAddMessageResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "LoyaltyObject",
          "description": "The updated LoyaltyObject resource."
        }
      },
      "id": "LoyaltyObjectAddMessageResponse"
    },
    "ModifyLinkedOfferObjects": {
      "properties": {
        "removeLinkedOfferObjectIds": {
          "description": "The linked offer object ids to remove from the object.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "addLinkedOfferObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The linked offer object ids to add to the object."
        }
      },
      "type": "object",
      "id": "ModifyLinkedOfferObjects"
    },
    "EventTicketClass": {
      "type": "object",
      "properties": {
        "localizedIssuerName": {
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "reviewStatus": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "type": "string",
          "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ]
        },
        "wideLogo": {
          "$ref": "Image",
          "description": "The wide logo of the ticket. When provided, this will be used in place of the logo in the top left of the card view."
        },
        "homepageUri": {
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object).",
          "$ref": "Uri"
        },
        "callbackOptions": {
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback.",
          "$ref": "CallbackOptions"
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display."
        },
        "customRowLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the row value (`eventTicketObject.seatInfo.row`) on the card detail view. This should only be used if the default \"Row\" label or one of the `rowLabel` options is not sufficient. Both `rowLabel` and `customRowLabel` may not be set. If neither is set, the label will default to \"Row\", localized. If the row field is unset, this label will not be used."
        },
        "eventName": {
          "$ref": "LocalizedString",
          "description": "Required. The name of the event, such as \"LA Dodgers at SF Giants\"."
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width.",
          "$ref": "Image"
        },
        "infoModuleData": {
          "description": "Deprecated. Use textModulesData instead.",
          "$ref": "InfoModuleData",
          "deprecated": true
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both will be displayed."
        },
        "customGateLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the gate value (`eventTicketObject.seatInfo.gate`) on the card detail view. This should only be used if the default \"Gate\" label or one of the `gateLabel` options is not sufficient. Both `gateLabel` and `customGateLabel` may not be set. If neither is set, the label will default to \"Gate\", localized. If the gate field is unset, this label will not be used."
        },
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
          "type": "boolean",
          "deprecated": true
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications."
        },
        "customConfirmationCodeLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the confirmation code value (`eventTicketObject.reservationInfo.confirmationCode`) on the card detail view. This should only be used if the default \"Confirmation Code\" label or one of the `confirmationCodeLabel` options is not sufficient. Both `confirmationCodeLabel` and `customConfirmationCodeLabel` may not be set. If neither is set, the label will default to \"Confirmation Code\", localized. If the confirmation code field is unset, this label will not be used."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "textModulesData": {
          "type": "array",
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "sectionLabel": {
          "enum": [
            "SECTION_LABEL_UNSPECIFIED",
            "SECTION",
            "section",
            "THEATER",
            "theater"
          ],
          "description": "The label to use for the section value (`eventTicketObject.seatInfo.section`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `sectionLabel` and `customSectionLabel` may not be set. If neither is set, the label will default to \"Section\", localized. If the section field is unset, this label will not be used.",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SECTION`. Deprecated.",
            "",
            "Legacy alias for `THEATER`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "type": "string"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class."
        },
        "eventId": {
          "description": "The ID of the event. This ID should be unique for every event in an account. It is used to group tickets together if the user has saved multiple tickets for the same event. It can be at most 64 characters. If provided, the grouping will be stable. Be wary of unintentional collision to avoid grouping tickets that should not be grouped. If you use only one class per event, you can simply set this to the `classId` (with or without the issuer ID portion). If not provided, the platform will attempt to use other data to group tickets (potentially unstable).",
          "type": "string"
        },
        "dateTime": {
          "$ref": "EventDateTime",
          "description": "The date & time information of the event."
        },
        "wordMark": {
          "deprecated": true,
          "$ref": "Image",
          "description": "Deprecated."
        },
        "customSeatLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the seat value (`eventTicketObject.seatInfo.seat`) on the card detail view. This should only be used if the default \"Seat\" label or one of the `seatLabel` options is not sufficient. Both `seatLabel` and `customSeatLabel` may not be set. If neither is set, the label will default to \"Seat\", localized. If the seat field is unset, this label will not be used."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
          "type": "string"
        },
        "seatLabel": {
          "description": "The label to use for the seat value (`eventTicketObject.seatInfo.seat`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `seatLabel` and `customSeatLabel` may not be set. If neither is set, the label will default to \"Seat\", localized. If the seat field is unset, this label will not be used.",
          "enum": [
            "SEAT_LABEL_UNSPECIFIED",
            "SEAT",
            "seat"
          ],
          "enumDeprecated": [
            false,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SEAT`. Deprecated."
          ],
          "type": "string"
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "customSectionLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the section value (`eventTicketObject.seatInfo.section`) on the card detail view. This should only be used if the default \"Section\" label or one of the `sectionLabel` options is not sufficient. Both `sectionLabel` and `customSectionLabel` may not be set. If neither is set, the label will default to \"Section\", localized. If the section field is unset, this label will not be used."
        },
        "gateLabel": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "GATE_LABEL_UNSPECIFIED",
            "GATE",
            "gate",
            "DOOR",
            "door",
            "ENTRANCE",
            "entrance"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `GATE`. Deprecated.",
            "",
            "Legacy alias for `DOOR`. Deprecated.",
            "",
            "Legacy alias for `ENTRANCE`. Deprecated."
          ],
          "description": "The label to use for the gate value (`eventTicketObject.seatInfo.gate`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `gateLabel` and `customGateLabel` may not be set. If neither is set, the label will default to \"Gate\", localized. If the gate field is unset, this label will not be used.",
          "type": "string"
        },
        "logo": {
          "description": "The logo image of the ticket. This image is displayed in the card detail view of the app.",
          "$ref": "Image"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventTicketClass\"`.",
          "deprecated": true
        },
        "venue": {
          "description": "Event venue details.",
          "$ref": "EventVenue"
        },
        "version": {
          "description": "Deprecated",
          "type": "string",
          "format": "int64",
          "deprecated": true
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "confirmationCodeLabel": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `CONFIRMATION_CODE`. Deprecated.",
            "",
            "Legacy alias for `CONFIRMATION_NUMBER`. Deprecated.",
            "",
            "Legacy alias for `ORDER_NUMBER`. Deprecated.",
            "",
            "Legacy alias for `RESERVATION_NUMBER`. Deprecated."
          ],
          "description": "The label to use for the confirmation code value (`eventTicketObject.reservationInfo.confirmationCode`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `confirmationCodeLabel` and `customConfirmationCodeLabel` may not be set. If neither is set, the label will default to \"Confirmation Code\", localized. If the confirmation code field is unset, this label will not be used.",
          "enum": [
            "CONFIRMATION_CODE_LABEL_UNSPECIFIED",
            "CONFIRMATION_CODE",
            "confirmationCode",
            "CONFIRMATION_NUMBER",
            "confirmationNumber",
            "ORDER_NUMBER",
            "orderNumber",
            "RESERVATION_NUMBER",
            "reservationNumber"
          ]
        },
        "enableSmartTap": {
          "type": "boolean",
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
          "type": "string"
        },
        "redemptionIssuers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap."
        },
        "finePrint": {
          "$ref": "LocalizedString",
          "description": "The fine print, terms, or conditions of the ticket."
        },
        "review": {
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`.",
          "$ref": "Review"
        },
        "rowLabel": {
          "enum": [
            "ROW_LABEL_UNSPECIFIED",
            "ROW",
            "row"
          ],
          "enumDeprecated": [
            false,
            false,
            true
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ROW`. Deprecated."
          ],
          "description": "The label to use for the row value (`eventTicketObject.seatInfo.row`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `rowLabel` and `customRowLabel` may not be set. If neither is set, the label will default to \"Row\", localized. If the row field is unset, this label will not be used."
        },
        "viewUnlockRequirement": {
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ],
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "description": "View Unlock Requirement options for the event ticket.",
          "type": "string"
        },
        "securityAnimation": {
          "$ref": "SecurityAnimation",
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details."
        }
      },
      "id": "EventTicketClass"
    },
    "Uri": {
      "type": "object",
      "id": "Uri",
      "properties": {
        "description": {
          "type": "string",
          "description": "The URI's title appearing in the app as text. Recommended maximum is 20 characters to ensure full string is displayed on smaller screens. Note that in some contexts this text is not used, such as when `description` is part of an image."
        },
        "localizedDescription": {
          "description": "Translated strings for the description. Recommended maximum is 20 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "id": {
          "description": "The ID associated with a uri. This field is here to enable ease of management of uris.",
          "type": "string"
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#uri\"`.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The location of a web page, image, or other resource. URIs in the `LinksModuleData` module can have different prefixes indicating the type of URI (a link to a web page, a link to a map, a telephone number, or an email address). URIs must have a scheme."
        }
      }
    },
    "DiffUploadRequest": {
      "id": "DiffUploadRequest",
      "description": "A Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "type": "object",
      "properties": {
        "checksumsInfo": {
          "description": "The location of the checksums for the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received. For details on the format of the checksums, see http://go/scotty-diff-protocol.",
          "$ref": "CompositeMedia"
        },
        "objectVersion": {
          "description": "The object version of the object that is the base version the incoming diff script will be applied to. This field will always be filled in.",
          "type": "string"
        },
        "objectInfo": {
          "description": "The location of the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received.",
          "$ref": "CompositeMedia"
        }
      }
    },
    "EventTicketObjectAddMessageResponse": {
      "type": "object",
      "id": "EventTicketObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "EventTicketObject",
          "description": "The updated EventTicketObject resource."
        }
      }
    },
    "IssuerToUserInfo": {
      "properties": {
        "url": {
          "description": "Currently not used, consider deprecating.",
          "type": "string"
        },
        "value": {
          "description": "JSON web token for action S2AP.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "ACTION_UNSPECIFIED",
            "S2AP",
            "s2ap",
            "SIGN_UP",
            "signUp"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `S2AP`. Deprecated.",
            "",
            "Legacy alias for `SIGN_UP`. Deprecated."
          ]
        },
        "signUpInfo": {
          "$ref": "SignUpInfo"
        }
      },
      "id": "IssuerToUserInfo",
      "type": "object"
    },
    "FlightHeader": {
      "properties": {
        "flightNumberDisplayOverride": {
          "description": "Override value to use for flight number. The default value used for display purposes is carrier + flight_number. If a different value needs to be shown to passengers, use this field to override the default behavior. eg: \"XX1234 / YY576\"",
          "type": "string"
        },
        "operatingFlightNumber": {
          "description": "The flight number used by the operating carrier without IATA carrier code. This field should contain only digits. eg: \"234\"",
          "type": "string"
        },
        "flightNumber": {
          "description": "The flight number without IATA carrier code. This field should contain only digits. This is a required property of `flightHeader`. eg: \"123\"",
          "type": "string"
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#flightHeader\"`.",
          "type": "string"
        },
        "operatingCarrier": {
          "description": "Information about operating airline carrier.",
          "$ref": "FlightCarrier"
        },
        "carrier": {
          "$ref": "FlightCarrier",
          "description": "Information about airline carrier. This is a required property of `flightHeader`."
        }
      },
      "id": "FlightHeader",
      "type": "object"
    },
    "GenericClassAddMessageResponse": {
      "description": "Response to adding a new issuer message to the class. This contains the entire updated GenericClass.",
      "properties": {
        "resource": {
          "$ref": "GenericClass",
          "description": "The updated EventTicketClass resource."
        }
      },
      "type": "object",
      "id": "GenericClassAddMessageResponse"
    },
    "AuthenticationKey": {
      "type": "object",
      "id": "AuthenticationKey",
      "properties": {
        "publicKeyPem": {
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance."
        }
      }
    },
    "BoardingAndSeatingInfo": {
      "type": "object",
      "properties": {
        "boardingPosition": {
          "description": "The value of boarding position. eg: \"76\"",
          "type": "string"
        },
        "seatNumber": {
          "description": "The value of passenger seat. If there is no specific identifier, use `seatAssignment` instead. eg: \"25A\"",
          "type": "string"
        },
        "boardingGroup": {
          "type": "string",
          "description": "The value of boarding group (or zone) this passenger shall board with. eg: \"B\" The label for this value will be determined by the `boardingPolicy` field in the `flightClass` referenced by this object."
        },
        "sequenceNumber": {
          "description": "The sequence number on the boarding pass. This usually matches the sequence in which the passengers checked in. Airline might use the number for manual boarding and bag tags. eg: \"49\"",
          "type": "string"
        },
        "seatAssignment": {
          "description": "The passenger's seat assignment. To be used when there is no specific identifier to use in `seatNumber`. eg: \"assigned at gate\"",
          "$ref": "LocalizedString"
        },
        "boardingDoor": {
          "enum": [
            "BOARDING_DOOR_UNSPECIFIED",
            "FRONT",
            "front",
            "BACK",
            "back"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `FRONT`. Deprecated.",
            "",
            "Legacy alias for `BACK`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "type": "string",
          "description": "Set this field only if this flight boards through more than one door or bridge and you want to explicitly print the door location on the boarding pass. Most airlines route their passengers to the right door or bridge by refering to doors/bridges by the `seatClass`. In those cases `boardingDoor` should not be set."
        },
        "seatClass": {
          "description": "The value of the seat class. eg: \"Economy\" or \"Economy Plus\"",
          "type": "string"
        },
        "boardingPrivilegeImage": {
          "description": "A small image shown above the boarding barcode. Airlines can use it to communicate any special boarding privileges. In the event the security program logo is also set, this image might be rendered alongside the logo for that security program.",
          "$ref": "Image"
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#boardingAndSeatingInfo\"`.",
          "type": "string"
        }
      },
      "id": "BoardingAndSeatingInfo"
    },
    "FrequentFlyerInfo": {
      "type": "object",
      "id": "FrequentFlyerInfo",
      "properties": {
        "frequentFlyerNumber": {
          "description": "Frequent flyer number. Required for each nested object of kind `walletobjects#frequentFlyerInfo`.",
          "type": "string"
        },
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#frequentFlyerInfo\"`."
        },
        "frequentFlyerProgramName": {
          "$ref": "LocalizedString",
          "description": "Frequent flyer program name. eg: \"Lufthansa Miles & More\""
        }
      }
    },
    "RotatingBarcodeTotpDetailsTotpParameters": {
      "type": "object",
      "description": "Configuration for the key and value length. See https://www.rfc-editor.org/rfc/rfc4226#section-5.3",
      "properties": {
        "key": {
          "type": "string",
          "description": "The secret key used for the TOTP value generation, encoded as a Base16 string."
        },
        "valueLength": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the TOTP value in decimal digits."
        }
      },
      "id": "RotatingBarcodeTotpDetailsTotpParameters"
    },
    "GiftCardObjectListResponse": {
      "id": "GiftCardObjectListResponse",
      "type": "object",
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "GiftCardObject"
          },
          "type": "array"
        }
      }
    },
    "InfoModuleData": {
      "id": "InfoModuleData",
      "type": "object",
      "properties": {
        "showLastUpdateTime": {
          "deprecated": true,
          "type": "boolean"
        },
        "labelValueRows": {
          "description": "A list of collections of labels and values. These will be displayed one after the other in a singular column.",
          "type": "array",
          "items": {
            "$ref": "LabelValueRow"
          }
        }
      }
    },
    "LabelValue": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "The label for a specific row and column. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout."
        },
        "localizedValue": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the value. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout."
        },
        "value": {
          "description": "The value for a specific row and column. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout.",
          "type": "string"
        },
        "localizedLabel": {
          "description": "Translated strings for the label. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout.",
          "$ref": "LocalizedString"
        }
      },
      "description": "A pair of text strings to be displayed in the details view. Note we no longer display LabelValue/LabelValueRow as a table, instead a list of items.",
      "id": "LabelValue"
    },
    "Image": {
      "id": "Image",
      "properties": {
        "contentDescription": {
          "$ref": "LocalizedString",
          "description": "Description of the image used for accessibility."
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
          "type": "string"
        },
        "sourceUri": {
          "description": "The URI for the image.",
          "$ref": "ImageUri"
        }
      },
      "type": "object",
      "description": "Wrapping type for Google hosted images. Next ID: 7"
    },
    "MediaRequestInfo": {
      "type": "object",
      "description": "Extra information added to operations that support Scotty media requests.",
      "id": "MediaRequestInfo",
      "properties": {
        "customData": {
          "description": "Data to be copied to backend requests. Custom data is returned to Scotty in the agent_state field, which Scotty will then provide in subsequent upload notifications.",
          "type": "string"
        },
        "totalBytes": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the file."
        },
        "requestReceivedParamsServingInfo": {
          "type": "string",
          "format": "byte",
          "description": "The partition of the Scotty server handling this request. type is uploader_service.RequestReceivedParamsServingInfo LINT.IfChange(request_received_params_serving_info_annotations) LINT.ThenChange()"
        },
        "notificationType": {
          "enumDescriptions": [
            "Such requests signals the start of a request containing media upload. Only the media field(s) in the inserted/updated resource are set. The response should either return an error or succeed. On success, responses don't need to contain anything.",
            "Such requests signals that the upload has progressed and that the backend might want to access the media file specified in relevant fields in the resource. Only the media field(s) in the inserted/updated resource are set. The response should either return an error or succeed. On success, responses don't need to contain anything.",
            "Such requests signals the end of a request containing media upload. END should be handled just like normal Insert/Upload requests, that is, they should process the request and return a complete resource in the response. Pointers to media data (a GFS path usually) appear in the relevant fields in the inserted/updated resource. See gdata.Media in data.proto.",
            "Such requests occur after an END and signal that the response has been sent back to the client. RESPONSE_SENT is only sent to the backend if it is configured to receive them. The response does not need to contain anything.",
            "Such requests indicate that an error occurred while processing the request. ERROR is only sent to the backend if it is configured to receive them. It is not guaranteed that all errors will result in this notification to the backend, even if the backend requests them. Since these requests are just for informational purposes, the response does not need to contain anything."
          ],
          "type": "string",
          "description": "The type of notification received from Scotty.",
          "enum": [
            "START",
            "PROGRESS",
            "END",
            "RESPONSE_SENT",
            "ERROR"
          ]
        },
        "finalStatus": {
          "format": "int32",
          "description": "The existence of the final_status field indicates that this is the last call to the agent for this request_id. http://google3/uploader/agent/scotty_agent.proto?l=737&rcl=347601929",
          "type": "integer"
        },
        "diffObjectVersion": {
          "description": "Set if the http request info is diff encoded. The value of this field is the version number of the base revision. This is corresponding to Apiary's mediaDiffObjectVersion (//depot/google3/java/com/google/api/server/media/variable/DiffObjectVersionVariable.java). See go/esf-scotty-diff-upload for more information.",
          "type": "string"
        },
        "currentBytes": {
          "format": "int64",
          "description": "The number of current bytes uploaded or downloaded.",
          "type": "string"
        },
        "totalBytesIsEstimated": {
          "type": "boolean",
          "description": "Whether the total bytes field contains an estimated data."
        },
        "requestId": {
          "type": "string",
          "description": "The Scotty request ID."
        }
      }
    },
    "CallbackOptions": {
      "type": "object",
      "id": "CallbackOptions",
      "properties": {
        "updateRequestUrl": {
          "description": "URL for the merchant endpoint that would be called to request updates. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Googlebot. Deprecated.",
          "type": "string",
          "deprecated": true
        },
        "url": {
          "description": "The HTTPS url configured by the merchant. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Googlebot.",
          "type": "string"
        }
      }
    },
    "EventTicketClassListResponse": {
      "id": "EventTicketClassListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "EventTicketClass"
          },
          "type": "array"
        },
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        }
      }
    },
    "GenericClassListResponse": {
      "type": "object",
      "id": "GenericClassListResponse",
      "properties": {
        "resources": {
          "items": {
            "$ref": "GenericClass"
          },
          "description": "Resources corresponding to the list request.",
          "type": "array"
        },
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        }
      },
      "description": "List response which contains the list of all generic classes for a given issuer ID."
    },
    "OfferClass": {
      "type": "object",
      "id": "OfferClass",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "allowMultipleUsersPerObject": {
          "deprecated": true,
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the offer, such as \"20% off any t-shirt.\" Recommended maximum length is 60 characters to ensure full string is displayed on smaller screens."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display."
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "deprecated": true,
          "description": "Deprecated. Use textModulesData instead."
        },
        "redemptionChannel": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "REDEMPTION_CHANNEL_UNSPECIFIED",
            "INSTORE",
            "instore",
            "ONLINE",
            "online",
            "BOTH",
            "both",
            "TEMPORARY_PRICE_REDUCTION",
            "temporaryPriceReduction"
          ],
          "type": "string",
          "description": "Required. The redemption channels applicable to this offer.",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `INSTORE`. Deprecated.",
            "",
            "Legacy alias for `ONLINE`. Deprecated.",
            "",
            "Legacy alias for `BOTH`. Deprecated.",
            "",
            "Legacy alias for `TEMPORARY_PRICE_REDUCTION`. Deprecated."
          ]
        },
        "homepageUri": {
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object).",
          "$ref": "Uri"
        },
        "localizedTitle": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the title. Recommended maximum length is 60 characters to ensure full string is displayed on smaller screens."
        },
        "shortTitle": {
          "description": "A shortened version of the title of the offer, such as \"20% off,\" shown to users as a quick reference to the offer contents. Recommended maximum length is 20 characters.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array",
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class."
        },
        "finePrint": {
          "type": "string",
          "description": "The fine print or terms of the offer, such as \"20% off any t-shirt at Adam's Apparel.\""
        },
        "wideTitleImage": {
          "description": "The wide title image of the offer. When provided, this will be used in place of the title image in the top left of the card view.",
          "$ref": "Image"
        },
        "localizedFinePrint": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the fine_print."
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width.",
          "$ref": "Image"
        },
        "kind": {
          "type": "string",
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#offerClass\"`."
        },
        "countryCode": {
          "type": "string",
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale."
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "type": "array",
          "items": {
            "$ref": "Message"
          }
        },
        "provider": {
          "type": "string",
          "description": "Required. The offer provider (either the aggregator name or merchant name). Recommended maximum length is 12 characters to ensure full string is displayed on smaller screens."
        },
        "localizedDetails": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the details."
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "Deprecated",
          "type": "string",
          "deprecated": true
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "details": {
          "type": "string",
          "description": "The details of the offer."
        },
        "enableSmartTap": {
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "type": "boolean"
        },
        "viewUnlockRequirement": {
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ],
          "description": "View Unlock Requirement options for the offer.",
          "type": "string",
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ]
        },
        "linksModuleData": {
          "description": "Links module data. If links module data is also defined on the object, both will be displayed.",
          "$ref": "LinksModuleData"
        },
        "reviewStatus": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ],
          "description": "Required. The status of the class. This field can be set to `draft` or The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "type": "string"
        },
        "localizedProvider": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the provider. Recommended maximum length is 12 characters to ensure full string is displayed on smaller screens."
        },
        "redemptionIssuers": {
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "wordMark": {
          "description": "Deprecated.",
          "deprecated": true,
          "$ref": "Image"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
          "type": "string"
        },
        "titleImage": {
          "description": "The title image of the offer. This image is displayed in both the details and list views of the app.",
          "$ref": "Image"
        },
        "helpUri": {
          "description": "The help link for the offer, such as `http://myownpersonaldomain.com/help`",
          "$ref": "Uri"
        },
        "localizedShortTitle": {
          "description": "Translated strings for the short title. Recommended maximum length is 20 characters.",
          "$ref": "LocalizedString"
        },
        "securityAnimation": {
          "$ref": "SecurityAnimation",
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens."
        }
      }
    },
    "DiffVersionResponse": {
      "type": "object",
      "properties": {
        "objectVersion": {
          "description": "The version of the object stored at the server.",
          "type": "string"
        },
        "objectSizeBytes": {
          "description": "The total size of the server object.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Backend response for a Diff get version response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "id": "DiffVersionResponse"
    },
    "GiftCardObjectAddMessageResponse": {
      "properties": {
        "resource": {
          "description": "The updated GiftCardObject resource.",
          "$ref": "GiftCardObject"
        }
      },
      "type": "object",
      "id": "GiftCardObjectAddMessageResponse"
    },
    "JwtInsertResponse": {
      "type": "object",
      "id": "JwtInsertResponse",
      "properties": {
        "resources": {
          "description": "Data that corresponds to the ids of the provided classes and objects in the JWT. resources will only include the non-empty arrays (i.e. if the JWT only includes eventTicketObjects, then that is the only field that will be present in resources).",
          "$ref": "Resources"
        },
        "saveUri": {
          "description": "A URI that, when opened, will allow the end user to save the object(s) identified in the JWT to their Google account.",
          "type": "string"
        }
      }
    },
    "DiffDownloadResponse": {
      "type": "object",
      "properties": {
        "objectLocation": {
          "description": "The original object location.",
          "$ref": "CompositeMedia"
        }
      },
      "id": "DiffDownloadResponse",
      "description": "Backend response for a Diff download response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol."
    },
    "FlightObject": {
      "type": "object",
      "id": "FlightObject",
      "properties": {
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for Flights.",
          "type": "boolean"
        },
        "securityProgramLogo": {
          "description": "An image for the security program that applies to the passenger.",
          "$ref": "Image"
        },
        "boardingAndSeatingInfo": {
          "$ref": "BoardingAndSeatingInfo",
          "description": "Passenger specific information about boarding and seating."
        },
        "validTimeInterval": {
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed.",
          "$ref": "TimeInterval"
        },
        "groupingInfo": {
          "description": "Information that controls how passes are grouped together.",
          "$ref": "GroupingInfo"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed."
        },
        "rotatingBarcode": {
          "description": "The rotating barcode type and value.",
          "$ref": "RotatingBarcode"
        },
        "state": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section.",
          "type": "string"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "version": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated",
          "format": "int64"
        },
        "classId": {
          "type": "string",
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you."
        },
        "passengerName": {
          "description": "Required. Passenger name as it would appear on the boarding pass. eg: \"Dave M Gahan\" or \"Gahan/Dave\" or \"GAHAN/DAVEM\"",
          "type": "string"
        },
        "hasLinkedDevice": {
          "type": "boolean",
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#flightObject\"`.",
          "deprecated": true,
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both will be displayed."
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        },
        "textModulesData": {
          "type": "array",
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class."
        },
        "classReference": {
          "$ref": "FlightClass",
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET."
        },
        "reservationInfo": {
          "$ref": "ReservationInfo",
          "description": "Required. Information about flight reservation."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "smartTapRedemptionValue": {
          "type": "string",
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported."
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "appLinkData": {
          "description": "Optional information about the partner app link.",
          "$ref": "AppLinkData"
        },
        "barcode": {
          "description": "The barcode type and value.",
          "$ref": "Barcode"
        },
        "imageModulesData": {
          "items": {
            "$ref": "ImageModuleData"
          },
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "type": "array"
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "type": "array"
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
          "type": "string"
        }
      }
    },
    "ReservationInfo": {
      "id": "ReservationInfo",
      "properties": {
        "eticketNumber": {
          "description": "E-ticket number.",
          "type": "string"
        },
        "confirmationCode": {
          "type": "string",
          "description": "Confirmation code needed to check into this flight. This is the number that the passenger would enter into a kiosk at the airport to look up the flight and print a boarding pass."
        },
        "frequentFlyerInfo": {
          "description": "Frequent flyer membership information.",
          "$ref": "FrequentFlyerInfo"
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#reservationInfo\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlightClass": {
      "id": "FlightClass",
      "properties": {
        "kind": {
          "type": "string",
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#flightClass\"`."
        },
        "localScheduledArrivalDateTime": {
          "description": "The scheduled time the aircraft plans to reach the destination gate (not the runway). Note: This field should not change too close to the flight time. For updates to departure times (delays, etc), please set `localEstimatedOrActualArrivalDateTime`. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on arrival airport. If this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object)."
        },
        "callbackOptions": {
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback.",
          "$ref": "CallbackOptions"
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
          "type": "string"
        },
        "destination": {
          "$ref": "AirportInfo",
          "description": "Required. Destination airport."
        },
        "messages": {
          "items": {
            "$ref": "Message"
          },
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "type": "array"
        },
        "redemptionIssuers": {
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "localBoardingDateTime": {
          "description": "The boarding time as it would be printed on the boarding pass. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on departure airport. If this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "classTemplateInfo": {
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display.",
          "$ref": "ClassTemplateInfo"
        },
        "flightStatus": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "type": "string",
          "enum": [
            "FLIGHT_STATUS_UNSPECIFIED",
            "SCHEDULED",
            "scheduled",
            "ACTIVE",
            "active",
            "LANDED",
            "landed",
            "CANCELLED",
            "cancelled",
            "REDIRECTED",
            "redirected",
            "DIVERTED",
            "diverted"
          ],
          "description": "Status of this flight. If unset, Google will compute status based on data from other sources, such as FlightStats, etc. Note: Google-computed status will not be returned in API responses.",
          "enumDescriptions": [
            "",
            "Flight is on time, early, or delayed.",
            "Legacy alias for `SCHEDULED`. Deprecated.",
            "Flight is in progress (taxiing, taking off, landing, airborne).",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "Flight landed at the original destination.",
            "Legacy alias for `LANDED`. Deprecated.",
            "Flight is cancelled.",
            "Legacy alias for `CANCELLED`. Deprecated.",
            "Flight is airborne but heading to a different airport than the original destination.",
            "Legacy alias for `REDIRECTED`. Deprecated.",
            "Flight has already landed at a different airport than the original destination.",
            "Legacy alias for `DIVERTED`. Deprecated."
          ]
        },
        "viewUnlockRequirement": {
          "description": "View Unlock Requirement options for the boarding pass.",
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "type": "string",
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ]
        },
        "localGateClosingDateTime": {
          "type": "string",
          "description": "The gate closing time as it would be printed on the boarding pass. Do not set this field if you do not want to print it in the boarding pass. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on departure airport."
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "type": "string"
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens."
        },
        "origin": {
          "$ref": "AirportInfo",
          "description": "Required. Origin airport."
        },
        "locations": {
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`."
        },
        "boardingAndSeatingPolicy": {
          "$ref": "BoardingAndSeatingPolicy",
          "description": "Policies for boarding and seating. These will inform which labels will be shown to users."
        },
        "localScheduledDepartureDateTime": {
          "type": "string",
          "description": "Required. The scheduled date and time when the aircraft is expected to depart the gate (not the runway) Note: This field should not change too close to the departure time. For updates to departure times (delays, etc), please set `localEstimatedOrActualDepartureDateTime`. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on departure airport."
        },
        "infoModuleData": {
          "description": "Deprecated. Use textModulesData instead.",
          "$ref": "InfoModuleData",
          "deprecated": true
        },
        "reviewStatus": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ]
        },
        "allowMultipleUsersPerObject": {
          "type": "boolean",
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
          "deprecated": true
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "languageOverride": {
          "description": "If this field is present, boarding passes served to a user's device will always be in this language. Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "localEstimatedOrActualArrivalDateTime": {
          "description": "The estimated time the aircraft plans to reach the destination gate (not the runway) or the actual time it reached the gate. This field should be set if at least one of the below is true: - It differs from the scheduled time. Google will use it to calculate the delay. - The aircraft already arrived at the gate. Google will use it to inform the user that the flight has arrived at the gate. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on arrival airport. If this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both will be displayed."
        },
        "enableSmartTap": {
          "type": "boolean",
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap."
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "wordMark": {
          "deprecated": true,
          "$ref": "Image",
          "description": "Deprecated."
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`."
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width.",
          "$ref": "Image"
        },
        "version": {
          "deprecated": true,
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "flightHeader": {
          "$ref": "FlightHeader",
          "description": "Required. Information about the flight carrier and number."
        },
        "localEstimatedOrActualDepartureDateTime": {
          "description": "The estimated time the aircraft plans to pull from the gate or the actual time the aircraft already pulled from the gate. Note: This is not the runway time. This field should be set if at least one of the below is true: - It differs from the scheduled time. Google will use it to calculate the delay. - The aircraft already pulled from the gate. Google will use it to inform the user when the flight actually departed. This is an ISO 8601 extended format date/time without an offset. Time may be specified up to millisecond precision. eg: `2027-03-05T06:30:00` This should be the local date/time at the airport (not a UTC time). Google will reject the request if UTC offset is provided. Time zones will be calculated by Google based on departure airport. If this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "securityAnimation": {
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details.",
          "$ref": "SecurityAnimation"
        }
      },
      "type": "object"
    },
    "EventDateTime": {
      "type": "object",
      "properties": {
        "doorsOpenLabel": {
          "description": "The label to use for the doors open value (`doorsOpen`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `doorsOpenLabel` and `customDoorsOpenLabel` may not be set. If neither is set, the label will default to \"Doors Open\", localized. If the doors open field is unset, this label will not be used.",
          "enum": [
            "DOORS_OPEN_LABEL_UNSPECIFIED",
            "DOORS_OPEN",
            "doorsOpen",
            "GATES_OPEN",
            "gatesOpen"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `DOORS_OPEN`. Deprecated.",
            "",
            "Legacy alias for `GATES_OPEN`. Deprecated."
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ]
        },
        "end": {
          "description": "The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventDateTime\"`.",
          "deprecated": true,
          "type": "string"
        },
        "doorsOpen": {
          "type": "string",
          "description": "The date/time when the doors open at the venue. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available."
        },
        "customDoorsOpenLabel": {
          "description": "A custom label to use for the doors open value (`doorsOpen`) on the card detail view. This should only be used if the default \"Doors Open\" label or one of the `doorsOpenLabel` options is not sufficient. Both `doorsOpenLabel` and `customDoorsOpenLabel` may not be set. If neither is set, the label will default to \"Doors Open\", localized. If the doors open field is unset, this label will not be used.",
          "$ref": "LocalizedString"
        },
        "start": {
          "type": "string",
          "description": "The date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available."
        }
      },
      "id": "EventDateTime"
    },
    "Resources": {
      "properties": {
        "eventTicketObjects": {
          "items": {
            "$ref": "EventTicketObject"
          },
          "type": "array"
        },
        "flightObjects": {
          "type": "array",
          "items": {
            "$ref": "FlightObject"
          }
        },
        "offerClasses": {
          "type": "array",
          "items": {
            "$ref": "OfferClass"
          }
        },
        "giftCardObjects": {
          "items": {
            "$ref": "GiftCardObject"
          },
          "type": "array"
        },
        "transitObjects": {
          "type": "array",
          "items": {
            "$ref": "TransitObject"
          }
        },
        "giftCardClasses": {
          "items": {
            "$ref": "GiftCardClass"
          },
          "type": "array"
        },
        "offerObjects": {
          "type": "array",
          "items": {
            "$ref": "OfferObject"
          }
        },
        "flightClasses": {
          "type": "array",
          "items": {
            "$ref": "FlightClass"
          }
        },
        "loyaltyClasses": {
          "items": {
            "$ref": "LoyaltyClass"
          },
          "type": "array"
        },
        "eventTicketClasses": {
          "items": {
            "$ref": "EventTicketClass"
          },
          "type": "array"
        },
        "transitClasses": {
          "type": "array",
          "items": {
            "$ref": "TransitClass"
          }
        },
        "loyaltyObjects": {
          "type": "array",
          "items": {
            "$ref": "LoyaltyObject"
          }
        }
      },
      "type": "object",
      "id": "Resources"
    },
    "FlightObjectAddMessageResponse": {
      "id": "FlightObjectAddMessageResponse",
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "FlightObject",
          "description": "The updated FlightObject resource."
        }
      }
    },
    "Notifications": {
      "properties": {
        "expiryNotification": {
          "$ref": "ExpiryNotification",
          "description": "A notification would be triggered at a specific time before the card expires."
        },
        "upcomingNotification": {
          "$ref": "UpcomingNotification",
          "description": "A notification would be triggered at a specific time before the card becomes usable."
        }
      },
      "description": "Indicates if the object needs to have notification enabled. We support only one of ExpiryNotification/UpcomingNotification. `expiryNotification` takes precedence over `upcomingNotification`. In other words if `expiryNotification` is set, we ignore the `upcomingNotification` field.",
      "type": "object",
      "id": "Notifications"
    },
    "RotatingBarcode": {
      "id": "RotatingBarcode",
      "type": "object",
      "properties": {
        "renderEncoding": {
          "enum": [
            "RENDER_ENCODING_UNSPECIFIED",
            "UTF_8"
          ],
          "description": "The render encoding for the barcode. When specified, barcode is rendered in the given encoding. Otherwise best known encoding is chosen by Google.",
          "type": "string",
          "enumDescriptions": [
            "",
            "UTF_8 encoding for barcodes. This is only supported for barcode type qrCode."
          ]
        },
        "totpDetails": {
          "$ref": "RotatingBarcodeTotpDetails",
          "description": "Details used to evaluate the {totp_value_n} substitutions."
        },
        "alternateText": {
          "description": "An optional text that will override the default text that shows under the barcode. This field is intended for a human readable equivalent of the barcode value, used when the barcode cannot be scanned.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true,
            true,
            false,
            true,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "BARCODE_TYPE_UNSPECIFIED",
            "AZTEC",
            "aztec",
            "CODE_39",
            "code39",
            "CODE_128",
            "code128",
            "CODABAR",
            "codabar",
            "DATA_MATRIX",
            "dataMatrix",
            "EAN_8",
            "ean8",
            "EAN_13",
            "ean13",
            "EAN13",
            "ITF_14",
            "itf14",
            "PDF_417",
            "pdf417",
            "PDF417",
            "QR_CODE",
            "qrCode",
            "qrcode",
            "UPC_A",
            "upcA",
            "TEXT_ONLY",
            "textOnly"
          ],
          "description": "The type of this barcode.",
          "enumDescriptions": [
            "",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `AZTEC`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODE_39`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODE_128`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `CODABAR`. Deprecated. Not supported for Rotating Barcodes.",
            "A 2D matrix barcode consisting of black and white. Cells or modules are arranged in either a square or rectangle. Not supported for Rotating Barcodes.",
            "Legacy alias for `DATA_MATRIX`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_8`. Deprecated. Not supported for Rotating Barcodes.",
            "Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_13`. Deprecated. Not supported for Rotating Barcodes.",
            "Legacy alias for `EAN_13`. Deprecated. Not supported for Rotating Barcodes.",
            "14 digit ITF code Not supported for Rotating Barcodes.",
            "Legacy alias for `ITF_14`. Deprecated. Not supported for Rotating Barcodes.",
            "Supported for Rotating Barcodes.",
            "Legacy alias for `PDF_417`. Deprecated.",
            "Legacy alias for `PDF_417`. Deprecated.",
            "Supported for Rotating Barcodes.",
            "Legacy alias for `QR_CODE`. Deprecated.",
            "Legacy alias for `QR_CODE`. Deprecated.",
            "11 or 12 digit codes Not supported for Rotating Barcodes.",
            "Legacy alias for `UPC_A`. Deprecated. Not supported for Rotating Barcodes.",
            "Renders the field as a text field. The `alternateText` field may not be used with a barcode of type `textOnly`. Not supported for Rotating Barcodes.",
            "Legacy alias for `TEXT_ONLY`. Deprecated. Not supported for Rotating Barcodes."
          ]
        },
        "valuePattern": {
          "description": "String encoded barcode value. This string supports the following substitutions: * {totp_value_n}: Replaced with the TOTP value (see TotpDetails.parameters). * {totp_timestamp_millis}: Replaced with the timestamp (millis since epoch) at which the barcode was generated. * {totp_timestamp_seconds}: Replaced with the timestamp (seconds since epoch) at which the barcode was generated.",
          "type": "string"
        },
        "showCodeText": {
          "$ref": "LocalizedString",
          "description": "Optional text that will be shown when the barcode is hidden behind a click action. This happens in cases where a pass has Smart Tap enabled. If not specified, a default is chosen by Google."
        },
        "initialRotatingBarcodeValues": {
          "description": "Input only. NOTE: This feature is only available for the transit vertical. Optional set of initial rotating barcode values. This allows a small subset of barcodes to be included with the object. Further rotating barcode values must be uploaded with the UploadRotatingBarcodeValues endpoint.",
          "$ref": "RotatingBarcodeValues"
        }
      }
    },
    "SignUpInfo": {
      "properties": {
        "classId": {
          "type": "string",
          "description": "ID of the class the user can sign up for."
        }
      },
      "id": "SignUpInfo",
      "type": "object"
    },
    "RotatingBarcodeTotpDetails": {
      "type": "object",
      "id": "RotatingBarcodeTotpDetails",
      "properties": {
        "periodMillis": {
          "description": "The time interval used for the TOTP value generation, in milliseconds.",
          "format": "int64",
          "type": "string"
        },
        "parameters": {
          "description": "The TOTP parameters for each of the {totp_value_*} substitutions. The TotpParameters at index n is used for the {totp_value_n} substitution.",
          "items": {
            "$ref": "RotatingBarcodeTotpDetailsTotpParameters"
          },
          "type": "array"
        },
        "algorithm": {
          "description": "The TOTP algorithm used to generate the OTP.",
          "enum": [
            "TOTP_ALGORITHM_UNSPECIFIED",
            "TOTP_SHA1"
          ],
          "enumDescriptions": [
            "",
            "TOTP algorithm from RFC 6238 with the SHA1 hash function"
          ],
          "type": "string"
        }
      },
      "description": "Configuration for the time-based OTP substitutions. See https://tools.ietf.org/html/rfc6238"
    },
    "TemplateItem": {
      "properties": {
        "secondValue": {
          "$ref": "FieldSelector",
          "description": "A reference to a field to display. This may only be populated if the `firstValue` field is populated."
        },
        "predefinedItem": {
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true
          ],
          "description": "A predefined item to display. Only one of `firstValue` or `predefinedItem` may be set.",
          "enum": [
            "PREDEFINED_ITEM_UNSPECIFIED",
            "FREQUENT_FLYER_PROGRAM_NAME_AND_NUMBER",
            "frequentFlyerProgramNameAndNumber",
            "FLIGHT_NUMBER_AND_OPERATING_FLIGHT_NUMBER",
            "flightNumberAndOperatingFlightNumber"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `FREQUENT_FLYER_PROGRAM_NAME_AND_NUMBER`. Deprecated.",
            "",
            "Legacy alias for `FLIGHT_NUMBER_AND_OPERATING_FLIGHT_NUMBER`. Deprecated."
          ]
        },
        "firstValue": {
          "description": "A reference to a field to display. If both `firstValue` and `secondValue` are populated, they will both appear as one item with a slash between them. For example, values A and B would be shown as \"A / B\".",
          "$ref": "FieldSelector"
        }
      },
      "type": "object",
      "id": "TemplateItem"
    },
    "TextModuleData": {
      "description": "Data for Text module. All fields are optional. Header will be displayed if available, different types of bodies will be concatenated if they are defined.",
      "properties": {
        "header": {
          "type": "string",
          "description": "The header of the Text Module. Recommended maximum length is 35 characters to ensure full string is displayed on smaller screens."
        },
        "id": {
          "description": "The ID associated with a text module. This field is here to enable ease of management of text modules.",
          "type": "string"
        },
        "localizedHeader": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the header. Recommended maximum length is 35 characters to ensure full string is displayed on smaller screens."
        },
        "localizedBody": {
          "description": "Translated strings for the body. Recommended maximum length is 500 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "body": {
          "type": "string",
          "description": "The body of the Text Module, which is defined as an uninterrupted string. Recommended maximum length is 500 characters to ensure full string is displayed on smaller screens."
        }
      },
      "id": "TextModuleData",
      "type": "object"
    },
    "FlightClassListResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "FlightClass"
          },
          "description": "Resources corresponding to the list request."
        }
      },
      "id": "FlightClassListResponse"
    },
    "ObjectId": {
      "type": "object",
      "id": "ObjectId",
      "properties": {
        "objectName": {
          "description": "The name of the object.",
          "type": "string"
        },
        "generation": {
          "format": "int64",
          "description": "Generation of the object. Generations are monotonically increasing across writes, allowing them to be be compared to determine which generation is newer. If this is omitted in a request, then you are requesting the live object. See http://go/bigstore-versions",
          "type": "string"
        },
        "bucketName": {
          "description": "The name of the bucket to which this object belongs.",
          "type": "string"
        }
      },
      "description": "This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763."
    },
    "Issuer": {
      "id": "Issuer",
      "properties": {
        "contactInfo": {
          "$ref": "IssuerContactInfo",
          "description": "Issuer contact information."
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Allows the issuer to provide their callback settings."
        },
        "name": {
          "type": "string",
          "description": "The account name of the issuer."
        },
        "homepageUrl": {
          "type": "string",
          "description": "URL for the issuer's home page."
        },
        "issuerId": {
          "description": "The unique identifier for an issuer account. This is automatically generated when the issuer is inserted.",
          "format": "int64",
          "type": "string"
        },
        "smartTapMerchantData": {
          "$ref": "SmartTapMerchantData",
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance."
        }
      },
      "type": "object"
    },
    "DiscoverableProgramMerchantSignupInfo": {
      "description": "Information about the merchant hosted signup flow for a program.",
      "properties": {
        "signupWebsite": {
          "$ref": "Uri",
          "description": "The URL to direct the user to for the merchant's signup site."
        },
        "signupSharedDatas": {
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "",
              "single line address field",
              "multi line address fields",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "enum": [
              "SHARED_DATA_TYPE_UNSPECIFIED",
              "FIRST_NAME",
              "LAST_NAME",
              "STREET_ADDRESS",
              "ADDRESS_LINE_1",
              "ADDRESS_LINE_2",
              "ADDRESS_LINE_3",
              "CITY",
              "STATE",
              "ZIPCODE",
              "COUNTRY",
              "EMAIL",
              "PHONE"
            ]
          },
          "description": " User data that is sent in a POST request to the signup website URL. This information is encoded and then shared so that the merchant's website can prefill fields used to enroll the user for the discoverable program."
        }
      },
      "id": "DiscoverableProgramMerchantSignupInfo",
      "type": "object"
    },
    "LoyaltyPoints": {
      "type": "object",
      "id": "LoyaltyPoints",
      "properties": {
        "label": {
          "type": "string",
          "description": "The loyalty points label, such as \"Points\". Recommended maximum length is 9 characters."
        },
        "localizedLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the label. Recommended maximum length is 9 characters."
        },
        "balance": {
          "description": "The account holder's loyalty point balance, such as \"500\" or \"$10.00\". Recommended maximum length is 7 characters. This is a required field of `loyaltyPoints` and `secondaryLoyaltyPoints`.",
          "$ref": "LoyaltyPointsBalance"
        }
      }
    },
    "TicketCost": {
      "properties": {
        "faceValue": {
          "description": "The face value of the ticket.",
          "$ref": "Money"
        },
        "discountMessage": {
          "$ref": "LocalizedString",
          "description": "A message describing any kind of discount that was applied."
        },
        "purchasePrice": {
          "description": "The actual purchase price of the ticket, after tax and/or discounts.",
          "$ref": "Money"
        }
      },
      "id": "TicketCost",
      "type": "object"
    },
    "Review": {
      "properties": {
        "comments": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Review"
    },
    "PurchaseDetails": {
      "properties": {
        "accountId": {
          "description": "ID of the account used to purchase the ticket.",
          "type": "string"
        },
        "ticketCost": {
          "$ref": "TicketCost",
          "description": "The cost of the ticket."
        },
        "confirmationCode": {
          "type": "string",
          "description": "The confirmation code for the purchase. This may be the same for multiple different tickets and is used to group tickets together."
        },
        "purchaseDateTime": {
          "type": "string",
          "description": "The purchase date/time of the ticket. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. Without offset information, some rich features may not be available."
        },
        "purchaseReceiptNumber": {
          "type": "string",
          "description": "Receipt number/identifier for tracking the ticket purchase via the body that sold the ticket."
        }
      },
      "type": "object",
      "id": "PurchaseDetails"
    },
    "Pagination": {
      "type": "object",
      "id": "Pagination",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#pagination\"`.",
          "deprecated": true,
          "type": "string"
        },
        "resultsPerPage": {
          "type": "integer",
          "description": "Number of results returned in this page.",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to send to fetch the next page."
        }
      }
    },
    "ImageUri": {
      "properties": {
        "description": {
          "deprecated": true,
          "description": "Additional information about the image, which is unused and retained only for backward compatibility.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The location of the image. URIs must have a scheme."
        },
        "localizedDescription": {
          "description": "Translated strings for the description, which are unused and retained only for backward compatibility.",
          "$ref": "LocalizedString",
          "deprecated": true
        }
      },
      "type": "object",
      "id": "ImageUri"
    },
    "GiftCardObject": {
      "properties": {
        "balanceUpdateTime": {
          "description": "The date and time when the balance was last updated. Offset is required. If balance is updated and this property is not provided, system will default to the current time.",
          "$ref": "DateTime"
        },
        "classId": {
          "type": "string",
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you."
        },
        "appLinkData": {
          "description": "Optional information about the partner app link.",
          "$ref": "AppLinkData"
        },
        "rotatingBarcode": {
          "description": "The rotating barcode type and value.",
          "$ref": "RotatingBarcode"
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'."
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        },
        "barcode": {
          "description": "The barcode type and value.",
          "$ref": "Barcode"
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "type": "array"
        },
        "groupingInfo": {
          "$ref": "GroupingInfo",
          "description": "Information that controls how passes are grouped together."
        },
        "state": {
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "type": "string",
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ]
        },
        "eventNumber": {
          "type": "string",
          "description": "The card's event number, an optional field used by some gift cards."
        },
        "disableExpirationNotification": {
          "type": "boolean",
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for offers."
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both will be displayed."
        },
        "cardNumber": {
          "type": "string",
          "description": "Required. The card's number."
        },
        "smartTapRedemptionValue": {
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported.",
          "type": "string"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "textModulesData": {
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array"
        },
        "balance": {
          "description": "The card's monetary balance.",
          "$ref": "Money"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "classReference": {
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET.",
          "$ref": "GiftCardClass"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed."
        },
        "kind": {
          "deprecated": true,
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#giftCardObject\"`."
        },
        "hasLinkedDevice": {
          "type": "boolean",
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information."
        },
        "imageModulesData": {
          "type": "array",
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          }
        },
        "pin": {
          "type": "string",
          "description": "The card's PIN."
        },
        "version": {
          "type": "string",
          "description": "Deprecated",
          "deprecated": true,
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GiftCardObject"
    },
    "DetailsItemInfo": {
      "properties": {
        "item": {
          "description": "The item to be displayed in the details list.",
          "$ref": "TemplateItem"
        }
      },
      "id": "DetailsItemInfo",
      "type": "object"
    },
    "TransitObjectListResponse": {
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "TransitObject"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "TransitObjectListResponse"
    },
    "CardBarcodeSectionDetails": {
      "properties": {
        "firstBottomDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional information to display below the barcode."
        },
        "firstTopDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional information to display above the barcode. If `secondTopDetail` is defined, this will be displayed to the start side of this detail section."
        },
        "secondTopDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional second piece of information to display above the barcode. If `firstTopDetail` is defined, this will be displayed to the end side of this detail section."
        }
      },
      "id": "CardBarcodeSectionDetails",
      "type": "object"
    },
    "LabelValueRow": {
      "type": "object",
      "id": "LabelValueRow",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "LabelValue"
          },
          "description": "A list of labels and values. These will be displayed in a singular column, one after the other, not in multiple columns, despite the field name."
        }
      }
    },
    "OfferObject": {
      "type": "object",
      "properties": {
        "smartTapRedemptionValue": {
          "description": "The value that will be transmitted to a Smart Tap certified terminal over NFC for this object. The class level fields `enableSmartTap` and `redemptionIssuers` must also be set up correctly in order for the pass to support Smart Tap. Only ASCII characters are supported.",
          "type": "string"
        },
        "state": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`. Deprecated.",
            "",
            "Legacy alias for `COMPLETED`. Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`. Deprecated.",
            "",
            "Legacy alias for `INACTIVE`. Deprecated."
          ],
          "type": "string",
          "description": "Required. The state of the object. This field is used to determine how an object is displayed in the app. For example, an `inactive` object is moved to the \"Expired passes\" section."
        },
        "groupingInfo": {
          "description": "Information that controls how passes are grouped together.",
          "$ref": "GroupingInfo"
        },
        "validTimeInterval": {
          "description": "The time period this object will be `active` and object can be used. An object's state will be changed to `expired` when this time period has passed.",
          "$ref": "TimeInterval"
        },
        "kind": {
          "type": "string",
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#offerObject\"`."
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all objects from an issuer. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you. The unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "hasUsers": {
          "type": "boolean",
          "description": "Indicates if the object has users. This field is set by the platform."
        },
        "classId": {
          "type": "string",
          "description": "Required. The class associated with this object. The class must be of the same type as this object, must already exist, and must be approved. Class IDs should follow the format issuer ID.identifier where the former is issued by Google and latter is chosen by you."
        },
        "rotatingBarcode": {
          "$ref": "RotatingBarcode",
          "description": "The rotating barcode type and value."
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "barcode": {
          "description": "The barcode type and value.",
          "$ref": "Barcode"
        },
        "locations": {
          "type": "array",
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "classReference": {
          "description": "A copy of the inherited fields of the parent class. These fields are retrieved during a GET.",
          "$ref": "OfferClass"
        },
        "hasLinkedDevice": {
          "type": "boolean",
          "description": "Whether this object is currently linked to a single device. This field is set by the platform when a user saves the object, linking it to their device. Intended for use by select partners. Contact support for additional information."
        },
        "messages": {
          "items": {
            "$ref": "Message"
          },
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "type": "array"
        },
        "linksModuleData": {
          "description": "Links module data. If links module data is also defined on the class, both will be displayed.",
          "$ref": "LinksModuleData"
        },
        "textModulesData": {
          "type": "array",
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "version": {
          "format": "int64",
          "deprecated": true,
          "type": "string",
          "description": "Deprecated"
        },
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field is set to true, regardless of the `messages` field, expiration notifications to the user will be suppressed. By default, this field is set to false. Currently, this can only be set for offers.",
          "type": "boolean"
        },
        "passConstraints": {
          "description": "Pass constraints for the object. Includes limiting NFC and screenshot behaviors.",
          "$ref": "PassConstraints"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, hero image of the class, if present, will be displayed. If hero image of the class is also not present, nothing will be displayed."
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        }
      },
      "id": "OfferObject"
    },
    "CompositeMedia": {
      "type": "object",
      "id": "CompositeMedia",
      "description": "A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.",
      "properties": {
        "blobRef": {
          "type": "string",
          "format": "byte",
          "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.",
          "deprecated": true
        },
        "inline": {
          "description": "Media data, set if reference_type is INLINE",
          "format": "byte",
          "type": "string"
        },
        "objectId": {
          "$ref": "ObjectId",
          "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."
        },
        "blobstore2Info": {
          "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob.",
          "$ref": "Blobstore2Info"
        },
        "crc32cHash": {
          "format": "uint32",
          "description": "crc32.c hash for the payload.",
          "type": "integer"
        },
        "referenceType": {
          "enumDescriptions": [
            "Reference contains a GFS path or a local path.",
            "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated.",
            "Data is included into this proto buffer",
            "Reference points to a bigstore object",
            "Indicates the data is stored in cosmo_binary_reference."
          ],
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "BIGSTORE_REF",
            "COSMO_BINARY_REFERENCE"
          ],
          "description": "Describes what the field reference contains.",
          "type": "string"
        },
        "sha1Hash": {
          "format": "byte",
          "type": "string",
          "description": "SHA-1 hash for the payload."
        },
        "cosmoBinaryReference": {
          "description": "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.",
          "type": "string",
          "format": "byte"
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "Size of the data, in bytes"
        },
        "md5Hash": {
          "description": "MD5 hash for the payload.",
          "format": "byte",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Path to the data, set if reference_type is PATH"
        }
      }
    },
    "AppLinkDataAppLinkInfo": {
      "id": "AppLinkDataAppLinkInfo",
      "type": "object",
      "properties": {
        "appLogoImage": {
          "description": "Optional image to be displayed in the App Link Module",
          "$ref": "Image"
        },
        "description": {
          "$ref": "LocalizedString",
          "description": "String to be displayed in the description of the App Link Module Required"
        },
        "title": {
          "description": "String to be displayed in the title of the App Link Module Required",
          "$ref": "LocalizedString"
        },
        "appTarget": {
          "description": "Url to follow when opening the App Link Module on clients. It will be used by partners to open their webpage or deeplink into their app.",
          "$ref": "AppLinkDataAppLinkInfoAppTarget"
        }
      }
    },
    "TranslatedString": {
      "type": "object",
      "id": "TranslatedString",
      "properties": {
        "value": {
          "description": "The UTF-8 encoded translated string.",
          "type": "string"
        },
        "language": {
          "type": "string",
          "description": "Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\"."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
          "deprecated": true,
          "type": "string"
        }
      }
    },
    "LoyaltyObjectListResponse": {
      "id": "LoyaltyObjectListResponse",
      "type": "object",
      "properties": {
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "type": "array",
          "items": {
            "$ref": "LoyaltyObject"
          }
        }
      }
    },
    "DiffUploadResponse": {
      "type": "object",
      "properties": {
        "objectVersion": {
          "type": "string",
          "description": "The object version of the object at the server. Must be included in the end notification response. The version in the end notification response must correspond to the new version of the object that is now stored at the server, after the upload."
        },
        "originalObject": {
          "$ref": "CompositeMedia",
          "description": "The location of the original file for a diff upload request. Must be filled in if responding to an upload start notification."
        }
      },
      "id": "DiffUploadResponse",
      "description": "Backend response for a Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol."
    },
    "Blobstore2Info": {
      "properties": {
        "uploadMetadataContainer": {
          "description": "Metadata passed from Blobstore -\u003e Scotty for a new GCS upload. This is a signed, serialized blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not applicable to non-GCS media uploads.",
          "format": "byte",
          "type": "string"
        },
        "blobGeneration": {
          "type": "string",
          "description": "The blob generation id.",
          "format": "int64"
        },
        "blobId": {
          "type": "string",
          "description": "The blob id, e.g., /blobstore/prod/playground/scotty"
        },
        "downloadReadHandle": {
          "format": "byte",
          "description": "Read handle passed from Bigstore -\u003e Scotty for a GCS download. This is a signed, serialized blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS media downloads.",
          "type": "string"
        },
        "readToken": {
          "type": "string",
          "description": "The blob read token. Needed to read blobs that have not been replicated. Might not be available until the final call."
        }
      },
      "id": "Blobstore2Info",
      "description": "Information to read/write to blobstore2.",
      "type": "object"
    },
    "Permissions": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The complete list of permissions for the issuer account.",
          "type": "array",
          "items": {
            "$ref": "Permission"
          }
        },
        "issuerId": {
          "description": "ID of the issuer the list of permissions refer to.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "Permissions"
    },
    "GenericObjectAddMessageResponse": {
      "description": "Response to adding a new issuer message to the object. This contains the entire updated GenericObject.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The updated GenericObject resource.",
          "$ref": "GenericObject"
        }
      },
      "id": "GenericObjectAddMessageResponse"
    },
    "OfferClassAddMessageResponse": {
      "properties": {
        "resource": {
          "description": "The updated OfferClass resource.",
          "$ref": "OfferClass"
        }
      },
      "id": "OfferClassAddMessageResponse",
      "type": "object"
    },
    "GroupingInfo": {
      "id": "GroupingInfo",
      "properties": {
        "groupingId": {
          "description": "Optional grouping ID for grouping the passes with the same ID visually together. Grouping with different types of passes is allowed.",
          "type": "string"
        },
        "sortIndex": {
          "description": "Optional index for sorting the passes when they are grouped with other passes. Passes with lower sort index are shown before passes with higher sort index. If unspecified, the value is assumed to be INT_MAX. For two passes with the same sort index, the sorting behavior is undefined.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LoyaltyClassListResponse": {
      "id": "LoyaltyClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "type": "array",
          "items": {
            "$ref": "LoyaltyClass"
          }
        }
      },
      "type": "object"
    },
    "TransitObjectUploadRotatingBarcodeValuesResponse": {
      "properties": {},
      "type": "object",
      "id": "TransitObjectUploadRotatingBarcodeValuesResponse",
      "description": "Response for uploading rotating barcode values."
    },
    "OfferClassListResponse": {
      "id": "OfferClassListResponse",
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "OfferClass"
          },
          "description": "Resources corresponding to the list request."
        }
      }
    },
    "TicketRestrictions": {
      "properties": {
        "routeRestrictions": {
          "$ref": "LocalizedString",
          "description": "Restrictions about routes that may be taken. For example, this may be the string \"Reserved CrossCountry trains only\"."
        },
        "timeRestrictions": {
          "description": "Restrictions about times this ticket may be used.",
          "$ref": "LocalizedString"
        },
        "otherRestrictions": {
          "$ref": "LocalizedString",
          "description": "Extra restrictions that don't fall under the \"route\" or \"time\" categories."
        },
        "routeRestrictionsDetails": {
          "$ref": "LocalizedString",
          "description": "More details about the above `routeRestrictions`."
        }
      },
      "id": "TicketRestrictions",
      "type": "object"
    },
    "CardRowThreeItems": {
      "id": "CardRowThreeItems",
      "type": "object",
      "properties": {
        "startItem": {
          "description": "The item to be displayed at the start of the row. This item will be aligned to the left.",
          "$ref": "TemplateItem"
        },
        "endItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the end of the row. This item will be aligned to the right."
        },
        "middleItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed in the middle of the row. This item will be centered between the start and end items."
        }
      }
    },
    "GiftCardClass": {
      "properties": {
        "wideProgramLogo": {
          "$ref": "Image",
          "description": "The wide logo of the gift card program or company. When provided, this will be used in place of the program logo in the top left of the card view."
        },
        "messages": {
          "type": "array",
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          }
        },
        "eventNumberLabel": {
          "description": "The label to display for event number, such as \"Target Event #\".",
          "type": "string"
        },
        "classTemplateInfo": {
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display.",
          "$ref": "ClassTemplateInfo"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`."
        },
        "allowBarcodeRedemption": {
          "description": "Determines whether the merchant supports gift card redemption using barcode. If true, app displays a barcode for the gift card on the Gift card details screen. If false, a barcode is not displayed.",
          "type": "boolean"
        },
        "securityAnimation": {
          "$ref": "SecurityAnimation",
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details."
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ]
        },
        "locations": {
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "type": "array",
          "items": {
            "$ref": "LatLongPoint"
          }
        },
        "pinLabel": {
          "description": "The label to display for the PIN, such as \"4-digit PIN\".",
          "type": "string"
        },
        "merchantName": {
          "type": "string",
          "description": "Merchant name, such as \"Adam's Apparel\". The app may display an ellipsis after the first 20 characters to ensure full string is displayed on smaller screens."
        },
        "textModulesData": {
          "type": "array",
          "items": {
            "$ref": "TextModuleData"
          },
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class."
        },
        "countryCode": {
          "type": "string",
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale."
        },
        "allowMultipleUsersPerObject": {
          "deprecated": true,
          "type": "boolean",
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead."
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead.",
          "deprecated": true
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
          "type": "string"
        },
        "heroImage": {
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width.",
          "$ref": "Image"
        },
        "version": {
          "format": "int64",
          "description": "Deprecated",
          "deprecated": true,
          "type": "string"
        },
        "localizedCardNumberLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the card_number_label."
        },
        "imageModulesData": {
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array",
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level."
        },
        "localizedMerchantName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the merchant_name. The app may display an ellipsis after the first 20 characters to ensure full string is displayed on smaller screens."
        },
        "localizedEventNumberLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the event_number_label."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens."
        },
        "reviewStatus": {
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ],
          "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ]
        },
        "programLogo": {
          "description": "The logo of the gift card program or company. This logo is displayed in both the details and list views of the app.",
          "$ref": "Image"
        },
        "homepageUri": {
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object).",
          "$ref": "Uri"
        },
        "wordMark": {
          "deprecated": true,
          "description": "Deprecated.",
          "$ref": "Image"
        },
        "enableSmartTap": {
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "type": "boolean"
        },
        "localizedPinLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the pin_label."
        },
        "redemptionIssuers": {
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "viewUnlockRequirement": {
          "description": "View Unlock Requirement options for the gift card.",
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ],
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "type": "string"
        },
        "cardNumberLabel": {
          "description": "The label to display for the card number, such as \"Card Number\".",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#giftCardClass\"`.",
          "deprecated": true,
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both will be displayed."
        }
      },
      "id": "GiftCardClass",
      "type": "object"
    },
    "TransitClass": {
      "id": "TransitClass",
      "type": "object",
      "properties": {
        "multipleDevicesAndHoldersAllowedStatus": {
          "enumDescriptions": [
            "Unspecified preference.",
            "The Pass object is shareable by a user and can be saved by any number of different users, and on any number of devices. Partners typically use this setup for passes that do not need to be restricted to a single user or pinned to a single device.",
            "An object can only be saved by one user, but this user can view and use it on multiple of their devices. Once the first user saves the object, no other user will be allowed to view or save it.",
            "An object can only be saved by one user on a single device. Intended for use by select partners in limited circumstances. An example use case is a transit ticket that should be \"device pinned\", meaning it can be saved, viewed and used only by a single user on a single device. Contact support for additional information.",
            "Legacy alias for `MULTIPLE_HOLDERS`. Deprecated.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`. Deprecated.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`. Deprecated."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "ONE_USER_ALL_DEVICES",
            "ONE_USER_ONE_DEVICE",
            "multipleHolders",
            "oneUserAllDevices",
            "oneUserOneDevice"
          ],
          "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "type": "string"
        },
        "customTimeRestrictionsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the time restrictions details value (`transitObject.ticketRestrictions.timeRestrictions`)."
        },
        "callbackOptions": {
          "description": "Callback options to be used to call the issuer back for every save/delete of an object for this class by the end-user. All objects of this class are eligible for the callback.",
          "$ref": "CallbackOptions"
        },
        "homepageUri": {
          "description": "The URI of your application's home page. Populating the URI in this field results in the exact same behavior as populating an URI in linksModuleData (when an object is rendered, a link to the homepage is shown in what would usually be thought of as the linksModuleData section of the object).",
          "$ref": "Uri"
        },
        "viewUnlockRequirement": {
          "enumDescriptions": [
            "Default value, same as UNLOCK_NOT_REQUIRED.",
            "Default behavior for all the existing Passes if ViewUnlockRequirement is not set.",
            "Requires the user to unlock their device each time the pass is viewed. If the user removes their device lock after saving the pass, then they will be prompted to create a device lock before the pass can be viewed."
          ],
          "type": "string",
          "description": "View Unlock Requirement options for the transit ticket.",
          "enum": [
            "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
            "UNLOCK_NOT_REQUIRED",
            "UNLOCK_REQUIRED_TO_VIEW"
          ]
        },
        "wordMark": {
          "description": "Deprecated.",
          "deprecated": true,
          "$ref": "Image"
        },
        "customSeatLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the seat location value (`transitObject.ticketLeg.ticketSeat.seat`)."
        },
        "customFareNameLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit fare name value (`transitObject.ticketLeg.fareName`)."
        },
        "customPurchaseFaceValueLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the purchase face value (`transitObject.purchaseDetails.ticketCost.faceValue`)."
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both will be displayed."
        },
        "locations": {
          "description": "Note: This field is currently not supported to trigger geo notifications.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "languageOverride": {
          "description": "If this field is present, transit tickets served to a user's device will always be in this language. Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
          "type": "string"
        },
        "version": {
          "deprecated": true,
          "type": "string",
          "description": "Deprecated",
          "format": "int64"
        },
        "customRouteRestrictionsDetailsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the route restrictions details value (`transitObject.ticketRestrictions.routeRestrictionsDetails`)."
        },
        "customOtherRestrictionsLabel": {
          "description": "A custom label to use for the other restrictions value (`transitObject.ticketRestrictions.otherRestrictions`).",
          "$ref": "LocalizedString"
        },
        "customConcessionCategoryLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit concession category value (`transitObject.concessionCategory`)."
        },
        "logo": {
          "description": "Required. The logo image of the ticket. This image is displayed in the card detail view of the app.",
          "$ref": "Image"
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
          "type": "string"
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed. If unset, Google will fallback to a default set of fields to display."
        },
        "customDiscountMessageLabel": {
          "description": "A custom label to use for the transit discount message value (`transitObject.purchaseDetails.ticketCost.discountMessage`).",
          "$ref": "LocalizedString"
        },
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
          "type": "boolean",
          "deprecated": true
        },
        "customZoneLabel": {
          "description": "A custom label to use for the boarding zone value (`transitObject.ticketLeg.zone`).",
          "$ref": "LocalizedString"
        },
        "customPlatformLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the boarding platform value (`transitObject.ticketLeg.platform`)."
        },
        "transitOperatorName": {
          "description": "The name of the transit operator.",
          "$ref": "LocalizedString"
        },
        "reviewStatus": {
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`. Deprecated.",
            "",
            "Legacy alias for `APPROVED`. Deprecated.",
            "",
            "Legacy alias for `REJECTED`. Deprecated.",
            "",
            "Legacy alias for `DRAFT`. Deprecated."
          ],
          "type": "string",
          "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`."
        },
        "customTicketNumberLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the ticket number value (`transitObject.ticketNumber`)."
        },
        "infoModuleData": {
          "description": "Deprecated. Use textModulesData instead.",
          "deprecated": true,
          "$ref": "InfoModuleData"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is present, nothing will be displayed. The image will display at 100% width."
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "customTransitTerminusNameLabel": {
          "description": "A custom label to use for the transit terminus name value (`transitObject.ticketLeg.transitTerminusName`).",
          "$ref": "LocalizedString"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
          "type": "array",
          "items": {
            "$ref": "TextModuleData"
          }
        },
        "redemptionIssuers": {
          "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "activationOptions": {
          "description": "Activation options for an activatable ticket.",
          "$ref": "ActivationOptions"
        },
        "hexBackgroundColor": {
          "type": "string",
          "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "customCarriageLabel": {
          "description": "A custom label to use for the carriage value (`transitObject.ticketLeg.carriage`).",
          "$ref": "LocalizedString"
        },
        "enableSingleLegItinerary": {
          "description": "Controls the display of the single-leg itinerary for this class. By default, an itinerary will only display for multi-leg trips.",
          "type": "boolean"
        },
        "enableSmartTap": {
          "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
          "type": "boolean"
        },
        "customFareClassLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the fare class value (`transitObject.ticketLeg.ticketSeat.fareClass`)."
        },
        "watermark": {
          "$ref": "Image",
          "description": "Watermark image to display on the user's device."
        },
        "customPurchasePriceLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the purchase price value (`transitObject.purchaseDetails.ticketCost.purchasePrice`)."
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "Message"
          },
          "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10."
        },
        "localizedIssuerName": {
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "$ref": "LocalizedString"
        },
        "transitType": {
          "description": "Required. The type of transit this class represents, such as \"bus\".",
          "enum": [
            "TRANSIT_TYPE_UNSPECIFIED",
            "BUS",
            "bus",
            "RAIL",
            "rail",
            "TRAM",
            "tram",
            "FERRY",
            "ferry",
            "OTHER",
            "other"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `BUS`. Deprecated.",
            "",
            "Legacy alias for `RAIL`. Deprecated.",
            "",
            "Legacy alias for `TRAM`. Deprecated.",
            "",
            "Legacy alias for `FERRY`. Deprecated.",
            "",
            "Legacy alias for `OTHER`. Deprecated."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true
          ]
        },
        "customCoachLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the coach value (`transitObject.ticketLeg.ticketSeat.coach`)."
        },
        "customConfirmationCodeLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the confirmation code value (`transitObject.purchaseDetails.confirmationCode`)."
        },
        "customPurchaseReceiptNumberLabel": {
          "description": "A custom label to use for the purchase receipt number value (`transitObject.purchaseDetails.purchaseReceiptNumber`).",
          "$ref": "LocalizedString"
        },
        "securityAnimation": {
          "description": "Optional information about the security animation. If this is set a security animation will be rendered on pass details.",
          "$ref": "SecurityAnimation"
        },
        "review": {
          "description": "The review comments set by the platform when a class is marked `approved` or `rejected`.",
          "$ref": "Review"
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "wideLogo": {
          "$ref": "Image",
          "description": "The wide logo of the ticket. When provided, this will be used in place of the logo in the top left of the card view."
        },
        "customRouteRestrictionsLabel": {
          "description": "A custom label to use for the route restrictions value (`transitObject.ticketRestrictions.routeRestrictions`).",
          "$ref": "LocalizedString"
        }
      }
    },
    "LinksModuleData": {
      "id": "LinksModuleData",
      "properties": {
        "uris": {
          "type": "array",
          "items": {
            "$ref": "Uri"
          },
          "description": "The list of URIs."
        }
      },
      "type": "object"
    },
    "SmartTap": {
      "id": "SmartTap",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for a smart tap. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is the Smart Tap id. The Smart Tap id is a Base64 encoded string which represents the id which was generated by the Google Pay app."
        },
        "kind": {
          "deprecated": true,
          "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#smartTap\"`.",
          "type": "string"
        },
        "merchantId": {
          "format": "int64",
          "type": "string",
          "description": "Smart Tap merchant ID of who engaged in the Smart Tap interaction."
        },
        "infos": {
          "type": "array",
          "items": {
            "$ref": "IssuerToUserInfo"
          },
          "description": "Communication from merchant to user."
        }
      },
      "type": "object"
    },
    "ActivationOptions": {
      "id": "ActivationOptions",
      "description": "ActivationOptions for the class",
      "type": "object",
      "properties": {
        "activationUrl": {
          "type": "string",
          "description": "HTTPS URL that supports REST semantics. Would be used for requesting activation from partners for given valuable, triggered by the users."
        },
        "allowReactivation": {
          "description": "Flag to allow users to make activation call from different device. This allows client to render the activation button enabled even if the activationStatus is ACTIVATED but the requested device is different than the current device.",
          "type": "boolean"
        }
      }
    },
    "FieldReference": {
      "properties": {
        "dateFormat": {
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            true,
            false,
            false
          ],
          "enum": [
            "DATE_FORMAT_UNSPECIFIED",
            "DATE_TIME",
            "dateTime",
            "DATE_ONLY",
            "dateOnly",
            "TIME_ONLY",
            "timeOnly",
            "DATE_TIME_YEAR",
            "dateTimeYear",
            "DATE_YEAR",
            "dateYear",
            "YEAR_MONTH",
            "YEAR_MONTH_DAY"
          ],
          "enumDescriptions": [
            "Default option when no format is specified, when selected, no formatting will be applied.",
            "Renders `2018-12-14T13:00:00` as `Dec 14, 1:00 PM` in `en_US`.",
            "Legacy alias for `DATE_TIME`. Deprecated.",
            "Renders `2018-12-14T13:00:00` as `Dec 14` in `en_US`.",
            "Legacy alias for `DATE_ONLY`. Deprecated.",
            "Renders `2018-12-14T13:00:00` as `1:00 PM` in `en_US`.",
            "Legacy alias for `TIME_ONLY`. Deprecated.",
            "Renders `2018-12-14T13:00:00` as `Dec 14, 2018, 1:00 PM` in `en_US`.",
            "Legacy alias for `DATE_TIME_YEAR`. Deprecated.",
            "Renders `2018-12-14T13:00:00` as `Dec 14, 2018` in `en_US`.",
            "Legacy alias for `DATE_YEAR`. Deprecated.",
            "Renders `2018-12-14T13:00:00` as `2018-12`.",
            "Renders `2018-12-14T13:00:00` as `2018-12-14`."
          ],
          "description": "Only valid if the `fieldPath` references a date field. Chooses how the date field will be formatted and displayed in the UI.",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path to the field being referenced, prefixed with \"object\" or \"class\" and separated with dots. For example, it may be the string \"object.purchaseDetails.purchasePrice\".",
          "type": "string"
        }
      },
      "id": "FieldReference",
      "description": "Reference definition to use with field overrides.",
      "type": "object"
    },
    "GiftCardClassListResponse": {
      "type": "object",
      "id": "GiftCardClassListResponse",
      "properties": {
        "resources": {
          "type": "array",
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "GiftCardClass"
          }
        },
        "pagination": {
          "description": "Pagination of the response.",
          "$ref": "Pagination"
        }
      }
    },
    "LoyaltyClassAddMessageResponse": {
      "properties": {
        "resource": {
          "description": "The updated LoyaltyClass resource.",
          "$ref": "LoyaltyClass"
        }
      },
      "type": "object",
      "id": "LoyaltyClassAddMessageResponse"
    },
    "RotatingBarcodeValues": {
      "type": "object",
      "description": "A payload containing many barcode values and start date/time.",
      "id": "RotatingBarcodeValues",
      "properties": {
        "startDateTime": {
          "description": "Required. The date/time the first barcode is valid from. Barcodes will be rotated through using period_millis defined on the object's RotatingBarcodeValueInfo. This is an ISO 8601 extended format date/time, with an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year.",
          "type": "string"
        },
        "periodMillis": {
          "description": "Required. The amount of time each barcode is valid for.",
          "format": "int64",
          "type": "string"
        },
        "values": {
          "description": "Required. The values to encode in the barcode. At least one value is required.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DiffChecksumsResponse": {
      "description": "Backend response for a Diff get checksums response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "id": "DiffChecksumsResponse",
      "type": "object",
      "properties": {
        "objectSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the server object."
        },
        "objectVersion": {
          "description": "The object version of the object the checksums are being returned for.",
          "type": "string"
        },
        "chunkSizeBytes": {
          "description": "The chunk size of checksums. Must be a multiple of 256KB.",
          "format": "int64",
          "type": "string"
        },
        "checksumsLocation": {
          "$ref": "CompositeMedia",
          "description": "Exactly one of these fields must be populated. If checksums_location is filled, the server will return the corresponding contents to the user. If object_location is filled, the server will calculate the checksums based on the content there and return that to the user. For details on the format of the checksums, see http://go/scotty-diff-protocol."
        },
        "objectLocation": {
          "description": "If set, calculate the checksums based on the contents and return them to the caller.",
          "$ref": "CompositeMedia"
        }
      }
    },
    "LoyaltyPointsBalance": {
      "id": "LoyaltyPointsBalance",
      "type": "object",
      "properties": {
        "string": {
          "description": "The string form of a balance. Only one of these subtypes (string, int, double, money) should be populated.",
          "type": "string"
        },
        "int": {
          "description": "The integer form of a balance. Only one of these subtypes (string, int, double, money) should be populated.",
          "format": "int32",
          "type": "integer"
        },
        "money": {
          "description": "The money form of a balance. Only one of these subtypes (string, int, double, money) should be populated.",
          "$ref": "Money"
        },
        "double": {
          "description": "The double form of a balance. Only one of these subtypes (string, int, double, money) should be populated.",
          "format": "double",
          "type": "number"
        }
      }
    },
    "EventTicketClassAddMessageResponse": {
      "type": "object",
      "id": "EventTicketClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "EventTicketClass",
          "description": "The updated EventTicketClass resource."
        }
      }
    },
    "SmartTapMerchantData": {
      "id": "SmartTapMerchantData",
      "properties": {
        "smartTapMerchantId": {
          "type": "string",
          "format": "int64",
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance."
        },
        "authenticationKeys": {
          "items": {
            "$ref": "AuthenticationKey"
          },
          "type": "array",
          "description": "Available only to Smart Tap enabled partners. Contact support for additional guidance."
        }
      },
      "type": "object"
    },
    "OfferObjectAddMessageResponse": {
      "properties": {
        "resource": {
          "$ref": "OfferObject",
          "description": "The updated OfferObject resource."
        }
      },
      "type": "object",
      "id": "OfferObjectAddMessageResponse"
    },
    "AppLinkDataAppLinkInfoAppTarget": {
      "properties": {
        "packageName": {
          "type": "string",
          "description": "Package name for AppTarget. For example: com.google.android.gm"
        },
        "targetUri": {
          "$ref": "Uri",
          "description": "URI for AppTarget. The description on the URI must be set. Prefer setting package field instead, if this target is defined for your application."
        }
      },
      "id": "AppLinkDataAppLinkInfoAppTarget",
      "type": "object"
    },
    "BarcodeSectionDetail": {
      "type": "object",
      "id": "BarcodeSectionDetail",
      "properties": {
        "fieldSelector": {
          "$ref": "FieldSelector",
          "description": "A reference to an existing text-based or image field to display."
        }
      }
    },
    "DownloadParameters": {
      "id": "DownloadParameters",
      "type": "object",
      "description": "Parameters specific to media downloads.",
      "properties": {
        "ignoreRange": {
          "description": "Determining whether or not Apiary should skip the inclusion of any Content-Range header on its response to Scotty.",
          "type": "boolean"
        },
        "allowGzipCompression": {
          "description": "A boolean to be returned in the response to Scotty. Allows/disallows gzip encoding of the payload content when the server thinks it's advantageous (hence, does not guarantee compression) which allows Scotty to GZip the response to the client.",
          "type": "boolean"
        }
      }
    },
    "TicketLeg": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string",
          "description": "The platform or gate where the passenger can board the carriage."
        },
        "destinationStationCode": {
          "description": "The destination station code.",
          "type": "string"
        },
        "transitOperatorName": {
          "$ref": "LocalizedString",
          "description": "The name of the transit operator that is operating this leg of a trip."
        },
        "destinationName": {
          "$ref": "LocalizedString",
          "description": "The destination name."
        },
        "departureDateTime": {
          "type": "string",
          "description": "The date/time of departure. This is required if there is no validity time interval set on the transit object. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the origin station. For example, if the departure occurs at the 20th hour of June 5th, 2018 at the origin station, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the origin station is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available."
        },
        "ticketSeats": {
          "description": "The reserved seat for the passenger(s). If only one seat is to be specified then use the `ticketSeat` field instead. Both `ticketSeat` and `ticketSeats` may not be set.",
          "items": {
            "$ref": "TicketSeat"
          },
          "type": "array"
        },
        "fareName": {
          "$ref": "LocalizedString",
          "description": "Short description/name of the fare for this leg of travel. Eg \"Anytime Single Use\"."
        },
        "originStationCode": {
          "type": "string",
          "description": "The origin station code. This is required if `destinationStationCode` is present or if `originName` is not present."
        },
        "transitTerminusName": {
          "description": "Terminus station or destination of the train/bus/etc.",
          "$ref": "LocalizedString"
        },
        "carriage": {
          "type": "string",
          "description": "The train or ship name/number that the passsenger needs to board."
        },
        "originName": {
          "$ref": "LocalizedString",
          "description": "The name of the origin station. This is required if `desinationName` is present or if `originStationCode` is not present."
        },
        "arrivalDateTime": {
          "type": "string",
          "description": "The date/time of arrival. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the destination station. For example, if the event occurs at the 20th hour of June 5th, 2018 at the destination station, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the destination station is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available."
        },
        "zone": {
          "description": "The zone of boarding within the platform.",
          "type": "string"
        },
        "ticketSeat": {
          "$ref": "TicketSeat",
          "description": "The reserved seat for the passenger(s). If more than one seat is to be specified then use the `ticketSeats` field instead. Both `ticketSeat` and `ticketSeats` may not be set."
        }
      },
      "id": "TicketLeg"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest"
}

{
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20211015",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "repositories": {
              "resources": {
                "dockerImages": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/dockerImages",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListDockerImagesResponse"
                      },
                      "id": "artifactregistry.projects.locations.repositories.dockerImages.list",
                      "description": "Lists docker images.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/dockerImages",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of artifacts to return.",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "description": "Required. The name of the parent resource whose docker images will be listed."
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "description": "Lists repositories.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/repositories",
                  "id": "artifactregistry.projects.locations.repositories.list",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The name of the parent resource whose repositories will be listed.",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of repositories to return.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request, if any."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "response": {
                    "$ref": "ListRepositoriesResponse"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "artifactregistry.projects.locations.repositories.get",
                  "description": "Gets a repository.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "response": {
                    "$ref": "Repository"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the repository to retrieve.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The name of the operation resource.",
              "pattern": "^operations/[^/]+$"
            }
          },
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "id": "artifactregistry.operations.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "id": "artifactregistry:v1",
  "parameters": {
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "ownerName": "Google",
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.",
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "canonicalName": "Artifact Registry",
  "title": "Artifact Registry API",
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "name": "artifactregistry",
  "batchPath": "batch",
  "version_module": true,
  "kind": "discovery#restDescription",
  "schemas": {
    "UploadAptArtifactResponse": {
      "type": "object",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts updated.",
          "items": {
            "$ref": "AptArtifact"
          },
          "type": "array"
        }
      },
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "id": "UploadAptArtifactResponse"
    },
    "AptArtifact": {
      "id": "AptArtifact",
      "type": "object",
      "properties": {
        "architecture": {
          "readOnly": true,
          "description": "Output only. Operating system architecture of the artifact.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Artifact Registry resource name of the artifact."
        },
        "controlFile": {
          "readOnly": true,
          "description": "Output only. Contents of the artifact's control metadata file.",
          "format": "byte",
          "type": "string"
        },
        "packageType": {
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package.",
            "Source package."
          ],
          "type": "string",
          "description": "Output only. An artifact is a binary or source package."
        },
        "packageName": {
          "readOnly": true,
          "description": "Output only. The Apt package name of the artifact.",
          "type": "string"
        },
        "component": {
          "description": "Output only. Repository component of the artifact.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html"
    },
    "Repository": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the repository was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "The time when the repository was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "The user-provided description of the repository."
        },
        "kmsKeyName": {
          "description": "The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.",
          "type": "string"
        },
        "format": {
          "description": "The format of packages that are stored in the repository.",
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DOCKER",
            "MAVEN",
            "NPM",
            "APT",
            "YUM",
            "PYTHON"
          ],
          "enumDescriptions": [
            "Unspecified package format.",
            "Docker package format.",
            "Maven package format.",
            "NPM package format.",
            "APT package format.",
            "YUM package format.",
            "Python package format."
          ],
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\".",
          "type": "string"
        }
      },
      "description": "A Repository for storing artifacts with a specific format.",
      "id": "Repository"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status"
    },
    "ImportYumArtifactsErrorInfo": {
      "id": "ImportYumArtifactsErrorInfo",
      "description": "Error information explaining why a package was not imported.",
      "properties": {
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        },
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportYumArtifactsGcsSource"
        }
      },
      "type": "object"
    },
    "UploadYumArtifactResponse": {
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "properties": {
        "yumArtifacts": {
          "description": "The Apt artifacts updated.",
          "items": {
            "$ref": "YumArtifact"
          },
          "type": "array"
        }
      },
      "id": "UploadYumArtifactResponse",
      "type": "object"
    },
    "ImportAptArtifactsResponse": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "ImportAptArtifactsErrorInfo"
          },
          "description": "Detailed error info for packages that were not imported.",
          "type": "array"
        },
        "aptArtifacts": {
          "description": "The Apt artifacts updated.",
          "type": "array",
          "items": {
            "$ref": "AptArtifact"
          }
        }
      },
      "id": "ImportAptArtifactsResponse",
      "description": "The response message from importing artifacts.",
      "type": "object"
    },
    "ImportAptArtifactsErrorInfo": {
      "description": "Error information explaining why a package was not imported.",
      "id": "ImportAptArtifactsErrorInfo",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The detailed error status."
        },
        "gcsSource": {
          "$ref": "ImportAptArtifactsGcsSource",
          "description": "Google Cloud Storage location requested."
        }
      }
    },
    "ListRepositoriesResponse": {
      "description": "The response from listing repositories.",
      "type": "object",
      "id": "ListRepositoriesResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of repositories, or empty if there are no more repositories to return.",
          "type": "string"
        },
        "repositories": {
          "type": "array",
          "description": "The repositories returned.",
          "items": {
            "$ref": "Repository"
          }
        }
      }
    },
    "DockerImage": {
      "description": "DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): - imageSizeBytes - mediaType - buildTime",
      "properties": {
        "mediaType": {
          "description": "Media type of this image, e.g. \"application/vnd.docker.distribution.manifest.v2+json\". This field is returned as the 'metadata.mediaType' field in the Version resource.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\" is the image's digest."
        },
        "uri": {
          "type": "string",
          "description": "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"
        },
        "uploadTime": {
          "format": "google-datetime",
          "description": "Time the image was uploaded.",
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "Tags attached to this image.",
          "type": "array"
        },
        "buildTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor."
        },
        "imageSizeBytes": {
          "type": "string",
          "description": "Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "DockerImage"
    },
    "ImportAptArtifactsGcsSource": {
      "type": "object",
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "id": "ImportAptArtifactsGcsSource",
      "properties": {
        "uris": {
          "type": "array",
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "items": {
            "type": "string"
          }
        },
        "useWildcards": {
          "type": "boolean",
          "description": "Supports URI wildcards for matching multiple objects from a single URI."
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "id": "Operation"
    },
    "UploadYumArtifactMediaResponse": {
      "id": "UploadYumArtifactMediaResponse",
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      },
      "type": "object",
      "description": "The response to upload an artifact."
    },
    "ListDockerImagesResponse": {
      "id": "ListDockerImagesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
          "type": "string"
        },
        "dockerImages": {
          "items": {
            "$ref": "DockerImage"
          },
          "description": "The docker images returned.",
          "type": "array"
        }
      },
      "description": "The response from listing docker images."
    },
    "UploadAptArtifactMediaResponse": {
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      },
      "description": "The response to upload an artifact.",
      "type": "object",
      "id": "UploadAptArtifactMediaResponse"
    },
    "ImportYumArtifactsGcsSource": {
      "properties": {
        "useWildcards": {
          "description": "Supports URI wildcards for matching multiple objects from a single URI.",
          "type": "boolean"
        },
        "uris": {
          "type": "array",
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ImportYumArtifactsGcsSource",
      "description": "Google Cloud Storage location where the artifacts currently reside."
    },
    "YumArtifact": {
      "type": "object",
      "id": "YumArtifact",
      "description": "A detailed representation of a Yum artifact.",
      "properties": {
        "packageName": {
          "description": "Output only. The yum package name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "architecture": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Operating system architecture of the artifact."
        },
        "packageType": {
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. An artifact is a binary or source package.",
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package (.rpm). .rpm",
            "Source package (.srpm)."
          ]
        },
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportYumArtifactsResponse": {
      "properties": {
        "yumArtifacts": {
          "description": "The yum artifacts updated.",
          "items": {
            "$ref": "YumArtifact"
          },
          "type": "array"
        },
        "errors": {
          "description": "Detailed error info for packages that were not imported.",
          "type": "array",
          "items": {
            "$ref": "ImportYumArtifactsErrorInfo"
          }
        }
      },
      "type": "object",
      "description": "The response message from importing artifacts.",
      "id": "ImportYumArtifactsResponse"
    }
  },
  "version": "v1",
  "discoveryVersion": "v1",
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "protocol": "rest"
}

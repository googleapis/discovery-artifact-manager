{
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  },
  "schemas": {
    "UploadAptArtifactRequest": {
      "type": "object",
      "description": "The request to upload an artifact.",
      "id": "UploadAptArtifactRequest",
      "properties": {}
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ListVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of versions, or empty if there are no more versions to return.",
          "type": "string"
        },
        "versions": {
          "description": "The versions returned.",
          "items": {
            "$ref": "Version"
          },
          "type": "array"
        }
      },
      "id": "ListVersionsResponse",
      "description": "The response from listing versions.",
      "type": "object"
    },
    "YumArtifact": {
      "type": "object",
      "description": "A detailed representation of a Yum artifact.",
      "properties": {
        "packageName": {
          "type": "string",
          "description": "Output only. The yum package name of the artifact.",
          "readOnly": true
        },
        "architecture": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Operating system architecture of the artifact."
        },
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageType": {
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. An artifact is a binary or source package.",
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package (.rpm).",
            "Source package (.srpm)."
          ]
        }
      },
      "id": "YumArtifact"
    },
    "PythonRepository": {
      "type": "object",
      "id": "PythonRepository",
      "properties": {
        "publicRepository": {
          "enumDescriptions": [
            "Unspecified repository.",
            "PyPI."
          ],
          "type": "string",
          "description": "One of the publicly available Python repositories supported by Artifact Registry.",
          "enum": [
            "PUBLIC_REPOSITORY_UNSPECIFIED",
            "PYPI"
          ]
        }
      },
      "description": "Configuration for a Python remote repository."
    },
    "VPCSCConfig": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the project's VPC SC Config. Always of the form: projects/{projectID}/locations/{location}/vpcscConfig In update request: never set In response: always set"
        },
        "vpcscPolicy": {
          "enumDescriptions": [
            "VPCSC_POLICY_UNSPECIFIED - the VPS SC policy is not defined. When VPS SC policy is not defined - the Service will use the default behavior (VPCSC_DENY).",
            "VPCSC_DENY - repository will block the requests to the Upstreams for the Remote Repositories if the resource is in the perimeter.",
            "VPCSC_ALLOW - repository will allow the requests to the Upstreams for the Remote Repositories if the resource is in the perimeter."
          ],
          "enum": [
            "VPCSC_POLICY_UNSPECIFIED",
            "DENY",
            "ALLOW"
          ],
          "description": "The project per location VPC SC policy that defines the VPC SC behavior for the Remote Repository (Allow/Deny).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The Artifact Registry VPC SC config that apply to a Project.",
      "id": "VPCSCConfig"
    },
    "KfpArtifact": {
      "id": "KfpArtifact",
      "properties": {
        "version": {
          "description": "The version associated with the KFP artifact. Must follow the Semantic Versioning standard.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the KFP artifact. Since users don't directly interact with this resource, the name will be derived from the associated version. For example, when version = \".../versions/sha256:abcdef...\", the name will be \".../kfpArtifacts/sha256:abcdef...\"."
        }
      },
      "type": "object",
      "description": "A detailed representation of a GooGet artifact."
    },
    "Tag": {
      "type": "object",
      "description": "Tags point to a version and represent an alternative name that can be used to access the version.",
      "id": "Tag",
      "properties": {
        "version": {
          "type": "string",
          "description": "The name of the version the tag refers to, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\" If the package or version ID parts contain slashes, the slashes are escaped."
        },
        "name": {
          "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
          "type": "string"
        }
      }
    },
    "UploadAptArtifactResponse": {
      "id": "UploadAptArtifactResponse",
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "type": "object",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts updated.",
          "items": {
            "$ref": "AptArtifact"
          },
          "type": "array"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      },
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "Repository": {
      "properties": {
        "virtualRepositoryConfig": {
          "$ref": "VirtualRepositoryConfig",
          "description": "Configuration specific for a Virtual Repository."
        },
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DOCKER",
            "MAVEN",
            "NPM",
            "APT",
            "YUM",
            "PYTHON",
            "KFP"
          ],
          "enumDescriptions": [
            "Unspecified package format.",
            "Docker package format.",
            "Maven package format.",
            "NPM package format.",
            "APT package format.",
            "YUM package format.",
            "Python package format.",
            "Kubeflow Pipelines package format."
          ],
          "type": "string",
          "description": "The format of packages that are stored in the repository."
        },
        "remoteRepositoryConfig": {
          "$ref": "RemoteRepositoryConfig",
          "description": "Configuration specific for a Remote Repository."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes."
        },
        "description": {
          "description": "The user-provided description of the repository.",
          "type": "string"
        },
        "satisfiesPzs": {
          "description": "Output only. If set, the repository satisfies physical zone separation.",
          "readOnly": true,
          "type": "boolean"
        },
        "mode": {
          "enumDescriptions": [
            "Unspecified mode.",
            "A standard repository storing artifacts.",
            "A virtual repository to serve artifacts from one or more sources.",
            "A remote repository to serve artifacts from a remote source."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "STANDARD_REPOSITORY",
            "VIRTUAL_REPOSITORY",
            "REMOTE_REPOSITORY"
          ],
          "type": "string",
          "description": "The mode of the repository."
        },
        "name": {
          "type": "string",
          "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\"."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created."
        },
        "mavenConfig": {
          "$ref": "MavenRepositoryConfig",
          "description": "Maven repository config contains repository level configuration for the repositories of maven type."
        },
        "sizeBytes": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The size, in bytes, of all artifact storage in this repository. Repositories that are generally available or in public preview use this to calculate storage costs."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the repository was created."
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the repository was last updated.",
          "format": "google-datetime"
        }
      },
      "id": "Repository",
      "description": "A Repository for storing artifacts with a specific format.",
      "type": "object"
    },
    "Hash": {
      "description": "A hash of file content.",
      "id": "Hash",
      "properties": {
        "type": {
          "description": "The algorithm used to compute the hash value.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "SHA256 hash.",
            "MD5 hash."
          ],
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256",
            "MD5"
          ]
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "The hash value."
        }
      },
      "type": "object"
    },
    "UploadAptArtifactMediaResponse": {
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      },
      "description": "The response to upload an artifact.",
      "type": "object",
      "id": "UploadAptArtifactMediaResponse"
    },
    "Operation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "AptArtifact": {
      "properties": {
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "architecture": {
          "description": "Output only. Operating system architecture of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ],
          "description": "Output only. An artifact is a binary or source package.",
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package.",
            "Source package."
          ]
        },
        "component": {
          "description": "Output only. Repository component of the artifact.",
          "type": "string",
          "readOnly": true
        },
        "controlFile": {
          "format": "byte",
          "description": "Output only. Contents of the artifact's control metadata file.",
          "type": "string",
          "readOnly": true
        },
        "packageName": {
          "description": "Output only. The Apt package name of the artifact.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "AptArtifact",
      "description": "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html",
      "type": "object"
    },
    "ImportAptArtifactsResponse": {
      "type": "object",
      "id": "ImportAptArtifactsResponse",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts imported.",
          "items": {
            "$ref": "AptArtifact"
          },
          "type": "array"
        },
        "errors": {
          "type": "array",
          "description": "Detailed error info for packages that were not imported.",
          "items": {
            "$ref": "ImportAptArtifactsErrorInfo"
          }
        }
      },
      "description": "The response message from importing APT artifacts."
    },
    "OperationMetadata": {
      "description": "Metadata type for longrunning-operations, currently empty.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {}
    },
    "ImportYumArtifactsResponse": {
      "id": "ImportYumArtifactsResponse",
      "properties": {
        "yumArtifacts": {
          "description": "The yum artifacts imported.",
          "items": {
            "$ref": "YumArtifact"
          },
          "type": "array"
        },
        "errors": {
          "items": {
            "$ref": "ImportYumArtifactsErrorInfo"
          },
          "description": "Detailed error info for packages that were not imported.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message from importing YUM artifacts."
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "UploadYumArtifactMetadata": {
      "properties": {},
      "description": "The operation metadata for uploading artifacts.",
      "id": "UploadYumArtifactMetadata",
      "type": "object"
    },
    "Version": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time when the version was created.",
          "format": "google-datetime"
        },
        "metadata": {
          "readOnly": true,
          "type": "object",
          "description": "Output only. Repository-specific Metadata stored against this version. The fields returned are defined by the underlying repository-specific resource. Currently, the resources could be: DockerImage MavenArtifact",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "relatedTags": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          },
          "description": "Output only. A list of related tags. Will contain up to 100 tags that reference this version."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the version was last updated."
        },
        "name": {
          "type": "string",
          "description": "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\". If the package or version ID parts contain slashes, the slashes are escaped."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the version, as specified in its metadata."
        }
      },
      "id": "Version",
      "description": "The body of a version resource. A version resource represents a collection of components, such as files and other data. This may correspond to a version in many package management schemes."
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "id": "Location"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "DockerRepository": {
      "id": "DockerRepository",
      "type": "object",
      "description": "Configuration for a Docker remote repository.",
      "properties": {
        "publicRepository": {
          "enumDescriptions": [
            "Unspecified repository.",
            "Docker Hub."
          ],
          "enum": [
            "PUBLIC_REPOSITORY_UNSPECIFIED",
            "DOCKER_HUB"
          ],
          "type": "string",
          "description": "One of the publicly available Docker repositories supported by Artifact Registry."
        }
      }
    },
    "MavenRepository": {
      "description": "Configuration for a Maven remote repository.",
      "properties": {
        "publicRepository": {
          "enumDescriptions": [
            "Unspecified repository.",
            "Maven Central."
          ],
          "type": "string",
          "enum": [
            "PUBLIC_REPOSITORY_UNSPECIFIED",
            "MAVEN_CENTRAL"
          ],
          "description": "One of the publicly available Maven repositories supported by Artifact Registry."
        }
      },
      "type": "object",
      "id": "MavenRepository"
    },
    "ListMavenArtifactsResponse": {
      "properties": {
        "mavenArtifacts": {
          "items": {
            "$ref": "MavenArtifact"
          },
          "type": "array",
          "description": "The maven artifacts returned."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return."
        }
      },
      "description": "The response from listing maven artifacts.",
      "id": "ListMavenArtifactsResponse",
      "type": "object"
    },
    "GoogleDevtoolsArtifactregistryV1File": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the File was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the file, for example: \"projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt\". If the file ID part contains slashes, they are escaped."
        },
        "hashes": {
          "items": {
            "$ref": "Hash"
          },
          "description": "The hashes of the file content.",
          "type": "array"
        },
        "owner": {
          "type": "string",
          "description": "The name of the Package or Version that owns this file, if any."
        },
        "fetchTime": {
          "description": "Output only. The time when the last attempt to refresh the file's data was made. Only set when the repository is remote.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the File was last updated."
        },
        "sizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The size of the File in bytes."
        }
      },
      "id": "GoogleDevtoolsArtifactregistryV1File",
      "description": "Files store content that is potentially associated with Packages or Versions."
    },
    "BatchDeleteVersionsMetadata": {
      "properties": {
        "failedVersions": {
          "items": {
            "type": "string"
          },
          "description": "The versions the operation failed to delete.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "BatchDeleteVersionsMetadata",
      "description": "The metadata of an LRO from deleting multiple versions."
    },
    "ImportAptArtifactsGcsSource": {
      "type": "object",
      "properties": {
        "useWildcards": {
          "type": "boolean",
          "description": "Supports URI wildcards for matching multiple objects from a single URI."
        },
        "uris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object)."
        }
      },
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "id": "ImportAptArtifactsGcsSource"
    },
    "UploadYumArtifactResponse": {
      "properties": {
        "yumArtifacts": {
          "items": {
            "$ref": "YumArtifact"
          },
          "description": "The Apt artifacts updated.",
          "type": "array"
        }
      },
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "type": "object",
      "id": "UploadYumArtifactResponse"
    },
    "UpstreamPolicy": {
      "id": "UpstreamPolicy",
      "properties": {
        "repository": {
          "type": "string",
          "description": "A reference to the repository resource, for example: \"projects/p1/locations/us-central1/repository/repo1\"."
        },
        "id": {
          "type": "string",
          "description": "The user-provided ID of the upstream policy."
        },
        "priority": {
          "description": "Entries with a greater priority value take precedence in the pull order.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Artifact policy configuration for the repository contents.",
      "type": "object"
    },
    "ListPythonPackagesResponse": {
      "id": "ListPythonPackagesResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
          "type": "string"
        },
        "pythonPackages": {
          "items": {
            "$ref": "PythonPackage"
          },
          "description": "The python packages returned.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response from listing python packages."
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "Binding": {
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "UploadKfpArtifactMetadata": {
      "id": "UploadKfpArtifactMetadata",
      "type": "object",
      "properties": {},
      "description": "The operation metadata for uploading KFP artifacts."
    },
    "ImportAptArtifactsErrorInfo": {
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "ImportAptArtifactsGcsSource",
          "description": "Google Cloud Storage location requested."
        },
        "error": {
          "$ref": "Status",
          "description": "The detailed error status."
        }
      },
      "id": "ImportAptArtifactsErrorInfo",
      "description": "Error information explaining why a package was not imported."
    },
    "UploadYumArtifactRequest": {
      "id": "UploadYumArtifactRequest",
      "description": "The request to upload an artifact.",
      "type": "object",
      "properties": {}
    },
    "NpmRepository": {
      "type": "object",
      "description": "Configuration for a Npm remote repository.",
      "id": "NpmRepository",
      "properties": {
        "publicRepository": {
          "enum": [
            "PUBLIC_REPOSITORY_UNSPECIFIED",
            "NPMJS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified repository.",
            "npmjs."
          ],
          "description": "One of the publicly available Npm repositories supported by Artifact Registry."
        }
      }
    },
    "ProjectSettings": {
      "properties": {
        "name": {
          "description": "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings In update request: never set In response: always set",
          "type": "string"
        },
        "legacyRedirectionState": {
          "type": "string",
          "enum": [
            "REDIRECTION_STATE_UNSPECIFIED",
            "REDIRECTION_FROM_GCR_IO_DISABLED",
            "REDIRECTION_FROM_GCR_IO_ENABLED",
            "REDIRECTION_FROM_GCR_IO_FINALIZED"
          ],
          "enumDescriptions": [
            "No redirection status has been set.",
            "Redirection is disabled.",
            "Redirection is enabled.",
            "Redirection is enabled, and has been finalized so cannot be reverted."
          ],
          "description": "The redirection state of the legacy repositories in this project."
        }
      },
      "id": "ProjectSettings",
      "type": "object",
      "description": "The Artifact Registry settings that apply to a Project."
    },
    "ListPackagesResponse": {
      "type": "object",
      "id": "ListPackagesResponse",
      "description": "The response from listing packages.",
      "properties": {
        "packages": {
          "items": {
            "$ref": "Package"
          },
          "type": "array",
          "description": "The packages returned."
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of packages, or empty if there are no more packages to return.",
          "type": "string"
        }
      }
    },
    "Package": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the package was last updated. This includes publishing a new version of the package."
        },
        "name": {
          "type": "string",
          "description": "The name of the package, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1\". If the package ID part contains slashes, the slashes are escaped."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the package was created."
        },
        "displayName": {
          "description": "The display name of the package.",
          "type": "string"
        }
      },
      "id": "Package",
      "type": "object",
      "description": "Packages are named collections of versions."
    },
    "UploadKfpArtifactMediaResponse": {
      "type": "object",
      "description": "The response to upload an artifact.",
      "id": "UploadKfpArtifactMediaResponse",
      "properties": {
        "operation": {
          "description": "Operation that will be returned to the user.",
          "$ref": "Operation"
        }
      }
    },
    "DockerImage": {
      "description": "DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): * imageSizeBytes * mediaType * buildTime",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf",
          "type": "string"
        },
        "mediaType": {
          "description": "Media type of this image, e.g. \"application/vnd.docker.distribution.manifest.v2+json\". This field is returned as the 'metadata.mediaType' field in the Version resource.",
          "type": "string"
        },
        "buildTime": {
          "description": "The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the docker image was last updated.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\" is the image's digest."
        },
        "tags": {
          "description": "Tags attached to this image.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "imageSizeBytes": {
          "format": "int64",
          "description": "Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource.",
          "type": "string"
        },
        "uploadTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time the image was uploaded."
        }
      },
      "id": "DockerImage"
    },
    "PythonPackage": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. URL to access the package. Example: us-west4-python.pkg.dev/test-project/test-repo/python_package/file-name-1.0.0.tar.gz"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Time the package was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "version": {
          "description": "Version of this package.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time the package was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Required. registry_location, project_id, repository_name and python_package forms a unique package name:`projects//locations//repository//pythonPackages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/pythonPackages/ python_package:1.0.0\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and python_package:1.0.0\" is the python package."
        },
        "packageName": {
          "description": "Package for the artifact.",
          "type": "string"
        }
      },
      "description": "PythonPackage represents a python artifact.",
      "id": "PythonPackage",
      "type": "object"
    },
    "ImportAptArtifactsRequest": {
      "type": "object",
      "id": "ImportAptArtifactsRequest",
      "description": "The request to import new apt artifacts.",
      "properties": {
        "gcsSource": {
          "$ref": "ImportAptArtifactsGcsSource",
          "description": "Google Cloud Storage location where input content is located."
        }
      }
    },
    "Expr": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "UploadAptArtifactMetadata": {
      "description": "The operation metadata for uploading artifacts.",
      "properties": {},
      "id": "UploadAptArtifactMetadata",
      "type": "object"
    },
    "ListTagsResponse": {
      "type": "object",
      "id": "ListTagsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of tags, or empty if there are no more tags to return.",
          "type": "string"
        },
        "tags": {
          "items": {
            "$ref": "Tag"
          },
          "type": "array",
          "description": "The tags returned."
        }
      },
      "description": "The response from listing tags."
    },
    "ListFilesResponse": {
      "id": "ListFilesResponse",
      "properties": {
        "files": {
          "description": "The files returned.",
          "type": "array",
          "items": {
            "$ref": "GoogleDevtoolsArtifactregistryV1File"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of files, or empty if there are no more files to return."
        }
      },
      "description": "The response from listing files.",
      "type": "object"
    },
    "ImportYumArtifactsGcsSource": {
      "id": "ImportYumArtifactsGcsSource",
      "type": "object",
      "properties": {
        "uris": {
          "items": {
            "type": "string"
          },
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "type": "array"
        },
        "useWildcards": {
          "type": "boolean",
          "description": "Supports URI wildcards for matching multiple objects from a single URI."
        }
      },
      "description": "Google Cloud Storage location where the artifacts currently reside."
    },
    "RemoteRepositoryConfig": {
      "properties": {
        "mavenRepository": {
          "$ref": "MavenRepository",
          "description": "Specific settings for a Maven remote repository."
        },
        "pythonRepository": {
          "$ref": "PythonRepository",
          "description": "Specific settings for a Python remote repository."
        },
        "description": {
          "description": "The description of the remote source.",
          "type": "string"
        },
        "dockerRepository": {
          "$ref": "DockerRepository",
          "description": "Specific settings for a Docker remote repository."
        },
        "npmRepository": {
          "description": "Specific settings for an Npm remote repository.",
          "$ref": "NpmRepository"
        }
      },
      "id": "RemoteRepositoryConfig",
      "type": "object",
      "description": "Remote repository configuration."
    },
    "ImportYumArtifactsMetadata": {
      "properties": {},
      "id": "ImportYumArtifactsMetadata",
      "type": "object",
      "description": "The operation metadata for importing artifacts."
    },
    "UploadKfpArtifactRequest": {
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags to be created with the version."
        },
        "description": {
          "description": "Description of the package version.",
          "type": "string"
        }
      },
      "id": "UploadKfpArtifactRequest",
      "type": "object",
      "description": "The request to upload an artifact."
    },
    "ListRepositoriesResponse": {
      "description": "The response from listing repositories.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of repositories, or empty if there are no more repositories to return."
        },
        "repositories": {
          "type": "array",
          "description": "The repositories returned.",
          "items": {
            "$ref": "Repository"
          }
        }
      },
      "id": "ListRepositoriesResponse",
      "type": "object"
    },
    "MavenArtifact": {
      "type": "object",
      "id": "MavenArtifact",
      "description": "MavenArtifact represents a maven artifact.",
      "properties": {
        "artifactId": {
          "description": "Artifact ID for the artifact.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Version of this artifact."
        },
        "pomUri": {
          "description": "Required. URL to access the pom file of the artifact. Example: us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time the artifact was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the artifact was updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Required. registry_location, project_id, repository_name and maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"com.google.guava:guava:31.0-jre\" is the maven artifact."
        },
        "groupId": {
          "type": "string",
          "description": "Group ID for the artifact. Example: com.google.guava"
        }
      }
    },
    "ImportYumArtifactsErrorInfo": {
      "type": "object",
      "description": "Error information explaining why a package was not imported.",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportYumArtifactsGcsSource"
        },
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        }
      },
      "id": "ImportYumArtifactsErrorInfo"
    },
    "UploadYumArtifactMediaResponse": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "Operation",
          "description": "Operation to be returned to the user."
        }
      },
      "id": "UploadYumArtifactMediaResponse",
      "description": "The response to upload an artifact."
    },
    "ListNpmPackagesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
          "type": "string"
        },
        "npmPackages": {
          "items": {
            "$ref": "NpmPackage"
          },
          "type": "array",
          "description": "The npm packages returned."
        }
      },
      "id": "ListNpmPackagesResponse",
      "type": "object",
      "description": "The response from listing npm packages."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty",
      "properties": {}
    },
    "ImportAptArtifactsMetadata": {
      "type": "object",
      "properties": {},
      "description": "The operation metadata for importing artifacts.",
      "id": "ImportAptArtifactsMetadata"
    },
    "VirtualRepositoryConfig": {
      "id": "VirtualRepositoryConfig",
      "description": "Virtual repository configuration.",
      "type": "object",
      "properties": {
        "upstreamPolicies": {
          "description": "Policies that configure the upstream artifacts distributed by the Virtual Repository. Upstream policies cannot be set on a standard repository.",
          "items": {
            "$ref": "UpstreamPolicy"
          },
          "type": "array"
        }
      }
    },
    "MavenRepositoryConfig": {
      "type": "object",
      "id": "MavenRepositoryConfig",
      "description": "MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.",
      "properties": {
        "allowSnapshotOverwrites": {
          "description": "The repository with this flag will allow publishing the same snapshot versions.",
          "type": "boolean"
        },
        "versionPolicy": {
          "type": "string",
          "enumDescriptions": [
            "VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When the version policy is not defined, no validation is performed for the versions.",
            "RELEASE - repository will accept only Release versions.",
            "SNAPSHOT - repository will accept only Snapshot versions."
          ],
          "description": "Version policy defines the versions that the registry will accept.",
          "enum": [
            "VERSION_POLICY_UNSPECIFIED",
            "RELEASE",
            "SNAPSHOT"
          ]
        }
      }
    },
    "ListDockerImagesResponse": {
      "description": "The response from listing docker images.",
      "id": "ListDockerImagesResponse",
      "properties": {
        "dockerImages": {
          "description": "The docker images returned.",
          "items": {
            "$ref": "DockerImage"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return."
        }
      },
      "type": "object"
    },
    "ImportYumArtifactsRequest": {
      "id": "ImportYumArtifactsRequest",
      "description": "The request to import new yum artifacts.",
      "properties": {
        "gcsSource": {
          "$ref": "ImportYumArtifactsGcsSource",
          "description": "Google Cloud Storage location where input content is located."
        }
      },
      "type": "object"
    },
    "NpmPackage": {
      "description": "NpmPackage represents an npm artifact.",
      "id": "NpmPackage",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. Time the package was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of this package.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags attached to this package."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Time the package was updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. registry_location, project_id, repository_name and npm_package forms a unique package For example, \"projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/ npm_test:1.0.0\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and npm_test:1.0.0\" is the npm package."
        },
        "packageName": {
          "description": "Package for the artifact.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "title": "Artifact Registry API",
  "ownerDomain": "google.com",
  "revision": "20230202",
  "protocol": "rest",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "canonicalName": "Artifact Registry",
  "servicePath": "",
  "discoveryVersion": "v1",
  "basePath": "",
  "id": "artifactregistry:v1",
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "repositories": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListRepositoriesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Lists repositories.",
                  "id": "artifactregistry.projects.locations.repositories.list",
                  "path": "v1/{+parent}/repositories",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource whose repositories will be listed.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous list request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of repositories to return. Maximum page size is 1,000.",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Repository"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "description": "Gets a repository.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "description": "Required. The name of the repository to retrieve.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "id": "artifactregistry.projects.locations.repositories.get"
                },
                "create": {
                  "id": "artifactregistry.projects.locations.repositories.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource where the repository will be created.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "repositoryId": {
                      "type": "string",
                      "description": "The repository id to use for this repository.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Repository"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "description": "Creates a repository. The returned Operation will finish once the repository has been created. Its response will be the created Repository.",
                  "path": "v1/{+parent}/repositories",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "artifactregistry.projects.locations.repositories.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy",
                  "description": "Updates the IAM policy for a given resource.",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Repository"
                  },
                  "request": {
                    "$ref": "Repository"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\".",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates a repository.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "id": "artifactregistry.projects.locations.repositories.patch"
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions",
                  "description": "Tests if the caller has a list of permissions on a resource.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "artifactregistry.projects.locations.repositories.testIamPermissions"
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "artifactregistry.projects.locations.repositories.getIamPolicy",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy",
                  "description": "Gets the IAM policy for a given resource.",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the repository to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "id": "artifactregistry.projects.locations.repositories.delete",
                  "description": "Deletes a repository and all of its contents. The returned Operation will finish once the repository has been deleted. It will not have any Operation metadata and will return a google.protobuf.Empty response.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              },
              "resources": {
                "aptArtifacts": {
                  "methods": {
                    "upload": {
                      "mediaUpload": {
                        "accept": [
                          "*/*"
                        ],
                        "protocols": {
                          "simple": {
                            "path": "/upload/v1/{+parent}/aptArtifacts:create",
                            "multipart": true
                          }
                        }
                      },
                      "description": "Directly uploads an Apt artifact. The returned Operation will complete once the resources are uploaded. Package, Version, and File resources are created based on the imported artifact. Imported artifacts that conflict with existing resources are ignored.",
                      "response": {
                        "$ref": "UploadAptArtifactMediaResponse"
                      },
                      "supportsMediaUpload": true,
                      "request": {
                        "$ref": "UploadAptArtifactRequest"
                      },
                      "id": "artifactregistry.projects.locations.repositories.aptArtifacts.upload",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:create",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "The name of the parent resource where the artifacts will be uploaded.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/aptArtifacts:create"
                    },
                    "import": {
                      "id": "artifactregistry.projects.locations.repositories.aptArtifacts.import",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "parent": {
                          "description": "The name of the parent resource where the artifacts will be imported.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                        }
                      },
                      "description": "Imports Apt artifacts. The returned Operation will complete once the resources are imported. Package, Version, and File resources are created based on the imported artifacts. Imported artifacts that conflict with existing resources are ignored.",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/aptArtifacts:import",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:import",
                      "request": {
                        "$ref": "ImportAptArtifactsRequest"
                      }
                    }
                  }
                },
                "dockerImages": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/dockerImages/[^/]+$",
                          "description": "Required. The name of the docker images.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets a docker image.",
                      "response": {
                        "$ref": "DockerImage"
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/dockerImages/{dockerImagesId}",
                      "id": "artifactregistry.projects.locations.repositories.dockerImages.get"
                    },
                    "list": {
                      "path": "v1/{+parent}/dockerImages",
                      "httpMethod": "GET",
                      "description": "Lists docker images.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/dockerImages",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the parent resource whose docker images will be listed.",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of artifacts to return."
                        },
                        "orderBy": {
                          "description": "The field to order the results by.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDockerImagesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "id": "artifactregistry.projects.locations.repositories.dockerImages.list"
                    }
                  }
                },
                "pythonPackages": {
                  "methods": {
                    "list": {
                      "description": "Lists python packages.",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the parent resource whose python packages will be listed.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "The maximum number of artifacts to return.",
                          "location": "query",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "id": "artifactregistry.projects.locations.repositories.pythonPackages.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pythonPackages",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "response": {
                        "$ref": "ListPythonPackagesResponse"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/pythonPackages"
                    },
                    "get": {
                      "id": "artifactregistry.projects.locations.repositories.pythonPackages.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets a python package.",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the python package.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/pythonPackages/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/pythonPackages/{pythonPackagesId}",
                      "response": {
                        "$ref": "PythonPackage"
                      }
                    }
                  }
                },
                "files": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Lists files.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFilesResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files",
                      "httpMethod": "GET",
                      "id": "artifactregistry.projects.locations.repositories.files.list",
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `owner` An example of using a filter: * `name=\"projects/p1/locations/us-central1/repositories/repo1/files/a/b/*\"` --\u003e Files with an ID starting with \"a/b/\". * `owner=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Files owned by the version `1.0` in package `pkg1`."
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of files to return."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "The name of the repository whose files will be listed. For example: \"projects/p1/locations/us-central1/repositories/repo1"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "The field to order the results by."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request, if any."
                        }
                      },
                      "path": "v1/{+parent}/files"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleDevtoolsArtifactregistryV1File"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "path": "v1/{+name}",
                      "id": "artifactregistry.projects.locations.repositories.files.get",
                      "description": "Gets a file.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/files/.*$",
                          "required": true,
                          "description": "The name of the file to retrieve.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "yumArtifacts": {
                  "methods": {
                    "import": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+parent}/yumArtifacts:import",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:import",
                      "description": "Imports Yum (RPM) artifacts. The returned Operation will complete once the resources are imported. Package, Version, and File resources are created based on the imported artifacts. Imported artifacts that conflict with existing resources are ignored.",
                      "request": {
                        "$ref": "ImportYumArtifactsRequest"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "The name of the parent resource where the artifacts will be imported.",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "id": "artifactregistry.projects.locations.repositories.yumArtifacts.import"
                    },
                    "upload": {
                      "supportsMediaUpload": true,
                      "description": "Directly uploads a Yum artifact. The returned Operation will complete once the resources are uploaded. Package, Version, and File resources are created based on the imported artifact. Imported artifacts that conflict with existing resources are ignored.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "description": "The name of the parent resource where the artifacts will be uploaded.",
                          "type": "string"
                        }
                      },
                      "mediaUpload": {
                        "accept": [
                          "*/*"
                        ],
                        "protocols": {
                          "simple": {
                            "path": "/upload/v1/{+parent}/yumArtifacts:create",
                            "multipart": true
                          }
                        }
                      },
                      "response": {
                        "$ref": "UploadYumArtifactMediaResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/yumArtifacts:create",
                      "request": {
                        "$ref": "UploadYumArtifactRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "artifactregistry.projects.locations.repositories.yumArtifacts.upload"
                    }
                  }
                },
                "mavenArtifacts": {
                  "methods": {
                    "get": {
                      "id": "artifactregistry.projects.locations.repositories.mavenArtifacts.get",
                      "response": {
                        "$ref": "MavenArtifact"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/mavenArtifacts/{mavenArtifactsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/mavenArtifacts/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the maven artifact.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets a maven artifact.",
                      "path": "v1/{+name}"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "response": {
                        "$ref": "ListMavenArtifactsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of artifacts to return.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The name of the parent resource whose maven artifacts will be listed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request, if any."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/mavenArtifacts",
                      "id": "artifactregistry.projects.locations.repositories.mavenArtifacts.list",
                      "description": "Lists maven artifacts.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/mavenArtifacts"
                    }
                  }
                },
                "npmPackages": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/npmPackages/{npmPackagesId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "NpmPackage"
                      },
                      "id": "artifactregistry.projects.locations.repositories.npmPackages.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets a npm package.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the npm package.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/npmPackages/[^/]+$"
                        }
                      },
                      "httpMethod": "GET"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/npmPackages",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists npm packages.",
                      "id": "artifactregistry.projects.locations.repositories.npmPackages.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The name of the parent resource whose npm packages will be listed.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of artifacts to return.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListNpmPackagesResponse"
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/npmPackages"
                    }
                  }
                },
                "packages": {
                  "resources": {
                    "versions": {
                      "methods": {
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "parameters": {
                            "view": {
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ],
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "type": "string",
                              "description": "The view that should be returned in the response.",
                              "location": "query"
                            },
                            "name": {
                              "location": "path",
                              "description": "The name of the version to retrieve.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$"
                            }
                          },
                          "description": "Gets a version",
                          "response": {
                            "$ref": "Version"
                          }
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.delete",
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes a version and all of its content. The returned operation will complete once the version has been deleted.",
                          "parameters": {
                            "force": {
                              "type": "boolean",
                              "location": "query",
                              "description": "By default, a version that is tagged may not be deleted. If force=true, the version and any tags pointing to the version are deleted."
                            },
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "The name of the version to delete.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$"
                            }
                          },
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "path": "v1/{+parent}/versions",
                          "response": {
                            "$ref": "ListVersionsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.list",
                          "description": "Lists versions.",
                          "parameters": {
                            "view": {
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "type": "string",
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ],
                              "description": "The view that should be returned in the response.",
                              "location": "query"
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "The maximum number of versions to return. Maximum page size is 1,000.",
                              "format": "int32",
                              "location": "query"
                            },
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. The field to order the results by."
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "The next_page_token value returned from a previous list request, if any."
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "The name of the parent resource whose versions will be listed."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions"
                        }
                      }
                    },
                    "tags": {
                      "methods": {
                        "patch": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Tag"
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.patch",
                          "httpMethod": "PATCH",
                          "description": "Updates a tag.",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "request": {
                            "$ref": "Tag"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "type": "string",
                              "format": "google-fieldmask",
                              "location": "query",
                              "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                            }
                          }
                        },
                        "get": {
                          "path": "v1/{+name}",
                          "description": "Gets a tag.",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "response": {
                            "$ref": "Tag"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "description": "The name of the tag to retrieve.",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.get"
                        },
                        "create": {
                          "parameters": {
                            "parent": {
                              "description": "The name of the parent resource where the tag will be created.",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$"
                            },
                            "tagId": {
                              "type": "string",
                              "location": "query",
                              "description": "The tag id to use for this repository."
                            }
                          },
                          "response": {
                            "$ref": "Tag"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "description": "Creates a tag.",
                          "path": "v1/{+parent}/tags",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.create",
                          "request": {
                            "$ref": "Tag"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST"
                        },
                        "delete": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "description": "The name of the tag to delete.",
                              "required": true
                            }
                          },
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1/{+name}",
                          "httpMethod": "DELETE",
                          "description": "Deletes a tag.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.delete",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1/{+parent}/tags",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "description": "The name of the parent resource whose tags will be listed.",
                              "location": "path"
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "description": "The maximum number of tags to return. Maximum page size is 10,000.",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `version` An example of using a filter: * `version=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Tags that are applied to the version `1.0` in package `pkg1`.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "ListTagsResponse"
                          },
                          "description": "Lists tags.",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the package to delete.",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a package and all of its versions and tags. The returned operation will complete once the package has been deleted.",
                      "path": "v1/{+name}",
                      "id": "artifactregistry.projects.locations.repositories.packages.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "id": "artifactregistry.projects.locations.repositories.packages.get",
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Package"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the package to retrieve.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Gets a package."
                    },
                    "list": {
                      "description": "Lists packages.",
                      "id": "artifactregistry.projects.locations.repositories.packages.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the parent resource whose packages will be listed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request, if any."
                        },
                        "pageSize": {
                          "description": "The maximum number of packages to return. Maximum page size is 1,000.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "path": "v1/{+parent}/packages",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages",
                      "response": {
                        "$ref": "ListPackagesResponse"
                      }
                    }
                  }
                },
                "kfpArtifacts": {
                  "methods": {
                    "upload": {
                      "path": "v1/{+parent}/kfpArtifacts:create",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "The resource name of the repository where the KFP artifact will be uploaded.",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "UploadKfpArtifactRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/kfpArtifacts:create",
                      "response": {
                        "$ref": "UploadKfpArtifactMediaResponse"
                      },
                      "supportsMediaUpload": true,
                      "description": "Directly uploads a KFP artifact. The returned Operation will complete once the resource is uploaded. Package, Version, and File resources will be created based on the uploaded artifact. Uploaded artifacts that conflict with existing resources will be overwritten.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "mediaUpload": {
                        "protocols": {
                          "simple": {
                            "multipart": true,
                            "path": "/upload/v1/{+parent}/kfpArtifacts:create"
                          }
                        },
                        "accept": [
                          "*/*"
                        ]
                      },
                      "httpMethod": "POST",
                      "id": "artifactregistry.projects.locations.repositories.kfpArtifacts.upload"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "id": "artifactregistry.projects.locations.operations.get",
                  "path": "v1/{+name}"
                }
              }
            }
          },
          "methods": {
            "getVpcscConfig": {
              "description": "Retrieves the VPCSC Config for the Project.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vpcscConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "id": "artifactregistry.projects.locations.getVpcscConfig",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the VPCSCConfig resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/vpcscConfig$",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "response": {
                "$ref": "VPCSCConfig"
              }
            },
            "updateVpcscConfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "VPCSCConfig"
              },
              "request": {
                "$ref": "VPCSCConfig"
              },
              "id": "artifactregistry.projects.locations.updateVpcscConfig",
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "description": "Updates the VPCSC Config for the Project.",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "The name of the project's VPC SC Config. Always of the form: projects/{projectID}/locations/{location}/vpcscConfig In update request: never set In response: always set",
                  "pattern": "^projects/[^/]+/locations/[^/]+/vpcscConfig$",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Field mask to support partial updates.",
                  "location": "query"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vpcscConfig"
            },
            "list": {
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "artifactregistry.projects.locations.list",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "id": "artifactregistry.projects.locations.get",
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      },
      "methods": {
        "updateProjectSettings": {
          "response": {
            "$ref": "ProjectSettings"
          },
          "id": "artifactregistry.projects.updateProjectSettings",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{projectsId}/projectSettings",
          "request": {
            "$ref": "ProjectSettings"
          },
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "pattern": "^projects/[^/]+/projectSettings$",
              "type": "string",
              "description": "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings In update request: never set In response: always set"
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "Field mask to support partial updates."
            }
          },
          "description": "Updates the Settings for the Project.",
          "path": "v1/{+name}"
        },
        "getProjectSettings": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/projectSettings$",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The name of the projectSettings resource."
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "description": "Retrieves the Settings for the Project.",
          "id": "artifactregistry.projects.getProjectSettings",
          "flatPath": "v1/projects/{projectsId}/projectSettings",
          "response": {
            "$ref": "ProjectSettings"
          }
        }
      }
    }
  },
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "name": "artifactregistry",
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure."
}

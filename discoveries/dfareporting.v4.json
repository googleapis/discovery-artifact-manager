{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "id": "dfareporting:v4",
  "protocol": "rest",
  "documentationLink": "https://developers.google.com/doubleclick-advertisers/",
  "mtlsRootUrl": "https://dfareporting.mtls.googleapis.com/",
  "description": "Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.",
  "title": "Campaign Manager 360 API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/dfareporting": {
          "description": "View and manage DoubleClick for Advertisers reports"
        },
        "https://www.googleapis.com/auth/ddmconversions": {
          "description": "Manage DoubleClick Digital Marketing conversions"
        },
        "https://www.googleapis.com/auth/dfatrafficking": {
          "description": "View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns"
        }
      }
    }
  },
  "resources": {
    "advertisers": {
      "methods": {
        "update": {
          "description": "Updates an existing advertiser.",
          "httpMethod": "PUT",
          "flatPath": "userprofiles/{userprofilesId}/advertisers",
          "id": "dfareporting.advertisers.update",
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "Advertiser"
          },
          "response": {
            "$ref": "Advertiser"
          },
          "parameters": {
            "profileId": {
              "type": "string",
              "location": "path",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/advertisers"
        },
        "insert": {
          "response": {
            "$ref": "Advertiser"
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "Advertiser"
          },
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64"
            }
          },
          "id": "dfareporting.advertisers.insert",
          "path": "userprofiles/{+profileId}/advertisers",
          "httpMethod": "POST",
          "description": "Inserts a new advertiser.",
          "flatPath": "userprofiles/{userprofilesId}/advertisers"
        },
        "list": {
          "httpMethod": "GET",
          "id": "dfareporting.advertisers.list",
          "description": "Retrieves a list of advertisers, possibly filtered. This method supports paging.",
          "path": "userprofiles/{+profileId}/advertisers",
          "flatPath": "userprofiles/{userprofilesId}/advertisers",
          "response": {
            "$ref": "AdvertisersListResponse"
          },
          "parameters": {
            "sortField": {
              "type": "string",
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "description": "Field by which to sort the list."
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of results to return.",
              "default": "1000",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string"
            },
            "includeAdvertisersWithoutGroupsOnly": {
              "description": "Select only advertisers which do not belong to any advertiser group.",
              "location": "query",
              "type": "boolean"
            },
            "onlyParent": {
              "location": "query",
              "description": "Select only advertisers which use another advertiser's floodlight configuration.",
              "type": "boolean"
            },
            "status": {
              "type": "string",
              "location": "query",
              "enum": [
                "APPROVED",
                "ON_HOLD"
              ],
              "description": "Select only advertisers with the specified status.",
              "enumDescriptions": [
                "Approved (ads can deliver)",
                "On-hold (all ads are stopped)"
              ]
            },
            "searchString": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser June 2015\", \"advertiser April 2015\", or simply \"advertiser 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertiser\" will match objects with name \"my advertiser\", \"advertiser 2015\", or simply \"advertiser\" .",
              "type": "string",
              "location": "query"
            },
            "ids": {
              "repeated": true,
              "description": "Select only advertisers with these IDs.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "advertiserGroupIds": {
              "description": "Select only advertisers with these advertiser group IDs.",
              "type": "string",
              "location": "query",
              "repeated": true,
              "format": "int64"
            },
            "sortOrder": {
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "default": "ASCENDING",
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string",
              "description": "Order of sorted results."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$"
            },
            "subaccountId": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "Select only advertisers with these subaccount IDs."
            },
            "floodlightConfigurationIds": {
              "location": "query",
              "format": "int64",
              "description": "Select only advertisers with these floodlight configuration IDs.",
              "type": "string",
              "repeated": true
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/advertisers/{advertisersId}",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "format": "int64"
            },
            "id": {
              "required": true,
              "type": "string",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Advertiser ID."
            }
          },
          "path": "userprofiles/{+profileId}/advertisers/{+id}",
          "description": "Gets one advertiser by ID.",
          "response": {
            "$ref": "Advertiser"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.advertisers.get",
          "httpMethod": "GET"
        },
        "patch": {
          "id": "dfareporting.advertisers.patch",
          "request": {
            "$ref": "Advertiser"
          },
          "response": {
            "$ref": "Advertiser"
          },
          "path": "userprofiles/{+profileId}/advertisers",
          "description": "Updates an existing advertiser. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "required": true,
              "format": "int64",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "required": true,
              "format": "int64",
              "description": "Required. Advertiser ID.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/advertisers",
          "httpMethod": "PATCH"
        }
      }
    },
    "creativeAssets": {
      "methods": {
        "insert": {
          "supportsMediaUpload": true,
          "request": {
            "$ref": "CreativeAssetMetadata"
          },
          "response": {
            "$ref": "CreativeAssetMetadata"
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeAssets/{creativeAssetsId}/creativeAssets",
          "mediaUpload": {
            "maxSize": "1073741824",
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/dfareporting/v4/userprofiles/{+profileId}/creativeAssets/{+advertiserId}/creativeAssets"
              }
            }
          },
          "parameterOrder": [
            "profileId",
            "advertiserId"
          ],
          "path": "userprofiles/{+profileId}/creativeAssets/{+advertiserId}/creativeAssets",
          "id": "dfareporting.creativeAssets.insert",
          "description": "Inserts a new creative asset.",
          "parameters": {
            "advertiserId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "Advertiser ID of this creative. This is a required field."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "creativeFields": {
      "methods": {
        "list": {
          "description": "Retrieves a list of creative fields, possibly filtered. This method supports paging.",
          "parameters": {
            "sortField": {
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "default": "ID",
              "type": "string",
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "ids": {
              "format": "int64",
              "type": "string",
              "description": "Select only creative fields with these IDs.",
              "repeated": true,
              "location": "query"
            },
            "sortOrder": {
              "location": "query",
              "default": "ASCENDING",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string",
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ]
            },
            "advertiserIds": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "format": "int64",
              "description": "Select only creative fields that belong to these advertisers."
            },
            "maxResults": {
              "format": "int32",
              "default": "1000",
              "location": "query",
              "description": "Maximum number of results to return.",
              "type": "integer"
            },
            "profileId": {
              "required": true,
              "location": "path",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            },
            "searchString": {
              "type": "string",
              "location": "query",
              "description": "Allows searching for creative fields by name or ID. Wildcards (*) are allowed. For example, \"creativefield*2015\" will return creative fields with names like \"creativefield June 2015\", \"creativefield April 2015\", or simply \"creativefield 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativefield\" will match creative fields with the name \"my creativefield\", \"creativefield 2015\", or simply \"creativefield\"."
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "id": "dfareporting.creativeFields.list",
          "path": "userprofiles/{+profileId}/creativeFields",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeFieldsListResponse"
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeFields"
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Creative Field ID",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}",
          "response": {
            "$ref": "CreativeField"
          },
          "path": "userprofiles/{+profileId}/creativeFields/{+id}",
          "httpMethod": "GET",
          "description": "Gets one creative field by ID.",
          "id": "dfareporting.creativeFields.get"
        },
        "patch": {
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "CreativeField"
          },
          "parameters": {
            "id": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "required": true,
              "description": "CreativeField ID."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "path": "userprofiles/{+profileId}/creativeFields",
          "response": {
            "$ref": "CreativeField"
          },
          "description": "Updates an existing creative field. This method supports patch semantics.",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields",
          "id": "dfareporting.creativeFields.patch",
          "parameterOrder": [
            "profileId",
            "id"
          ]
        },
        "update": {
          "httpMethod": "PUT",
          "response": {
            "$ref": "CreativeField"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.creativeFields.update",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields",
          "description": "Updates an existing creative field.",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request."
            }
          },
          "request": {
            "$ref": "CreativeField"
          },
          "path": "userprofiles/{+profileId}/creativeFields"
        },
        "insert": {
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.creativeFields.insert",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields",
          "request": {
            "$ref": "CreativeField"
          },
          "description": "Inserts a new creative field.",
          "response": {
            "$ref": "CreativeField"
          },
          "httpMethod": "POST",
          "path": "userprofiles/{+profileId}/creativeFields",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/creativeFields/{+id}",
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "description": "Creative Field ID",
              "type": "string",
              "format": "int64"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path",
              "description": "User profile ID associated with this request."
            }
          },
          "description": "Deletes an existing creative field.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.creativeFields.delete",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}"
        }
      }
    },
    "sizes": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/sizes/{sizesId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.sizes.get",
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "Size ID.",
              "location": "path",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "required": true
            }
          },
          "description": "Gets one size by ID.",
          "path": "userprofiles/{+profileId}/sizes/{+id}",
          "response": {
            "$ref": "Size"
          },
          "httpMethod": "GET"
        },
        "list": {
          "description": "Retrieves a list of sizes, possibly filtered. Retrieved sizes are globally unique and may include values not currently in use by your account. Due to this, the list of sizes returned by this method may differ from the list seen in the Trafficking UI.",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "SizesListResponse"
          },
          "parameters": {
            "height": {
              "type": "integer",
              "location": "query",
              "description": "Select only sizes with this height.",
              "format": "int32"
            },
            "profileId": {
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            },
            "ids": {
              "repeated": true,
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Select only sizes with these IDs."
            },
            "width": {
              "description": "Select only sizes with this width.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "iabStandard": {
              "location": "query",
              "type": "boolean",
              "description": "Select only IAB standard sizes."
            }
          },
          "id": "dfareporting.sizes.list",
          "path": "userprofiles/{+profileId}/sizes",
          "flatPath": "userprofiles/{userprofilesId}/sizes",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "insert": {
          "description": "Inserts a new size.",
          "parameters": {
            "profileId": {
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "required": true,
              "pattern": "^[^/]+$"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/sizes",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.sizes.insert",
          "path": "userprofiles/{+profileId}/sizes",
          "request": {
            "$ref": "Size"
          },
          "response": {
            "$ref": "Size"
          }
        }
      }
    },
    "floodlightConfigurations": {
      "methods": {
        "get": {
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true
            },
            "id": {
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "description": "Floodlight configuration ID.",
              "format": "int64",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/floodlightConfigurations/{floodlightConfigurationsId}",
          "id": "dfareporting.floodlightConfigurations.get",
          "response": {
            "$ref": "FloodlightConfiguration"
          },
          "description": "Gets one floodlight configuration by ID.",
          "path": "userprofiles/{+profileId}/floodlightConfigurations/{+id}"
        },
        "update": {
          "response": {
            "$ref": "FloodlightConfiguration"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightConfigurations",
          "description": "Updates an existing floodlight configuration.",
          "parameters": {
            "profileId": {
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path"
            }
          },
          "path": "userprofiles/{+profileId}/floodlightConfigurations",
          "id": "dfareporting.floodlightConfigurations.update",
          "request": {
            "$ref": "FloodlightConfiguration"
          },
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "PUT"
        },
        "patch": {
          "parameters": {
            "id": {
              "location": "query",
              "description": "Required. EventTag ID.",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/floodlightConfigurations",
          "id": "dfareporting.floodlightConfigurations.patch",
          "path": "userprofiles/{+profileId}/floodlightConfigurations",
          "description": "Updates an existing event tag. This method supports patch semantics.",
          "response": {
            "$ref": "FloodlightConfiguration"
          },
          "request": {
            "$ref": "FloodlightConfiguration"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "PATCH"
        },
        "list": {
          "path": "userprofiles/{+profileId}/floodlightConfigurations",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightConfigurations",
          "response": {
            "$ref": "FloodlightConfigurationsListResponse"
          },
          "id": "dfareporting.floodlightConfigurations.list",
          "httpMethod": "GET",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "ids": {
              "format": "int64",
              "repeated": true,
              "location": "query",
              "description": "Set of IDs of floodlight configurations to retrieve. Required field; otherwise an empty list will be returned.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Retrieves a list of floodlight configurations, possibly filtered."
        }
      }
    },
    "contentCategories": {
      "methods": {
        "delete": {
          "path": "userprofiles/{+profileId}/contentCategories/{+id}",
          "parameters": {
            "id": {
              "location": "path",
              "description": "Content category ID.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/contentCategories/{contentCategoriesId}",
          "id": "dfareporting.contentCategories.delete",
          "description": "Deletes an existing content category.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "description": "Retrieves a list of content categories, possibly filtered. This method supports paging.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results.",
              "type": "string",
              "location": "query"
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "searchString": {
              "location": "query",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"contentcategory*2015\" will return objects with names like \"contentcategory June 2015\", \"contentcategory April 2015\", or simply \"contentcategory 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"contentcategory\" will match objects with name \"my contentcategory\", \"contentcategory 2015\", or simply \"contentcategory\".",
              "type": "string"
            },
            "ids": {
              "type": "string",
              "repeated": true,
              "format": "int64",
              "description": "Select only content categories with these IDs.",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "default": "1000",
              "description": "Maximum number of results to return.",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/contentCategories",
          "httpMethod": "GET",
          "id": "dfareporting.contentCategories.list",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "ContentCategoriesListResponse"
          },
          "path": "userprofiles/{+profileId}/contentCategories"
        },
        "patch": {
          "path": "userprofiles/{+profileId}/contentCategories",
          "flatPath": "userprofiles/{userprofilesId}/contentCategories",
          "id": "dfareporting.contentCategories.patch",
          "httpMethod": "PATCH",
          "description": "Updates an existing content category. This method supports patch semantics.",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "request": {
            "$ref": "ContentCategory"
          },
          "response": {
            "$ref": "ContentCategory"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "description": "Required. ContentCategory ID.",
              "type": "string",
              "location": "query",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "required": true
            }
          }
        },
        "insert": {
          "flatPath": "userprofiles/{userprofilesId}/contentCategories",
          "request": {
            "$ref": "ContentCategory"
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "ContentCategory"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Inserts a new content category.",
          "parameters": {
            "profileId": {
              "type": "string",
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.contentCategories.insert",
          "path": "userprofiles/{+profileId}/contentCategories"
        },
        "update": {
          "description": "Updates an existing content category.",
          "path": "userprofiles/{+profileId}/contentCategories",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.contentCategories.update",
          "flatPath": "userprofiles/{userprofilesId}/contentCategories",
          "parameters": {
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "ContentCategory"
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "ContentCategory"
          }
        },
        "get": {
          "parameters": {
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$"
            },
            "id": {
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string",
              "description": "Content category ID.",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.contentCategories.get",
          "path": "userprofiles/{+profileId}/contentCategories/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/contentCategories/{contentCategoriesId}",
          "description": "Gets one content category by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "ContentCategory"
          }
        }
      }
    },
    "campaignCreativeAssociations": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "profileId",
            "campaignId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/campaigns/{campaignsId}/campaignCreativeAssociations",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "POST",
          "parameters": {
            "profileId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "campaignId": {
              "location": "path",
              "required": true,
              "description": "Campaign ID in this association.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "path": "userprofiles/{+profileId}/campaigns/{+campaignId}/campaignCreativeAssociations",
          "description": "Associates a creative with the specified campaign. This method creates a default ad with dimensions matching the creative in the campaign if such a default ad does not exist already.",
          "id": "dfareporting.campaignCreativeAssociations.insert",
          "request": {
            "$ref": "CampaignCreativeAssociation"
          },
          "response": {
            "$ref": "CampaignCreativeAssociation"
          }
        },
        "list": {
          "parameters": {
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "location": "query",
              "description": "Order of sorted results.",
              "default": "ASCENDING",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path"
            },
            "maxResults": {
              "default": "1000",
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "Maximum number of results to return."
            },
            "campaignId": {
              "type": "string",
              "format": "int64",
              "description": "Campaign ID in this association.",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.campaignCreativeAssociations.list",
          "parameterOrder": [
            "profileId",
            "campaignId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/campaigns/{campaignsId}/campaignCreativeAssociations",
          "path": "userprofiles/{+profileId}/campaigns/{+campaignId}/campaignCreativeAssociations",
          "description": "Retrieves the list of creative IDs associated with the specified campaign. This method supports paging.",
          "httpMethod": "GET",
          "response": {
            "$ref": "CampaignCreativeAssociationsListResponse"
          }
        }
      }
    },
    "subaccounts": {
      "methods": {
        "patch": {
          "description": "Updates an existing subaccount. This method supports patch semantics.",
          "id": "dfareporting.subaccounts.patch",
          "path": "userprofiles/{+profileId}/subaccounts",
          "request": {
            "$ref": "Subaccount"
          },
          "response": {
            "$ref": "Subaccount"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "parameters": {
            "id": {
              "description": "Required. Subaccount ID.",
              "format": "int64",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/subaccounts",
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "description": "Gets a list of subaccounts, possibly filtered. This method supports paging.",
          "parameters": {
            "sortField": {
              "enum": [
                "ID",
                "NAME"
              ],
              "type": "string",
              "location": "query",
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request."
            },
            "ids": {
              "repeated": true,
              "description": "Select only subaccounts with these IDs.",
              "location": "query",
              "type": "string",
              "format": "int64"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "default": "1000",
              "format": "int32",
              "location": "query",
              "description": "Maximum number of results to return.",
              "type": "integer"
            },
            "sortOrder": {
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results.",
              "type": "string",
              "default": "ASCENDING"
            },
            "searchString": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"subaccount*2015\" will return objects with names like \"subaccount June 2015\", \"subaccount April 2015\", or simply \"subaccount 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"subaccount\" will match objects with name \"my subaccount\", \"subaccount 2015\", or simply \"subaccount\" .",
              "location": "query",
              "type": "string"
            }
          },
          "id": "dfareporting.subaccounts.list",
          "path": "userprofiles/{+profileId}/subaccounts",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "SubaccountsListResponse"
          },
          "flatPath": "userprofiles/{userprofilesId}/subaccounts"
        },
        "insert": {
          "request": {
            "$ref": "Subaccount"
          },
          "id": "dfareporting.subaccounts.insert",
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "POST",
          "description": "Inserts a new subaccount.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/subaccounts",
          "flatPath": "userprofiles/{userprofilesId}/subaccounts",
          "parameters": {
            "profileId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true
            }
          },
          "response": {
            "$ref": "Subaccount"
          }
        },
        "get": {
          "id": "dfareporting.subaccounts.get",
          "path": "userprofiles/{+profileId}/subaccounts/{+id}",
          "description": "Gets one subaccount by ID.",
          "flatPath": "userprofiles/{userprofilesId}/subaccounts/{subaccountsId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Subaccount ID.",
              "format": "int64",
              "type": "string",
              "location": "path"
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Subaccount"
          },
          "httpMethod": "GET"
        },
        "update": {
          "description": "Updates an existing subaccount.",
          "httpMethod": "PUT",
          "flatPath": "userprofiles/{userprofilesId}/subaccounts",
          "response": {
            "$ref": "Subaccount"
          },
          "parameters": {
            "profileId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64"
            }
          },
          "path": "userprofiles/{+profileId}/subaccounts",
          "id": "dfareporting.subaccounts.update",
          "request": {
            "$ref": "Subaccount"
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "dynamicTargetingKeys": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "advertiserId": {
              "format": "int64",
              "description": "Select only dynamic targeting keys whose object has this advertiser ID.",
              "type": "string",
              "location": "query"
            },
            "objectType": {
              "description": "Select only dynamic targeting keys with this object type.",
              "type": "string",
              "enum": [
                "OBJECT_ADVERTISER",
                "OBJECT_AD",
                "OBJECT_CREATIVE",
                "OBJECT_PLACEMENT"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                "",
                "",
                ""
              ]
            },
            "objectId": {
              "type": "string",
              "location": "query",
              "description": "Select only dynamic targeting keys with this object ID.",
              "format": "int64"
            },
            "names": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "Select only dynamic targeting keys exactly matching these names."
            }
          },
          "response": {
            "$ref": "DynamicTargetingKeysListResponse"
          },
          "httpMethod": "GET",
          "id": "dfareporting.dynamicTargetingKeys.list",
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves a list of dynamic targeting keys.",
          "flatPath": "userprofiles/{userprofilesId}/dynamicTargetingKeys",
          "path": "userprofiles/{+profileId}/dynamicTargetingKeys"
        },
        "delete": {
          "flatPath": "userprofiles/{userprofilesId}/dynamicTargetingKeys/{dynamicTargetingKeysId}",
          "path": "userprofiles/{+profileId}/dynamicTargetingKeys/{+objectId}",
          "description": "Deletes an existing dynamic targeting key.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "objectId": {
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "ID of the object of this dynamic targeting key. This is a required field.",
              "location": "path",
              "format": "int64"
            },
            "profileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64"
            },
            "name": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "Required. Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase."
            },
            "objectType": {
              "type": "string",
              "enumDescriptions": [
                "",
                "",
                "",
                ""
              ],
              "location": "query",
              "required": true,
              "description": "Required. Type of the object of this dynamic targeting key. This is a required field.",
              "enum": [
                "OBJECT_ADVERTISER",
                "OBJECT_AD",
                "OBJECT_CREATIVE",
                "OBJECT_PLACEMENT"
              ]
            }
          },
          "parameterOrder": [
            "profileId",
            "objectId",
            "name",
            "objectType"
          ],
          "id": "dfareporting.dynamicTargetingKeys.delete"
        },
        "insert": {
          "request": {
            "$ref": "DynamicTargetingKey"
          },
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/dynamicTargetingKeys",
          "id": "dfareporting.dynamicTargetingKeys.insert",
          "parameters": {
            "profileId": {
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "format": "int64",
              "description": "User profile ID associated with this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/dynamicTargetingKeys",
          "response": {
            "$ref": "DynamicTargetingKey"
          },
          "description": "Inserts a new dynamic targeting key. Keys must be created at the advertiser level before being assigned to the advertiser's ads, creatives, or placements. There is a maximum of 1000 keys per advertiser, out of which a maximum of 20 keys can be assigned per ad, creative, or placement.",
          "httpMethod": "POST"
        }
      }
    },
    "billingRates": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingRates",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.billingRates.list",
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles/{billingProfilesId}/billingRates",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true
            },
            "billingProfileId": {
              "description": "Billing profile ID of this billing rate.",
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "BillingRatesListResponse"
          },
          "description": "Retrieves a list of billing rates. This method supports paging.",
          "parameterOrder": [
            "profileId",
            "billingProfileId"
          ]
        }
      }
    },
    "userRoles": {
      "methods": {
        "update": {
          "httpMethod": "PUT",
          "path": "userprofiles/{+profileId}/userRoles",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/userRoles",
          "id": "dfareporting.userRoles.update",
          "request": {
            "$ref": "UserRole"
          },
          "description": "Updates an existing user role.",
          "parameters": {
            "profileId": {
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            }
          },
          "response": {
            "$ref": "UserRole"
          }
        },
        "delete": {
          "id": "dfareporting.userRoles.delete",
          "parameters": {
            "id": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "User role ID."
            },
            "profileId": {
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/userRoles/{+id}",
          "httpMethod": "DELETE",
          "flatPath": "userprofiles/{userprofilesId}/userRoles/{userRolesId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "description": "Deletes an existing user role."
        },
        "patch": {
          "parameters": {
            "profileId": {
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "description": "Required. UserRole ID.",
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "query"
            }
          },
          "request": {
            "$ref": "UserRole"
          },
          "description": "Updates an existing user role. This method supports patch semantics.",
          "flatPath": "userprofiles/{userprofilesId}/userRoles",
          "response": {
            "$ref": "UserRole"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.userRoles.patch",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "PATCH",
          "path": "userprofiles/{+profileId}/userRoles"
        },
        "list": {
          "parameters": {
            "accountUserRoleOnly": {
              "location": "query",
              "description": "Select only account level user roles not associated with any specific subaccount.",
              "type": "boolean"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "default": "1000",
              "description": "Maximum number of results to return.",
              "location": "query"
            },
            "ids": {
              "type": "string",
              "description": "Select only user roles with the specified IDs.",
              "format": "int64",
              "repeated": true,
              "location": "query"
            },
            "subaccountId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "Select only user roles that belong to this subaccount."
            },
            "sortOrder": {
              "default": "ASCENDING",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ]
            },
            "searchString": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"userrole*2015\" will return objects with names like \"userrole June 2015\", \"userrole April 2015\", or simply \"userrole 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"userrole\" will match objects with name \"my userrole\", \"userrole 2015\", or simply \"userrole\".",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            },
            "sortField": {
              "enum": [
                "ID",
                "NAME"
              ],
              "description": "Field by which to sort the list.",
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "location": "query"
            }
          },
          "description": "Retrieves a list of user roles, possibly filtered. This method supports paging.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/userRoles",
          "response": {
            "$ref": "UserRolesListResponse"
          },
          "id": "dfareporting.userRoles.list",
          "flatPath": "userprofiles/{userprofilesId}/userRoles",
          "parameterOrder": [
            "profileId"
          ]
        },
        "insert": {
          "response": {
            "$ref": "UserRole"
          },
          "request": {
            "$ref": "UserRole"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/userRoles",
          "path": "userprofiles/{+profileId}/userRoles",
          "httpMethod": "POST",
          "description": "Inserts a new user role.",
          "id": "dfareporting.userRoles.insert"
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "description": "Gets one user role by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/userRoles/{+id}",
          "response": {
            "$ref": "UserRole"
          },
          "flatPath": "userprofiles/{userprofilesId}/userRoles/{userRolesId}",
          "parameters": {
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "id": {
              "location": "path",
              "required": true,
              "description": "User role ID.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "id": "dfareporting.userRoles.get",
          "httpMethod": "GET"
        }
      }
    },
    "accounts": {
      "methods": {
        "get": {
          "id": "dfareporting.accounts.get",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/accounts/{accountsId}",
          "response": {
            "$ref": "Account"
          },
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "description": "Account ID.",
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$"
            }
          },
          "httpMethod": "GET",
          "description": "Gets one account by ID.",
          "path": "userprofiles/{+profileId}/accounts/{+id}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves the list of accounts, possibly filtered. This method supports paging.",
          "path": "userprofiles/{+profileId}/accounts",
          "response": {
            "$ref": "AccountsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/accounts",
          "parameters": {
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "type": "string",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query"
            },
            "ids": {
              "repeated": true,
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "Select only accounts with these IDs."
            },
            "profileId": {
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$"
            },
            "searchString": {
              "location": "query",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"account*2015\" will return objects with names like \"account June 2015\", \"account April 2015\", or simply \"account 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"account\" will match objects with name \"my account\", \"account 2015\", or simply \"account\".",
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "description": "Select only active accounts. Don't set this field to select both active and non-active accounts.",
              "location": "query"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "type": "integer",
              "format": "int32",
              "default": "1000"
            },
            "sortField": {
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "default": "ID",
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ],
              "type": "string"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "dfareporting.accounts.list"
        },
        "patch": {
          "flatPath": "userprofiles/{userprofilesId}/accounts",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.accounts.patch",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Updates an existing account. This method supports patch semantics.",
          "parameters": {
            "id": {
              "location": "query",
              "format": "int64",
              "description": "Required. Account ID.",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string"
            }
          },
          "request": {
            "$ref": "Account"
          },
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Account"
          },
          "path": "userprofiles/{+profileId}/accounts"
        },
        "update": {
          "path": "userprofiles/{+profileId}/accounts",
          "description": "Updates an existing account.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/accounts",
          "request": {
            "$ref": "Account"
          },
          "id": "dfareporting.accounts.update",
          "parameters": {
            "profileId": {
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$"
            }
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "profileId"
          ]
        }
      }
    },
    "browsers": {
      "methods": {
        "list": {
          "id": "dfareporting.browsers.list",
          "response": {
            "$ref": "BrowsersListResponse"
          },
          "path": "userprofiles/{+profileId}/browsers",
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves a list of browsers.",
          "parameters": {
            "profileId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/browsers",
          "httpMethod": "GET"
        }
      }
    },
    "accountPermissions": {
      "methods": {
        "get": {
          "path": "userprofiles/{+profileId}/accountPermissions/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/accountPermissions/{accountPermissionsId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "required": true
            },
            "id": {
              "description": "Account permission ID.",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "description": "Gets one account permission by ID.",
          "id": "dfareporting.accountPermissions.get",
          "response": {
            "$ref": "AccountPermission"
          }
        },
        "list": {
          "response": {
            "$ref": "AccountPermissionsListResponse"
          },
          "flatPath": "userprofiles/{userprofilesId}/accountPermissions",
          "httpMethod": "GET",
          "parameters": {
            "profileId": {
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.accountPermissions.list",
          "description": "Retrieves the list of account permissions.",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/accountPermissions",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "operatingSystemVersions": {
      "methods": {
        "get": {
          "response": {
            "$ref": "OperatingSystemVersion"
          },
          "id": "dfareporting.operatingSystemVersions.get",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Gets one operating system version by ID.",
          "flatPath": "userprofiles/{userprofilesId}/operatingSystemVersions/{operatingSystemVersionsId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "int64",
              "description": "Operating system version ID."
            },
            "profileId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path"
            }
          },
          "path": "userprofiles/{+profileId}/operatingSystemVersions/{+id}"
        },
        "list": {
          "id": "dfareporting.operatingSystemVersions.list",
          "flatPath": "userprofiles/{userprofilesId}/operatingSystemVersions",
          "response": {
            "$ref": "OperatingSystemVersionsListResponse"
          },
          "path": "userprofiles/{+profileId}/operatingSystemVersions",
          "description": "Retrieves a list of operating system versions.",
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "profileId": {
              "type": "string",
              "location": "path",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "accountUserProfiles": {
      "methods": {
        "patch": {
          "httpMethod": "PATCH",
          "flatPath": "userprofiles/{userprofilesId}/accountUserProfiles",
          "path": "userprofiles/{+profileId}/accountUserProfiles",
          "parameters": {
            "id": {
              "description": "Required. AccountUserProfile ID.",
              "location": "query",
              "type": "string",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "format": "int64",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.accountUserProfiles.patch",
          "description": "Updates an existing user role. This method supports patch semantics.",
          "request": {
            "$ref": "AccountUserProfile"
          },
          "response": {
            "$ref": "AccountUserProfile"
          }
        },
        "update": {
          "id": "dfareporting.accountUserProfiles.update",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/accountUserProfiles",
          "response": {
            "$ref": "AccountUserProfile"
          },
          "path": "userprofiles/{+profileId}/accountUserProfiles",
          "httpMethod": "PUT",
          "description": "Updates an existing account user profile.",
          "parameters": {
            "profileId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64"
            }
          },
          "request": {
            "$ref": "AccountUserProfile"
          }
        },
        "list": {
          "description": "Retrieves a list of account user profiles, possibly filtered. This method supports paging.",
          "flatPath": "userprofiles/{userprofilesId}/accountUserProfiles",
          "id": "dfareporting.accountUserProfiles.list",
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query"
            },
            "ids": {
              "repeated": true,
              "description": "Select only user profiles with these IDs.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "userRoleId": {
              "type": "string",
              "description": "Select only user profiles with the specified user role ID.",
              "format": "int64",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "default": "1000",
              "description": "Maximum number of results to return.",
              "format": "int32"
            },
            "active": {
              "description": "Select only active user profiles.",
              "location": "query",
              "type": "boolean"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "sortOrder": {
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results.",
              "default": "ASCENDING",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ]
            },
            "searchString": {
              "type": "string",
              "location": "query",
              "description": "Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, \"user profile*2015\" will return objects with names like \"user profile June 2015\", \"user profile April 2015\", or simply \"user profile 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"user profile\" will match objects with name \"my user profile\", \"user profile 2015\", or simply \"user profile\"."
            },
            "subaccountId": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "Select only user profiles with the specified subaccount ID."
            },
            "sortField": {
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ],
              "description": "Field by which to sort the list.",
              "location": "query",
              "default": "ID",
              "type": "string"
            }
          },
          "path": "userprofiles/{+profileId}/accountUserProfiles",
          "response": {
            "$ref": "AccountUserProfilesListResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "get": {
          "parameters": {
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "type": "string",
              "format": "int64"
            },
            "id": {
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "User profile ID.",
              "location": "path"
            }
          },
          "description": "Gets one account user profile by ID.",
          "id": "dfareporting.accountUserProfiles.get",
          "path": "userprofiles/{profileId}/accountUserProfiles/{+id}",
          "response": {
            "$ref": "AccountUserProfile"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{profileId}/accountUserProfiles/{accountUserProfilesId}"
        },
        "insert": {
          "id": "dfareporting.accountUserProfiles.insert",
          "parameters": {
            "profileId": {
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true
            }
          },
          "path": "userprofiles/{+profileId}/accountUserProfiles",
          "flatPath": "userprofiles/{userprofilesId}/accountUserProfiles",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Inserts a new account user profile.",
          "response": {
            "$ref": "AccountUserProfile"
          },
          "request": {
            "$ref": "AccountUserProfile"
          },
          "httpMethod": "POST"
        }
      }
    },
    "metros": {
      "methods": {
        "list": {
          "response": {
            "$ref": "MetrosListResponse"
          },
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.metros.list",
          "description": "Retrieves a list of metros.",
          "path": "userprofiles/{+profileId}/metros",
          "parameters": {
            "profileId": {
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/metros"
        }
      }
    },
    "cities": {
      "methods": {
        "list": {
          "response": {
            "$ref": "CitiesListResponse"
          },
          "httpMethod": "GET",
          "id": "dfareporting.cities.list",
          "description": "Retrieves a list of cities, possibly filtered.",
          "path": "userprofiles/{+profileId}/cities",
          "flatPath": "userprofiles/{userprofilesId}/cities",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64"
            },
            "countryDartIds": {
              "type": "string",
              "description": "Select only cities from these countries.",
              "repeated": true,
              "location": "query",
              "format": "int64"
            },
            "regionDartIds": {
              "description": "Select only cities from these regions.",
              "type": "string",
              "format": "int64",
              "repeated": true,
              "location": "query"
            },
            "namePrefix": {
              "description": "Select only cities with names starting with this prefix.",
              "location": "query",
              "type": "string"
            },
            "dartIds": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "format": "int64",
              "description": "Select only cities with these DART IDs."
            }
          }
        }
      }
    },
    "dimensionValues": {
      "methods": {
        "query": {
          "parameters": {
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "format": "int32",
              "type": "integer",
              "default": "100"
            },
            "profileId": {
              "location": "path",
              "description": "The Campaign Manager 360 user profile ID.",
              "format": "int64",
              "required": true,
              "type": "string"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous result page.",
              "type": "string",
              "location": "query"
            }
          },
          "request": {
            "$ref": "DimensionValueRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "description": "Retrieves list of report dimension values for a list of filters.",
          "path": "userprofiles/{profileId}/dimensionvalues/query",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "DimensionValueList"
          },
          "flatPath": "userprofiles/{profileId}/dimensionvalues/query",
          "httpMethod": "POST",
          "id": "dfareporting.dimensionValues.query"
        }
      }
    },
    "remarketingListShares": {
      "methods": {
        "update": {
          "parameters": {
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "description": "Updates an existing remarketing list share.",
          "httpMethod": "PUT",
          "path": "userprofiles/{+profileId}/remarketingListShares",
          "request": {
            "$ref": "RemarketingListShare"
          },
          "id": "dfareporting.remarketingListShares.update",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "RemarketingListShare"
          },
          "flatPath": "userprofiles/{userprofilesId}/remarketingListShares"
        },
        "patch": {
          "response": {
            "$ref": "RemarketingListShare"
          },
          "parameters": {
            "profileId": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "description": "Required. RemarketingList ID.",
              "type": "string",
              "format": "int64",
              "location": "query",
              "required": true
            }
          },
          "description": "Updates an existing RemarketingListShare. This method supports patch semantics.",
          "request": {
            "$ref": "RemarketingListShare"
          },
          "id": "dfareporting.remarketingListShares.patch",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/remarketingListShares",
          "httpMethod": "PATCH",
          "path": "userprofiles/{+profileId}/remarketingListShares"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "remarketingListId"
          ],
          "response": {
            "$ref": "RemarketingListShare"
          },
          "parameters": {
            "remarketingListId": {
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Remarketing list ID.",
              "type": "string",
              "format": "int64",
              "required": true
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path"
            }
          },
          "path": "userprofiles/{+profileId}/remarketingListShares/{+remarketingListId}",
          "id": "dfareporting.remarketingListShares.get",
          "description": "Gets one remarketing list share by remarketing list ID.",
          "flatPath": "userprofiles/{userprofilesId}/remarketingListShares/{remarketingListSharesId}"
        }
      }
    },
    "userProfiles": {
      "methods": {
        "list": {
          "response": {
            "$ref": "UserProfileList"
          },
          "description": "Retrieves list of user profiles for a user.",
          "id": "dfareporting.userProfiles.list",
          "flatPath": "userprofiles",
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/ddmconversions",
            "https://www.googleapis.com/auth/dfareporting",
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles"
        },
        "get": {
          "httpMethod": "GET",
          "description": "Gets one user profile by ID.",
          "flatPath": "userprofiles/{profileId}",
          "path": "userprofiles/{profileId}",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ddmconversions",
            "https://www.googleapis.com/auth/dfareporting",
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.userProfiles.get",
          "response": {
            "$ref": "UserProfile"
          },
          "parameters": {
            "profileId": {
              "description": "The user profile ID.",
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true
            }
          }
        }
      }
    },
    "languages": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves a list of languages.",
          "response": {
            "$ref": "LanguagesListResponse"
          },
          "id": "dfareporting.languages.list",
          "path": "userprofiles/{+profileId}/languages",
          "parameters": {
            "profileId": {
              "format": "int64",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$"
            }
          },
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/languages"
        }
      }
    },
    "directorySites": {
      "methods": {
        "get": {
          "response": {
            "$ref": "DirectorySite"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/directorySites/{+id}",
          "parameters": {
            "id": {
              "type": "string",
              "format": "int64",
              "description": "Directory site ID.",
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path"
            },
            "profileId": {
              "type": "string",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.directorySites.get",
          "flatPath": "userprofiles/{userprofilesId}/directorySites/{directorySitesId}",
          "description": "Gets one directory site by ID."
        },
        "insert": {
          "path": "userprofiles/{+profileId}/directorySites",
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "DirectorySite"
          },
          "parameters": {
            "profileId": {
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/directorySites",
          "httpMethod": "POST",
          "description": "Inserts a new directory site.",
          "response": {
            "$ref": "DirectorySite"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.directorySites.insert"
        },
        "list": {
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.directorySites.list",
          "description": "Retrieves a list of directory sites, possibly filtered. This method supports paging.",
          "httpMethod": "GET",
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "default": "1000"
            },
            "searchString": {
              "description": "Allows searching for objects by name, ID or URL. Wildcards (*) are allowed. For example, \"directory site*2015\" will return objects with names like \"directory site June 2015\", \"directory site April 2015\", or simply \"directory site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"directory site\" will match objects with name \"my directory site\", \"directory site 2015\" or simply, \"directory site\".",
              "type": "string",
              "location": "query"
            },
            "acceptsInterstitialPlacements": {
              "description": "This search filter is no longer supported and will have no effect on the results returned.",
              "location": "query",
              "type": "boolean"
            },
            "sortField": {
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "location": "query",
              "enum": [
                "ID",
                "NAME"
              ],
              "description": "Field by which to sort the list."
            },
            "dfpNetworkCode": {
              "type": "string",
              "location": "query",
              "description": "Select only directory sites with this Ad Manager network code."
            },
            "ids": {
              "location": "query",
              "type": "string",
              "format": "int64",
              "description": "Select only directory sites with these IDs.",
              "repeated": true
            },
            "acceptsPublisherPaidPlacements": {
              "type": "boolean",
              "description": "Select only directory sites that accept publisher paid placements. This field can be left blank.",
              "location": "query"
            },
            "sortOrder": {
              "type": "string",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "default": "ASCENDING"
            },
            "active": {
              "description": "Select only active directory sites. Leave blank to retrieve both active and inactive directory sites.",
              "location": "query",
              "type": "boolean"
            },
            "acceptsInStreamVideoPlacements": {
              "type": "boolean",
              "location": "query",
              "description": "This search filter is no longer supported and will have no effect on the results returned."
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "userprofiles/{+profileId}/directorySites",
          "response": {
            "$ref": "DirectorySitesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/directorySites"
        }
      }
    },
    "projects": {
      "methods": {
        "list": {
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.projects.list",
          "path": "userprofiles/{+profileId}/projects",
          "description": "Retrieves a list of projects, possibly filtered. This method supports paging .",
          "flatPath": "userprofiles/{userprofilesId}/projects",
          "response": {
            "$ref": "ProjectsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "advertiserIds": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "format": "int64",
              "description": "Select only projects with these advertiser IDs."
            },
            "sortOrder": {
              "location": "query",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "type": "string",
              "description": "Order of sorted results."
            },
            "ids": {
              "format": "int64",
              "location": "query",
              "repeated": true,
              "description": "Select only projects with these IDs.",
              "type": "string"
            },
            "sortField": {
              "enum": [
                "ID",
                "NAME"
              ],
              "type": "string",
              "description": "Field by which to sort the list.",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID"
            },
            "searchString": {
              "description": "Allows searching for projects by name or ID. Wildcards (*) are allowed. For example, \"project*2015\" will return projects with names like \"project June 2015\", \"project April 2015\", or simply \"project 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"project\" will match projects with name \"my project\", \"project 2015\", or simply \"project\".",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "default": "1000"
            },
            "pageToken": {
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request."
            }
          }
        },
        "get": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "Project ID.",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path"
            }
          },
          "id": "dfareporting.projects.get",
          "description": "Gets one project by ID.",
          "flatPath": "userprofiles/{userprofilesId}/projects/{projectsId}",
          "path": "userprofiles/{+profileId}/projects/{+id}",
          "response": {
            "$ref": "Project"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ]
        }
      }
    },
    "platformTypes": {
      "methods": {
        "list": {
          "id": "dfareporting.platformTypes.list",
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/platformTypes",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "format": "int64",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/platformTypes",
          "response": {
            "$ref": "PlatformTypesListResponse"
          },
          "description": "Retrieves a list of platform types.",
          "parameterOrder": [
            "profileId"
          ]
        },
        "get": {
          "parameters": {
            "id": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64",
              "description": "Platform type ID.",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "userprofiles/{+profileId}/platformTypes/{+id}",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.platformTypes.get",
          "description": "Gets one platform type by ID.",
          "response": {
            "$ref": "PlatformType"
          },
          "flatPath": "userprofiles/{userprofilesId}/platformTypes/{platformTypesId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "connectionTypes": {
      "methods": {
        "get": {
          "description": "Gets one connection type by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "ConnectionType"
          },
          "flatPath": "userprofiles/{userprofilesId}/connectionTypes/{connectionTypesId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.connectionTypes.get",
          "path": "userprofiles/{+profileId}/connectionTypes/{+id}",
          "parameters": {
            "id": {
              "description": "Connection type ID.",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            }
          }
        },
        "list": {
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/connectionTypes",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/connectionTypes",
          "description": "Retrieves a list of connection types.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.connectionTypes.list",
          "response": {
            "$ref": "ConnectionTypesListResponse"
          },
          "parameters": {
            "profileId": {
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true
            }
          }
        }
      }
    },
    "creatives": {
      "methods": {
        "get": {
          "id": "dfareporting.creatives.get",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "type": "string",
              "format": "int64"
            },
            "id": {
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "Creative ID.",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/creatives/{creativesId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/creatives/{+id}",
          "response": {
            "$ref": "Creative"
          },
          "description": "Gets one creative by ID.",
          "httpMethod": "GET"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.creatives.list",
          "flatPath": "userprofiles/{userprofilesId}/creatives",
          "httpMethod": "GET",
          "response": {
            "$ref": "CreativesListResponse"
          },
          "path": "userprofiles/{+profileId}/creatives",
          "parameters": {
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"creative*2015\" will return objects with names like \"creative June 2015\", \"creative April 2015\", or simply \"creative 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"creative\" will match objects with name \"my creative\", \"creative 2015\", or simply \"creative\"."
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "location": "query",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "default": "ASCENDING",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string"
            },
            "active": {
              "description": "Select only active creatives. Leave blank to select active and inactive creatives.",
              "location": "query",
              "type": "boolean"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            },
            "companionCreativeIds": {
              "repeated": true,
              "format": "int64",
              "location": "query",
              "description": "Select only in-stream video creatives with these companion IDs.",
              "type": "string"
            },
            "advertiserId": {
              "format": "int64",
              "location": "query",
              "description": "Select only creatives with this advertiser ID.",
              "type": "string"
            },
            "studioCreativeId": {
              "location": "query",
              "type": "string",
              "description": "Select only creatives corresponding to this Studio creative ID.",
              "format": "int64"
            },
            "sizeIds": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Select only creatives with these size IDs.",
              "repeated": true
            },
            "renderingIds": {
              "type": "string",
              "location": "query",
              "description": "Select only creatives with these rendering IDs.",
              "repeated": true,
              "format": "int64"
            },
            "campaignId": {
              "description": "Select only creatives with this campaign ID.",
              "format": "int64",
              "type": "string",
              "location": "query"
            },
            "creativeFieldIds": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "Select only creatives with these creative field IDs.",
              "repeated": true
            },
            "archived": {
              "location": "query",
              "type": "boolean",
              "description": "Select only archived creatives. Leave blank to select archived and unarchived creatives."
            },
            "maxResults": {
              "default": "1000",
              "location": "query",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "type": "integer"
            },
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "types": {
              "type": "string",
              "repeated": true,
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "location": "query",
              "description": "Select only creatives with these creative types.",
              "enum": [
                "IMAGE",
                "DISPLAY_REDIRECT",
                "CUSTOM_DISPLAY",
                "INTERNAL_REDIRECT",
                "CUSTOM_DISPLAY_INTERSTITIAL",
                "INTERSTITIAL_INTERNAL_REDIRECT",
                "TRACKING_TEXT",
                "RICH_MEDIA_DISPLAY_BANNER",
                "RICH_MEDIA_INPAGE_FLOATING",
                "RICH_MEDIA_IM_EXPAND",
                "RICH_MEDIA_DISPLAY_EXPANDING",
                "RICH_MEDIA_DISPLAY_INTERSTITIAL",
                "RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL",
                "RICH_MEDIA_MOBILE_IN_APP",
                "FLASH_INPAGE",
                "INSTREAM_VIDEO",
                "VPAID_LINEAR_VIDEO",
                "VPAID_NON_LINEAR_VIDEO",
                "INSTREAM_VIDEO_REDIRECT",
                "RICH_MEDIA_PEEL_DOWN",
                "HTML5_BANNER",
                "DISPLAY",
                "DISPLAY_IMAGE_GALLERY",
                "BRAND_SAFE_DEFAULT_INSTREAM_VIDEO",
                "INSTREAM_AUDIO"
              ]
            },
            "ids": {
              "type": "string",
              "repeated": true,
              "description": "Select only creatives with these IDs.",
              "format": "int64",
              "location": "query"
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "type": "string",
              "default": "ID",
              "enum": [
                "ID",
                "NAME"
              ]
            }
          },
          "description": "Retrieves a list of creatives, possibly filtered. This method supports paging."
        },
        "insert": {
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/creatives",
          "description": "Inserts a new creative.",
          "httpMethod": "POST",
          "id": "dfareporting.creatives.insert",
          "request": {
            "$ref": "Creative"
          },
          "path": "userprofiles/{+profileId}/creatives",
          "parameters": {
            "profileId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "response": {
            "$ref": "Creative"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "update": {
          "httpMethod": "PUT",
          "description": "Updates an existing creative.",
          "flatPath": "userprofiles/{userprofilesId}/creatives",
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string"
            }
          },
          "id": "dfareporting.creatives.update",
          "request": {
            "$ref": "Creative"
          },
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/creatives",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "Creative"
          }
        },
        "patch": {
          "description": "Updates an existing creative. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Creative"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/creatives",
          "id": "dfareporting.creatives.patch",
          "request": {
            "$ref": "Creative"
          },
          "parameters": {
            "id": {
              "location": "query",
              "description": "Required. Creative ID.",
              "type": "string",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "path": "userprofiles/{+profileId}/creatives"
        }
      }
    },
    "floodlightActivities": {
      "methods": {
        "update": {
          "parameters": {
            "profileId": {
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.floodlightActivities.update",
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities",
          "request": {
            "$ref": "FloodlightActivity"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Updates an existing floodlight activity.",
          "path": "userprofiles/{+profileId}/floodlightActivities",
          "httpMethod": "PUT",
          "response": {
            "$ref": "FloodlightActivity"
          }
        },
        "delete": {
          "id": "dfareporting.floodlightActivities.delete",
          "path": "userprofiles/{+profileId}/floodlightActivities/{+id}",
          "httpMethod": "DELETE",
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities/{floodlightActivitiesId}",
          "description": "Deletes an existing floodlight activity.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "id": {
              "description": "Floodlight activity ID.",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ]
        },
        "insert": {
          "description": "Inserts a new floodlight activity.",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request."
            }
          },
          "id": "dfareporting.floodlightActivities.insert",
          "httpMethod": "POST",
          "request": {
            "$ref": "FloodlightActivity"
          },
          "response": {
            "$ref": "FloodlightActivity"
          },
          "path": "userprofiles/{+profileId}/floodlightActivities"
        },
        "patch": {
          "parameters": {
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "id": {
              "location": "query",
              "description": "Required. EventTag ID.",
              "type": "string",
              "format": "int64",
              "required": true
            }
          },
          "request": {
            "$ref": "FloodlightActivity"
          },
          "response": {
            "$ref": "FloodlightActivity"
          },
          "path": "userprofiles/{+profileId}/floodlightActivities",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.floodlightActivities.patch",
          "description": "Updates an existing event tag. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities"
        },
        "get": {
          "response": {
            "$ref": "FloodlightActivity"
          },
          "parameters": {
            "id": {
              "description": "Floodlight activity ID.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "required": true
            }
          },
          "httpMethod": "GET",
          "id": "dfareporting.floodlightActivities.get",
          "description": "Gets one floodlight activity by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/floodlightActivities/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities/{floodlightActivitiesId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "1000",
              "format": "int32"
            },
            "searchString": {
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivity*2015\" will return objects with names like \"floodlightactivity June 2015\", \"floodlightactivity April 2015\", or simply \"floodlightactivity 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivity\" will match objects with name \"my floodlightactivity activity\", \"floodlightactivity 2015\", or simply \"floodlightactivity\".",
              "location": "query"
            },
            "floodlightActivityGroupName": {
              "description": "Select only floodlight activities with the specified floodlight activity group name.",
              "location": "query",
              "type": "string"
            },
            "advertiserId": {
              "location": "query",
              "description": "Select only floodlight activities for the specified advertiser ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
              "format": "int64",
              "type": "string"
            },
            "ids": {
              "format": "int64",
              "type": "string",
              "description": "Select only floodlight activities with the specified IDs. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
              "location": "query",
              "repeated": true
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path"
            },
            "floodlightConfigurationId": {
              "location": "query",
              "format": "int64",
              "description": "Select only floodlight activities for the specified floodlight configuration ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
              "type": "string"
            },
            "floodlightActivityGroupIds": {
              "repeated": true,
              "description": "Select only floodlight activities with the specified floodlight activity group IDs.",
              "type": "string",
              "format": "int64",
              "location": "query"
            },
            "floodlightActivityGroupTagString": {
              "description": "Select only floodlight activities with the specified floodlight activity group tag string.",
              "type": "string",
              "location": "query"
            },
            "tagString": {
              "location": "query",
              "description": "Select only floodlight activities with the specified tag string.",
              "type": "string"
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "location": "query",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "sortField": {
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list.",
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "floodlightActivityGroupType": {
              "location": "query",
              "enum": [
                "COUNTER",
                "SALE"
              ],
              "description": "Select only floodlight activities with the specified floodlight activity group type.",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string"
            }
          },
          "path": "userprofiles/{+profileId}/floodlightActivities",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities",
          "id": "dfareporting.floodlightActivities.list",
          "description": "Retrieves a list of floodlight activities, possibly filtered. This method supports paging.",
          "response": {
            "$ref": "FloodlightActivitiesListResponse"
          },
          "httpMethod": "GET"
        },
        "generatetag": {
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivities/generatetag",
          "response": {
            "$ref": "FloodlightActivitiesGenerateTagResponse"
          },
          "parameters": {
            "floodlightActivityId": {
              "location": "query",
              "description": "Floodlight activity ID for which we want to generate a tag.",
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "required": true
            }
          },
          "description": "Generates a tag for a floodlight activity.",
          "path": "userprofiles/{+profileId}/floodlightActivities/generatetag",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.floodlightActivities.generatetag"
        }
      }
    },
    "accountActiveAdSummaries": {
      "methods": {
        "get": {
          "response": {
            "$ref": "AccountActiveAdSummary"
          },
          "description": "Gets the account's active ad summary by account ID.",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "summaryAccountId": {
              "required": true,
              "pattern": "^[^/]+$",
              "description": "Account ID.",
              "type": "string",
              "location": "path",
              "format": "int64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/accountActiveAdSummaries/{accountActiveAdSummariesId}",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/accountActiveAdSummaries/{+summaryAccountId}",
          "id": "dfareporting.accountActiveAdSummaries.get",
          "parameterOrder": [
            "profileId",
            "summaryAccountId"
          ]
        }
      }
    },
    "floodlightActivityGroups": {
      "methods": {
        "get": {
          "response": {
            "$ref": "FloodlightActivityGroup"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/floodlightActivityGroups/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivityGroups/{floodlightActivityGroupsId}",
          "parameters": {
            "id": {
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "Floodlight activity Group ID.",
              "pattern": "^[^/]+$",
              "location": "path"
            },
            "profileId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64"
            }
          },
          "id": "dfareporting.floodlightActivityGroups.get",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Gets one floodlight activity group by ID."
        },
        "update": {
          "response": {
            "$ref": "FloodlightActivityGroup"
          },
          "request": {
            "$ref": "FloodlightActivityGroup"
          },
          "id": "dfareporting.floodlightActivityGroups.update",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/floodlightActivityGroups",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivityGroups",
          "description": "Updates an existing floodlight activity group.",
          "parameters": {
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "httpMethod": "PUT"
        },
        "patch": {
          "parameters": {
            "id": {
              "format": "int64",
              "type": "string",
              "description": "Required. EventTag ID.",
              "required": true,
              "location": "query"
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "type": "string"
            }
          },
          "path": "userprofiles/{+profileId}/floodlightActivityGroups",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Updates an existing event tag. This method supports patch semantics.",
          "id": "dfareporting.floodlightActivityGroups.patch",
          "request": {
            "$ref": "FloodlightActivityGroup"
          },
          "httpMethod": "PATCH",
          "response": {
            "$ref": "FloodlightActivityGroup"
          },
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivityGroups",
          "parameterOrder": [
            "profileId",
            "id"
          ]
        },
        "insert": {
          "path": "userprofiles/{+profileId}/floodlightActivityGroups",
          "httpMethod": "POST",
          "response": {
            "$ref": "FloodlightActivityGroup"
          },
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "FloodlightActivityGroup"
          },
          "id": "dfareporting.floodlightActivityGroups.insert",
          "description": "Inserts a new floodlight activity group.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivityGroups"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Retrieves a list of floodlight activity groups, possibly filtered. This method supports paging.",
          "id": "dfareporting.floodlightActivityGroups.list",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/floodlightActivityGroups",
          "parameters": {
            "sortOrder": {
              "location": "query",
              "description": "Order of sorted results.",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING"
            },
            "sortField": {
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "description": "Field by which to sort the list.",
              "location": "query"
            },
            "type": {
              "enum": [
                "COUNTER",
                "SALE"
              ],
              "description": "Select only floodlight activity groups with the specified floodlight activity group type.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "floodlightConfigurationId": {
              "description": "Select only floodlight activity groups with the specified floodlight configuration ID. Must specify either advertiserId, or floodlightConfigurationId for a non-empty result.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "default": "1000",
              "description": "Maximum number of results to return.",
              "format": "int32",
              "type": "integer"
            },
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64"
            },
            "pageToken": {
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query"
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "description": "Select only floodlight activity groups with the specified advertiser ID. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",
              "location": "query"
            },
            "ids": {
              "format": "int64",
              "description": "Select only floodlight activity groups with the specified IDs. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivitygroup*2015\" will return objects with names like \"floodlightactivitygroup June 2015\", \"floodlightactivitygroup April 2015\", or simply \"floodlightactivitygroup 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivitygroup\" will match objects with name \"my floodlightactivitygroup activity\", \"floodlightactivitygroup 2015\", or simply \"floodlightactivitygroup\"."
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/floodlightActivityGroups",
          "response": {
            "$ref": "FloodlightActivityGroupsListResponse"
          }
        }
      }
    },
    "sites": {
      "methods": {
        "update": {
          "request": {
            "$ref": "Site"
          },
          "id": "dfareporting.sites.update",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request."
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/sites",
          "description": "Updates an existing site.",
          "response": {
            "$ref": "Site"
          },
          "path": "userprofiles/{+profileId}/sites",
          "httpMethod": "PUT",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.sites.insert",
          "flatPath": "userprofiles/{userprofilesId}/sites",
          "response": {
            "$ref": "Site"
          },
          "parameters": {
            "profileId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true
            }
          },
          "description": "Inserts a new site.",
          "path": "userprofiles/{+profileId}/sites",
          "httpMethod": "POST",
          "request": {
            "$ref": "Site"
          },
          "parameterOrder": [
            "profileId"
          ]
        },
        "list": {
          "response": {
            "$ref": "SitesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Retrieves a list of sites, possibly filtered. This method supports paging.",
          "flatPath": "userprofiles/{userprofilesId}/sites",
          "httpMethod": "GET",
          "id": "dfareporting.sites.list",
          "path": "userprofiles/{+profileId}/sites",
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "ids": {
              "description": "Select only sites with these IDs.",
              "type": "string",
              "location": "query",
              "format": "int64",
              "repeated": true
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "location": "query",
              "default": "ASCENDING",
              "type": "string"
            },
            "unmappedSite": {
              "type": "boolean",
              "location": "query",
              "description": "Select only sites that have not been mapped to a directory site."
            },
            "acceptsInStreamVideoPlacements": {
              "location": "query",
              "description": "This search filter is no longer supported and will have no effect on the results returned.",
              "type": "boolean"
            },
            "maxResults": {
              "location": "query",
              "format": "int32",
              "default": "1000",
              "description": "Maximum number of results to return.",
              "type": "integer"
            },
            "acceptsPublisherPaidPlacements": {
              "type": "boolean",
              "description": "Select only sites that accept publisher paid placements.",
              "location": "query"
            },
            "campaignIds": {
              "repeated": true,
              "description": "Select only sites with these campaign IDs.",
              "location": "query",
              "type": "string",
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "searchString": {
              "type": "string",
              "description": "Allows searching for objects by name, ID or keyName. Wildcards (*) are allowed. For example, \"site*2015\" will return objects with names like \"site June 2015\", \"site April 2015\", or simply \"site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"site\" will match objects with name \"my site\", \"site 2015\", or simply \"site\".",
              "location": "query"
            },
            "directorySiteIds": {
              "description": "Select only sites with these directory site IDs.",
              "type": "string",
              "format": "int64",
              "repeated": true,
              "location": "query"
            },
            "adWordsSite": {
              "location": "query",
              "type": "boolean",
              "description": "Select only AdWords sites."
            },
            "acceptsInterstitialPlacements": {
              "type": "boolean",
              "location": "query",
              "description": "This search filter is no longer supported and will have no effect on the results returned."
            },
            "approved": {
              "type": "boolean",
              "location": "query",
              "description": "Select only approved sites."
            },
            "subaccountId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "Select only sites with this subaccount ID."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "sortField": {
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "description": "Field by which to sort the list."
            }
          }
        },
        "get": {
          "description": "Gets one site by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "Site ID.",
              "format": "int64",
              "type": "string",
              "required": true
            },
            "profileId": {
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path"
            }
          },
          "id": "dfareporting.sites.get",
          "path": "userprofiles/{+profileId}/sites/{+id}",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/sites/{sitesId}",
          "response": {
            "$ref": "Site"
          }
        },
        "patch": {
          "path": "userprofiles/{+profileId}/sites",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.sites.patch",
          "description": "Updates an existing site. This method supports patch semantics.",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64"
            },
            "id": {
              "location": "query",
              "description": "Required. Site ID.",
              "required": true,
              "format": "int64",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/sites",
          "request": {
            "$ref": "Site"
          },
          "response": {
            "$ref": "Site"
          },
          "httpMethod": "PATCH"
        }
      }
    },
    "billingAssignments": {
      "methods": {
        "list": {
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles/{billingProfilesId}/billingAssignments",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.billingAssignments.list",
          "httpMethod": "GET",
          "description": "Retrieves a list of billing assignments.",
          "response": {
            "$ref": "BillingAssignmentsListResponse"
          },
          "parameterOrder": [
            "profileId",
            "billingProfileId"
          ],
          "path": "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingAssignments",
          "parameters": {
            "billingProfileId": {
              "description": "Billing profile ID of this billing assignment.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true
            }
          }
        },
        "insert": {
          "id": "dfareporting.billingAssignments.insert",
          "request": {
            "$ref": "BillingAssignment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles/{billingProfilesId}/billingAssignments",
          "parameters": {
            "billingProfileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "Billing profile ID of this billing assignment.",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "profileId",
            "billingProfileId"
          ],
          "path": "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingAssignments",
          "response": {
            "$ref": "BillingAssignment"
          },
          "httpMethod": "POST",
          "description": "Inserts a new billing assignment and returns the new assignment. Only one of advertiser_id or campaign_id is support per request. If the new assignment has no effect (assigning a campaign to the parent advertiser billing profile or assigning an advertiser to the account billing profile), no assignment will be returned."
        }
      }
    },
    "videoFormats": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Gets one video format by ID.",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/videoFormats/{+id}",
          "response": {
            "$ref": "VideoFormat"
          },
          "id": "dfareporting.videoFormats.get",
          "flatPath": "userprofiles/{userprofilesId}/videoFormats/{videoFormatsId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "parameters": {
            "id": {
              "location": "path",
              "required": true,
              "format": "int32",
              "pattern": "^[^/]+$",
              "description": "Video format ID.",
              "type": "integer"
            },
            "profileId": {
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          }
        },
        "list": {
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/videoFormats",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "type": "string"
            }
          },
          "description": "Lists available video formats.",
          "path": "userprofiles/{+profileId}/videoFormats",
          "response": {
            "$ref": "VideoFormatsListResponse"
          },
          "id": "dfareporting.videoFormats.list",
          "httpMethod": "GET"
        }
      }
    },
    "conversions": {
      "methods": {
        "batchupdate": {
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.conversions.batchupdate",
          "path": "userprofiles/{profileId}/conversions/batchupdate",
          "flatPath": "userprofiles/{profileId}/conversions/batchupdate",
          "parameters": {
            "profileId": {
              "location": "path",
              "format": "int64",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request."
            }
          },
          "response": {
            "$ref": "ConversionsBatchUpdateResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ddmconversions"
          ],
          "description": "Updates existing conversions.",
          "request": {
            "$ref": "ConversionsBatchUpdateRequest"
          },
          "httpMethod": "POST"
        },
        "batchinsert": {
          "path": "userprofiles/{profileId}/conversions/batchinsert",
          "request": {
            "$ref": "ConversionsBatchInsertRequest"
          },
          "response": {
            "$ref": "ConversionsBatchInsertResponse"
          },
          "flatPath": "userprofiles/{profileId}/conversions/batchinsert",
          "id": "dfareporting.conversions.batchinsert",
          "parameters": {
            "profileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ddmconversions"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Inserts conversions.",
          "httpMethod": "POST"
        }
      }
    },
    "userRolePermissions": {
      "methods": {
        "list": {
          "path": "userprofiles/{+profileId}/userRolePermissions",
          "parameters": {
            "profileId": {
              "format": "int64",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            },
            "ids": {
              "description": "Select only user role permissions with these IDs.",
              "type": "string",
              "location": "query",
              "format": "int64",
              "repeated": true
            }
          },
          "description": "Gets a list of user role permissions, possibly filtered.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/userRolePermissions",
          "response": {
            "$ref": "UserRolePermissionsListResponse"
          },
          "id": "dfareporting.userRolePermissions.list",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId"
          ]
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "description": "Gets one user role permission by ID.",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/userRolePermissions/{+id}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "description": "User role permission ID.",
              "format": "int64"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "dfareporting.userRolePermissions.get",
          "response": {
            "$ref": "UserRolePermission"
          },
          "flatPath": "userprofiles/{userprofilesId}/userRolePermissions/{userRolePermissionsId}"
        }
      }
    },
    "orders": {
      "methods": {
        "list": {
          "id": "dfareporting.orders.list",
          "parameters": {
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string",
              "description": "Order of sorted results.",
              "location": "query",
              "default": "ASCENDING"
            },
            "maxResults": {
              "type": "integer",
              "default": "1000",
              "location": "query",
              "description": "Maximum number of results to return.",
              "format": "int32"
            },
            "projectId": {
              "required": true,
              "type": "string",
              "format": "int64",
              "location": "path",
              "description": "Project ID for orders."
            },
            "sortField": {
              "location": "query",
              "description": "Field by which to sort the list.",
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "ids": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "Select only orders with these IDs.",
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "type": "string"
            },
            "siteId": {
              "description": "Select only orders that are associated with these site IDs.",
              "type": "string",
              "format": "int64",
              "location": "query",
              "repeated": true
            },
            "pageToken": {
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query"
            },
            "searchString": {
              "type": "string",
              "description": "Allows searching for orders by name or ID. Wildcards (*) are allowed. For example, \"order*2015\" will return orders with names like \"order June 2015\", \"order April 2015\", or simply \"order 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"order\" will match orders with name \"my order\", \"order 2015\", or simply \"order\".",
              "location": "query"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/projects/{projectId}/orders",
          "httpMethod": "GET",
          "response": {
            "$ref": "OrdersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Retrieves a list of orders, possibly filtered. This method supports paging.",
          "parameterOrder": [
            "profileId",
            "projectId"
          ],
          "path": "userprofiles/{+profileId}/projects/{projectId}/orders"
        },
        "get": {
          "id": "dfareporting.orders.get",
          "description": "Gets one order by ID.",
          "path": "userprofiles/{+profileId}/projects/{projectId}/orders/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/projects/{projectId}/orders/{ordersId}",
          "parameters": {
            "projectId": {
              "location": "path",
              "required": true,
              "format": "int64",
              "type": "string",
              "description": "Project ID for orders."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true
            },
            "id": {
              "format": "int64",
              "type": "string",
              "description": "Order ID.",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "Order"
          },
          "parameterOrder": [
            "profileId",
            "projectId",
            "id"
          ]
        }
      }
    },
    "operatingSystems": {
      "methods": {
        "list": {
          "parameters": {
            "profileId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "id": "dfareporting.operatingSystems.list",
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/operatingSystems",
          "description": "Retrieves a list of operating systems.",
          "path": "userprofiles/{+profileId}/operatingSystems",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "OperatingSystemsListResponse"
          },
          "parameterOrder": [
            "profileId"
          ]
        },
        "get": {
          "response": {
            "$ref": "OperatingSystem"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Gets one operating system by DART ID.",
          "parameters": {
            "profileId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "dartId": {
              "location": "path",
              "type": "string",
              "description": "Operating system DART ID.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "path": "userprofiles/{+profileId}/operatingSystems/{+dartId}",
          "parameterOrder": [
            "profileId",
            "dartId"
          ],
          "id": "dfareporting.operatingSystems.get",
          "flatPath": "userprofiles/{userprofilesId}/operatingSystems/{operatingSystemsId}",
          "httpMethod": "GET"
        }
      }
    },
    "advertiserLandingPages": {
      "methods": {
        "list": {
          "description": "Retrieves a list of landing pages.",
          "flatPath": "userprofiles/{userprofilesId}/advertiserLandingPages",
          "response": {
            "$ref": "AdvertiserLandingPagesListResponse"
          },
          "path": "userprofiles/{+profileId}/advertiserLandingPages",
          "id": "dfareporting.advertiserLandingPages.list",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "parameters": {
            "archived": {
              "description": "Select only archived landing pages. Don't set this field to select both archived and non-archived landing pages.",
              "location": "query",
              "type": "boolean"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "default": "ASCENDING",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ]
            },
            "ids": {
              "format": "int64",
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "Select only landing pages with these IDs."
            },
            "subaccountId": {
              "type": "string",
              "description": "Select only landing pages that belong to this subaccount.",
              "location": "query",
              "format": "int64"
            },
            "campaignIds": {
              "repeated": true,
              "type": "string",
              "format": "int64",
              "location": "query",
              "description": "Select only landing pages that are associated with these campaigns."
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "1000",
              "format": "int32",
              "type": "integer"
            },
            "searchString": {
              "description": "Allows searching for landing pages by name or ID. Wildcards (*) are allowed. For example, \"landingpage*2017\" will return landing pages with names like \"landingpage July 2017\", \"landingpage March 2017\", or simply \"landingpage 2017\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"landingpage\" will match campaigns with name \"my landingpage\", \"landingpage 2015\", or simply \"landingpage\".",
              "type": "string",
              "location": "query"
            },
            "sortField": {
              "type": "string",
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "required": true
            },
            "advertiserIds": {
              "format": "int64",
              "description": "Select only landing pages that belong to these advertisers.",
              "repeated": true,
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "profileId"
          ]
        },
        "insert": {
          "response": {
            "$ref": "LandingPage"
          },
          "flatPath": "userprofiles/{userprofilesId}/advertiserLandingPages",
          "request": {
            "$ref": "LandingPage"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Inserts a new landing page.",
          "parameters": {
            "profileId": {
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.advertiserLandingPages.insert",
          "path": "userprofiles/{+profileId}/advertiserLandingPages"
        },
        "get": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/advertiserLandingPages/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "response": {
            "$ref": "LandingPage"
          },
          "description": "Gets one landing page by ID.",
          "parameters": {
            "id": {
              "description": "Landing page ID.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true
            },
            "profileId": {
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/advertiserLandingPages/{advertiserLandingPagesId}",
          "id": "dfareporting.advertiserLandingPages.get"
        },
        "update": {
          "flatPath": "userprofiles/{userprofilesId}/advertiserLandingPages",
          "path": "userprofiles/{+profileId}/advertiserLandingPages",
          "parameters": {
            "profileId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true
            }
          },
          "request": {
            "$ref": "LandingPage"
          },
          "id": "dfareporting.advertiserLandingPages.update",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Updates an existing landing page.",
          "response": {
            "$ref": "LandingPage"
          }
        },
        "patch": {
          "id": "dfareporting.advertiserLandingPages.patch",
          "parameters": {
            "id": {
              "type": "string",
              "format": "int64",
              "description": "Required. Landing Page ID.",
              "required": true,
              "location": "query"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path"
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/advertiserLandingPages",
          "request": {
            "$ref": "LandingPage"
          },
          "response": {
            "$ref": "LandingPage"
          },
          "description": "Updates an existing advertiser. This method supports patch semantics.",
          "flatPath": "userprofiles/{userprofilesId}/advertiserLandingPages",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "PATCH"
        }
      }
    },
    "targetableRemarketingLists": {
      "methods": {
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "httpMethod": "GET",
          "description": "Gets one remarketing list by ID.",
          "id": "dfareporting.targetableRemarketingLists.get",
          "response": {
            "$ref": "TargetableRemarketingList"
          },
          "flatPath": "userprofiles/{userprofilesId}/targetableRemarketingLists/{targetableRemarketingListsId}",
          "parameters": {
            "id": {
              "location": "path",
              "description": "Remarketing list ID.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "int64",
              "description": "User profile ID associated with this request."
            }
          },
          "path": "userprofiles/{+profileId}/targetableRemarketingLists/{+id}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "parameterOrder": [
            "profileId",
            "advertiserId"
          ],
          "path": "userprofiles/{+profileId}/targetableRemarketingLists",
          "httpMethod": "GET",
          "response": {
            "$ref": "TargetableRemarketingListsListResponse"
          },
          "flatPath": "userprofiles/{userprofilesId}/targetableRemarketingLists",
          "id": "dfareporting.targetableRemarketingLists.list",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "1000"
            },
            "sortOrder": {
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "location": "query",
              "default": "ASCENDING"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "active": {
              "type": "boolean",
              "description": "Select only active or only inactive targetable remarketing lists.",
              "location": "query"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "required": true
            },
            "name": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\"."
            },
            "advertiserId": {
              "description": "Required. Select only targetable remarketing lists targetable by these advertisers.",
              "format": "int64",
              "type": "string",
              "location": "query",
              "required": true
            },
            "sortField": {
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "description": "Field by which to sort the list.",
              "location": "query",
              "enum": [
                "ID",
                "NAME"
              ]
            }
          },
          "description": "Retrieves a list of targetable remarketing lists, possibly filtered. This method supports paging.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "inventoryItems": {
      "methods": {
        "get": {
          "path": "userprofiles/{+profileId}/projects/{projectId}/inventoryItems/{+id}",
          "id": "dfareporting.inventoryItems.get",
          "flatPath": "userprofiles/{userprofilesId}/projects/{projectId}/inventoryItems/{inventoryItemsId}",
          "parameterOrder": [
            "profileId",
            "projectId",
            "id"
          ],
          "parameters": {
            "projectId": {
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "Project ID for order documents.",
              "required": true
            },
            "id": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "Inventory item ID."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "InventoryItem"
          },
          "description": "Gets one inventory item by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "id": "dfareporting.inventoryItems.list",
          "description": "Retrieves a list of inventory items, possibly filtered. This method supports paging.",
          "path": "userprofiles/{+profileId}/projects/{projectId}/inventoryItems",
          "flatPath": "userprofiles/{userprofilesId}/projects/{projectId}/inventoryItems",
          "parameters": {
            "ids": {
              "description": "Select only inventory items with these IDs.",
              "location": "query",
              "repeated": true,
              "type": "string",
              "format": "int64"
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "type": "string",
              "default": "ID",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "inPlan": {
              "type": "boolean",
              "location": "query",
              "description": "Select only inventory items that are in plan."
            },
            "orderId": {
              "format": "int64",
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "Select only inventory items that belong to specified orders."
            },
            "type": {
              "enum": [
                "PLANNING_PLACEMENT_TYPE_REGULAR",
                "PLANNING_PLACEMENT_TYPE_CREDIT"
              ],
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "description": "Select only inventory items with this type."
            },
            "siteId": {
              "location": "query",
              "repeated": true,
              "format": "int64",
              "type": "string",
              "description": "Select only inventory items that are associated with these sites."
            },
            "pageToken": {
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string"
            },
            "sortOrder": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "projectId": {
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "Project ID for order documents.",
              "location": "path"
            },
            "maxResults": {
              "default": "1000",
              "description": "Maximum number of results to return.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "InventoryItemsListResponse"
          },
          "parameterOrder": [
            "profileId",
            "projectId"
          ]
        }
      }
    },
    "mobileApps": {
      "methods": {
        "list": {
          "parameters": {
            "maxResults": {
              "description": "Maximum number of results to return.",
              "default": "1000",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "profileId": {
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string"
            },
            "ids": {
              "description": "Select only apps with these IDs.",
              "repeated": true,
              "type": "string",
              "location": "query"
            },
            "directories": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "APPLE_APP_STORE",
                "GOOGLE_PLAY_STORE",
                "ROKU_APP_STORE",
                "AMAZON_FIRETV_APP_STORE",
                "PLAYSTATION_APP_STORE",
                "APPLE_TV_APP_STORE",
                "XBOX_APP_STORE",
                "SAMSUNG_TV_APP_STORE",
                "ANDROID_TV_APP_STORE",
                "GENERIC_CTV_APP_STORE"
              ],
              "repeated": true,
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "description": "Select only apps from these directories.",
              "location": "query"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"app*2015\" will return objects with names like \"app Jan 2018\", \"app Jan 2018\", or simply \"app 2018\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"app\" will match objects with name \"my app\", \"app 2018\", or simply \"app\"."
            }
          },
          "description": "Retrieves list of available mobile apps.",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/mobileApps",
          "response": {
            "$ref": "MobileAppsListResponse"
          },
          "id": "dfareporting.mobileApps.list",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/mobileApps"
        },
        "get": {
          "id": "dfareporting.mobileApps.get",
          "httpMethod": "GET",
          "parameters": {
            "id": {
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "Mobile app ID.",
              "location": "path"
            },
            "profileId": {
              "required": true,
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "path": "userprofiles/{+profileId}/mobileApps/{+id}",
          "description": "Gets one mobile app by ID.",
          "flatPath": "userprofiles/{userprofilesId}/mobileApps/{mobileAppsId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "response": {
            "$ref": "MobileApp"
          }
        }
      }
    },
    "advertiserInvoices": {
      "methods": {
        "list": {
          "path": "userprofiles/{+profileId}/advertisers/{+advertiserId}/invoices",
          "parameterOrder": [
            "profileId",
            "advertiserId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/advertisers/{advertisersId}/invoices",
          "description": "Retrieves a list of invoices for a particular issue month. The api only works if the billing profile invoice level is set to either advertiser or campaign non-consolidated invoice level.",
          "response": {
            "$ref": "AdvertiserInvoicesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.advertiserInvoices.list",
          "parameters": {
            "maxResults": {
              "default": "1000",
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "Maximum number of results to return."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "advertiserId": {
              "description": "Advertiser ID of this invoice.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path"
            },
            "profileId": {
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request."
            },
            "issueMonth": {
              "location": "query",
              "description": "Month for which invoices are needed in the format YYYYMM. Required field",
              "type": "string"
            }
          }
        }
      }
    },
    "accountPermissionGroups": {
      "methods": {
        "get": {
          "id": "dfareporting.accountPermissionGroups.get",
          "httpMethod": "GET",
          "description": "Gets one account permission group by ID.",
          "response": {
            "$ref": "AccountPermissionGroup"
          },
          "path": "userprofiles/{+profileId}/accountPermissionGroups/{+id}",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true
            },
            "id": {
              "pattern": "^[^/]+$",
              "description": "Account permission group ID.",
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/accountPermissionGroups/{accountPermissionGroupsId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "id": "dfareporting.accountPermissionGroups.list",
          "response": {
            "$ref": "AccountPermissionGroupsListResponse"
          },
          "description": "Retrieves the list of account permission groups.",
          "flatPath": "userprofiles/{userprofilesId}/accountPermissionGroups",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/accountPermissionGroups"
        }
      }
    },
    "creativeFieldValues": {
      "methods": {
        "update": {
          "request": {
            "$ref": "CreativeFieldValue"
          },
          "id": "dfareporting.creativeFieldValues.update",
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues",
          "parameters": {
            "creativeFieldId": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Creative field ID for this creative field value.",
              "type": "string"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Updates an existing creative field value.",
          "response": {
            "$ref": "CreativeFieldValue"
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "creativeFieldId"
          ],
          "httpMethod": "PUT"
        },
        "list": {
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues",
          "response": {
            "$ref": "CreativeFieldValuesListResponse"
          },
          "id": "dfareporting.creativeFieldValues.list",
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues",
          "parameters": {
            "sortField": {
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "enum": [
                "ID",
                "VALUE"
              ],
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list."
            },
            "ids": {
              "description": "Select only creative field values with these IDs.",
              "location": "query",
              "repeated": true,
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request."
            },
            "sortOrder": {
              "default": "ASCENDING",
              "location": "query",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string"
            },
            "creativeFieldId": {
              "format": "int64",
              "description": "Creative field ID for this creative field value.",
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$"
            },
            "searchString": {
              "description": "Allows searching for creative field values by their values. Wildcards (e.g. *) are not allowed.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "format": "int32",
              "type": "integer",
              "default": "1000"
            }
          },
          "description": "Retrieves a list of creative field values, possibly filtered. This method supports paging.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "creativeFieldId"
          ]
        },
        "patch": {
          "parameterOrder": [
            "profileId",
            "creativeFieldId",
            "id"
          ],
          "id": "dfareporting.creativeFieldValues.patch",
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues",
          "parameters": {
            "creativeFieldId": {
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "CreativeField ID.",
              "type": "string",
              "format": "int64"
            },
            "id": {
              "required": true,
              "format": "int64",
              "description": "CreativeFieldValue ID.",
              "location": "query",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeFieldValue"
          },
          "request": {
            "$ref": "CreativeFieldValue"
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues",
          "httpMethod": "PATCH",
          "description": "Updates an existing creative field value. This method supports patch semantics."
        },
        "insert": {
          "httpMethod": "POST",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues",
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues",
          "id": "dfareporting.creativeFieldValues.insert",
          "request": {
            "$ref": "CreativeFieldValue"
          },
          "parameters": {
            "creativeFieldId": {
              "description": "Creative field ID for this creative field value.",
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "profileId",
            "creativeFieldId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeFieldValue"
          },
          "description": "Inserts a new creative field value."
        },
        "delete": {
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues/{+id}",
          "parameterOrder": [
            "profileId",
            "creativeFieldId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues/{creativeFieldValuesId}",
          "parameters": {
            "id": {
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "Creative Field Value ID",
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "creativeFieldId": {
              "format": "int64",
              "required": true,
              "description": "Creative field ID for this creative field value.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.creativeFieldValues.delete",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Deletes an existing creative field value.",
          "httpMethod": "DELETE"
        },
        "get": {
          "description": "Gets one creative field value by ID.",
          "httpMethod": "GET",
          "response": {
            "$ref": "CreativeFieldValue"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.creativeFieldValues.get",
          "flatPath": "userprofiles/{userprofilesId}/creativeFields/{creativeFieldsId}/creativeFieldValues/{creativeFieldValuesId}",
          "parameterOrder": [
            "profileId",
            "creativeFieldId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues/{+id}",
          "parameters": {
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true
            },
            "id": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "Creative Field Value ID",
              "location": "path",
              "format": "int64"
            },
            "creativeFieldId": {
              "location": "path",
              "type": "string",
              "format": "int64",
              "description": "Creative field ID for this creative field value.",
              "required": true,
              "pattern": "^[^/]+$"
            }
          }
        }
      }
    },
    "placementStrategies": {
      "methods": {
        "delete": {
          "description": "Deletes an existing placement strategy.",
          "id": "dfareporting.placementStrategies.delete",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "required": true,
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "id": {
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "description": "Placement strategy ID.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "DELETE",
          "path": "userprofiles/{+profileId}/placementStrategies/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies/{placementStrategiesId}"
        },
        "insert": {
          "parameters": {
            "profileId": {
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$"
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.placementStrategies.insert",
          "request": {
            "$ref": "PlacementStrategy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Inserts a new placement strategy.",
          "response": {
            "$ref": "PlacementStrategy"
          },
          "path": "userprofiles/{+profileId}/placementStrategies",
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies"
        },
        "list": {
          "response": {
            "$ref": "PlacementStrategiesListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves a list of placement strategies, possibly filtered. This method supports paging.",
          "path": "userprofiles/{+profileId}/placementStrategies",
          "id": "dfareporting.placementStrategies.list",
          "parameters": {
            "searchString": {
              "location": "query",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"placementstrategy*2015\" will return objects with names like \"placementstrategy June 2015\", \"placementstrategy April 2015\", or simply \"placementstrategy 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementstrategy\" will match objects with name \"my placementstrategy\", \"placementstrategy 2015\", or simply \"placementstrategy\".",
              "type": "string"
            },
            "ids": {
              "repeated": true,
              "location": "query",
              "format": "int64",
              "description": "Select only placement strategies with these IDs.",
              "type": "string"
            },
            "sortField": {
              "type": "string",
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ],
              "location": "query",
              "default": "ID"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "type": "integer",
              "format": "int32",
              "default": "1000"
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "sortOrder": {
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies"
        },
        "update": {
          "id": "dfareporting.placementStrategies.update",
          "parameters": {
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/placementStrategies",
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies",
          "httpMethod": "PUT",
          "response": {
            "$ref": "PlacementStrategy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "PlacementStrategy"
          },
          "description": "Updates an existing placement strategy."
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request."
            },
            "id": {
              "description": "Placement strategy ID.",
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "format": "int64",
              "type": "string"
            }
          },
          "id": "dfareporting.placementStrategies.get",
          "description": "Gets one placement strategy by ID.",
          "response": {
            "$ref": "PlacementStrategy"
          },
          "path": "userprofiles/{+profileId}/placementStrategies/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies/{placementStrategiesId}",
          "httpMethod": "GET"
        },
        "patch": {
          "flatPath": "userprofiles/{userprofilesId}/placementStrategies",
          "request": {
            "$ref": "PlacementStrategy"
          },
          "parameters": {
            "id": {
              "description": "Required. PlacementStrategy ID.",
              "format": "int64",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true
            }
          },
          "description": "Updates an existing placement strategy. This method supports patch semantics.",
          "path": "userprofiles/{+profileId}/placementStrategies",
          "response": {
            "$ref": "PlacementStrategy"
          },
          "httpMethod": "PATCH",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.placementStrategies.patch",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "campaigns": {
      "methods": {
        "update": {
          "path": "userprofiles/{+profileId}/campaigns",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "Campaign"
          },
          "parameters": {
            "profileId": {
              "type": "string",
              "format": "int64",
              "required": true,
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            }
          },
          "request": {
            "$ref": "Campaign"
          },
          "flatPath": "userprofiles/{userprofilesId}/campaigns",
          "id": "dfareporting.campaigns.update",
          "description": "Updates an existing campaign.",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "patch": {
          "httpMethod": "PATCH",
          "parameters": {
            "profileId": {
              "format": "int64",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "id": {
              "description": "Required. Campaign ID.",
              "location": "query",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/campaigns",
          "request": {
            "$ref": "Campaign"
          },
          "response": {
            "$ref": "Campaign"
          },
          "path": "userprofiles/{+profileId}/campaigns",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.campaigns.patch",
          "description": "Updates an existing creative. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "get": {
          "id": "dfareporting.campaigns.get",
          "httpMethod": "GET",
          "parameters": {
            "profileId": {
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "location": "path",
              "format": "int64",
              "type": "string",
              "description": "Campaign ID.",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "Campaign"
          },
          "flatPath": "userprofiles/{userprofilesId}/campaigns/{campaignsId}",
          "description": "Gets one campaign by ID.",
          "path": "userprofiles/{+profileId}/campaigns/{+id}"
        },
        "insert": {
          "flatPath": "userprofiles/{userprofilesId}/campaigns",
          "response": {
            "$ref": "Campaign"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "profileId"
          ],
          "description": "Inserts a new campaign.",
          "path": "userprofiles/{+profileId}/campaigns",
          "request": {
            "$ref": "Campaign"
          },
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true,
              "location": "path"
            }
          },
          "id": "dfareporting.campaigns.insert",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "id": "dfareporting.campaigns.list",
          "path": "userprofiles/{+profileId}/campaigns",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "searchString": {
              "type": "string",
              "description": "Allows searching for campaigns by name or ID. Wildcards (*) are allowed. For example, \"campaign*2015\" will return campaigns with names like \"campaign June 2015\", \"campaign April 2015\", or simply \"campaign 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"campaign\" will match campaigns with name \"my campaign\", \"campaign 2015\", or simply \"campaign\".",
              "location": "query"
            },
            "overriddenEventTagId": {
              "format": "int64",
              "type": "string",
              "description": "Select only campaigns that have overridden this event tag ID.",
              "location": "query"
            },
            "atLeastOneOptimizationActivity": {
              "type": "boolean",
              "location": "query",
              "description": "Select only campaigns that have at least one optimization activity."
            },
            "archived": {
              "type": "boolean",
              "location": "query",
              "description": "Select only archived campaigns. Don't set this field to select both archived and non-archived campaigns."
            },
            "maxResults": {
              "type": "integer",
              "description": "Maximum number of results to return.",
              "format": "int32",
              "default": "1000",
              "location": "query"
            },
            "advertiserIds": {
              "repeated": true,
              "format": "int64",
              "location": "query",
              "description": "Select only campaigns that belong to these advertisers.",
              "type": "string"
            },
            "advertiserGroupIds": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "Select only campaigns whose advertisers belong to these advertiser groups.",
              "format": "int64"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "sortField": {
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "excludedIds": {
              "format": "int64",
              "description": "Exclude campaigns with these IDs.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "ids": {
              "format": "int64",
              "description": "Select only campaigns with these IDs.",
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string"
            },
            "subaccountId": {
              "location": "query",
              "type": "string",
              "description": "Select only campaigns that belong to this subaccount.",
              "format": "int64"
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "default": "ASCENDING",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/campaigns",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "CampaignsListResponse"
          },
          "description": "Retrieves a list of campaigns, possibly filtered. This method supports paging."
        }
      }
    },
    "ads": {
      "methods": {
        "patch": {
          "flatPath": "userprofiles/{userprofilesId}/ads",
          "parameters": {
            "id": {
              "type": "string",
              "description": "Required. RemarketingList ID.",
              "location": "query",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "request": {
            "$ref": "Ad"
          },
          "response": {
            "$ref": "Ad"
          },
          "description": "Updates an existing event tag. This method supports patch semantics.",
          "id": "dfareporting.ads.patch",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/ads",
          "httpMethod": "PATCH"
        },
        "update": {
          "flatPath": "userprofiles/{userprofilesId}/ads",
          "description": "Updates an existing ad.",
          "httpMethod": "PUT",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/ads",
          "request": {
            "$ref": "Ad"
          },
          "id": "dfareporting.ads.update",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "required": true
            }
          },
          "response": {
            "$ref": "Ad"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "get": {
          "id": "dfareporting.ads.get",
          "flatPath": "userprofiles/{userprofilesId}/ads/{adsId}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "parameters": {
            "id": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Ad ID.",
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "description": "Gets one ad by ID.",
          "response": {
            "$ref": "Ad"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/ads/{+id}"
        },
        "list": {
          "flatPath": "userprofiles/{userprofilesId}/ads",
          "response": {
            "$ref": "AdsListResponse"
          },
          "parameters": {
            "maxResults": {
              "default": "1000",
              "description": "Maximum number of results to return.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "creativeIds": {
              "repeated": true,
              "description": "Select only ads with these creative IDs assigned.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "type": {
              "repeated": true,
              "enum": [
                "AD_SERVING_STANDARD_AD",
                "AD_SERVING_DEFAULT_AD",
                "AD_SERVING_CLICK_TRACKER",
                "AD_SERVING_TRACKING",
                "AD_SERVING_BRAND_SAFE_AD"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ],
              "description": "Select only ads with these types.",
              "type": "string",
              "location": "query"
            },
            "ids": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Select only ads with these IDs.",
              "repeated": true
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "default": "ASCENDING",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string",
              "location": "query",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "remarketingListIds": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "repeated": true,
              "description": "Select only ads whose list targeting expression use these remarketing list IDs."
            },
            "dynamicClickTracker": {
              "description": "Select only dynamic click trackers. Applicable when type is AD_SERVING_CLICK_TRACKER. If true, select dynamic click trackers. If false, select static click trackers. Leave unset to select both.",
              "type": "boolean",
              "location": "query"
            },
            "archived": {
              "type": "boolean",
              "location": "query",
              "description": "Select only archived ads."
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "Select only ads with this advertiser ID."
            },
            "placementIds": {
              "repeated": true,
              "location": "query",
              "description": "Select only ads with these placement IDs assigned.",
              "format": "int64",
              "type": "string"
            },
            "compatibility": {
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "",
                "Deprecated enum value. No longer supported.",
                "Deprecated enum value. No longer supported.",
                "",
                ""
              ],
              "enum": [
                "DISPLAY",
                "DISPLAY_INTERSTITIAL",
                "APP",
                "APP_INTERSTITIAL",
                "IN_STREAM_VIDEO",
                "IN_STREAM_AUDIO"
              ],
              "description": "Select default ads with the specified compatibility. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard."
            },
            "sizeIds": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Select only ads with these size IDs.",
              "repeated": true
            },
            "searchString": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"ad*2015\" will return objects with names like \"ad June 2015\", \"ad April 2015\", or simply \"ad 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"ad\" will match objects with name \"my ad\", \"ad 2015\", or simply \"ad\".",
              "type": "string",
              "location": "query"
            },
            "campaignIds": {
              "repeated": true,
              "format": "int64",
              "location": "query",
              "type": "string",
              "description": "Select only ads with these campaign IDs."
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            },
            "landingPageIds": {
              "repeated": true,
              "description": "Select only ads with these landing page IDs.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "sortField": {
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "location": "query",
              "type": "string",
              "description": "Field by which to sort the list.",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "active": {
              "type": "boolean",
              "location": "query",
              "description": "Select only active ads."
            },
            "sslCompliant": {
              "type": "boolean",
              "location": "query",
              "description": "Select only ads that are SSL-compliant."
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true
            },
            "sslRequired": {
              "description": "Select only ads that require SSL.",
              "type": "boolean",
              "location": "query"
            },
            "overriddenEventTagId": {
              "location": "query",
              "description": "Select only ads with this event tag override ID.",
              "type": "string",
              "format": "int64"
            },
            "creativeOptimizationConfigurationIds": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "Select only ads with these creative optimization configuration IDs.",
              "format": "int64"
            },
            "audienceSegmentIds": {
              "format": "int64",
              "location": "query",
              "description": "Select only ads with these audience segment IDs.",
              "repeated": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "description": "Retrieves a list of ads, possibly filtered. This method supports paging.",
          "path": "userprofiles/{+profileId}/ads",
          "id": "dfareporting.ads.list",
          "parameterOrder": [
            "profileId"
          ]
        },
        "insert": {
          "description": "Inserts a new ad.",
          "response": {
            "$ref": "Ad"
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/ads",
          "httpMethod": "POST",
          "path": "userprofiles/{+profileId}/ads",
          "request": {
            "$ref": "Ad"
          },
          "parameters": {
            "profileId": {
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          },
          "id": "dfareporting.ads.insert"
        }
      }
    },
    "countries": {
      "methods": {
        "list": {
          "flatPath": "userprofiles/{userprofilesId}/countries",
          "response": {
            "$ref": "CountriesListResponse"
          },
          "description": "Retrieves a list of countries.",
          "path": "userprofiles/{+profileId}/countries",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string"
            }
          },
          "id": "dfareporting.countries.list",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "Country"
          },
          "parameters": {
            "dartId": {
              "format": "int64",
              "location": "path",
              "description": "Country DART ID.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$"
            }
          },
          "path": "userprofiles/{+profileId}/countries/{+dartId}",
          "id": "dfareporting.countries.get",
          "parameterOrder": [
            "profileId",
            "dartId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/countries/{countriesId}",
          "httpMethod": "GET",
          "description": "Gets one country by ID."
        }
      }
    },
    "changeLogs": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "id": "dfareporting.changeLogs.get",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64"
            },
            "id": {
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "required": true,
              "description": "Change log ID."
            }
          },
          "description": "Gets one change log by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/changeLogs/{changeLogsId}",
          "path": "userprofiles/{+profileId}/changeLogs/{+id}",
          "response": {
            "$ref": "ChangeLog"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "path": "userprofiles/{+profileId}/changeLogs",
          "response": {
            "$ref": "ChangeLogsListResponse"
          },
          "parameters": {
            "action": {
              "description": "Select only change logs with the specified action.",
              "type": "string",
              "location": "query",
              "enum": [
                "ACTION_CREATE",
                "ACTION_UPDATE",
                "ACTION_DELETE",
                "ACTION_ENABLE",
                "ACTION_DISABLE",
                "ACTION_ADD",
                "ACTION_REMOVE",
                "ACTION_MARK_AS_DEFAULT",
                "ACTION_ASSOCIATE",
                "ACTION_ASSIGN",
                "ACTION_UNASSIGN",
                "ACTION_SEND",
                "ACTION_LINK",
                "ACTION_UNLINK",
                "ACTION_PUSH",
                "ACTION_EMAIL_TAGS",
                "ACTION_SHARE"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "userProfileIds": {
              "type": "string",
              "repeated": true,
              "description": "Select only change logs with these user profile IDs.",
              "format": "int64",
              "location": "query"
            },
            "objectType": {
              "location": "query",
              "description": "Select only change logs with the specified object type.",
              "enum": [
                "OBJECT_ADVERTISER",
                "OBJECT_FLOODLIGHT_CONFIGURATION",
                "OBJECT_AD",
                "OBJECT_FLOODLIGHT_ACTVITY",
                "OBJECT_CAMPAIGN",
                "OBJECT_FLOODLIGHT_ACTIVITY_GROUP",
                "OBJECT_CREATIVE",
                "OBJECT_PLACEMENT",
                "OBJECT_DFA_SITE",
                "OBJECT_USER_ROLE",
                "OBJECT_USER_PROFILE",
                "OBJECT_ADVERTISER_GROUP",
                "OBJECT_ACCOUNT",
                "OBJECT_SUBACCOUNT",
                "OBJECT_RICHMEDIA_CREATIVE",
                "OBJECT_INSTREAM_CREATIVE",
                "OBJECT_MEDIA_ORDER",
                "OBJECT_CONTENT_CATEGORY",
                "OBJECT_PLACEMENT_STRATEGY",
                "OBJECT_SD_SITE",
                "OBJECT_SIZE",
                "OBJECT_CREATIVE_GROUP",
                "OBJECT_CREATIVE_ASSET",
                "OBJECT_USER_PROFILE_FILTER",
                "OBJECT_LANDING_PAGE",
                "OBJECT_CREATIVE_FIELD",
                "OBJECT_REMARKETING_LIST",
                "OBJECT_PROVIDED_LIST_CLIENT",
                "OBJECT_EVENT_TAG",
                "OBJECT_CREATIVE_BUNDLE",
                "OBJECT_BILLING_ACCOUNT_GROUP",
                "OBJECT_BILLING_FEATURE",
                "OBJECT_RATE_CARD",
                "OBJECT_ACCOUNT_BILLING_FEATURE",
                "OBJECT_BILLING_MINIMUM_FEE",
                "OBJECT_BILLING_PROFILE",
                "OBJECT_PLAYSTORE_LINK",
                "OBJECT_TARGETING_TEMPLATE",
                "OBJECT_SEARCH_LIFT_STUDY",
                "OBJECT_FLOODLIGHT_DV360_LINK",
                "OBJECT_ADVERTISER_CUSTOMER_LINK"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "type": "string"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "default": "1000",
              "description": "Maximum number of results to return.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            },
            "maxChangeTime": {
              "description": "Select only change logs whose change time is before the specified maxChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",
              "location": "query",
              "type": "string"
            },
            "objectIds": {
              "location": "query",
              "format": "int64",
              "repeated": true,
              "type": "string",
              "description": "Select only change logs with these object IDs."
            },
            "profileId": {
              "type": "string",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request."
            },
            "ids": {
              "type": "string",
              "format": "int64",
              "repeated": true,
              "location": "query",
              "description": "Select only change logs with these IDs."
            },
            "searchString": {
              "type": "string",
              "description": "Select only change logs whose object ID, user name, old or new values match the search string.",
              "location": "query"
            },
            "minChangeTime": {
              "description": "Select only change logs whose change time is after the specified minChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Retrieves a list of change logs. This method supports paging.",
          "flatPath": "userprofiles/{userprofilesId}/changeLogs",
          "httpMethod": "GET",
          "id": "dfareporting.changeLogs.list",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "advertiserGroups": {
      "methods": {
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups/{advertiserGroupsId}",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "required": true
            },
            "id": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Advertiser group ID.",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "id": "dfareporting.advertiserGroups.delete",
          "description": "Deletes an existing advertiser group.",
          "httpMethod": "DELETE",
          "path": "userprofiles/{+profileId}/advertiserGroups/{+id}"
        },
        "insert": {
          "parameters": {
            "profileId": {
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups",
          "path": "userprofiles/{+profileId}/advertiserGroups",
          "id": "dfareporting.advertiserGroups.insert",
          "response": {
            "$ref": "AdvertiserGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "AdvertiserGroup"
          },
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "POST",
          "description": "Inserts a new advertiser group."
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "AdvertiserGroup"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "response": {
            "$ref": "AdvertiserGroup"
          },
          "id": "dfareporting.advertiserGroups.patch",
          "path": "userprofiles/{+profileId}/advertiserGroups",
          "httpMethod": "PATCH",
          "parameters": {
            "id": {
              "required": true,
              "format": "int64",
              "location": "query",
              "description": "Required. Advertiser Group ID.",
              "type": "string"
            },
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64",
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups",
          "description": "Updates an existing advertiser group. This method supports patch semantics."
        },
        "update": {
          "parameters": {
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+$"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "AdvertiserGroup"
          },
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Updates an existing advertiser group.",
          "id": "dfareporting.advertiserGroups.update",
          "response": {
            "$ref": "AdvertiserGroup"
          },
          "httpMethod": "PUT",
          "path": "userprofiles/{+profileId}/advertiserGroups"
        },
        "get": {
          "path": "userprofiles/{+profileId}/advertiserGroups/{+id}",
          "parameters": {
            "id": {
              "description": "Advertiser group ID.",
              "format": "int64",
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64"
            }
          },
          "id": "dfareporting.advertiserGroups.get",
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups/{advertiserGroupsId}",
          "description": "Gets one advertiser group by ID.",
          "httpMethod": "GET",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "response": {
            "$ref": "AdvertiserGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "parameterOrder": [
            "profileId"
          ],
          "id": "dfareporting.advertiserGroups.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/advertiserGroups",
          "response": {
            "$ref": "AdvertiserGroupsListResponse"
          },
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            },
            "sortField": {
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "description": "Field by which to sort the list.",
              "default": "ID",
              "type": "string",
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser group June 2015\", \"advertiser group April 2015\", or simply \"advertiser group 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertisergroup\" will match objects with name \"my advertisergroup\", \"advertisergroup 2015\", or simply \"advertisergroup\"."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "ids": {
              "format": "int64",
              "description": "Select only advertiser groups with these IDs.",
              "type": "string",
              "location": "query",
              "repeated": true
            },
            "sortOrder": {
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "location": "query",
              "description": "Order of sorted results.",
              "default": "ASCENDING"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "default": "1000",
              "location": "query",
              "format": "int32",
              "type": "integer"
            }
          },
          "path": "userprofiles/{+profileId}/advertiserGroups",
          "description": "Retrieves a list of advertiser groups, possibly filtered. This method supports paging."
        }
      }
    },
    "placements": {
      "methods": {
        "insert": {
          "httpMethod": "POST",
          "parameters": {
            "profileId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/placements",
          "id": "dfareporting.placements.insert",
          "path": "userprofiles/{+profileId}/placements",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Inserts a new placement.",
          "response": {
            "$ref": "Placement"
          },
          "request": {
            "$ref": "Placement"
          }
        },
        "generatetags": {
          "parameters": {
            "placementIds": {
              "location": "query",
              "description": "Generate tags for these placements.",
              "type": "string",
              "repeated": true,
              "format": "int64"
            },
            "campaignId": {
              "location": "query",
              "format": "int64",
              "description": "Generate placements belonging to this campaign. This is a required field.",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64"
            },
            "tagFormats": {
              "description": "Tag formats to generate for these placements. *Note:* PLACEMENT_TAG_STANDARD can only be generated for 1x1 placements.",
              "location": "query",
              "enum": [
                "PLACEMENT_TAG_STANDARD",
                "PLACEMENT_TAG_IFRAME_JAVASCRIPT",
                "PLACEMENT_TAG_IFRAME_ILAYER",
                "PLACEMENT_TAG_INTERNAL_REDIRECT",
                "PLACEMENT_TAG_JAVASCRIPT",
                "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT",
                "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT",
                "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT",
                "PLACEMENT_TAG_CLICK_COMMANDS",
                "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH",
                "PLACEMENT_TAG_TRACKING",
                "PLACEMENT_TAG_TRACKING_IFRAME",
                "PLACEMENT_TAG_TRACKING_JAVASCRIPT",
                "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3",
                "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY",
                "PLACEMENT_TAG_JAVASCRIPT_LEGACY",
                "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY",
                "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY",
                "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4",
                "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "repeated": true,
              "type": "string"
            }
          },
          "description": "Generates tags for a placement.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "PlacementsGenerateTagsResponse"
          },
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/placements/generatetags",
          "flatPath": "userprofiles/{userprofilesId}/placements/generatetags",
          "httpMethod": "POST",
          "id": "dfareporting.placements.generatetags"
        },
        "patch": {
          "parameters": {
            "profileId": {
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "query",
              "description": "Required. Placement ID."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/placements",
          "flatPath": "userprofiles/{userprofilesId}/placements",
          "description": "Updates an existing placement. This method supports patch semantics.",
          "response": {
            "$ref": "Placement"
          },
          "id": "dfareporting.placements.patch",
          "request": {
            "$ref": "Placement"
          },
          "httpMethod": "PATCH"
        },
        "update": {
          "path": "userprofiles/{+profileId}/placements",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "location": "path",
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "Placement"
          },
          "description": "Updates an existing placement.",
          "flatPath": "userprofiles/{userprofilesId}/placements",
          "id": "dfareporting.placements.update",
          "httpMethod": "PUT",
          "response": {
            "$ref": "Placement"
          }
        },
        "list": {
          "flatPath": "userprofiles/{userprofilesId}/placements",
          "description": "Retrieves a list of placements, possibly filtered. This method supports paging.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "PlacementsListResponse"
          },
          "path": "userprofiles/{+profileId}/placements",
          "parameters": {
            "campaignIds": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "Select only placements that belong to these campaigns.",
              "repeated": true
            },
            "compatibilities": {
              "enum": [
                "DISPLAY",
                "DISPLAY_INTERSTITIAL",
                "APP",
                "APP_INTERSTITIAL",
                "IN_STREAM_VIDEO",
                "IN_STREAM_AUDIO"
              ],
              "location": "query",
              "description": "Select only placements that are associated with these compatibilities. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",
              "enumDescriptions": [
                "",
                "",
                "Deprecated enum value. No longer supported.",
                "Deprecated enum value. No longer supported.",
                "",
                ""
              ],
              "repeated": true,
              "type": "string"
            },
            "siteIds": {
              "location": "query",
              "description": "Select only placements that are associated with these sites.",
              "type": "string",
              "format": "int64",
              "repeated": true
            },
            "profileId": {
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "description": "User profile ID associated with this request."
            },
            "groupIds": {
              "format": "int64",
              "description": "Select only placements that belong to these placement groups.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "searchString": {
              "description": "Allows searching for placements by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placements with names like \"placement June 2015\", \"placement May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placement\" will match placements with name \"my placement\", \"placement 2015\", or simply \"placement\" .",
              "location": "query",
              "type": "string"
            },
            "maxStartDate": {
              "type": "string",
              "description": "Select only placements or placement groups whose start date is on or before the specified maxStartDate. The date should be formatted as \"yyyy-MM-dd\".",
              "location": "query"
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "enum": [
                "ID",
                "NAME"
              ],
              "type": "string"
            },
            "minEndDate": {
              "location": "query",
              "type": "string",
              "description": "Select only placements or placement groups whose end date is on or after the specified minEndDate. The date should be formatted as \"yyyy-MM-dd\"."
            },
            "activeStatus": {
              "repeated": true,
              "type": "string",
              "description": "Select only placements with these active statuses.",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ],
              "location": "query",
              "enum": [
                "PLACEMENT_STATUS_UNKNOWN",
                "PLACEMENT_STATUS_ACTIVE",
                "PLACEMENT_STATUS_INACTIVE",
                "PLACEMENT_STATUS_ARCHIVED",
                "PLACEMENT_STATUS_PERMANENTLY_ARCHIVED"
              ]
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "format": "int32",
              "default": "1000",
              "type": "integer",
              "location": "query"
            },
            "paymentSource": {
              "location": "query",
              "description": "Select only placements with this payment source.",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "PLACEMENT_AGENCY_PAID",
                "PLACEMENT_PUBLISHER_PAID"
              ],
              "type": "string"
            },
            "sizeIds": {
              "location": "query",
              "type": "string",
              "description": "Select only placements that are associated with these sizes.",
              "repeated": true,
              "format": "int64"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "location": "query",
              "type": "string"
            },
            "contentCategoryIds": {
              "type": "string",
              "format": "int64",
              "location": "query",
              "repeated": true,
              "description": "Select only placements that are associated with these content categories."
            },
            "ids": {
              "format": "int64",
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "Select only placements with these IDs."
            },
            "minStartDate": {
              "description": "Select only placements or placement groups whose start date is on or after the specified minStartDate. The date should be formatted as \"yyyy-MM-dd\".",
              "location": "query",
              "type": "string"
            },
            "maxEndDate": {
              "type": "string",
              "description": "Select only placements or placement groups whose end date is on or before the specified maxEndDate. The date should be formatted as \"yyyy-MM-dd\".",
              "location": "query"
            },
            "placementStrategyIds": {
              "format": "int64",
              "location": "query",
              "repeated": true,
              "description": "Select only placements that are associated with these placement strategies.",
              "type": "string"
            },
            "directorySiteIds": {
              "format": "int64",
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "Select only placements that are associated with these directory sites."
            },
            "advertiserIds": {
              "description": "Select only placements that belong to these advertisers.",
              "format": "int64",
              "repeated": true,
              "location": "query",
              "type": "string"
            },
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "type": "string",
              "location": "query"
            },
            "pricingTypes": {
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "description": "Select only placements with these pricing types.",
              "type": "string",
              "location": "query",
              "repeated": true,
              "enum": [
                "PRICING_TYPE_CPM",
                "PRICING_TYPE_CPC",
                "PRICING_TYPE_CPA",
                "PRICING_TYPE_FLAT_RATE_IMPRESSIONS",
                "PRICING_TYPE_FLAT_RATE_CLICKS",
                "PRICING_TYPE_CPM_ACTIVEVIEW"
              ]
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.placements.list"
        },
        "get": {
          "id": "dfareporting.placements.get",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "Placement"
          },
          "flatPath": "userprofiles/{userprofilesId}/placements/{placementsId}",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/placements/{+id}",
          "parameters": {
            "profileId": {
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "required": true,
              "format": "int64",
              "description": "Placement ID.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$"
            }
          },
          "description": "Gets one placement by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ]
        }
      }
    },
    "mobileCarriers": {
      "methods": {
        "list": {
          "response": {
            "$ref": "MobileCarriersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/mobileCarriers",
          "path": "userprofiles/{+profileId}/mobileCarriers",
          "id": "dfareporting.mobileCarriers.list",
          "description": "Retrieves a list of mobile carriers.",
          "httpMethod": "GET"
        },
        "get": {
          "response": {
            "$ref": "MobileCarrier"
          },
          "flatPath": "userprofiles/{userprofilesId}/mobileCarriers/{mobileCarriersId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.mobileCarriers.get",
          "path": "userprofiles/{+profileId}/mobileCarriers/{+id}",
          "parameters": {
            "profileId": {
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            },
            "id": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Mobile carrier ID.",
              "pattern": "^[^/]+$"
            }
          },
          "description": "Gets one mobile carrier by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ]
        }
      }
    },
    "files": {
      "methods": {
        "list": {
          "description": "Lists files for a user profile.",
          "id": "dfareporting.files.list",
          "httpMethod": "GET",
          "path": "userprofiles/{profileId}/files",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous result page."
            },
            "sortField": {
              "type": "string",
              "default": "LAST_MODIFIED_TIME",
              "location": "query",
              "enum": [
                "ID",
                "LAST_MODIFIED_TIME"
              ],
              "enumDescriptions": [
                "Sort by file ID.",
                "Sort by 'lastmodifiedAt' field."
              ],
              "description": "The field by which to sort the list."
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "default": "10",
              "location": "query",
              "description": "Maximum number of results to return."
            },
            "scope": {
              "enumDescriptions": [
                "All files in account.",
                "My files.",
                "Files shared with me."
              ],
              "type": "string",
              "location": "query",
              "description": "The scope that defines which results are returned.",
              "enum": [
                "ALL",
                "MINE",
                "SHARED_WITH_ME"
              ],
              "default": "MINE"
            },
            "profileId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The Campaign Manager 360 user profile ID.",
              "format": "int64"
            },
            "sortOrder": {
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "default": "DESCENDING",
              "description": "Order of sorted results.",
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "response": {
            "$ref": "FileList"
          },
          "flatPath": "userprofiles/{profileId}/files",
          "parameterOrder": [
            "profileId"
          ]
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "parameters": {
            "fileId": {
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the report file."
            },
            "reportId": {
              "description": "The ID of the report.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64"
            }
          },
          "response": {
            "$ref": "File"
          },
          "id": "dfareporting.files.get",
          "parameterOrder": [
            "reportId",
            "fileId"
          ],
          "description": "Retrieves a report file by its report ID and file ID. This method supports media download.",
          "httpMethod": "GET",
          "path": "reports/{reportId}/files/{fileId}",
          "supportsMediaDownload": true,
          "flatPath": "reports/{reportId}/files/{fileId}"
        }
      }
    },
    "billingProfiles": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "description": "Retrieves a list of billing profiles, possibly filtered. This method supports paging.",
          "id": "dfareporting.billingProfiles.list",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "subaccountIds": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "Select only billing profile with the specified subaccount.When only_suggestion is true, only a single subaccount_id is supported.",
              "format": "int64"
            },
            "pageToken": {
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "description": "Allows searching for billing profiles by name. Wildcards (*) are allowed. For example, \"profile*2020\" will return objects with names like \"profile June 2020\", \"profile April 2020\", or simply \"profile 2020\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"profile\" will match objects with name \"my profile\", \"profile 2021\", or simply \"profile\".",
              "type": "string",
              "location": "query"
            },
            "ids": {
              "description": "Select only billing profile with these IDs.",
              "format": "int64",
              "repeated": true,
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "default": "1000",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "type": "integer"
            },
            "status": {
              "location": "query",
              "repeated": true,
              "enumDescriptions": [
                "",
                "",
                ""
              ],
              "type": "string",
              "description": "Select only billing profile with the specified status.",
              "enum": [
                "UNDER_REVIEW",
                "ACTIVE",
                "ARCHIVED"
              ]
            },
            "onlySuggestion": {
              "location": "query",
              "type": "boolean",
              "description": "Select only billing profile which is suggested for the currency_code & subaccount_id using the Billing Suggestion API."
            },
            "sortField": {
              "type": "string",
              "location": "query",
              "enum": [
                "ID",
                "NAME"
              ],
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID"
            },
            "sortOrder": {
              "description": "Order of sorted results.",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "location": "query",
              "default": "ASCENDING",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$"
            },
            "currency_code": {
              "type": "string",
              "location": "query",
              "description": "Select only billing profile with currency."
            }
          },
          "path": "userprofiles/{+profileId}/billingProfiles",
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles",
          "response": {
            "$ref": "BillingProfilesListResponse"
          }
        },
        "get": {
          "parameters": {
            "id": {
              "description": "Billing Profile ID.",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true
            }
          },
          "description": "Gets one billing profile by ID.",
          "response": {
            "$ref": "BillingProfile"
          },
          "path": "userprofiles/{+profileId}/billingProfiles/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles/{billingProfilesId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.billingProfiles.get",
          "httpMethod": "GET"
        },
        "update": {
          "flatPath": "userprofiles/{userprofilesId}/billingProfiles",
          "parameters": {
            "profileId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "required": true
            }
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "BillingProfile"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "BillingProfile"
          },
          "description": "Updates an existing billing profile.",
          "path": "userprofiles/{+profileId}/billingProfiles",
          "id": "dfareporting.billingProfiles.update"
        }
      }
    },
    "regions": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "description": "Retrieves a list of regions.",
          "id": "dfareporting.regions.list",
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "RegionsListResponse"
          },
          "parameters": {
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/regions",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/regions"
        }
      }
    },
    "targetingTemplates": {
      "methods": {
        "update": {
          "response": {
            "$ref": "TargetingTemplate"
          },
          "request": {
            "$ref": "TargetingTemplate"
          },
          "id": "dfareporting.targetingTemplates.update",
          "parameters": {
            "profileId": {
              "required": true,
              "description": "User profile ID associated with this request.",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "description": "Updates an existing targeting template.",
          "path": "userprofiles/{+profileId}/targetingTemplates",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "PUT",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/targetingTemplates"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "id": "dfareporting.targetingTemplates.get",
          "response": {
            "$ref": "TargetingTemplate"
          },
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "id": {
              "description": "Targeting template ID.",
              "type": "string",
              "format": "int64",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true
            }
          },
          "path": "userprofiles/{+profileId}/targetingTemplates/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/targetingTemplates/{targetingTemplatesId}",
          "description": "Gets one targeting template by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ]
        },
        "insert": {
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string"
            }
          },
          "description": "Inserts a new targeting template.",
          "httpMethod": "POST",
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "TargetingTemplate"
          },
          "flatPath": "userprofiles/{userprofilesId}/targetingTemplates",
          "response": {
            "$ref": "TargetingTemplate"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/targetingTemplates",
          "id": "dfareporting.targetingTemplates.insert"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.targetingTemplates.list",
          "flatPath": "userprofiles/{userprofilesId}/targetingTemplates",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/targetingTemplates",
          "response": {
            "$ref": "TargetingTemplatesListResponse"
          },
          "parameterOrder": [
            "profileId"
          ],
          "description": "Retrieves a list of targeting templates, optionally filtered. This method supports paging.",
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            },
            "sortOrder": {
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ]
            },
            "advertiserId": {
              "description": "Select only targeting templates with this advertiser ID.",
              "location": "query",
              "format": "int64",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "1000",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page."
            },
            "sortField": {
              "type": "string",
              "default": "ID",
              "location": "query",
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ]
            },
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"template*2015\" will return objects with names like \"template June 2015\", \"template April 2015\", or simply \"template 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"template\" will match objects with name \"my template\", \"template 2015\", or simply \"template\"."
            },
            "ids": {
              "location": "query",
              "format": "int64",
              "type": "string",
              "description": "Select only targeting templates with these IDs.",
              "repeated": true
            }
          }
        },
        "patch": {
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/targetingTemplates",
          "request": {
            "$ref": "TargetingTemplate"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/targetingTemplates",
          "response": {
            "$ref": "TargetingTemplate"
          },
          "description": "Updates an existing targeting template. This method supports patch semantics.",
          "id": "dfareporting.targetingTemplates.patch",
          "parameters": {
            "id": {
              "type": "string",
              "required": true,
              "location": "query",
              "description": "Required. RemarketingList ID.",
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request."
            }
          }
        }
      }
    },
    "userRolePermissionGroups": {
      "methods": {
        "get": {
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/userRolePermissionGroups/{+id}",
          "parameters": {
            "profileId": {
              "required": true,
              "location": "path",
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            },
            "id": {
              "location": "path",
              "type": "string",
              "description": "User role permission group ID.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.userRolePermissionGroups.get",
          "flatPath": "userprofiles/{userprofilesId}/userRolePermissionGroups/{userRolePermissionGroupsId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "UserRolePermissionGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Gets one user role permission group by ID."
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "description": "Gets a list of all supported user role permission groups.",
          "flatPath": "userprofiles/{userprofilesId}/userRolePermissionGroups",
          "parameters": {
            "profileId": {
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "parameterOrder": [
            "profileId"
          ],
          "response": {
            "$ref": "UserRolePermissionGroupsListResponse"
          },
          "path": "userprofiles/{+profileId}/userRolePermissionGroups",
          "id": "dfareporting.userRolePermissionGroups.list"
        }
      }
    },
    "eventTags": {
      "methods": {
        "insert": {
          "id": "dfareporting.eventTags.insert",
          "path": "userprofiles/{+profileId}/eventTags",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "format": "int64"
            }
          },
          "description": "Inserts a new event tag.",
          "response": {
            "$ref": "EventTag"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/eventTags",
          "httpMethod": "POST",
          "parameterOrder": [
            "profileId"
          ],
          "request": {
            "$ref": "EventTag"
          }
        },
        "update": {
          "description": "Updates an existing event tag.",
          "parameters": {
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "type": "string",
              "format": "int64"
            }
          },
          "id": "dfareporting.eventTags.update",
          "httpMethod": "PUT",
          "parameterOrder": [
            "profileId"
          ],
          "path": "userprofiles/{+profileId}/eventTags",
          "flatPath": "userprofiles/{userprofilesId}/eventTags",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "EventTag"
          },
          "request": {
            "$ref": "EventTag"
          }
        },
        "get": {
          "id": "dfareporting.eventTags.get",
          "flatPath": "userprofiles/{userprofilesId}/eventTags/{eventTagsId}",
          "parameters": {
            "id": {
              "description": "Event tag ID.",
              "type": "string",
              "location": "path",
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "type": "string",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "path": "userprofiles/{+profileId}/eventTags/{+id}",
          "description": "Gets one event tag by ID.",
          "httpMethod": "GET",
          "response": {
            "$ref": "EventTag"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "searchString": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"eventtag*2015\" will return objects with names like \"eventtag June 2015\", \"eventtag April 2015\", or simply \"eventtag 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"eventtag\" will match objects with name \"my eventtag\", \"eventtag 2015\", or simply \"eventtag\".",
              "type": "string",
              "location": "query"
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "location": "query",
              "type": "string"
            },
            "campaignId": {
              "description": "Select only event tags that belong to this campaign.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "definitionsOnly": {
              "type": "boolean",
              "description": "Examine only the specified campaign or advertiser's event tags for matching selector criteria. When set to false, the parent advertiser and parent campaign of the specified ad or campaign is examined as well. In addition, when set to false, the status field is examined as well, along with the enabledByDefault field. This parameter can not be set to true when adId is specified as ads do not define their own even tags.",
              "location": "query"
            },
            "ids": {
              "location": "query",
              "repeated": true,
              "description": "Select only event tags with these IDs.",
              "type": "string",
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true
            },
            "enabled": {
              "type": "boolean",
              "location": "query",
              "description": "Select only enabled event tags. What is considered enabled or disabled depends on the definitionsOnly parameter. When definitionsOnly is set to true, only the specified advertiser or campaign's event tags' enabledByDefault field is examined. When definitionsOnly is set to false, the specified ad or specified campaign's parent advertiser's or parent campaign's event tags' enabledByDefault and status fields are examined as well."
            },
            "eventTagTypes": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "A third-party pixel for impression tracking.",
                "A third-party JavaScript URL for impression tracking.",
                "A third-party URL for click tracking that redirects to the landing page."
              ],
              "description": "Select only event tags with the specified event tag types. Event tag types can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking.",
              "repeated": true,
              "enum": [
                "IMPRESSION_IMAGE_EVENT_TAG",
                "IMPRESSION_JAVASCRIPT_EVENT_TAG",
                "CLICK_THROUGH_EVENT_TAG"
              ]
            },
            "advertiserId": {
              "format": "int64",
              "type": "string",
              "location": "query",
              "description": "Select only event tags that belong to this advertiser."
            },
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "description": "Order of sorted results.",
              "type": "string",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "default": "ASCENDING"
            },
            "adId": {
              "format": "int64",
              "type": "string",
              "description": "Select only event tags that belong to this ad.",
              "location": "query"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/eventTags",
          "description": "Retrieves a list of event tags, possibly filtered.",
          "id": "dfareporting.eventTags.list",
          "response": {
            "$ref": "EventTagsListResponse"
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/eventTags"
        },
        "patch": {
          "parameters": {
            "id": {
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "Required. EventTag ID.",
              "location": "query"
            },
            "profileId": {
              "type": "string",
              "format": "int64",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.eventTags.patch",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "request": {
            "$ref": "EventTag"
          },
          "path": "userprofiles/{+profileId}/eventTags",
          "response": {
            "$ref": "EventTag"
          },
          "flatPath": "userprofiles/{userprofilesId}/eventTags",
          "description": "Updates an existing event tag. This method supports patch semantics."
        },
        "delete": {
          "path": "userprofiles/{+profileId}/eventTags/{+id}",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "flatPath": "userprofiles/{userprofilesId}/eventTags/{eventTagsId}",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "description": "Event tag ID.",
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$"
            },
            "profileId": {
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "location": "path"
            }
          },
          "httpMethod": "DELETE",
          "description": "Deletes an existing event tag.",
          "id": "dfareporting.eventTags.delete"
        }
      }
    },
    "postalCodes": {
      "methods": {
        "list": {
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true,
              "description": "User profile ID associated with this request."
            }
          },
          "response": {
            "$ref": "PostalCodesListResponse"
          },
          "description": "Retrieves a list of postal codes.",
          "path": "userprofiles/{+profileId}/postalCodes",
          "httpMethod": "GET",
          "id": "dfareporting.postalCodes.list",
          "flatPath": "userprofiles/{userprofilesId}/postalCodes",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ]
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "code"
          ],
          "id": "dfareporting.postalCodes.get",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "path": "userprofiles/{+profileId}/postalCodes/{+code}",
          "httpMethod": "GET",
          "response": {
            "$ref": "PostalCode"
          },
          "flatPath": "userprofiles/{userprofilesId}/postalCodes/{postalCodesId}",
          "description": "Gets one postal code by ID.",
          "parameters": {
            "code": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Postal code ID."
            },
            "profileId": {
              "format": "int64",
              "pattern": "^[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "User profile ID associated with this request."
            }
          }
        }
      }
    },
    "creativeGroups": {
      "methods": {
        "patch": {
          "request": {
            "$ref": "CreativeGroup"
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeGroups",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeGroup"
          },
          "id": "dfareporting.creativeGroups.patch",
          "path": "userprofiles/{+profileId}/creativeGroups",
          "httpMethod": "PATCH",
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "int64"
            },
            "id": {
              "location": "query",
              "type": "string",
              "required": true,
              "format": "int64",
              "description": "Required. Creative Group ID."
            }
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "description": "Updates an existing creative group. This method supports patch semantics."
        },
        "insert": {
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "location": "path",
              "required": true,
              "format": "int64",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.creativeGroups.insert",
          "path": "userprofiles/{+profileId}/creativeGroups",
          "request": {
            "$ref": "CreativeGroup"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeGroup"
          },
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/creativeGroups",
          "description": "Inserts a new creative group."
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "id": {
              "description": "Creative group ID.",
              "pattern": "^[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "int64"
            },
            "profileId": {
              "type": "string",
              "location": "path",
              "format": "int64",
              "required": true,
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$"
            }
          },
          "id": "dfareporting.creativeGroups.get",
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/creativeGroups/{+id}",
          "flatPath": "userprofiles/{userprofilesId}/creativeGroups/{creativeGroupsId}",
          "description": "Gets one creative group by ID.",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "response": {
            "$ref": "CreativeGroup"
          }
        },
        "list": {
          "parameters": {
            "ids": {
              "format": "int64",
              "type": "string",
              "description": "Select only creative groups with these IDs.",
              "repeated": true,
              "location": "query"
            },
            "groupNumber": {
              "type": "integer",
              "description": "Select only creative groups that belong to this subgroup.",
              "format": "int32",
              "location": "query"
            },
            "searchString": {
              "type": "string",
              "description": "Allows searching for creative groups by name or ID. Wildcards (*) are allowed. For example, \"creativegroup*2015\" will return creative groups with names like \"creativegroup June 2015\", \"creativegroup April 2015\", or simply \"creativegroup 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativegroup\" will match creative groups with the name \"my creativegroup\", \"creativegroup 2015\", or simply \"creativegroup\".",
              "location": "query"
            },
            "sortOrder": {
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string"
            },
            "advertiserIds": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "format": "int64",
              "description": "Select only creative groups that belong to these advertisers."
            },
            "profileId": {
              "format": "int64",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "required": true
            },
            "sortField": {
              "description": "Field by which to sort the list.",
              "type": "string",
              "enum": [
                "ID",
                "NAME"
              ],
              "default": "ID",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "maxResults": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "default": "1000",
              "description": "Maximum number of results to return."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page."
            }
          },
          "path": "userprofiles/{+profileId}/creativeGroups",
          "id": "dfareporting.creativeGroups.list",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "CreativeGroupsListResponse"
          },
          "httpMethod": "GET",
          "description": "Retrieves a list of creative groups, possibly filtered. This method supports paging.",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/creativeGroups"
        },
        "update": {
          "id": "dfareporting.creativeGroups.update",
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "type": "string",
              "format": "int64",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/creativeGroups",
          "description": "Updates an existing creative group.",
          "request": {
            "$ref": "CreativeGroup"
          },
          "path": "userprofiles/{+profileId}/creativeGroups",
          "response": {
            "$ref": "CreativeGroup"
          },
          "httpMethod": "PUT"
        }
      }
    },
    "reports": {
      "resources": {
        "compatibleFields": {
          "methods": {
            "query": {
              "parameters": {
                "profileId": {
                  "type": "string",
                  "description": "The Campaign Manager 360 user profile ID.",
                  "format": "int64",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "CompatibleFields"
              },
              "path": "userprofiles/{profileId}/reports/compatiblefields/query",
              "description": "Returns the fields that are compatible to be selected in the respective sections of a report criteria, given the fields already selected in the input report and user permissions.",
              "httpMethod": "POST",
              "id": "dfareporting.reports.compatibleFields.query",
              "scopes": [
                "https://www.googleapis.com/auth/dfareporting"
              ],
              "parameterOrder": [
                "profileId"
              ],
              "request": {
                "$ref": "Report"
              },
              "flatPath": "userprofiles/{profileId}/reports/compatiblefields/query"
            }
          }
        },
        "files": {
          "methods": {
            "list": {
              "path": "userprofiles/{profileId}/reports/{reportId}/files",
              "id": "dfareporting.reports.files.list",
              "description": "Lists files for a report.",
              "scopes": [
                "https://www.googleapis.com/auth/dfareporting"
              ],
              "parameters": {
                "sortOrder": {
                  "location": "query",
                  "default": "DESCENDING",
                  "type": "string",
                  "enum": [
                    "ASCENDING",
                    "DESCENDING"
                  ],
                  "enumDescriptions": [
                    "Ascending order.",
                    "Descending order."
                  ],
                  "description": "Order of sorted results."
                },
                "reportId": {
                  "format": "int64",
                  "required": true,
                  "description": "The ID of the parent report.",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous result page."
                },
                "profileId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "description": "The Campaign Manager 360 user profile ID."
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "default": "10",
                  "format": "int32",
                  "description": "Maximum number of results to return."
                },
                "sortField": {
                  "enumDescriptions": [
                    "",
                    ""
                  ],
                  "type": "string",
                  "description": "The field by which to sort the list.",
                  "default": "LAST_MODIFIED_TIME",
                  "enum": [
                    "ID",
                    "LAST_MODIFIED_TIME"
                  ],
                  "location": "query"
                }
              },
              "flatPath": "userprofiles/{profileId}/reports/{reportId}/files",
              "httpMethod": "GET",
              "response": {
                "$ref": "FileList"
              },
              "parameterOrder": [
                "profileId",
                "reportId"
              ]
            },
            "get": {
              "parameters": {
                "profileId": {
                  "format": "int64",
                  "description": "The Campaign Manager 360 user profile ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "fileId": {
                  "format": "int64",
                  "required": true,
                  "description": "The ID of the report file.",
                  "type": "string",
                  "location": "path"
                },
                "reportId": {
                  "type": "string",
                  "description": "The ID of the report.",
                  "format": "int64",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/dfareporting"
              ],
              "supportsMediaDownload": true,
              "id": "dfareporting.reports.files.get",
              "description": "Retrieves a report file by its report ID and file ID. This method supports media download.",
              "flatPath": "userprofiles/{profileId}/reports/{reportId}/files/{fileId}",
              "parameterOrder": [
                "profileId",
                "reportId",
                "fileId"
              ],
              "response": {
                "$ref": "File"
              },
              "path": "userprofiles/{profileId}/reports/{reportId}/files/{fileId}",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "update": {
          "parameterOrder": [
            "profileId",
            "reportId"
          ],
          "request": {
            "$ref": "Report"
          },
          "response": {
            "$ref": "Report"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "flatPath": "userprofiles/{profileId}/reports/{reportId}",
          "description": "Updates a report.",
          "httpMethod": "PUT",
          "parameters": {
            "reportId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the report.",
              "format": "int64"
            },
            "profileId": {
              "format": "int64",
              "required": true,
              "description": "The Campaign Manager 360 user profile ID.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "userprofiles/{profileId}/reports/{reportId}",
          "id": "dfareporting.reports.update"
        },
        "get": {
          "parameterOrder": [
            "profileId",
            "reportId"
          ],
          "parameters": {
            "reportId": {
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "The ID of the report.",
              "type": "string"
            },
            "profileId": {
              "description": "The Campaign Manager 360 user profile ID.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64"
            }
          },
          "path": "userprofiles/{profileId}/reports/{reportId}",
          "flatPath": "userprofiles/{profileId}/reports/{reportId}",
          "id": "dfareporting.reports.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Report"
          },
          "description": "Retrieves a report by its ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ]
        },
        "list": {
          "description": "Retrieves list of reports.",
          "path": "userprofiles/{profileId}/reports",
          "response": {
            "$ref": "ReportList"
          },
          "parameterOrder": [
            "profileId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "flatPath": "userprofiles/{profileId}/reports",
          "httpMethod": "GET",
          "id": "dfareporting.reports.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous result page."
            },
            "sortOrder": {
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "type": "string",
              "location": "query",
              "default": "DESCENDING",
              "description": "Order of sorted results.",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "scope": {
              "enumDescriptions": [
                "All reports in account.",
                "My reports."
              ],
              "description": "The scope that defines which results are returned.",
              "enum": [
                "ALL",
                "MINE"
              ],
              "type": "string",
              "default": "MINE",
              "location": "query"
            },
            "sortField": {
              "default": "LAST_MODIFIED_TIME",
              "enum": [
                "ID",
                "LAST_MODIFIED_TIME",
                "NAME"
              ],
              "description": "The field by which to sort the list.",
              "type": "string",
              "enumDescriptions": [
                "Sort by report ID.",
                "Sort by 'lastModifiedTime' field.",
                "Sort by name of reports."
              ],
              "location": "query"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "10",
              "format": "int32",
              "type": "integer"
            },
            "profileId": {
              "format": "int64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The Campaign Manager 360 user profile ID."
            }
          }
        },
        "delete": {
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The Campaign Manager 360 user profile ID.",
              "format": "int64"
            },
            "reportId": {
              "type": "string",
              "required": true,
              "description": "The ID of the report.",
              "location": "path",
              "format": "int64"
            }
          },
          "description": "Deletes a report by its ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "path": "userprofiles/{profileId}/reports/{reportId}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "profileId",
            "reportId"
          ],
          "flatPath": "userprofiles/{profileId}/reports/{reportId}",
          "id": "dfareporting.reports.delete"
        },
        "insert": {
          "response": {
            "$ref": "Report"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "path": "userprofiles/{profileId}/reports",
          "parameterOrder": [
            "profileId"
          ],
          "parameters": {
            "profileId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The Campaign Manager 360 user profile ID.",
              "format": "int64"
            }
          },
          "description": "Creates a report.",
          "id": "dfareporting.reports.insert",
          "request": {
            "$ref": "Report"
          },
          "flatPath": "userprofiles/{profileId}/reports",
          "httpMethod": "POST"
        },
        "patch": {
          "id": "dfareporting.reports.patch",
          "description": "Updates an existing report. This method supports patch semantics.",
          "request": {
            "$ref": "Report"
          },
          "path": "userprofiles/{profileId}/reports/{reportId}",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Report"
          },
          "flatPath": "userprofiles/{profileId}/reports/{reportId}",
          "parameterOrder": [
            "profileId",
            "reportId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "parameters": {
            "reportId": {
              "location": "path",
              "format": "int64",
              "required": true,
              "type": "string",
              "description": "The ID of the report."
            },
            "profileId": {
              "required": true,
              "location": "path",
              "description": "The Campaign Manager 360 user profile ID.",
              "type": "string",
              "format": "int64"
            }
          }
        },
        "run": {
          "parameterOrder": [
            "profileId",
            "reportId"
          ],
          "id": "dfareporting.reports.run",
          "scopes": [
            "https://www.googleapis.com/auth/dfareporting"
          ],
          "path": "userprofiles/{profileId}/reports/{reportId}/run",
          "parameters": {
            "synchronous": {
              "location": "query",
              "description": "If set and true, tries to run the report synchronously.",
              "default": "false",
              "type": "boolean"
            },
            "reportId": {
              "required": true,
              "location": "path",
              "description": "The ID of the report.",
              "format": "int64",
              "type": "string"
            },
            "profileId": {
              "type": "string",
              "required": true,
              "description": "The Campaign Manager 360 user profile ID.",
              "location": "path",
              "format": "int64"
            }
          },
          "flatPath": "userprofiles/{profileId}/reports/{reportId}/run",
          "response": {
            "$ref": "File"
          },
          "httpMethod": "POST",
          "description": "Runs a report."
        }
      }
    },
    "remarketingLists": {
      "methods": {
        "insert": {
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "format": "int64",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "required": true,
              "type": "string"
            }
          },
          "id": "dfareporting.remarketingLists.insert",
          "path": "userprofiles/{+profileId}/remarketingLists",
          "description": "Inserts a new remarketing list.",
          "flatPath": "userprofiles/{userprofilesId}/remarketingLists",
          "request": {
            "$ref": "RemarketingList"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "response": {
            "$ref": "RemarketingList"
          },
          "parameterOrder": [
            "profileId"
          ]
        },
        "list": {
          "parameterOrder": [
            "profileId",
            "advertiserId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/remarketingLists",
          "parameters": {
            "floodlightActivityId": {
              "type": "string",
              "location": "query",
              "format": "int64",
              "description": "Select only remarketing lists that have this floodlight activity ID."
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "default": "1000",
              "description": "Maximum number of results to return."
            },
            "sortOrder": {
              "default": "ASCENDING",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ],
              "description": "Order of sorted results."
            },
            "active": {
              "description": "Select only active or only inactive remarketing lists.",
              "type": "boolean",
              "location": "query"
            },
            "name": {
              "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\".",
              "location": "query",
              "type": "string"
            },
            "sortField": {
              "default": "ID",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "enum": [
                "ID",
                "NAME"
              ],
              "description": "Field by which to sort the list.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string"
            },
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "format": "int64",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path"
            },
            "advertiserId": {
              "format": "int64",
              "location": "query",
              "description": "Required. Select only remarketing lists owned by this advertiser.",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/remarketingLists",
          "id": "dfareporting.remarketingLists.list",
          "response": {
            "$ref": "RemarketingListsListResponse"
          },
          "description": "Retrieves a list of remarketing lists, possibly filtered. This method supports paging."
        },
        "update": {
          "httpMethod": "PUT",
          "description": "Updates an existing remarketing list.",
          "request": {
            "$ref": "RemarketingList"
          },
          "response": {
            "$ref": "RemarketingList"
          },
          "parameters": {
            "profileId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64"
            }
          },
          "path": "userprofiles/{+profileId}/remarketingLists",
          "parameterOrder": [
            "profileId"
          ],
          "flatPath": "userprofiles/{userprofilesId}/remarketingLists",
          "id": "dfareporting.remarketingLists.update",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "description": "Gets one remarketing list by ID.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "id": "dfareporting.remarketingLists.get",
          "path": "userprofiles/{+profileId}/remarketingLists/{+id}",
          "response": {
            "$ref": "RemarketingList"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "parameters": {
            "id": {
              "pattern": "^[^/]+$",
              "location": "path",
              "required": true,
              "format": "int64",
              "type": "string",
              "description": "Remarketing list ID."
            },
            "profileId": {
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/remarketingLists/{remarketingListsId}"
        },
        "patch": {
          "parameters": {
            "profileId": {
              "type": "string",
              "description": "User profile ID associated with this request.",
              "pattern": "^[^/]+$",
              "format": "int64",
              "required": true,
              "location": "path"
            },
            "id": {
              "format": "int64",
              "description": "Required. RemarketingList ID.",
              "type": "string",
              "required": true,
              "location": "query"
            }
          },
          "flatPath": "userprofiles/{userprofilesId}/remarketingLists",
          "id": "dfareporting.remarketingLists.patch",
          "path": "userprofiles/{+profileId}/remarketingLists",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "RemarketingList"
          },
          "response": {
            "$ref": "RemarketingList"
          },
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "description": "Updates an existing RemarketingList. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ]
        }
      }
    },
    "placementGroups": {
      "methods": {
        "insert": {
          "parameters": {
            "profileId": {
              "required": true,
              "pattern": "^[^/]+$",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "location": "path",
              "format": "int64"
            }
          },
          "id": "dfareporting.placementGroups.insert",
          "description": "Inserts a new placement group.",
          "request": {
            "$ref": "PlacementGroup"
          },
          "path": "userprofiles/{+profileId}/placementGroups",
          "flatPath": "userprofiles/{userprofilesId}/placementGroups",
          "response": {
            "$ref": "PlacementGroup"
          },
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "POST"
        },
        "update": {
          "id": "dfareporting.placementGroups.update",
          "flatPath": "userprofiles/{userprofilesId}/placementGroups",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "parameters": {
            "profileId": {
              "type": "string",
              "location": "path",
              "format": "int64",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request."
            }
          },
          "path": "userprofiles/{+profileId}/placementGroups",
          "response": {
            "$ref": "PlacementGroup"
          },
          "request": {
            "$ref": "PlacementGroup"
          },
          "parameterOrder": [
            "profileId"
          ],
          "httpMethod": "PUT",
          "description": "Updates an existing placement group."
        },
        "get": {
          "httpMethod": "GET",
          "path": "userprofiles/{+profileId}/placementGroups/{+id}",
          "id": "dfareporting.placementGroups.get",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "flatPath": "userprofiles/{userprofilesId}/placementGroups/{placementGroupsId}",
          "parameters": {
            "profileId": {
              "pattern": "^[^/]+$",
              "location": "path",
              "description": "User profile ID associated with this request.",
              "type": "string",
              "required": true,
              "format": "int64"
            },
            "id": {
              "required": true,
              "location": "path",
              "description": "Placement group ID.",
              "format": "int64",
              "pattern": "^[^/]+$",
              "type": "string"
            }
          },
          "response": {
            "$ref": "PlacementGroup"
          },
          "description": "Gets one placement group by ID."
        },
        "patch": {
          "parameters": {
            "id": {
              "required": true,
              "format": "int64",
              "location": "query",
              "description": "Required. Placement ID.",
              "type": "string"
            },
            "profileId": {
              "format": "int64",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+$",
              "description": "User profile ID associated with this request.",
              "location": "path"
            }
          },
          "id": "dfareporting.placementGroups.patch",
          "response": {
            "$ref": "PlacementGroup"
          },
          "httpMethod": "PATCH",
          "description": "Updates an existing placement group. This method supports patch semantics.",
          "flatPath": "userprofiles/{userprofilesId}/placementGroups",
          "parameterOrder": [
            "profileId",
            "id"
          ],
          "path": "userprofiles/{+profileId}/placementGroups",
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "request": {
            "$ref": "PlacementGroup"
          }
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/dfatrafficking"
          ],
          "description": "Retrieves a list of placement groups, possibly filtered. This method supports paging.",
          "id": "dfareporting.placementGroups.list",
          "response": {
            "$ref": "PlacementGroupsListResponse"
          },
          "path": "userprofiles/{+profileId}/placementGroups",
          "flatPath": "userprofiles/{userprofilesId}/placementGroups",
          "httpMethod": "GET",
          "parameters": {
            "minStartDate": {
              "description": "Select only placements or placement groups whose start date is on or after the specified minStartDate. The date should be formatted as \"yyyy-MM-dd\".",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "default": "800"
            },
            "profileId": {
              "location": "path",
              "type": "string",
              "description": "User profile ID associated with this request.",
              "required": true,
              "format": "int64",
              "pattern": "^[^/]+$"
            },
            "maxStartDate": {
              "type": "string",
              "location": "query",
              "description": "Select only placements or placement groups whose start date is on or before the specified maxStartDate. The date should be formatted as \"yyyy-MM-dd\"."
            },
            "placementGroupType": {
              "description": "Select only placement groups belonging with this group type. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting.",
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "A simple group of site-placements (tags). Basically acts as a single pricing point for a group of tags.",
                "A group of site-placements (tags) that not only acts as a single pricing point but also assumes that all the tags in it will be served at the same time. This kind of group requires one of its assigned site-placements to be marked as primary for reporting purposes."
              ],
              "enum": [
                "PLACEMENT_PACKAGE",
                "PLACEMENT_ROADBLOCK"
              ]
            },
            "campaignIds": {
              "location": "query",
              "repeated": true,
              "format": "int64",
              "description": "Select only placement groups that belong to these campaigns.",
              "type": "string"
            },
            "searchString": {
              "location": "query",
              "type": "string",
              "description": "Allows searching for placement groups by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placement groups with names like \"placement group June 2015\", \"placement group May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementgroup\" will match placement groups with name \"my placementgroup\", \"placementgroup 2015\", or simply \"placementgroup\"."
            },
            "sortOrder": {
              "type": "string",
              "enumDescriptions": [
                "Ascending order.",
                "Descending order."
              ],
              "default": "ASCENDING",
              "description": "Order of sorted results.",
              "location": "query",
              "enum": [
                "ASCENDING",
                "DESCENDING"
              ]
            },
            "pricingTypes": {
              "type": "string",
              "enum": [
                "PRICING_TYPE_CPM",
                "PRICING_TYPE_CPC",
                "PRICING_TYPE_CPA",
                "PRICING_TYPE_FLAT_RATE_IMPRESSIONS",
                "PRICING_TYPE_FLAT_RATE_CLICKS",
                "PRICING_TYPE_CPM_ACTIVEVIEW"
              ],
              "location": "query",
              "description": "Select only placement groups with these pricing types.",
              "repeated": true,
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "minEndDate": {
              "location": "query",
              "type": "string",
              "description": "Select only placements or placement groups whose end date is on or after the specified minEndDate. The date should be formatted as \"yyyy-MM-dd\"."
            },
            "maxEndDate": {
              "type": "string",
              "location": "query",
              "description": "Select only placements or placement groups whose end date is on or before the specified maxEndDate. The date should be formatted as \"yyyy-MM-dd\"."
            },
            "placementStrategyIds": {
              "location": "query",
              "description": "Select only placement groups that are associated with these placement strategies.",
              "format": "int64",
              "type": "string",
              "repeated": true
            },
            "ids": {
              "description": "Select only placement groups with these IDs.",
              "type": "string",
              "repeated": true,
              "format": "int64",
              "location": "query"
            },
            "advertiserIds": {
              "repeated": true,
              "type": "string",
              "format": "int64",
              "description": "Select only placement groups that belong to these advertisers.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "Value of the nextPageToken from the previous result page.",
              "type": "string"
            },
            "siteIds": {
              "type": "string",
              "description": "Select only placement groups that are associated with these sites.",
              "format": "int64",
              "repeated": true,
              "location": "query"
            },
            "contentCategoryIds": {
              "description": "Select only placement groups that are associated with these content categories.",
              "format": "int64",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "directorySiteIds": {
              "format": "int64",
              "type": "string",
              "repeated": true,
              "description": "Select only placement groups that are associated with these directory sites.",
              "location": "query"
            },
            "sortField": {
              "enum": [
                "ID",
                "NAME"
              ],
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "default": "ID",
              "description": "Field by which to sort the list."
            },
            "activeStatus": {
              "location": "query",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ],
              "description": "Select only placements with these active statuses.",
              "enum": [
                "PLACEMENT_STATUS_UNKNOWN",
                "PLACEMENT_STATUS_ACTIVE",
                "PLACEMENT_STATUS_INACTIVE",
                "PLACEMENT_STATUS_ARCHIVED",
                "PLACEMENT_STATUS_PERMANENTLY_ARCHIVED"
              ],
              "repeated": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "profileId"
          ]
        }
      }
    }
  },
  "rootUrl": "https://dfareporting.googleapis.com/",
  "schemas": {
    "AccountActiveAdSummary": {
      "type": "object",
      "id": "AccountActiveAdSummary",
      "properties": {
        "activeAdsLimitTier": {
          "type": "string",
          "description": "Maximum number of active ads allowed for the account.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "ACTIVE_ADS_TIER_40K",
            "ACTIVE_ADS_TIER_75K",
            "ACTIVE_ADS_TIER_100K",
            "ACTIVE_ADS_TIER_200K",
            "ACTIVE_ADS_TIER_300K",
            "ACTIVE_ADS_TIER_500K",
            "ACTIVE_ADS_TIER_750K",
            "ACTIVE_ADS_TIER_1M"
          ]
        },
        "availableAds": {
          "type": "string",
          "description": "Ads that can be activated for the account.",
          "format": "int64"
        },
        "accountId": {
          "description": "ID of the account.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountActiveAdSummary\"."
        },
        "activeAds": {
          "format": "int64",
          "type": "string",
          "description": "Ads that have been activated for the account"
        }
      },
      "description": "Gets a summary of active ads in an account."
    },
    "CreativeAssetSelection": {
      "description": "Encapsulates the list of rules for asset selection and a default asset in case none of the rules match. Applicable to INSTREAM_VIDEO creatives.",
      "type": "object",
      "id": "CreativeAssetSelection",
      "properties": {
        "defaultAssetId": {
          "description": "A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if none of the rules match. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "rules": {
          "description": "Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.",
          "items": {
            "$ref": "Rule"
          },
          "type": "array"
        }
      }
    },
    "OptimizationActivity": {
      "type": "object",
      "id": "OptimizationActivity",
      "properties": {
        "floodlightActivityIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated field."
        },
        "weight": {
          "format": "int32",
          "type": "integer",
          "description": "Weight associated with this optimization. The weight assigned will be understood in proportion to the weights assigned to the other optimization activities. Value must be greater than or equal to 1."
        },
        "floodlightActivityId": {
          "description": "Floodlight activity ID of this optimization activity. This is a required field.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Creative optimization activity."
    },
    "CreativeFieldsListResponse": {
      "type": "object",
      "id": "CreativeFieldsListResponse",
      "description": "Creative Field List Response",
      "properties": {
        "creativeFields": {
          "items": {
            "$ref": "CreativeField"
          },
          "type": "array",
          "description": "Creative field collection."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldsListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      }
    },
    "ThirdPartyTrackingUrl": {
      "id": "ThirdPartyTrackingUrl",
      "type": "object",
      "properties": {
        "thirdPartyUrlType": {
          "enum": [
            "IMPRESSION",
            "CLICK_TRACKING",
            "VIDEO_START",
            "VIDEO_FIRST_QUARTILE",
            "VIDEO_MIDPOINT",
            "VIDEO_THIRD_QUARTILE",
            "VIDEO_COMPLETE",
            "VIDEO_MUTE",
            "VIDEO_PAUSE",
            "VIDEO_REWIND",
            "VIDEO_FULLSCREEN",
            "VIDEO_STOP",
            "VIDEO_CUSTOM",
            "SURVEY",
            "RICH_MEDIA_IMPRESSION",
            "RICH_MEDIA_RM_IMPRESSION",
            "RICH_MEDIA_BACKUP_IMPRESSION",
            "VIDEO_SKIP",
            "VIDEO_PROGRESS"
          ],
          "description": "Third-party URL type for in-stream video and in-stream audio creatives.",
          "enumDescriptions": [
            "Used to count impressions of the ad after video buffering is complete.",
            "Used to track user clicks on the video.",
            "Used to track the number of times a user starts a video.",
            "Used to track the number of times the video plays to 25% of its length.",
            "Used to track the number of times the video plays to 50% of its length.",
            "Used to track the number of times the video plays to 75% of its length.",
            "Used to track the number of times the video plays to the end.",
            "Used to track the number of times a user mutes the video.",
            "Used to track the number of times a user pauses the video.",
            "Used to track the number of times a user replays the video.",
            "Used to track the number of times a user expands the video to full-screen size.",
            "Used to track the number of times a user stops the video.",
            "Used to track the number of times a user performs a custom click, such as clicking on a video hot spot.",
            "Used for DFA6 compatibility, this is deprecating in favor of event tags.",
            "Used by Studio RichMediaCreative, maps to its thirdPartyImpressionsUrl",
            "Used by Studio RichMediaCreative, maps to its thirdPartyRichMediaImpressionsUrl",
            "Used by Studio RichMediaCreative, maps to its thirdPartyBackupImageImpressionsUrl",
            "Used to track the number of times the video was skipped.",
            "Used to track the number of times the video plays to an offset determined by the user."
          ],
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "URL for the specified third-party URL type."
        }
      },
      "description": "Third-party Tracking URL."
    },
    "VideoSettings": {
      "type": "object",
      "description": "Video Settings",
      "properties": {
        "transcodeSettings": {
          "description": "Settings for the transcodes of video creatives served to this placement. If this object is provided, the creative-level transcode settings will be overridden.",
          "$ref": "TranscodeSetting"
        },
        "companionSettings": {
          "description": "Settings for the companion creatives of video creatives served to this placement.",
          "$ref": "CompanionSetting"
        },
        "durationSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "Duration of a video placement in seconds."
        },
        "obaEnabled": {
          "description": "Whether OBA icons are enabled for this placement.",
          "type": "boolean"
        },
        "publisherSpecificationId": {
          "format": "int64",
          "type": "string",
          "description": "Publisher specification ID of a video placement."
        },
        "obaSettings": {
          "description": "Settings for the OBA icon of video creatives served to this placement. If this object is provided, the creative-level OBA settings will be overridden.",
          "$ref": "ObaIcon"
        },
        "skippableSettings": {
          "description": "Settings for the skippability of video creatives served to this placement. If this object is provided, the creative-level skippable settings will be overridden.",
          "$ref": "SkippableSetting"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoSettings\".",
          "type": "string"
        },
        "orientation": {
          "description": "Orientation of a video placement. If this value is set, placement will return assets matching the specified orientation.",
          "type": "string",
          "enum": [
            "ANY",
            "LANDSCAPE",
            "PORTRAIT"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "id": "VideoSettings"
    },
    "RemarketingListShare": {
      "type": "object",
      "properties": {
        "remarketingListId": {
          "description": "Remarketing list ID. This is a read-only, auto-generated field.",
          "type": "string",
          "format": "int64"
        },
        "sharedAccountIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Accounts that the remarketing list is shared with."
        },
        "sharedAdvertiserIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Advertisers that the remarketing list is shared with."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListShare\".",
          "type": "string"
        }
      },
      "id": "RemarketingListShare",
      "description": "Contains properties of a remarketing list's sharing information. Sharing allows other accounts or advertisers to target to your remarketing lists. This resource can be used to manage remarketing list sharing to other accounts and advertisers."
    },
    "BillingProfilesListResponse": {
      "properties": {
        "billingProfiles": {
          "description": "Billing profiles collection.",
          "type": "array",
          "items": {
            "$ref": "BillingProfile"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingProfilesListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      },
      "description": "Billing profile List Response",
      "id": "BillingProfilesListResponse",
      "type": "object"
    },
    "AudienceSegmentGroup": {
      "description": "Audience Segment Group.",
      "properties": {
        "audienceSegments": {
          "items": {
            "$ref": "AudienceSegment"
          },
          "description": "Audience segments assigned to this group. The number of segments must be between 2 and 100.",
          "type": "array"
        },
        "id": {
          "description": "ID of this audience segment group. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this audience segment group. This is a required field and must be less than 65 characters long."
        }
      },
      "type": "object",
      "id": "AudienceSegmentGroup"
    },
    "FloodlightConfigurationsListResponse": {
      "id": "FloodlightConfigurationsListResponse",
      "type": "object",
      "properties": {
        "floodlightConfigurations": {
          "description": "Floodlight configuration collection.",
          "type": "array",
          "items": {
            "$ref": "FloodlightConfiguration"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfigurationsListResponse\".",
          "type": "string"
        }
      },
      "description": "Floodlight Configuration List Response"
    },
    "DeliverySchedule": {
      "type": "object",
      "properties": {
        "frequencyCap": {
          "description": "Limit on the number of times an individual user can be served the ad within a specified period of time.",
          "$ref": "FrequencyCap"
        },
        "hardCutoff": {
          "description": "Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time. Otherwise the ad will continue to be served until it has reached its delivery goals.",
          "type": "boolean"
        },
        "priority": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Serving priority of an ad, with respect to other ads. The lower the priority number, the greater the priority with which it is served.",
          "enum": [
            "AD_PRIORITY_01",
            "AD_PRIORITY_02",
            "AD_PRIORITY_03",
            "AD_PRIORITY_04",
            "AD_PRIORITY_05",
            "AD_PRIORITY_06",
            "AD_PRIORITY_07",
            "AD_PRIORITY_08",
            "AD_PRIORITY_09",
            "AD_PRIORITY_10",
            "AD_PRIORITY_11",
            "AD_PRIORITY_12",
            "AD_PRIORITY_13",
            "AD_PRIORITY_14",
            "AD_PRIORITY_15",
            "AD_PRIORITY_16"
          ],
          "type": "string"
        },
        "impressionRatio": {
          "description": "Impression ratio for this ad. This ratio determines how often each ad is served relative to the others. For example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then Campaign Manager will serve ad B three times as often as ad A. Acceptable values are 1 to 10, inclusive.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Delivery Schedule.",
      "id": "DeliverySchedule"
    },
    "MetrosListResponse": {
      "id": "MetrosListResponse",
      "description": "Metro List Response",
      "properties": {
        "metros": {
          "type": "array",
          "items": {
            "$ref": "Metro"
          },
          "description": "Metro collection."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metrosListResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Size": {
      "type": "object",
      "id": "Size",
      "description": "Represents the dimensions of ads, placements, creatives, or creative assets.",
      "properties": {
        "id": {
          "format": "int64",
          "description": "ID of this size. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#size\".",
          "type": "string"
        },
        "iab": {
          "description": "IAB standard size. This is a read-only, auto-generated field.",
          "type": "boolean"
        },
        "height": {
          "format": "int32",
          "description": "Height of this size. Acceptable values are 0 to 32767, inclusive.",
          "type": "integer"
        },
        "width": {
          "description": "Width of this size. Acceptable values are 0 to 32767, inclusive.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EventFilter": {
      "properties": {
        "uvarFilter": {
          "description": "Filter on a custom variable.",
          "$ref": "UvarFilter"
        },
        "dimensionFilter": {
          "$ref": "PathReportDimensionValue",
          "description": "The dimension filter contained within this EventFilter."
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#eventFilter.",
          "type": "string"
        }
      },
      "id": "EventFilter",
      "description": "Represents a DfaReporting event filter.",
      "type": "object"
    },
    "KeyValueTargetingExpression": {
      "properties": {
        "expression": {
          "description": "Keyword expression being targeted by the ad.",
          "type": "string"
        }
      },
      "id": "KeyValueTargetingExpression",
      "type": "object",
      "description": "Key Value Targeting Expression."
    },
    "CompanionClickThroughOverride": {
      "description": "Companion Click-through override.",
      "id": "CompanionClickThroughOverride",
      "properties": {
        "clickThroughUrl": {
          "$ref": "ClickThroughUrl",
          "description": "Click-through URL of this companion click-through override."
        },
        "creativeId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the creative for this companion click-through override."
        }
      },
      "type": "object"
    },
    "SiteSkippableSetting": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#siteSkippableSetting\"."
        },
        "progressOffset": {
          "description": "Amount of time to play videos served to this site template before counting a view. Applicable when skippable is true.",
          "$ref": "VideoOffset"
        },
        "skipOffset": {
          "$ref": "VideoOffset",
          "description": "Amount of time to play videos served to this site before the skip button should appear. Applicable when skippable is true."
        },
        "skippable": {
          "description": "Whether the user can skip creatives served to this site. This will act as default for new placements created under this site.",
          "type": "boolean"
        }
      },
      "description": "Skippable Settings",
      "id": "SiteSkippableSetting"
    },
    "Metric": {
      "type": "object",
      "description": "Represents a metric.",
      "properties": {
        "name": {
          "description": "The metric name, e.g. impressions",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#metric.",
          "type": "string"
        }
      },
      "id": "Metric"
    },
    "OmnitureSettings": {
      "description": "Omniture Integration Settings.",
      "type": "object",
      "properties": {
        "omnitureIntegrationEnabled": {
          "description": "Whether Omniture integration is enabled. This property can be enabled only when the \"Advanced Ad Serving\" account setting is enabled.",
          "type": "boolean"
        },
        "omnitureCostDataEnabled": {
          "type": "boolean",
          "description": "Whether placement cost data will be sent to Omniture. This property can be enabled only if omnitureIntegrationEnabled is true."
        }
      },
      "id": "OmnitureSettings"
    },
    "OperatingSystem": {
      "properties": {
        "desktop": {
          "type": "boolean",
          "description": "Whether this operating system is for desktop."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystem\".",
          "type": "string"
        },
        "name": {
          "description": "Name of this operating system.",
          "type": "string"
        },
        "mobile": {
          "type": "boolean",
          "description": "Whether this operating system is for mobile."
        },
        "dartId": {
          "type": "string",
          "format": "int64",
          "description": "DART ID of this operating system. This is the ID used for targeting."
        }
      },
      "description": "Contains information about an operating system that can be targeted by ads.",
      "id": "OperatingSystem",
      "type": "object"
    },
    "Report": {
      "id": "Report",
      "properties": {
        "reachCriteria": {
          "properties": {
            "dimensions": {
              "description": "The list of dimensions the report should include.",
              "items": {
                "$ref": "SortedDimension"
              },
              "type": "array"
            },
            "activities": {
              "$ref": "Activities",
              "description": "Activity group."
            },
            "customRichMediaEvents": {
              "$ref": "CustomRichMediaEvents",
              "description": "Custom Rich Media Events group."
            },
            "dateRange": {
              "$ref": "DateRange",
              "description": "The date range this report should be run for."
            },
            "reachByFrequencyMetricNames": {
              "type": "array",
              "description": "The list of names of Reach By Frequency metrics the report should include.",
              "items": {
                "type": "string"
              }
            },
            "enableAllDimensionCombinations": {
              "description": "Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last 42 days.",
              "type": "boolean"
            },
            "dimensionFilters": {
              "description": "The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",
              "type": "array",
              "items": {
                "$ref": "DimensionValue"
              }
            },
            "metricNames": {
              "items": {
                "type": "string"
              },
              "description": "The list of names of metrics the report should include.",
              "type": "array"
            }
          },
          "type": "object",
          "description": "The report criteria for a report of type \"REACH\"."
        },
        "subAccountId": {
          "format": "int64",
          "type": "string",
          "description": "The subaccount ID to which this report belongs if applicable."
        },
        "schedule": {
          "properties": {
            "repeats": {
              "description": "The interval for which the report is repeated. Note: - \"DAILY\" also requires field \"every\" to be set. - \"WEEKLY\" also requires fields \"every\" and \"repeatsOnWeekDays\" to be set. - \"MONTHLY\" also requires fields \"every\" and \"runsOnDayOfMonth\" to be set. ",
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date"
            },
            "active": {
              "type": "boolean",
              "description": "Whether the schedule is active or not. Must be set to either true or false."
            },
            "expirationDate": {
              "type": "string",
              "format": "date"
            },
            "runsOnDayOfMonth": {
              "enumDescriptions": [
                "",
                ""
              ],
              "description": "Enum to define for \"MONTHLY\" scheduled reports whether reports should be repeated on the same day of the month as \"startDate\" or the same day of the week of the month. Example: If 'startDate' is Monday, April 2nd 2012 (2012-04-02), \"DAY_OF_MONTH\" would run subsequent reports on the 2nd of every Month, and \"WEEK_OF_MONTH\" would run subsequent reports on the first Monday of the month.",
              "type": "string",
              "enum": [
                "DAY_OF_MONTH",
                "WEEK_OF_MONTH"
              ]
            },
            "repeatsOnWeekDays": {
              "description": "List of week days \"WEEKLY\" on which scheduled reports should run.",
              "type": "array",
              "items": {
                "enumDescriptions": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "enum": [
                  "SUNDAY",
                  "MONDAY",
                  "TUESDAY",
                  "WEDNESDAY",
                  "THURSDAY",
                  "FRIDAY",
                  "SATURDAY"
                ],
                "type": "string"
              }
            },
            "timezone": {
              "description": "The timezone when the report will run.",
              "type": "string"
            },
            "every": {
              "format": "int32",
              "type": "integer",
              "description": "Defines every how many days, weeks or months the report should be run. Needs to be set when \"repeats\" is either \"DAILY\", \"WEEKLY\" or \"MONTHLY\"."
            }
          },
          "type": "object",
          "description": "The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not \"TODAY\"."
        },
        "type": {
          "type": "string",
          "enum": [
            "STANDARD",
            "REACH",
            "PATH_TO_CONVERSION",
            "CROSS_DIMENSION_REACH",
            "FLOODLIGHT",
            "PATH",
            "PATH_ATTRIBUTION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The type of the report."
        },
        "etag": {
          "description": "The eTag of this response for caching purposes.",
          "type": "string"
        },
        "floodlightCriteria": {
          "properties": {
            "metricNames": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The list of names of metrics the report should include."
            },
            "customRichMediaEvents": {
              "description": "The list of custom rich media events to include.",
              "items": {
                "$ref": "DimensionValue"
              },
              "type": "array"
            },
            "floodlightConfigId": {
              "$ref": "DimensionValue",
              "description": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'."
            },
            "dimensions": {
              "items": {
                "$ref": "SortedDimension"
              },
              "description": "The list of dimensions the report should include.",
              "type": "array"
            },
            "dateRange": {
              "$ref": "DateRange",
              "description": "The date range this report should be run for."
            },
            "dimensionFilters": {
              "type": "array",
              "items": {
                "$ref": "DimensionValue"
              },
              "description": "The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed."
            },
            "reportProperties": {
              "description": "The properties of the report.",
              "properties": {
                "includeUnattributedCookieConversions": {
                  "description": "Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.",
                  "type": "boolean"
                },
                "includeUnattributedIPConversions": {
                  "description": "Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.",
                  "type": "boolean"
                },
                "includeAttributedIPConversions": {
                  "type": "boolean",
                  "description": "Include conversions that have no cookie, but do have an exposure path."
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "description": "The report criteria for a report of type \"FLOODLIGHT\"."
        },
        "fileName": {
          "type": "string",
          "description": "The filename used when generating report files for this report."
        },
        "criteria": {
          "description": "The report criteria for a report of type \"STANDARD\".",
          "type": "object",
          "properties": {
            "dimensions": {
              "description": "The list of standard dimensions the report should include.",
              "type": "array",
              "items": {
                "$ref": "SortedDimension"
              }
            },
            "activities": {
              "$ref": "Activities",
              "description": "Activity group."
            },
            "metricNames": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The list of names of metrics the report should include."
            },
            "dateRange": {
              "description": "The date range for which this report should be run.",
              "$ref": "DateRange"
            },
            "dimensionFilters": {
              "type": "array",
              "items": {
                "$ref": "DimensionValue"
              },
              "description": "The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed."
            },
            "customRichMediaEvents": {
              "description": "Custom Rich Media Events group.",
              "$ref": "CustomRichMediaEvents"
            }
          }
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#report.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The unique ID identifying this report resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the report."
        },
        "lastModifiedTime": {
          "format": "uint64",
          "description": "The timestamp (in milliseconds since epoch) of when this report was last modified.",
          "type": "string"
        },
        "crossDimensionReachCriteria": {
          "type": "object",
          "properties": {
            "dimensionFilters": {
              "items": {
                "$ref": "DimensionValue"
              },
              "description": "The list of filters on which dimensions are filtered.",
              "type": "array"
            },
            "metricNames": {
              "items": {
                "type": "string"
              },
              "description": "The list of names of metrics the report should include.",
              "type": "array"
            },
            "breakdown": {
              "description": "The list of dimensions the report should include.",
              "type": "array",
              "items": {
                "$ref": "SortedDimension"
              }
            },
            "dimension": {
              "enumDescriptions": [
                "",
                "",
                "",
                ""
              ],
              "enum": [
                "ADVERTISER",
                "CAMPAIGN",
                "SITE_BY_ADVERTISER",
                "SITE_BY_CAMPAIGN"
              ],
              "type": "string",
              "description": "The dimension option."
            },
            "pivoted": {
              "type": "boolean",
              "description": "Whether the report is pivoted or not. Defaults to true."
            },
            "dateRange": {
              "description": "The date range this report should be run for.",
              "$ref": "DateRange"
            },
            "overlapMetricNames": {
              "description": "The list of names of overlap metrics the report should include.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "description": "The report criteria for a report of type \"CROSS_DIMENSION_REACH\"."
        },
        "pathAttributionCriteria": {
          "properties": {
            "dateRange": {
              "$ref": "DateRange",
              "description": "The date range this report should be run for."
            },
            "floodlightConfigId": {
              "description": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",
              "$ref": "DimensionValue"
            },
            "pathFilters": {
              "description": "Path Filters.",
              "type": "array",
              "items": {
                "$ref": "PathFilter"
              }
            },
            "activityFilters": {
              "type": "array",
              "description": "The list of 'dfa:activity' values to filter on.",
              "items": {
                "$ref": "DimensionValue"
              }
            },
            "customChannelGrouping": {
              "description": "Channel Grouping.",
              "$ref": "ChannelGrouping"
            },
            "dimensions": {
              "description": "The list of dimensions the report should include.",
              "type": "array",
              "items": {
                "$ref": "SortedDimension"
              }
            },
            "metricNames": {
              "items": {
                "type": "string"
              },
              "description": "The list of names of metrics the report should include.",
              "type": "array"
            }
          },
          "description": "The report criteria for a report of type \"PATH_ATTRIBUTION\".",
          "type": "object"
        },
        "ownerProfileId": {
          "type": "string",
          "format": "int64",
          "description": "The user profile id of the owner of this report."
        },
        "accountId": {
          "description": "The account ID to which this report belongs.",
          "format": "int64",
          "type": "string"
        },
        "pathToConversionCriteria": {
          "type": "object",
          "description": "The report criteria for a report of type \"PATH_TO_CONVERSION\".",
          "properties": {
            "reportProperties": {
              "type": "object",
              "properties": {
                "includeUnattributedCookieConversions": {
                  "type": "boolean",
                  "description": "Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window."
                },
                "includeUnattributedIPConversions": {
                  "type": "boolean",
                  "description": "Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion."
                },
                "clicksLookbackWindow": {
                  "type": "integer",
                  "format": "int32",
                  "description": "CM360 checks to see if a click interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90."
                },
                "pivotOnInteractionPath": {
                  "description": "Enable pivoting on interaction path.",
                  "type": "boolean"
                },
                "includeAttributedIPConversions": {
                  "description": "Deprecated: has no effect.",
                  "type": "boolean"
                },
                "maximumImpressionInteractions": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report."
                },
                "maximumClickInteractions": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report."
                },
                "maximumInteractionGap": {
                  "format": "int32",
                  "description": "The maximum amount of time that can take place between interactions (clicks or impressions) by the same user. Valid values: 1-90.",
                  "type": "integer"
                },
                "impressionsLookbackWindow": {
                  "format": "int32",
                  "description": "CM360 checks to see if an impression interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.",
                  "type": "integer"
                }
              },
              "description": "The properties of the report."
            },
            "floodlightConfigId": {
              "$ref": "DimensionValue",
              "description": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'."
            },
            "customRichMediaEvents": {
              "description": "The list of custom rich media events to include.",
              "items": {
                "$ref": "DimensionValue"
              },
              "type": "array"
            },
            "activityFilters": {
              "description": "The list of 'dfa:activity' values to filter on.",
              "type": "array",
              "items": {
                "$ref": "DimensionValue"
              }
            },
            "metricNames": {
              "type": "array",
              "description": "The list of names of metrics the report should include.",
              "items": {
                "type": "string"
              }
            },
            "dateRange": {
              "description": "The date range this report should be run for.",
              "$ref": "DateRange"
            },
            "perInteractionDimensions": {
              "items": {
                "$ref": "SortedDimension"
              },
              "description": "The list of per interaction dimensions the report should include.",
              "type": "array"
            },
            "customFloodlightVariables": {
              "description": "The list of custom floodlight variables the report should include.",
              "items": {
                "$ref": "SortedDimension"
              },
              "type": "array"
            },
            "conversionDimensions": {
              "items": {
                "$ref": "SortedDimension"
              },
              "description": "The list of conversion dimensions the report should include.",
              "type": "array"
            }
          }
        },
        "format": {
          "description": "The output format of the report. If not specified, default format is \"CSV\". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. \"CSV\" will then be the fallback format.",
          "enum": [
            "CSV",
            "EXCEL"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        },
        "delivery": {
          "properties": {
            "recipients": {
              "description": "The list of recipients to which to email the report.",
              "items": {
                "$ref": "Recipient"
              },
              "type": "array"
            },
            "emailOwner": {
              "type": "boolean",
              "description": "Whether the report should be emailed to the report owner."
            },
            "message": {
              "type": "string",
              "description": "The message to be sent with each email."
            },
            "emailOwnerDeliveryType": {
              "enum": [
                "LINK",
                "ATTACHMENT"
              ],
              "description": "The type of delivery for the owner to receive, if enabled.",
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ]
            }
          },
          "type": "object",
          "description": "The report's email delivery settings."
        },
        "pathCriteria": {
          "description": "The report criteria for a report of type \"PATH\".",
          "type": "object",
          "properties": {
            "activityFilters": {
              "description": "The list of 'dfa:activity' values to filter on.",
              "type": "array",
              "items": {
                "$ref": "DimensionValue"
              }
            },
            "metricNames": {
              "type": "array",
              "description": "The list of names of metrics the report should include.",
              "items": {
                "type": "string"
              }
            },
            "dateRange": {
              "$ref": "DateRange",
              "description": "The date range this report should be run for."
            },
            "floodlightConfigId": {
              "description": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",
              "$ref": "DimensionValue"
            },
            "dimensions": {
              "items": {
                "$ref": "SortedDimension"
              },
              "type": "array",
              "description": "The list of dimensions the report should include."
            },
            "pathFilters": {
              "type": "array",
              "description": "Path Filters.",
              "items": {
                "$ref": "PathFilter"
              }
            },
            "customChannelGrouping": {
              "description": "Channel Grouping.",
              "$ref": "ChannelGrouping"
            }
          }
        }
      },
      "type": "object",
      "description": "Represents a Report resource."
    },
    "PathToConversionReportCompatibleFields": {
      "description": "Represents fields that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\".",
      "id": "PathToConversionReportCompatibleFields",
      "type": "object",
      "properties": {
        "conversionDimensions": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "Conversion dimensions which are compatible to be selected in the \"conversionDimensions\" section of the report."
        },
        "perInteractionDimensions": {
          "description": "Per-interaction dimensions which are compatible to be selected in the \"perInteractionDimensions\" section of the report.",
          "items": {
            "$ref": "Dimension"
          },
          "type": "array"
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.",
          "type": "string"
        },
        "metrics": {
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
          "items": {
            "$ref": "Metric"
          },
          "type": "array"
        },
        "customFloodlightVariables": {
          "description": "Custom floodlight variables which are compatible to be selected in the \"customFloodlightVariables\" section of the report.",
          "type": "array",
          "items": {
            "$ref": "Dimension"
          }
        }
      }
    },
    "CompanionSetting": {
      "type": "object",
      "description": "Companion Settings",
      "properties": {
        "enabledSizes": {
          "description": "Allowlist of companion sizes to be served to this placement. Set this list to null or empty to serve all companion sizes.",
          "items": {
            "$ref": "Size"
          },
          "type": "array"
        },
        "imageOnly": {
          "type": "boolean",
          "description": "Whether to serve only static images as companions."
        },
        "companionsDisabled": {
          "type": "boolean",
          "description": "Whether companions are disabled for this placement."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#companionSetting\"."
        }
      },
      "id": "CompanionSetting"
    },
    "FloodlightActivity": {
      "id": "FloodlightActivity",
      "type": "object",
      "description": "Contains properties of a Floodlight activity.",
      "properties": {
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the system from the floodlight tags."
        },
        "tagFormat": {
          "type": "string",
          "description": "Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.",
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "HTML",
            "XHTML"
          ]
        },
        "countingMethod": {
          "enum": [
            "STANDARD_COUNTING",
            "UNIQUE_COUNTING",
            "SESSION_COUNTING",
            "TRANSACTIONS_COUNTING",
            "ITEMS_SOLD_COUNTING"
          ],
          "enumDescriptions": [
            "Count every conversion.",
            "Count the first conversion for each unique user during each 24-hour day, from midnight to midnight, Eastern Time.",
            "Count one conversion per user per session. Session length is set by the site where the Spotlight tag is deployed.",
            "Count all conversions, plus the total number of sales that take place and the total revenue for these transactions.",
            "Count each conversion, plus the total number of items sold and the total revenue for these sales."
          ],
          "description": "Counting method for conversions for this floodlight activity. This is a required field.",
          "type": "string"
        },
        "floodlightActivityGroupTagString": {
          "description": "Tag string of the associated floodlight activity group. This is a read-only field.",
          "type": "string"
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "floodlightActivityGroupName": {
          "description": "Name of the associated floodlight activity group. This is a read-only field.",
          "type": "string"
        },
        "floodlightConfigurationId": {
          "type": "string",
          "description": "Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's floodlight configuration or from the existing activity's floodlight configuration.",
          "format": "int64"
        },
        "expectedUrl": {
          "type": "string",
          "description": "URL where this tag will be deployed. If specified, must be less than 256 characters long."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivity\"."
        },
        "subaccountId": {
          "format": "int64",
          "type": "string",
          "description": "Subaccount ID of this floodlight activity. This is a read-only field that can be left blank."
        },
        "defaultTags": {
          "items": {
            "$ref": "FloodlightActivityDynamicTag"
          },
          "type": "array",
          "description": "Dynamic floodlight tags."
        },
        "floodlightConfigurationIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field."
        },
        "notes": {
          "description": "General notes or implementation instructions for the tag.",
          "type": "string"
        },
        "floodlightActivityGroupId": {
          "description": "Floodlight activity group ID of this floodlight activity. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "tagString": {
          "description": "Value of the cat= parameter in the floodlight tag, which the ad servers use to identify the activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activities of the same activity group. This field is read-only after insertion.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "floodlightActivityGroupType": {
          "description": "Type of the associated floodlight activity group. This is a read-only field.",
          "enum": [
            "COUNTER",
            "SALE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot contain quotes."
        },
        "attributionEnabled": {
          "description": "Whether the activity is enabled for attribution.",
          "type": "boolean"
        },
        "publisherTags": {
          "items": {
            "$ref": "FloodlightActivityPublisherDynamicTag"
          },
          "description": "Publisher dynamic floodlight tags.",
          "type": "array"
        },
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this floodlight activity. This is a read-only field that can be left blank."
        },
        "secure": {
          "type": "boolean",
          "description": "Whether this tag should use SSL."
        },
        "cacheBustingType": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "JAVASCRIPT",
            "ACTIVE_SERVER_PAGE",
            "JSP",
            "PHP",
            "COLD_FUSION"
          ],
          "description": "Code type used for cache busting in the generated tag. Applicable only when floodlightActivityGroupType is COUNTER and countingMethod is STANDARD_COUNTING or UNIQUE_COUNTING."
        },
        "advertiserId": {
          "description": "Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's advertiser or the existing activity's advertiser.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this floodlight activity. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "userDefinedVariableTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "U1",
              "U2",
              "U3",
              "U4",
              "U5",
              "U6",
              "U7",
              "U8",
              "U9",
              "U10",
              "U11",
              "U12",
              "U13",
              "U14",
              "U15",
              "U16",
              "U17",
              "U18",
              "U19",
              "U20",
              "U21",
              "U22",
              "U23",
              "U24",
              "U25",
              "U26",
              "U27",
              "U28",
              "U29",
              "U30",
              "U31",
              "U32",
              "U33",
              "U34",
              "U35",
              "U36",
              "U37",
              "U38",
              "U39",
              "U40",
              "U41",
              "U42",
              "U43",
              "U44",
              "U45",
              "U46",
              "U47",
              "U48",
              "U49",
              "U50",
              "U51",
              "U52",
              "U53",
              "U54",
              "U55",
              "U56",
              "U57",
              "U58",
              "U59",
              "U60",
              "U61",
              "U62",
              "U63",
              "U64",
              "U65",
              "U66",
              "U67",
              "U68",
              "U69",
              "U70",
              "U71",
              "U72",
              "U73",
              "U74",
              "U75",
              "U76",
              "U77",
              "U78",
              "U79",
              "U80",
              "U81",
              "U82",
              "U83",
              "U84",
              "U85",
              "U86",
              "U87",
              "U88",
              "U89",
              "U90",
              "U91",
              "U92",
              "U93",
              "U94",
              "U95",
              "U96",
              "U97",
              "U98",
              "U99",
              "U100"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          "description": "List of the user-defined variables used by this conversion tag. These map to the \"u[1-100]=\" in the tags. Each of these can have a user defined type. Acceptable values are U1 to U100, inclusive. "
        },
        "sslRequired": {
          "description": "Whether this floodlight activity must be SSL-compliant.",
          "type": "boolean"
        },
        "status": {
          "description": "The status of the activity. This can only be set to ACTIVE or ARCHIVED_AND_DISABLED. The ARCHIVED status is no longer supported and cannot be set for Floodlight activities. The DISABLED_POLICY status indicates that a Floodlight activity is violating Google policy. Contact your account manager for more information.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "ACTIVE",
            "ARCHIVED_AND_DISABLED",
            "ARCHIVED",
            "DISABLED_POLICY"
          ]
        },
        "floodlightTagType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "IFRAME",
            "IMAGE",
            "GLOBAL_SITE_TAG"
          ],
          "description": "The type of Floodlight tag this activity will generate. This is a required field."
        }
      }
    },
    "SkippableSetting": {
      "description": "Skippable Settings",
      "type": "object",
      "id": "SkippableSetting",
      "properties": {
        "progressOffset": {
          "description": "Amount of time to play videos served to this placement before counting a view. Applicable when skippable is true.",
          "$ref": "VideoOffset"
        },
        "skipOffset": {
          "description": "Amount of time to play videos served to this placement before the skip button should appear. Applicable when skippable is true.",
          "$ref": "VideoOffset"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#skippableSetting\".",
          "type": "string"
        },
        "skippable": {
          "type": "boolean",
          "description": "Whether the user can skip creatives served to this placement."
        }
      }
    },
    "BillingProfile": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingProfile\".",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "UNDER_REVIEW",
            "ACTIVE",
            "ARCHIVED"
          ],
          "description": "Status of this billing profile.This is a read-only field.",
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "Billing currency code in ISO 4217 format.This is a read-only field."
        },
        "invoiceLevel": {
          "enum": [
            "ACCOUNT_LEVEL",
            "ADVERTISER_LEVEL",
            "CAMPAIGN_LEVEL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Invoice level for this billing profile. Used to group fees into separate invoices by account, advertiser, or campaign.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this billing profile. This is a required field and must be less than 256 characters long and must be unique among billing profile in the same account."
        },
        "paymentsCustomerId": {
          "description": "The ID of the payment customer the billing profile belongs to. This is a read-only field.",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "description": "ID of this billing profile. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "isDefault": {
          "description": "True if the billing profile is the account default profile. This is a read-only field.",
          "type": "boolean"
        },
        "paymentsAccountId": {
          "type": "string",
          "description": "The ID of the payment account the billing profile belongs to. This is a read-only field."
        },
        "secondaryPaymentsCustomerId": {
          "description": "The ID of the secondary payment customer the billing profile belongs to. This is a read-only field.",
          "type": "string"
        },
        "countryCode": {
          "type": "string",
          "description": "Country code of this billing profile.This is a read-only field."
        },
        "consolidatedInvoice": {
          "type": "boolean",
          "description": "Consolidated invoice option for this billing profile. Used to get a single, consolidated invoice across the chosen invoice level."
        },
        "purchaseOrder": {
          "type": "string",
          "description": "Purchase order (PO) for this billing profile. This PO number is used in the invoices for all of the advertisers in this billing profile."
        }
      },
      "id": "BillingProfile",
      "description": "Contains properties of a Campaign Manager Billing Profile."
    },
    "CountriesListResponse": {
      "id": "CountriesListResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#countriesListResponse\".",
          "type": "string"
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "Country"
          },
          "description": "Country collection."
        }
      },
      "description": "Country List Response",
      "type": "object"
    },
    "RemarketingListsListResponse": {
      "id": "RemarketingListsListResponse",
      "properties": {
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "remarketingLists": {
          "description": "Remarketing list collection.",
          "type": "array",
          "items": {
            "$ref": "RemarketingList"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListsListResponse\"."
        }
      },
      "type": "object",
      "description": "Remarketing list response"
    },
    "BillingRateTieredRate": {
      "type": "object",
      "properties": {
        "rateInMicros": {
          "type": "string",
          "format": "int64",
          "description": "Rate in micros for this tier."
        },
        "lowValue": {
          "description": "The minimum for this tier range.",
          "type": "string",
          "format": "int64"
        },
        "highValue": {
          "type": "string",
          "format": "int64",
          "description": "The maximum for this tier range."
        }
      },
      "id": "BillingRateTieredRate"
    },
    "ConnectionType": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionType\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this connection type.",
          "format": "int64"
        },
        "name": {
          "description": "Name of this connection type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ConnectionType",
      "description": "Contains information about an internet connection type that can be targeted by ads. Clients can use the connection type to target mobile vs. broadband users."
    },
    "DisjunctiveMatchStatement": {
      "id": "DisjunctiveMatchStatement",
      "type": "object",
      "description": "Represents a Disjunctive Match Statement resource, which is a conjunction (and) of disjunctive (or) boolean statements.",
      "properties": {
        "eventFilters": {
          "items": {
            "$ref": "EventFilter"
          },
          "description": "The event filters contained within this disjunctive match statement.",
          "type": "array"
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#disjunctiveMatchStatement.",
          "type": "string"
        }
      }
    },
    "ReportsConfiguration": {
      "id": "ReportsConfiguration",
      "description": "Reporting Configuration",
      "properties": {
        "exposureToConversionEnabled": {
          "type": "boolean",
          "description": "Whether the exposure to conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting."
        },
        "lookbackConfiguration": {
          "description": "Default lookback windows for new advertisers in this account.",
          "$ref": "LookbackConfiguration"
        },
        "reportGenerationTimeZoneId": {
          "type": "string",
          "format": "int64",
          "description": "Report generation time zone ID of this account. This is a required field that can only be changed by a superuser. Acceptable values are: - \"1\" for \"America/New_York\" - \"2\" for \"Europe/London\" - \"3\" for \"Europe/Paris\" - \"4\" for \"Africa/Johannesburg\" - \"5\" for \"Asia/Jerusalem\" - \"6\" for \"Asia/Shanghai\" - \"7\" for \"Asia/Hong_Kong\" - \"8\" for \"Asia/Tokyo\" - \"9\" for \"Australia/Sydney\" - \"10\" for \"Asia/Dubai\" - \"11\" for \"America/Los_Angeles\" - \"12\" for \"Pacific/Auckland\" - \"13\" for \"America/Sao_Paulo\" - \"16\" for \"America/Asuncion\" - \"17\" for \"America/Chicago\" - \"18\" for \"America/Denver\" - \"19\" for \"America/St_Johns\" - \"20\" for \"Asia/Dhaka\" - \"21\" for \"Asia/Jakarta\" - \"22\" for \"Asia/Kabul\" - \"23\" for \"Asia/Karachi\" - \"24\" for \"Asia/Calcutta\" - \"25\" for \"Asia/Pyongyang\" - \"26\" for \"Asia/Rangoon\" - \"27\" for \"Atlantic/Cape_Verde\" - \"28\" for \"Atlantic/South_Georgia\" - \"29\" for \"Australia/Adelaide\" - \"30\" for \"Australia/Lord_Howe\" - \"31\" for \"Europe/Moscow\" - \"32\" for \"Pacific/Kiritimati\" - \"35\" for \"Pacific/Norfolk\" - \"36\" for \"Pacific/Tongatapu\" "
        }
      },
      "type": "object"
    },
    "AccountUserProfile": {
      "description": "AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.",
      "id": "AccountUserProfile",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments for this user profile.",
          "type": "string"
        },
        "advertiserFilter": {
          "description": "Filter that describes which advertisers are visible to the user profile.",
          "$ref": "ObjectFilter"
        },
        "traffickerType": {
          "enum": [
            "INTERNAL_NON_TRAFFICKER",
            "INTERNAL_TRAFFICKER",
            "EXTERNAL_TRAFFICKER"
          ],
          "description": "Trafficker type of this user profile. This is a read-only field.",
          "enumDescriptions": [
            "Internal profile, but is not a trafficker.",
            "Internal profile who is a trafficker.",
            "External profile who is a trafficker."
          ],
          "type": "string"
        },
        "subaccountId": {
          "type": "string",
          "description": "Subaccount ID of the user profile. This is a read-only field that can be left blank.",
          "format": "int64"
        },
        "siteFilter": {
          "$ref": "ObjectFilter",
          "description": "Filter that describes which sites are visible to the user profile."
        },
        "campaignFilter": {
          "description": "Filter that describes which campaigns are visible to the user profile.",
          "$ref": "ObjectFilter"
        },
        "name": {
          "description": "Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: \"&;\u003c\u003e\"#%,\".",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "Account ID of the user profile. This is a read-only field that can be left blank.",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfile\"."
        },
        "locale": {
          "description": "Locale of the user profile. This is a required field. Acceptable values are: - \"cs\" (Czech) - \"de\" (German) - \"en\" (English) - \"en-GB\" (English United Kingdom) - \"es\" (Spanish) - \"fr\" (French) - \"it\" (Italian) - \"ja\" (Japanese) - \"ko\" (Korean) - \"pl\" (Polish) - \"pt-BR\" (Portuguese Brazil) - \"ru\" (Russian) - \"sv\" (Swedish) - \"tr\" (Turkish) - \"zh-CN\" (Chinese Simplified) - \"zh-TW\" (Chinese Traditional) ",
          "type": "string"
        },
        "userRoleId": {
          "type": "string",
          "description": "User role ID of the user profile. This is a required field.",
          "format": "int64"
        },
        "active": {
          "description": "Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.",
          "type": "boolean"
        },
        "userAccessType": {
          "enum": [
            "NORMAL_USER",
            "SUPER_USER",
            "INTERNAL_ADMINISTRATOR",
            "READ_ONLY_SUPER_USER"
          ],
          "enumDescriptions": [
            "Normal user managed by the customer.",
            "Super user managed by internal support teams.",
            "Internal administrator having super user access to only a specific set of networks.",
            "A super-user without permission to mutate any data."
          ],
          "description": "User type of the user profile. This is a read-only field that can be left blank.",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "description": "ID of the user profile. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "userRoleFilter": {
          "$ref": "ObjectFilter",
          "description": "Filter that describes which user roles are visible to the user profile."
        },
        "email": {
          "description": "Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.",
          "type": "string"
        }
      }
    },
    "AdvertiserGroup": {
      "description": "Groups advertisers together so that reports can be generated for the entire group at once.",
      "id": "AdvertiserGroup",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroup\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this advertiser group. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this advertiser group. This is a required field and must be less than 256 characters long and unique among advertiser groups of the same account."
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this advertiser group. This is a read-only field that can be left blank.",
          "type": "string"
        }
      }
    },
    "PlacementsGenerateTagsResponse": {
      "type": "object",
      "id": "PlacementsGenerateTagsResponse",
      "properties": {
        "placementTags": {
          "type": "array",
          "items": {
            "$ref": "PlacementTag"
          },
          "description": "Set of generated tags for the specified placements."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsGenerateTagsResponse\"."
        }
      },
      "description": "Placement GenerateTags Response"
    },
    "CustomViewabilityMetric": {
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of the custom viewability metric."
        },
        "name": {
          "description": "Name of the custom viewability metric.",
          "type": "string"
        },
        "configuration": {
          "$ref": "CustomViewabilityMetricConfiguration",
          "description": "Configuration of the custom viewability metric."
        }
      },
      "type": "object",
      "description": "Custom Viewability Metric",
      "id": "CustomViewabilityMetric"
    },
    "CreativeGroupAssignment": {
      "description": "Creative Group Assignment.",
      "id": "CreativeGroupAssignment",
      "type": "object",
      "properties": {
        "creativeGroupNumber": {
          "enum": [
            "CREATIVE_GROUP_ONE",
            "CREATIVE_GROUP_TWO"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "description": "Creative group number of the creative group assignment."
        },
        "creativeGroupId": {
          "format": "int64",
          "type": "string",
          "description": "ID of the creative group to be assigned."
        }
      }
    },
    "ListPopulationRule": {
      "description": "Remarketing List Population Rule.",
      "type": "object",
      "properties": {
        "floodlightActivityId": {
          "description": "Floodlight activity ID associated with this rule. This field can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "floodlightActivityName": {
          "description": "Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "listPopulationClauses": {
          "type": "array",
          "items": {
            "$ref": "ListPopulationClause"
          },
          "description": "Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs."
        }
      },
      "id": "ListPopulationRule"
    },
    "AccountPermissionGroupsListResponse": {
      "type": "object",
      "description": "Account Permission Group List Response",
      "properties": {
        "accountPermissionGroups": {
          "items": {
            "$ref": "AccountPermissionGroup"
          },
          "type": "array",
          "description": "Account permission group collection."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroupGroupsListResponse\".",
          "type": "string"
        }
      },
      "id": "AccountPermissionGroupsListResponse"
    },
    "TagSetting": {
      "properties": {
        "includeClickTracking": {
          "type": "boolean",
          "description": "Whether click-tracking string should be included in the tags."
        },
        "includeClickThroughUrls": {
          "description": "Whether static landing page URLs should be included in the tags. This setting applies only to placements.",
          "type": "boolean"
        },
        "keywordOption": {
          "enum": [
            "PLACEHOLDER_WITH_LIST_OF_KEYWORDS",
            "IGNORE",
            "GENERATE_SEPARATE_TAG_FOR_EACH_KEYWORD"
          ],
          "description": "Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether keyword placeholders are inserted in placement tags for this site. Publishers can then add keywords to those placeholders.",
          "enumDescriptions": [
            "Creates DART ad tags with a placeholder, such as kw=[keyword] and a list of keywords. The site trafficker must replace [keyword] with the keywords targeted by an ad.",
            "Creates DART ad tags that do not have a placeholder for keywords and creates a list of keywords separately from the DART ad tags. Use this option if the site uses a keyword referrer or is a site that uses DART for Publishers.",
            "Results in unique tag generation for each relevant keyword during tag export. For example, an ad with three keywords will generate three tags with each tag having its kw= parameter filled in with the relevant keyword values."
          ],
          "type": "string"
        },
        "additionalKeyValues": {
          "type": "string",
          "description": "Additional key-values to be included in tags. Each key-value pair must be of the form key=value, and pairs must be separated by a semicolon (;). Keys and values must not contain commas. For example, id=2;color=red is a valid value for this field."
        }
      },
      "id": "TagSetting",
      "type": "object",
      "description": "Tag Settings"
    },
    "OrdersListResponse": {
      "id": "OrdersListResponse",
      "description": "Order List Response",
      "properties": {
        "orders": {
          "items": {
            "$ref": "Order"
          },
          "description": "Order collection.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ordersListResponse\"."
        }
      },
      "type": "object"
    },
    "CreativeAssignment": {
      "id": "CreativeAssignment",
      "type": "object",
      "description": "Creative Assignment.",
      "properties": {
        "clickThroughUrl": {
          "description": "Click-through URL of the creative assignment.",
          "$ref": "ClickThroughUrl"
        },
        "richMediaExitOverrides": {
          "items": {
            "$ref": "RichMediaExitOverride"
          },
          "description": "Rich media exit overrides for this creative assignment. Applicable when the creative type is any of the following: - DISPLAY - RICH_MEDIA_INPAGE - RICH_MEDIA_INPAGE_FLOATING - RICH_MEDIA_IM_EXPAND - RICH_MEDIA_EXPANDING - RICH_MEDIA_INTERSTITIAL_FLOAT - RICH_MEDIA_MOBILE_IN_APP - RICH_MEDIA_MULTI_FLOATING - RICH_MEDIA_PEEL_DOWN - VPAID_LINEAR - VPAID_NON_LINEAR ",
          "type": "array"
        },
        "creativeGroupAssignments": {
          "type": "array",
          "items": {
            "$ref": "CreativeGroupAssignment"
          },
          "description": "Creative group assignments for this creative assignment. Only one assignment per creative group number is allowed for a maximum of two assignments."
        },
        "applyEventTags": {
          "description": "Whether applicable event tags should fire when this creative assignment is rendered. If this value is unset when the ad is inserted or updated, it will default to true for all creative types EXCEPT for INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.",
          "type": "boolean"
        },
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-generated when the ad is inserted or updated."
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "active": {
          "description": "Whether this creative assignment is active. When true, the creative will be included in the ad's rotation.",
          "type": "boolean"
        },
        "creativeIdDimensionValue": {
          "description": "Dimension value for the ID of the creative. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "companionCreativeOverrides": {
          "type": "array",
          "description": "Companion creative overrides for this creative assignment. Applicable to video ads.",
          "items": {
            "$ref": "CompanionClickThroughOverride"
          }
        },
        "weight": {
          "description": "Weight of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_RANDOM. Value must be greater than or equal to 1.",
          "type": "integer",
          "format": "int32"
        },
        "sequence": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence number of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_SEQUENTIAL. Acceptable values are 1 to 65535, inclusive."
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "creativeId": {
          "format": "int64",
          "type": "string",
          "description": "ID of the creative to be assigned. This is a required field."
        }
      }
    },
    "AdBlockingConfiguration": {
      "properties": {
        "enabled": {
          "description": "Whether this campaign has enabled ad blocking. When true, ad blocking is enabled for placements in the campaign, but this may be overridden by site and placement settings. When false, ad blocking is disabled for all placements under the campaign, regardless of site and placement settings.",
          "type": "boolean"
        }
      },
      "id": "AdBlockingConfiguration",
      "type": "object",
      "description": "Campaign ad blocking settings."
    },
    "OffsetPosition": {
      "id": "OffsetPosition",
      "description": "Offset Position.",
      "properties": {
        "left": {
          "description": "Offset distance from left side of an asset or a window.",
          "type": "integer",
          "format": "int32"
        },
        "top": {
          "description": "Offset distance from top side of an asset or a window.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreativeAsset": {
      "type": "object",
      "id": "CreativeAsset",
      "description": "Creative Asset.",
      "properties": {
        "fileSize": {
          "format": "int64",
          "description": "File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
          "type": "string"
        },
        "startTimeType": {
          "enumDescriptions": [
            "Asset is not automatically displayed.",
            "Asset is automatically displayed after a fixed period of time."
          ],
          "enum": [
            "ASSET_START_TIME_TYPE_NONE",
            "ASSET_START_TIME_TYPE_CUSTOM"
          ],
          "type": "string",
          "description": "Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID_LINEAR_VIDEO. Value must be greater than or equal to 1."
        },
        "position": {
          "description": "Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.",
          "$ref": "OffsetPosition"
        },
        "artworkType": {
          "enumDescriptions": [
            "The creative is a Flash creative.",
            "The creative is HTML5.",
            "The creative is HTML5 if available, Flash otherwise.",
            "The creative is Image."
          ],
          "type": "string",
          "description": "Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
          "enum": [
            "ARTWORK_TYPE_FLASH",
            "ARTWORK_TYPE_HTML5",
            "ARTWORK_TYPE_MIXED",
            "ARTWORK_TYPE_IMAGE"
          ]
        },
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT."
        },
        "bitRate": {
          "type": "integer",
          "format": "int32",
          "description": "Detected bit-rate for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID."
        },
        "originalBackup": {
          "description": "Whether the backup asset is original or changed by the user in Campaign Manager. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "boolean"
        },
        "collapsedSize": {
          "description": "Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.",
          "$ref": "Size"
        },
        "mediaDuration": {
          "format": "float",
          "description": "Detected duration for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.",
          "type": "number"
        },
        "alignment": {
          "enum": [
            "ALIGNMENT_TOP",
            "ALIGNMENT_RIGHT",
            "ALIGNMENT_BOTTOM",
            "ALIGNMENT_LEFT"
          ],
          "type": "string",
          "description": "Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL .",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of the asset. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "offset": {
          "$ref": "OffsetPosition",
          "description": "Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN."
        },
        "flashVersion": {
          "description": "Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "format": "int32",
          "type": "integer"
        },
        "transparency": {
          "description": "Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.",
          "type": "boolean"
        },
        "progressiveServingUrl": {
          "type": "string",
          "description": "Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID."
        },
        "frameRate": {
          "description": "Video frame rate for video asset in frames per second. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
          "format": "float",
          "type": "number"
        },
        "customStartTimeValue": {
          "type": "integer",
          "format": "int32",
          "description": "Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA. Value must be greater than or equal to 0."
        },
        "size": {
          "description": "Size associated with this creative asset. This is a required field when applicable; however for IMAGE and FLASH_INPAGE, creatives if left blank, this field will be automatically set using the actual size of the associated image asset. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "$ref": "Size"
        },
        "backupImageExit": {
          "description": "Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.",
          "$ref": "CreativeCustomEvent"
        },
        "actionScript3": {
          "description": "Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "type": "boolean"
        },
        "horizontallyLocked": {
          "description": "Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "boolean"
        },
        "expandedDimension": {
          "$ref": "Size",
          "description": "Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID."
        },
        "companionCreativeIds": {
          "type": "array",
          "description": "List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection set to true.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "id": {
          "format": "int64",
          "description": "Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
          "type": "string"
        },
        "streamingServingUrl": {
          "description": "Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
          "type": "string"
        },
        "displayType": {
          "enum": [
            "ASSET_DISPLAY_TYPE_INPAGE",
            "ASSET_DISPLAY_TYPE_FLOATING",
            "ASSET_DISPLAY_TYPE_OVERLAY",
            "ASSET_DISPLAY_TYPE_EXPANDING",
            "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH",
            "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH_EXPANDING",
            "ASSET_DISPLAY_TYPE_PEEL_DOWN",
            "ASSET_DISPLAY_TYPE_VPAID_LINEAR",
            "ASSET_DISPLAY_TYPE_VPAID_NON_LINEAR",
            "ASSET_DISPLAY_TYPE_BACKDROP"
          ],
          "type": "string",
          "enumDescriptions": [
            "Asset exists in a box and stays within the box.",
            "Asset exists at a self described location on the page.",
            "Special display type for IM clients.",
            "Asset changes size.",
            "Not applicable for HTML5.",
            "Not applicable for HTML5.",
            "Asset sits on the top right and expands.",
            "VPAID linear asset.",
            "VPAID non linear asset.",
            "Backdrop (skin) asset."
          ],
          "description": "Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA."
        },
        "childAssetType": {
          "enum": [
            "CHILD_ASSET_TYPE_FLASH",
            "CHILD_ASSET_TYPE_VIDEO",
            "CHILD_ASSET_TYPE_IMAGE",
            "CHILD_ASSET_TYPE_DATA"
          ],
          "enumDescriptions": [
            "swf files",
            "flv and any other video files types",
            "image files",
            "rest of the supported file types .txt, .xml etc."
          ],
          "description": "Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.",
          "type": "string"
        },
        "orientation": {
          "type": "string",
          "description": "Orientation of video asset. This is a read-only, auto-generated field.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "LANDSCAPE",
            "PORTRAIT",
            "SQUARE"
          ]
        },
        "active": {
          "type": "boolean",
          "description": "Whether the video or audio asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID."
        },
        "zipFilesize": {
          "description": "Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
          "type": "string"
        },
        "politeLoad": {
          "type": "boolean",
          "description": "Whether this asset is used as a polite load asset."
        },
        "windowMode": {
          "enum": [
            "OPAQUE",
            "WINDOW",
            "TRANSPARENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Allows overlapping of Html and SWF content.",
            "Default",
            "Used for non-square borders. Allows overlapping of Html and SWF content."
          ],
          "description": "Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING."
        },
        "hideSelectionBoxes": {
          "description": "Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "boolean"
        },
        "positionTopUnit": {
          "enumDescriptions": [
            "Pixels on a screen.",
            "Percent offset for center asset (rather than top and left).",
            "Pixel offset for center of asset from center of browser window."
          ],
          "enum": [
            "OFFSET_UNIT_PIXEL",
            "OFFSET_UNIT_PERCENT",
            "OFFSET_UNIT_PIXEL_FROM_CENTER"
          ],
          "description": "Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "string"
        },
        "pushdownDuration": {
          "description": "Pushdown duration in seconds for an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height. Acceptable values are 0 to 9.99, inclusive.",
          "format": "float",
          "type": "number"
        },
        "zipFilename": {
          "description": "File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
          "type": "string"
        },
        "positionLeftUnit": {
          "enumDescriptions": [
            "Pixels on a screen.",
            "Percent offset for center asset (rather than top and left).",
            "Pixel offset for center of asset from center of browser window."
          ],
          "description": "Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "string",
          "enum": [
            "OFFSET_UNIT_PIXEL",
            "OFFSET_UNIT_PERCENT",
            "OFFSET_UNIT_PIXEL_FROM_CENTER"
          ]
        },
        "audioSampleRate": {
          "type": "integer",
          "description": "Audio sample bit rate in hertz. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.",
          "format": "int32"
        },
        "durationType": {
          "description": "Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.",
          "enumDescriptions": [
            "Asset is displayed for the single run of the time line.",
            "Asset is displayed indefinitely and it loops on the timeline.",
            "User entered duration value in seconds."
          ],
          "type": "string",
          "enum": [
            "ASSET_DURATION_TYPE_AUTO",
            "ASSET_DURATION_TYPE_NONE",
            "ASSET_DURATION_TYPE_CUSTOM"
          ]
        },
        "role": {
          "enum": [
            "PRIMARY",
            "BACKUP_IMAGE",
            "ADDITIONAL_IMAGE",
            "ADDITIONAL_FLASH",
            "PARENT_VIDEO",
            "TRANSCODED_VIDEO",
            "OTHER",
            "ALTERNATE_VIDEO",
            "PARENT_AUDIO",
            "TRANSCODED_AUDIO"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field. PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives. BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives. OTHER refers to assets from sources other than Campaign Manager, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives. PARENT_VIDEO refers to videos uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. ALTERNATE_VIDEO refers to the Campaign Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within Campaign Manager. For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative. PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is applicable to INSTREAM_AUDIO creatives. TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives. ",
          "type": "string"
        },
        "assetIdentifier": {
          "$ref": "CreativeAssetId",
          "description": "Identifier of this asset. This is the same identifier returned during creative asset insert operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT."
        },
        "zIndex": {
          "description": "zIndex value of an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY. Acceptable values are -999999999 to 999999999, inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "audioBitRate": {
          "format": "int32",
          "type": "integer",
          "description": "Audio stream bit rate in kbps. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID."
        },
        "pushdown": {
          "description": "Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.",
          "type": "boolean"
        },
        "verticallyLocked": {
          "description": "Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
          "type": "boolean"
        },
        "hideFlashObjects": {
          "type": "boolean",
          "description": "Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA."
        },
        "detectedFeatures": {
          "items": {
            "type": "string",
            "enum": [
              "CSS_FONT_FACE",
              "CSS_BACKGROUND_SIZE",
              "CSS_BORDER_IMAGE",
              "CSS_BORDER_RADIUS",
              "CSS_BOX_SHADOW",
              "CSS_FLEX_BOX",
              "CSS_HSLA",
              "CSS_MULTIPLE_BGS",
              "CSS_OPACITY",
              "CSS_RGBA",
              "CSS_TEXT_SHADOW",
              "CSS_ANIMATIONS",
              "CSS_COLUMNS",
              "CSS_GENERATED_CONTENT",
              "CSS_GRADIENTS",
              "CSS_REFLECTIONS",
              "CSS_TRANSFORMS",
              "CSS_TRANSFORMS3D",
              "CSS_TRANSITIONS",
              "APPLICATION_CACHE",
              "CANVAS",
              "CANVAS_TEXT",
              "DRAG_AND_DROP",
              "HASH_CHANGE",
              "HISTORY",
              "AUDIO",
              "VIDEO",
              "INDEXED_DB",
              "INPUT_ATTR_AUTOCOMPLETE",
              "INPUT_ATTR_AUTOFOCUS",
              "INPUT_ATTR_LIST",
              "INPUT_ATTR_PLACEHOLDER",
              "INPUT_ATTR_MAX",
              "INPUT_ATTR_MIN",
              "INPUT_ATTR_MULTIPLE",
              "INPUT_ATTR_PATTERN",
              "INPUT_ATTR_REQUIRED",
              "INPUT_ATTR_STEP",
              "INPUT_TYPE_SEARCH",
              "INPUT_TYPE_TEL",
              "INPUT_TYPE_URL",
              "INPUT_TYPE_EMAIL",
              "INPUT_TYPE_DATETIME",
              "INPUT_TYPE_DATE",
              "INPUT_TYPE_MONTH",
              "INPUT_TYPE_WEEK",
              "INPUT_TYPE_TIME",
              "INPUT_TYPE_DATETIME_LOCAL",
              "INPUT_TYPE_NUMBER",
              "INPUT_TYPE_RANGE",
              "INPUT_TYPE_COLOR",
              "LOCAL_STORAGE",
              "POST_MESSAGE",
              "SESSION_STORAGE",
              "WEB_SOCKETS",
              "WEB_SQL_DATABASE",
              "WEB_WORKERS",
              "GEO_LOCATION",
              "INLINE_SVG",
              "SMIL",
              "SVG_HREF",
              "SVG_CLIP_PATHS",
              "TOUCH",
              "WEBGL",
              "SVG_FILTERS",
              "SVG_FE_IMAGE"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "POST_MESSAGE always required due to html5 implementation.",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          "description": "List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "type": "array"
        },
        "additionalSizes": {
          "items": {
            "$ref": "Size"
          },
          "type": "array",
          "description": "Additional sizes associated with this creative asset. HTML5 asset generated by compatible software such as GWD will be able to support more sizes this creative asset can render."
        },
        "mimeType": {
          "type": "string",
          "description": "Detected MIME type for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID."
        }
      }
    },
    "FrequencyCap": {
      "properties": {
        "duration": {
          "description": "Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days. Acceptable values are 1 to 7776000, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "impressions": {
          "description": "Number of times an individual user can be served the ad within the specified duration. Acceptable values are 1 to 15, inclusive.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Frequency Cap.",
      "id": "FrequencyCap",
      "type": "object"
    },
    "CampaignCreativeAssociationsListResponse": {
      "type": "object",
      "id": "CampaignCreativeAssociationsListResponse",
      "description": "Campaign Creative Association List Response",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociationsListResponse\".",
          "type": "string"
        },
        "campaignCreativeAssociations": {
          "type": "array",
          "description": "Campaign creative association collection",
          "items": {
            "$ref": "CampaignCreativeAssociation"
          }
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      }
    },
    "ClickThroughUrlSuffixProperties": {
      "properties": {
        "overrideInheritedSuffix": {
          "type": "boolean",
          "description": "Whether this entity should override the inherited click-through URL suffix with its own defined value."
        },
        "clickThroughUrlSuffix": {
          "type": "string",
          "description": "Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128 characters long."
        }
      },
      "id": "ClickThroughUrlSuffixProperties",
      "description": "Click Through URL Suffix settings.",
      "type": "object"
    },
    "TargetableRemarketingList": {
      "properties": {
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests."
        },
        "advertiserId": {
          "format": "int64",
          "description": "Dimension value for the advertiser ID that owns this targetable remarketing list.",
          "type": "string"
        },
        "subaccountId": {
          "format": "int64",
          "type": "string",
          "description": "Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests."
        },
        "description": {
          "description": "Targetable remarketing list description.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser."
        },
        "lifeSpan": {
          "type": "string",
          "format": "int64",
          "description": "Number of days that a user should remain in the targetable remarketing list without an impression."
        },
        "listSource": {
          "enum": [
            "REMARKETING_LIST_SOURCE_OTHER",
            "REMARKETING_LIST_SOURCE_ADX",
            "REMARKETING_LIST_SOURCE_DFP",
            "REMARKETING_LIST_SOURCE_XFP",
            "REMARKETING_LIST_SOURCE_DFA",
            "REMARKETING_LIST_SOURCE_GA",
            "REMARKETING_LIST_SOURCE_YOUTUBE",
            "REMARKETING_LIST_SOURCE_DBM",
            "REMARKETING_LIST_SOURCE_GPLUS",
            "REMARKETING_LIST_SOURCE_DMP",
            "REMARKETING_LIST_SOURCE_PLAY_STORE"
          ],
          "type": "string",
          "description": "Product from which this targetable remarketing list was originated.",
          "enumDescriptions": [
            "covers sources not supported in DCM other than those listed below",
            "ADX",
            "DFP",
            "XFP",
            "DoubleClick Campaign Manager",
            "Google Analytics Premium",
            "Youtube",
            "DoubleClick Bid Manager",
            "G+",
            "DoubleClick Audience Center",
            "Playstore"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingList\"."
        },
        "active": {
          "type": "boolean",
          "description": "Whether this targetable remarketing list is active."
        },
        "id": {
          "format": "int64",
          "description": "Targetable remarketing list ID.",
          "type": "string"
        },
        "name": {
          "description": "Name of the targetable remarketing list. Is no greater than 128 characters long.",
          "type": "string"
        },
        "listSize": {
          "type": "string",
          "format": "int64",
          "description": "Number of users currently in the list. This is a read-only field."
        }
      },
      "id": "TargetableRemarketingList",
      "description": "Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource is a read-only view of a remarketing list to be used to facilitate targeting ads to specific lists. Remarketing lists that are owned by your advertisers and those that are shared to your advertisers or account are accessible via this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists resource.",
      "type": "object"
    },
    "PlatformType": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformType\"."
        },
        "name": {
          "type": "string",
          "description": "Name of this platform type."
        },
        "id": {
          "format": "int64",
          "description": "ID of this platform type.",
          "type": "string"
        }
      },
      "id": "PlatformType",
      "type": "object",
      "description": "Contains information about a platform type that can be targeted by ads."
    },
    "EventTagOverride": {
      "properties": {
        "enabled": {
          "description": "Whether this override is enabled.",
          "type": "boolean"
        },
        "id": {
          "format": "int64",
          "description": "ID of this event tag override. This is a read-only, auto-generated field.",
          "type": "string"
        }
      },
      "id": "EventTagOverride",
      "type": "object",
      "description": "Event tag override information."
    },
    "UserRolePermissionGroupsListResponse": {
      "description": "User Role Permission Group List Response",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroupsListResponse\".",
          "type": "string"
        },
        "userRolePermissionGroups": {
          "description": "User role permission group collection.",
          "items": {
            "$ref": "UserRolePermissionGroup"
          },
          "type": "array"
        }
      },
      "id": "UserRolePermissionGroupsListResponse"
    },
    "ReportCompatibleFields": {
      "id": "ReportCompatibleFields",
      "properties": {
        "pivotedActivityMetrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report."
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "type": "array",
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#reportCompatibleFields."
        },
        "dimensions": {
          "items": {
            "$ref": "Dimension"
          },
          "description": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",
          "type": "array"
        },
        "dimensionFilters": {
          "description": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
          "type": "array",
          "items": {
            "$ref": "Dimension"
          }
        }
      },
      "type": "object",
      "description": "Represents fields that are compatible to be selected for a report of type \"STANDARD\"."
    },
    "ChannelGrouping": {
      "id": "ChannelGrouping",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "ChannelGroupingRule"
          },
          "description": "The rules contained within this channel grouping."
        },
        "name": {
          "type": "string",
          "description": "ChannelGrouping name."
        },
        "fallbackName": {
          "type": "string",
          "description": "ChannelGrouping fallback name."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#channelGrouping."
        }
      },
      "type": "object",
      "description": "Represents a DfaReporting channel grouping."
    },
    "AdSlot": {
      "description": "Ad Slot",
      "type": "object",
      "properties": {
        "paymentSourceType": {
          "enum": [
            "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID",
            "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Payment source type of this ad slot."
        },
        "width": {
          "description": "Width of this ad slot.",
          "format": "int64",
          "type": "string"
        },
        "comment": {
          "type": "string",
          "description": "Comment for this ad slot."
        },
        "linkedPlacementId": {
          "description": "ID of the placement from an external platform that is linked to this ad slot.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Name of this ad slot.",
          "type": "string"
        },
        "compatibility": {
          "type": "string",
          "description": "Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",
          "enumDescriptions": [
            "",
            "",
            "Deprecated enum value. No longer supported.",
            "Deprecated enum value. No longer supported.",
            "",
            ""
          ],
          "enum": [
            "DISPLAY",
            "DISPLAY_INTERSTITIAL",
            "APP",
            "APP_INTERSTITIAL",
            "IN_STREAM_VIDEO",
            "IN_STREAM_AUDIO"
          ]
        },
        "height": {
          "format": "int64",
          "type": "string",
          "description": "Height of this ad slot."
        },
        "primary": {
          "type": "boolean",
          "description": "Primary ad slot of a roadblock inventory item."
        }
      },
      "id": "AdSlot"
    },
    "ObjectFilter": {
      "type": "object",
      "id": "ObjectFilter",
      "properties": {
        "objectIds": {
          "type": "array",
          "description": "Applicable when status is ASSIGNED. The user has access to objects with these object IDs.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#objectFilter\".",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Profile has access to none of the objects.",
            "Profile has access to only specific objects.",
            "Profile has access to all objects."
          ],
          "enum": [
            "NONE",
            "ASSIGNED",
            "ALL"
          ],
          "description": "Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list."
        }
      },
      "description": "Object Filter."
    },
    "DeepLink": {
      "type": "object",
      "properties": {
        "remarketingListIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory is APPLE_APP_STORE."
        },
        "fallbackUrl": {
          "description": "The fallback URL. This URL will be served to users who do not have the mobile app installed.",
          "type": "string"
        },
        "mobileApp": {
          "description": "The mobile app targeted by this deep link.",
          "$ref": "MobileApp"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#deepLink\"."
        },
        "appUrl": {
          "type": "string",
          "description": "The URL of the mobile app being linked to."
        }
      },
      "description": "Contains information about a landing page deep link.",
      "id": "DeepLink"
    },
    "CrossDimensionReachReportCompatibleFields": {
      "id": "CrossDimensionReachReportCompatibleFields",
      "type": "object",
      "description": "Represents fields that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",
      "properties": {
        "overlapMetrics": {
          "description": "Metrics which are compatible to be selected in the \"overlapMetricNames\" section of the report.",
          "items": {
            "$ref": "Metric"
          },
          "type": "array"
        },
        "dimensionFilters": {
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
          "items": {
            "$ref": "Dimension"
          }
        },
        "metrics": {
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
          "type": "array",
          "items": {
            "$ref": "Metric"
          }
        },
        "breakdown": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"breakdown\" section of the report."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields."
        }
      }
    },
    "PostalCode": {
      "description": "Contains information about a postal code that can be targeted by ads.",
      "type": "object",
      "id": "PostalCode",
      "properties": {
        "countryCode": {
          "description": "Country code of the country to which this postal code belongs.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCode\"."
        },
        "id": {
          "type": "string",
          "description": "ID of this postal code."
        },
        "countryDartId": {
          "format": "int64",
          "description": "DART ID of the country to which this postal code belongs.",
          "type": "string"
        },
        "code": {
          "description": "Postal code. This is equivalent to the id field.",
          "type": "string"
        }
      }
    },
    "Region": {
      "type": "object",
      "id": "Region",
      "properties": {
        "name": {
          "description": "Name of this region.",
          "type": "string"
        },
        "countryCode": {
          "type": "string",
          "description": "Country code of the country to which this region belongs."
        },
        "regionCode": {
          "description": "Region code.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#region\"."
        },
        "countryDartId": {
          "description": "DART ID of the country to which this region belongs.",
          "format": "int64",
          "type": "string"
        },
        "dartId": {
          "description": "DART ID of this region.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Contains information about a region that can be targeted by ads."
    },
    "DimensionValueRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "description": "The list of filters by which to filter values. The filters are ANDed.",
          "items": {
            "$ref": "DimensionFilter"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "The kind of request this is, in this case dfareporting#dimensionValueRequest ."
        },
        "dimensionName": {
          "type": "string",
          "description": "The name of the dimension for which values should be requested."
        },
        "startDate": {
          "format": "date",
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      },
      "description": "Represents a DimensionValuesRequest.",
      "id": "DimensionValueRequest"
    },
    "ChangeLogsListResponse": {
      "properties": {
        "changeLogs": {
          "items": {
            "$ref": "ChangeLog"
          },
          "type": "array",
          "description": "Change log collection."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLogsListResponse\"."
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      },
      "description": "Change Log List Response",
      "type": "object",
      "id": "ChangeLogsListResponse"
    },
    "Site": {
      "description": "Contains properties of a site.",
      "properties": {
        "siteContacts": {
          "items": {
            "$ref": "SiteContact"
          },
          "description": "Site contacts.",
          "type": "array"
        },
        "directorySiteId": {
          "type": "string",
          "format": "int64",
          "description": "Directory site associated with this site. This is a required field that is read-only after insertion."
        },
        "approved": {
          "description": "Whether this site is approved.",
          "type": "boolean"
        },
        "keyName": {
          "description": "Key name of this site. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account."
        },
        "accountId": {
          "type": "string",
          "description": "Account ID of this site. This is a read-only field that can be left blank.",
          "format": "int64"
        },
        "directorySiteIdDimensionValue": {
          "description": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\"."
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this site. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "videoSettings": {
          "description": "Default video settings for new placements created under this site. This value will be used to populate the placements.videoSettings field, when no value is specified for the new placement.",
          "$ref": "SiteVideoSettings"
        },
        "siteSettings": {
          "$ref": "SiteSettings",
          "description": "Site-wide settings."
        },
        "subaccountId": {
          "format": "int64",
          "type": "string",
          "description": "Subaccount ID of this site. This is a read-only field that can be left blank."
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of this site. This is a read-only, auto-generated field."
        }
      },
      "id": "Site",
      "type": "object"
    },
    "DateRange": {
      "description": "Represents a date range.",
      "id": "DateRange",
      "properties": {
        "startDate": {
          "format": "date",
          "type": "string"
        },
        "relativeDateRange": {
          "description": "The date range relative to the date of when the report is run.",
          "type": "string",
          "enum": [
            "TODAY",
            "YESTERDAY",
            "WEEK_TO_DATE",
            "MONTH_TO_DATE",
            "QUARTER_TO_DATE",
            "YEAR_TO_DATE",
            "PREVIOUS_WEEK",
            "PREVIOUS_MONTH",
            "PREVIOUS_QUARTER",
            "PREVIOUS_YEAR",
            "LAST_7_DAYS",
            "LAST_30_DAYS",
            "LAST_90_DAYS",
            "LAST_365_DAYS",
            "LAST_24_MONTHS",
            "LAST_14_DAYS",
            "LAST_60_DAYS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "endDate": {
          "format": "date",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#dateRange.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TargetWindow": {
      "id": "TargetWindow",
      "description": "Target Window.",
      "properties": {
        "customHtml": {
          "type": "string",
          "description": "User-entered value."
        },
        "targetWindowOption": {
          "type": "string",
          "enumDescriptions": [
            "Open up a new window to display the backup image Corresponds to \"_blank\" in html",
            "Use the current window to display the backup image Corresponds to \"_top\" in html",
            "User-defined HTML used to display the backup image Corresponds to \"other\""
          ],
          "description": "Type of browser window for which the backup image of the flash creative can be displayed.",
          "enum": [
            "NEW_WINDOW",
            "CURRENT_WINDOW",
            "CUSTOM"
          ]
        }
      },
      "type": "object"
    },
    "FloodlightActivityPublisherDynamicTag": {
      "type": "object",
      "properties": {
        "clickThrough": {
          "description": "Whether this tag is applicable only for click-throughs.",
          "type": "boolean"
        },
        "siteIdDimensionValue": {
          "description": "Dimension value for the ID of the site. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "viewThrough": {
          "description": "Whether this tag is applicable only for view-throughs.",
          "type": "boolean"
        },
        "dynamicTag": {
          "description": "Dynamic floodlight tag.",
          "$ref": "FloodlightActivityDynamicTag"
        },
        "siteId": {
          "type": "string",
          "description": "Site ID of this dynamic tag.",
          "format": "int64"
        },
        "directorySiteId": {
          "format": "int64",
          "description": "Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.",
          "type": "string"
        }
      },
      "description": "Publisher Dynamic Tag",
      "id": "FloodlightActivityPublisherDynamicTag"
    },
    "DirectorySiteSettings": {
      "id": "DirectorySiteSettings",
      "properties": {
        "activeViewOptOut": {
          "type": "boolean",
          "description": "Whether this directory site has disabled active view creatives."
        },
        "dfpSettings": {
          "$ref": "DfpSettings",
          "description": "Directory site Ad Manager settings."
        },
        "interstitialPlacementAccepted": {
          "type": "boolean",
          "description": "Whether this site accepts interstitial ads."
        },
        "instreamVideoPlacementAccepted": {
          "type": "boolean",
          "description": "Whether this site accepts in-stream video ads."
        }
      },
      "type": "object",
      "description": "Directory Site Settings"
    },
    "CustomViewabilityMetricConfiguration": {
      "description": "The attributes, like playtime and percent onscreen, that define the Custom Viewability Metric.",
      "id": "CustomViewabilityMetricConfiguration",
      "type": "object",
      "properties": {
        "viewabilityPercent": {
          "description": "The percentage of video that must be on screen for the Custom Viewability Metric to count an impression.",
          "type": "integer",
          "format": "int32"
        },
        "timeMillis": {
          "type": "integer",
          "format": "int32",
          "description": "The time in milliseconds the video must play for the Custom Viewability Metric to count an impression. If both this and timePercent are specified, the earlier of the two will be used."
        },
        "audible": {
          "type": "boolean",
          "description": "Whether the video must be audible to count an impression."
        },
        "timePercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percentage of video that must play for the Custom Viewability Metric to count an impression. If both this and timeMillis are specified, the earlier of the two will be used."
        }
      }
    },
    "TechnologyTargeting": {
      "id": "TechnologyTargeting",
      "description": "Technology Targeting.",
      "type": "object",
      "properties": {
        "platformTypes": {
          "type": "array",
          "items": {
            "$ref": "PlatformType"
          },
          "description": "Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform type, only id is required, and the other fields are populated automatically when the ad is inserted or updated."
        },
        "operatingSystemVersions": {
          "items": {
            "$ref": "OperatingSystemVersion"
          },
          "description": "Operating system versions that this ad targets. To target all versions, use operatingSystems. For each operating system version, only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system version, do not set targeting for the corresponding operating system in operatingSystems.",
          "type": "array"
        },
        "mobileCarriers": {
          "type": "array",
          "description": "Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other fields are populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not set targeting for any zip codes.",
          "items": {
            "$ref": "MobileCarrier"
          }
        },
        "operatingSystems": {
          "description": "Operating systems that this ad targets. To target specific versions, use operatingSystemVersions. For each operating system only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system, do not set targeting for operating system versions for the same operating system.",
          "type": "array",
          "items": {
            "$ref": "OperatingSystem"
          }
        },
        "connectionTypes": {
          "description": "Connection types that this ad targets. For each connection type only id is required. The other fields are populated automatically when the ad is inserted or updated.",
          "items": {
            "$ref": "ConnectionType"
          },
          "type": "array"
        },
        "browsers": {
          "type": "array",
          "items": {
            "$ref": "Browser"
          },
          "description": "Browsers that this ad targets. For each browser either set browserVersionId or dartId along with the version numbers. If both are specified, only browserVersionId will be used. The other fields are populated automatically when the ad is inserted or updated."
        }
      }
    },
    "Subaccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the account that contains this subaccount. This is a read-only field that can be left blank."
        },
        "id": {
          "description": "ID of this subaccount. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "availablePermissionIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "IDs of the available user role permissions for this subaccount.",
          "type": "array"
        },
        "name": {
          "description": "Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccount\".",
          "type": "string"
        }
      },
      "id": "Subaccount",
      "description": "Contains properties of a Campaign Manager subaccount."
    },
    "PopupWindowProperties": {
      "id": "PopupWindowProperties",
      "description": "Popup Window Properties.",
      "properties": {
        "positionType": {
          "description": "Popup window position either centered or at specific coordinate.",
          "type": "string",
          "enum": [
            "CENTER",
            "COORDINATES"
          ],
          "enumDescriptions": [
            "window positioning at center.",
            "window positioning by upper left corner coordinates."
          ]
        },
        "dimension": {
          "description": "Popup dimension for a creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID",
          "$ref": "Size"
        },
        "showMenuBar": {
          "type": "boolean",
          "description": "Whether to display the browser menu bar."
        },
        "showScrollBar": {
          "description": "Whether to display the browser scroll bar.",
          "type": "boolean"
        },
        "title": {
          "description": "Title of popup window.",
          "type": "string"
        },
        "showAddressBar": {
          "description": "Whether to display the browser address bar.",
          "type": "boolean"
        },
        "offset": {
          "description": "Upper-left corner coordinates of the popup window. Applicable if positionType is COORDINATES.",
          "$ref": "OffsetPosition"
        },
        "showToolBar": {
          "type": "boolean",
          "description": "Whether to display the browser tool bar."
        },
        "showStatusBar": {
          "description": "Whether to display the browser status bar.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ContentCategoriesListResponse": {
      "properties": {
        "contentCategories": {
          "description": "Content category collection.",
          "type": "array",
          "items": {
            "$ref": "ContentCategory"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategoriesListResponse\"."
        }
      },
      "type": "object",
      "id": "ContentCategoriesListResponse",
      "description": "Content Category List Response"
    },
    "ListTargetingExpression": {
      "type": "object",
      "description": "Remarketing List Targeting Expression.",
      "id": "ListTargetingExpression",
      "properties": {
        "expression": {
          "description": "Expression describing which lists are being targeted by the ad.",
          "type": "string"
        }
      }
    },
    "MobileCarriersListResponse": {
      "type": "object",
      "description": "Mobile Carrier List Response",
      "id": "MobileCarriersListResponse",
      "properties": {
        "mobileCarriers": {
          "type": "array",
          "description": "Mobile carrier collection.",
          "items": {
            "$ref": "MobileCarrier"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarriersListResponse\"."
        }
      }
    },
    "ConversionsBatchInsertResponse": {
      "type": "object",
      "description": "Insert Conversions Response.",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchInsertResponse\".",
          "type": "string"
        },
        "status": {
          "description": "The insert status of each conversion. Statuses are returned in the same order that conversions are inserted.",
          "items": {
            "$ref": "ConversionStatus"
          },
          "type": "array"
        },
        "hasFailures": {
          "type": "boolean",
          "description": "Indicates that some or all conversions failed to insert."
        }
      },
      "id": "ConversionsBatchInsertResponse"
    },
    "Advertiser": {
      "id": "Advertiser",
      "description": "Contains properties of a Campaign Manager advertiser.",
      "properties": {
        "subaccountId": {
          "format": "int64",
          "type": "string",
          "description": "Subaccount ID of this advertiser.This is a read-only field that can be left blank."
        },
        "suspended": {
          "description": "Suspension status of this advertiser.",
          "type": "boolean"
        },
        "originalFloodlightConfigurationId": {
          "format": "int64",
          "type": "string",
          "description": "Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement."
        },
        "id": {
          "format": "int64",
          "description": "ID of this advertiser. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "defaultClickThroughEventTagId": {
          "format": "int64",
          "description": "ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.",
          "type": "string"
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\"."
        },
        "floodlightConfigurationId": {
          "format": "int64",
          "type": "string",
          "description": "Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration is not already shared with another advertiser. "
        },
        "status": {
          "description": "Status of this advertiser.",
          "enum": [
            "APPROVED",
            "ON_HOLD"
          ],
          "type": "string",
          "enumDescriptions": [
            "Approved (ads can deliver)",
            "On-hold (all ads are stopped)"
          ]
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this advertiser.This is a read-only field that can be left blank.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account."
        },
        "advertiserGroupId": {
          "format": "int64",
          "description": "ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.",
          "type": "string"
        },
        "clickThroughUrlSuffix": {
          "description": "Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.",
          "type": "string"
        },
        "defaultEmail": {
          "type": "string",
          "description": "Default email address used in sender field for tag emails."
        },
        "measurementPartnerLink": {
          "description": "Measurement partner advertiser link for tag wrapping.",
          "$ref": "MeasurementPartnerAdvertiserLink"
        },
        "floodlightConfigurationIdDimensionValue": {
          "description": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        }
      },
      "type": "object"
    },
    "ConversionsBatchUpdateRequest": {
      "type": "object",
      "properties": {
        "conversions": {
          "type": "array",
          "description": "The set of conversions to update.",
          "items": {
            "$ref": "Conversion"
          }
        },
        "encryptionInfo": {
          "$ref": "EncryptionInfo",
          "description": "Describes how encryptedUserId is encrypted. This is a required field if encryptedUserId is used."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchUpdateRequest\".",
          "type": "string"
        }
      },
      "description": "Update Conversions Request.",
      "id": "ConversionsBatchUpdateRequest"
    },
    "MeasurementPartnerAdvertiserLink": {
      "properties": {
        "measurementPartner": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "NONE",
            "INTEGRAL_AD_SCIENCE",
            "DOUBLE_VERIFY"
          ],
          "description": "Measurement partner used for tag wrapping.",
          "type": "string"
        },
        "linkStatus": {
          "enumDescriptions": [
            "Unlinked.",
            "Linked successfully",
            "Link pending for wrapping.",
            "Linking failure.",
            "Link opt-out by user.",
            "Link opt-out pending sync.",
            "Link wrap answer pending.",
            "Mode change pending."
          ],
          "description": "Status of the partner link.",
          "enum": [
            "MEASUREMENT_PARTNER_UNLINKED",
            "MEASUREMENT_PARTNER_LINKED",
            "MEASUREMENT_PARTNER_LINK_PENDING",
            "MEASUREMENT_PARTNER_LINK_FAILURE",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING",
            "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING",
            "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING"
          ],
          "type": "string"
        },
        "partnerAdvertiserId": {
          "type": "string",
          "description": "partner Advertiser Id."
        }
      },
      "id": "MeasurementPartnerAdvertiserLink",
      "type": "object"
    },
    "ReachReportCompatibleFields": {
      "id": "ReachReportCompatibleFields",
      "type": "object",
      "description": "Represents fields that are compatible to be selected for a report of type \"REACH\".",
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.",
          "type": "string"
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "type": "array",
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report."
        },
        "reachByFrequencyMetrics": {
          "description": "Metrics which are compatible to be selected in the \"reachByFrequencyMetricNames\" section of the report.",
          "items": {
            "$ref": "Metric"
          },
          "type": "array"
        },
        "dimensionFilters": {
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
          "items": {
            "$ref": "Dimension"
          }
        },
        "dimensions": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report."
        },
        "pivotedActivityMetrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report."
        }
      }
    },
    "ReportList": {
      "id": "ReportList",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The eTag of this response for caching purposes."
        },
        "items": {
          "description": "The reports returned in this response.",
          "type": "array",
          "items": {
            "$ref": "Report"
          }
        },
        "kind": {
          "description": "The kind of list this is, in this case dfareporting#reportList.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Continuation token used to page through reports. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
          "type": "string"
        }
      },
      "description": "Represents the list of reports."
    },
    "Placement": {
      "type": "object",
      "id": "Placement",
      "description": "Contains properties of a placement.",
      "properties": {
        "name": {
          "description": "Name of this placement.This is a required field and must be less than or equal to 512 characters long.",
          "type": "string"
        },
        "activeStatus": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Whether this placement is active, inactive, archived or permanently archived.",
          "enum": [
            "PLACEMENT_STATUS_UNKNOWN",
            "PLACEMENT_STATUS_ACTIVE",
            "PLACEMENT_STATUS_INACTIVE",
            "PLACEMENT_STATUS_ARCHIVED",
            "PLACEMENT_STATUS_PERMANENTLY_ARCHIVED"
          ],
          "type": "string"
        },
        "primary": {
          "description": "Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.",
          "type": "boolean"
        },
        "videoActiveViewOptOut": {
          "type": "boolean",
          "description": "Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView."
        },
        "lookbackConfiguration": {
          "description": "Lookback window settings for this placement.",
          "$ref": "LookbackConfiguration"
        },
        "campaignId": {
          "format": "int64",
          "description": "Campaign ID of this placement. This field is a required field on insertion.",
          "type": "string"
        },
        "externalId": {
          "description": "External ID for this placement.",
          "type": "string"
        },
        "placementGroupIdDimensionValue": {
          "description": "Dimension value for the ID of the placement group. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "wrappingOptOut": {
          "type": "boolean",
          "description": "Whether this placement opts out of tag wrapping."
        },
        "status": {
          "enum": [
            "PENDING_REVIEW",
            "PAYMENT_ACCEPTED",
            "PAYMENT_REJECTED",
            "ACKNOWLEDGE_REJECTION",
            "ACKNOWLEDGE_ACCEPTANCE",
            "DRAFT"
          ],
          "enumDescriptions": [
            "Placement is not yet reviewed by publisher.",
            "Placement Ad Serving fee is accepted by publisher",
            "Placement Ad Serving fee is rejected by publisher",
            "Advertisers has accepted rejection of placement ad serving fee. This will suppress future notification on DDMM UI",
            "Advertisers has accepted acceptance of placement ad serving fee. This will suppress future notification on DDMM UI",
            "Advertisers is still working on placement not yet ready for Publisher review; default status for pub-paid placements"
          ],
          "description": "Third-party placement status.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".",
          "type": "string"
        },
        "pricingSchedule": {
          "description": "Pricing schedule of this placement. This field is required on insertion, specifically subfields startDate, endDate and pricingType.",
          "$ref": "PricingSchedule"
        },
        "tagSetting": {
          "description": "Tag settings for this placement.",
          "$ref": "TagSetting"
        },
        "idDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of this placement. This is a read-only, auto-generated field."
        },
        "contentCategoryId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the content category assigned to this placement."
        },
        "partnerWrappingData": {
          "$ref": "MeasurementPartnerWrappingData",
          "description": "Measurement partner provided settings for a wrapped placement."
        },
        "additionalSizes": {
          "description": "Additional sizes associated with this placement. When inserting or updating a placement, only the size ID field is used.",
          "items": {
            "$ref": "Size"
          },
          "type": "array"
        },
        "campaignIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field."
        },
        "compatibility": {
          "description": "Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.",
          "type": "string",
          "enum": [
            "DISPLAY",
            "DISPLAY_INTERSTITIAL",
            "APP",
            "APP_INTERSTITIAL",
            "IN_STREAM_VIDEO",
            "IN_STREAM_AUDIO"
          ],
          "enumDescriptions": [
            "",
            "",
            "Deprecated enum value. No longer supported.",
            "Deprecated enum value. No longer supported.",
            "",
            ""
          ]
        },
        "tagFormats": {
          "items": {
            "enum": [
              "PLACEMENT_TAG_STANDARD",
              "PLACEMENT_TAG_IFRAME_JAVASCRIPT",
              "PLACEMENT_TAG_IFRAME_ILAYER",
              "PLACEMENT_TAG_INTERNAL_REDIRECT",
              "PLACEMENT_TAG_JAVASCRIPT",
              "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT",
              "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT",
              "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT",
              "PLACEMENT_TAG_CLICK_COMMANDS",
              "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH",
              "PLACEMENT_TAG_TRACKING",
              "PLACEMENT_TAG_TRACKING_IFRAME",
              "PLACEMENT_TAG_TRACKING_JAVASCRIPT",
              "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3",
              "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY",
              "PLACEMENT_TAG_JAVASCRIPT_LEGACY",
              "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY",
              "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY",
              "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4",
              "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          "type": "array",
          "description": "Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: - \"PLACEMENT_TAG_STANDARD\" - \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_IFRAME_ILAYER\" - \"PLACEMENT_TAG_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\" - \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\" - \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\" - \"PLACEMENT_TAG_CLICK_COMMANDS\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3\" - \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4\" - \"PLACEMENT_TAG_TRACKING\" - \"PLACEMENT_TAG_TRACKING_IFRAME\" - \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\" "
        },
        "videoSettings": {
          "description": "A collection of settings which affect video creatives served through this placement. Applicable to placements with IN_STREAM_VIDEO compatibility.",
          "$ref": "VideoSettings"
        },
        "lastModifiedInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the most recent modification of this placement. This is a read-only field."
        },
        "paymentSource": {
          "description": "Payment source for this placement. This is a required field that is read-only after insertion.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "PLACEMENT_AGENCY_PAID",
            "PLACEMENT_PUBLISHER_PAID"
          ]
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "directorySiteId": {
          "type": "string",
          "format": "int64",
          "description": "Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion."
        },
        "subaccountId": {
          "type": "string",
          "description": "Subaccount ID of this placement. This field can be left blank.",
          "format": "int64"
        },
        "directorySiteIdDimensionValue": {
          "description": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "adBlockingOptOut": {
          "type": "boolean",
          "description": "Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When false, the campaign and site settings take effect."
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Advertiser ID of this placement. This field can be left blank."
        },
        "sslRequired": {
          "description": "Whether creatives assigned to this placement must be SSL-compliant.",
          "type": "boolean"
        },
        "id": {
          "description": "ID of this placement. This is a read-only, auto-generated field.",
          "type": "string",
          "format": "int64"
        },
        "paymentApproved": {
          "description": "Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.",
          "type": "boolean"
        },
        "size": {
          "$ref": "Size",
          "description": "Size associated with this placement. When inserting or updating a placement, only the size ID field is used. This field is required on insertion."
        },
        "comment": {
          "description": "Comments for this placement.",
          "type": "string"
        },
        "placementStrategyId": {
          "format": "int64",
          "description": "ID of the placement strategy assigned to this placement.",
          "type": "string"
        },
        "siteId": {
          "description": "Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.",
          "format": "int64",
          "type": "string"
        },
        "vpaidAdapterChoice": {
          "type": "string",
          "enumDescriptions": [
            "DEFAULT means Google chooses which adapter, if any, to serve.",
            "",
            "",
            ""
          ],
          "enum": [
            "DEFAULT",
            "FLASH",
            "HTML5",
            "BOTH"
          ],
          "description": "VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH."
        },
        "placementGroupId": {
          "description": "ID of this placement's group, if applicable.",
          "format": "int64",
          "type": "string"
        },
        "keyName": {
          "description": "Key name of this placement. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "accountId": {
          "description": "Account ID of this placement. This field can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "siteIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the site. This is a read-only, auto-generated field."
        },
        "createInfo": {
          "description": "Information about the creation of this placement. This is a read-only field.",
          "$ref": "LastModifiedInfo"
        },
        "publisherUpdateInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the last publisher update. This is a read-only field."
        }
      }
    },
    "VideoOffset": {
      "id": "VideoOffset",
      "description": "Video Offset",
      "type": "object",
      "properties": {
        "offsetPercentage": {
          "format": "int32",
          "description": "Duration, as a percentage of video duration. Do not set when offsetSeconds is set. Acceptable values are 0 to 100, inclusive.",
          "type": "integer"
        },
        "offsetSeconds": {
          "type": "integer",
          "description": "Duration, in seconds. Do not set when offsetPercentage is set. Acceptable values are 0 to 86399, inclusive.",
          "format": "int32"
        }
      }
    },
    "DefaultClickThroughEventTagProperties": {
      "id": "DefaultClickThroughEventTagProperties",
      "description": "Properties of inheriting and overriding the default click-through event tag. A campaign may override the event tag defined at the advertiser level, and an ad may also override the campaign's setting further.",
      "properties": {
        "overrideInheritedEventTag": {
          "type": "boolean",
          "description": "Whether this entity should override the inherited default click-through event tag with its own defined value."
        },
        "defaultClickThroughEventTagId": {
          "description": "ID of the click-through event tag to apply to all ads in this entity's scope.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "RichMediaExitOverride": {
      "type": "object",
      "id": "RichMediaExitOverride",
      "properties": {
        "exitId": {
          "description": "ID for the override to refer to a specific exit in the creative.",
          "format": "int64",
          "type": "string"
        },
        "clickThroughUrl": {
          "description": "Click-through URL of this rich media exit override. Applicable if the enabled field is set to true.",
          "$ref": "ClickThroughUrl"
        },
        "enabled": {
          "description": "Whether to use the clickThroughUrl. If false, the creative-level exit will be used.",
          "type": "boolean"
        }
      },
      "description": "Rich Media Exit Override."
    },
    "TagSettings": {
      "description": "Dynamic and Image Tag Settings.",
      "type": "object",
      "properties": {
        "dynamicTagEnabled": {
          "description": "Whether dynamic floodlight tags are enabled.",
          "type": "boolean"
        },
        "imageTagEnabled": {
          "description": "Whether image tags are enabled.",
          "type": "boolean"
        }
      },
      "id": "TagSettings"
    },
    "CreativeGroup": {
      "properties": {
        "groupNumber": {
          "description": "Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1 to 2, inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "subaccountId": {
          "format": "int64",
          "description": "Subaccount ID of this creative group. This is a read-only field that can be left blank.",
          "type": "string"
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this creative group. This is a read-only field that can be left blank.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "ID of this creative group. This is a read-only, auto-generated field."
        },
        "advertiserId": {
          "description": "Advertiser ID of this creative group. This is a required field on insertion.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\"."
        },
        "name": {
          "type": "string",
          "description": "Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser."
        }
      },
      "description": "Contains properties of a creative group.",
      "id": "CreativeGroup",
      "type": "object"
    },
    "Campaign": {
      "type": "object",
      "description": "Contains properties of a Campaign Manager campaign.",
      "properties": {
        "comment": {
          "description": "Arbitrary comments about this campaign. Must be less than 256 characters long.",
          "type": "string"
        },
        "measurementPartnerLink": {
          "$ref": "MeasurementPartnerCampaignLink",
          "description": "Measurement partner campaign link for tag wrapping."
        },
        "clickThroughUrlSuffixProperties": {
          "$ref": "ClickThroughUrlSuffixProperties",
          "description": "Click-through URL suffix override properties for this campaign."
        },
        "lastModifiedInfo": {
          "description": "Information about the most recent modification of this campaign. This is a read-only field.",
          "$ref": "LastModifiedInfo"
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this campaign. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "creativeGroupIds": {
          "type": "array",
          "description": "List of creative group IDs that are assigned to the campaign.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "eventTagOverrides": {
          "description": "Overrides that can be used to activate or deactivate advertiser event tags.",
          "type": "array",
          "items": {
            "$ref": "EventTagOverride"
          }
        },
        "audienceSegmentGroups": {
          "description": "Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.",
          "items": {
            "$ref": "AudienceSegmentGroup"
          },
          "type": "array"
        },
        "advertiserId": {
          "type": "string",
          "description": "Advertiser ID of this campaign. This is a required field.",
          "format": "int64"
        },
        "adBlockingConfiguration": {
          "$ref": "AdBlockingConfiguration",
          "description": "Ad blocking settings for this campaign."
        },
        "defaultClickThroughEventTagProperties": {
          "description": "Click-through event tag ID override properties for this campaign.",
          "$ref": "DefaultClickThroughEventTagProperties"
        },
        "subaccountId": {
          "description": "Subaccount ID of this campaign. This is a read-only field that can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "advertiserGroupId": {
          "description": "Advertiser group ID of the associated advertiser.",
          "type": "string",
          "format": "int64"
        },
        "archived": {
          "type": "boolean",
          "description": "Whether this campaign has been archived."
        },
        "defaultLandingPageId": {
          "description": "The default landing page ID for this campaign.",
          "format": "int64",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated field."
        },
        "id": {
          "format": "int64",
          "description": "ID of this campaign. This is a read-only auto-generated field.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaign\"."
        },
        "billingInvoiceCode": {
          "type": "string",
          "description": "Billing invoice code included in the Campaign Manager client billing invoices associated with the campaign."
        },
        "createInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the creation of this campaign. This is a read-only field."
        },
        "creativeOptimizationConfiguration": {
          "description": "Creative optimization configuration for the campaign.",
          "$ref": "CreativeOptimizationConfiguration"
        },
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this campaign. This is a read-only field that can be left blank."
        },
        "additionalCreativeOptimizationConfigurations": {
          "description": "Additional creative optimization configurations for the campaign.",
          "items": {
            "$ref": "CreativeOptimizationConfiguration"
          },
          "type": "array"
        },
        "startDate": {
          "format": "date",
          "type": "string"
        },
        "name": {
          "description": "Name of this campaign. This is a required field and must be less than 512 characters long and unique among campaigns of the same advertiser.",
          "type": "string"
        },
        "externalId": {
          "type": "string",
          "description": "External ID for this campaign."
        }
      },
      "id": "Campaign"
    },
    "Browser": {
      "description": "Contains information about a browser that can be targeted by ads.",
      "type": "object",
      "id": "Browser",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browser\".",
          "type": "string"
        },
        "dartId": {
          "type": "string",
          "description": "DART ID of this browser. This is the ID used when generating reports.",
          "format": "int64"
        },
        "minorVersion": {
          "description": "Minor version number (number after first dot on left) of this browser. For example, for Chrome 5.0.375.86 beta, this field should be set to 0. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is.",
          "type": "string"
        },
        "browserVersionId": {
          "format": "int64",
          "type": "string",
          "description": "ID referring to this grouping of browser and version numbers. This is the ID used for targeting."
        },
        "majorVersion": {
          "type": "string",
          "description": "Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta, this field should be set to 5. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is."
        },
        "name": {
          "description": "Name of this browser.",
          "type": "string"
        }
      }
    },
    "EventTagsListResponse": {
      "description": "Event Tag List Response",
      "type": "object",
      "id": "EventTagsListResponse",
      "properties": {
        "eventTags": {
          "description": "Event tag collection.",
          "type": "array",
          "items": {
            "$ref": "EventTag"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTagsListResponse\".",
          "type": "string"
        }
      }
    },
    "FloodlightReportCompatibleFields": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimension"
          },
          "description": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report."
        },
        "metrics": {
          "type": "array",
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
          "items": {
            "$ref": "Metric"
          }
        },
        "dimensionFilters": {
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
          "items": {
            "$ref": "Dimension"
          }
        }
      },
      "id": "FloodlightReportCompatibleFields",
      "description": "Represents fields that are compatible to be selected for a report of type \"FlOODLIGHT\".",
      "type": "object"
    },
    "GeoTargeting": {
      "properties": {
        "regions": {
          "description": "Regions to be targeted. For each region only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the country of the region.",
          "items": {
            "$ref": "Region"
          },
          "type": "array"
        },
        "metros": {
          "items": {
            "$ref": "Metro"
          },
          "description": "Metros to be targeted. For each metro only dmaId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a metro, do not target or exclude the country of the metro.",
          "type": "array"
        },
        "countries": {
          "description": "Countries to be targeted or excluded from targeting, depending on the setting of the excludeCountries field. For each country only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting or excluding a country, do not target regions, cities, metros, or postal codes in the same country.",
          "type": "array",
          "items": {
            "$ref": "Country"
          }
        },
        "postalCodes": {
          "items": {
            "$ref": "PostalCode"
          },
          "type": "array",
          "description": "Postal codes to be targeted. For each postal code only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a postal code, do not target or exclude the country of the postal code."
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "City"
          },
          "description": "Cities to be targeted. For each city only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a city, do not target or exclude the country of the city, and do not target the metro or region of the city."
        },
        "excludeCountries": {
          "description": "Whether or not to exclude the countries in the countries field from targeting. If false, the countries field refers to countries which will be targeted by the ad.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Geographical Targeting.",
      "id": "GeoTargeting"
    },
    "DynamicTargetingKey": {
      "id": "DynamicTargetingKey",
      "description": "Contains properties of a dynamic targeting key. Dynamic targeting keys are unique, user-friendly labels, created at the advertiser level in DCM, that can be assigned to ads, creatives, and placements and used for targeting with Studio dynamic creatives. Use these labels instead of numeric Campaign Manager IDs (such as placement IDs) to save time and avoid errors in your dynamic feeds.",
      "type": "object",
      "properties": {
        "objectId": {
          "format": "int64",
          "description": "ID of the object of this dynamic targeting key. This is a required field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase."
        },
        "objectType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Type of the object of this dynamic targeting key. This is a required field.",
          "enum": [
            "OBJECT_ADVERTISER",
            "OBJECT_AD",
            "OBJECT_CREATIVE",
            "OBJECT_PLACEMENT"
          ]
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKey\".",
          "type": "string"
        }
      }
    },
    "MeasurementPartnerCampaignLink": {
      "properties": {
        "linkStatus": {
          "description": ".",
          "enumDescriptions": [
            "Unlinked.",
            "Linked successfully",
            "Link pending for wrapping.",
            "Linking failure.",
            "Link opt-out by user.",
            "Link opt-out pending sync.",
            "Link wrap answer pending.",
            "Mode change pending."
          ],
          "enum": [
            "MEASUREMENT_PARTNER_UNLINKED",
            "MEASUREMENT_PARTNER_LINKED",
            "MEASUREMENT_PARTNER_LINK_PENDING",
            "MEASUREMENT_PARTNER_LINK_FAILURE",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING",
            "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING",
            "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING"
          ],
          "type": "string"
        },
        "measurementPartner": {
          "enum": [
            "NONE",
            "INTEGRAL_AD_SCIENCE",
            "DOUBLE_VERIFY"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Measurement partner used for tag wrapping."
        },
        "partnerCampaignId": {
          "description": "Partner campaign ID needed for establishing linking with Measurement partner.",
          "type": "string"
        }
      },
      "id": "MeasurementPartnerCampaignLink",
      "type": "object"
    },
    "UserRolesListResponse": {
      "type": "object",
      "description": "User Role List Response",
      "id": "UserRolesListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "userRoles": {
          "type": "array",
          "items": {
            "$ref": "UserRole"
          },
          "description": "User role collection."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolesListResponse\"."
        }
      }
    },
    "MeasurementPartnerWrappingData": {
      "description": "Placement tag wrapping",
      "properties": {
        "linkStatus": {
          "type": "string",
          "enum": [
            "MEASUREMENT_PARTNER_UNLINKED",
            "MEASUREMENT_PARTNER_LINKED",
            "MEASUREMENT_PARTNER_LINK_PENDING",
            "MEASUREMENT_PARTNER_LINK_FAILURE",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT",
            "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING",
            "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING",
            "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING"
          ],
          "description": "Placement wrapping status.",
          "enumDescriptions": [
            "Unlinked.",
            "Linked successfully",
            "Link pending for wrapping.",
            "Linking failure.",
            "Link opt-out by user.",
            "Link opt-out pending sync.",
            "Link wrap answer pending.",
            "Mode change pending."
          ]
        },
        "wrappedTag": {
          "type": "string",
          "description": "Tag provided by the measurement partner during wrapping."
        },
        "measurementPartner": {
          "description": "Measurement partner used for wrapping the placement.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "NONE",
            "INTEGRAL_AD_SCIENCE",
            "DOUBLE_VERIFY"
          ],
          "type": "string"
        },
        "tagWrappingMode": {
          "description": "Measurement mode for the wrapped placement.",
          "enum": [
            "NONE",
            "BLOCKING",
            "MONITORING",
            "MONITORING_READ_ONLY",
            "VIDEO_PIXEL_MONITORING",
            "TRACKING",
            "VPAID_MONITORING",
            "VPAID_BLOCKING",
            "NON_VPAID_MONITORING",
            "VPAID_ONLY_MONITORING",
            "VPAID_ONLY_BLOCKING",
            "VPAID_ONLY_FILTERING",
            "VPAID_FILTERING",
            "NON_VPAID_FILTERING"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "id": "MeasurementPartnerWrappingData",
      "type": "object"
    },
    "BillingAssignment": {
      "id": "BillingAssignment",
      "description": "List account, subaccount, advertiser, and campaign associated with a given Billing Profile.",
      "properties": {
        "accountId": {
          "description": "ID of the account associated with the billing assignment.This is a read-only, auto-generated field.",
          "type": "string"
        },
        "advertiserId": {
          "type": "string",
          "description": "ID of the advertiser associated with the billing assignment.Wildcard (*) means this assignment is not limited to a single advertiser"
        },
        "campaignId": {
          "type": "string",
          "description": "ID of the campaign associated with the billing assignment. Wildcard (*) means this assignment is not limited to a single campaign"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingAssignment\".",
          "type": "string"
        },
        "subaccountId": {
          "type": "string",
          "description": "ID of the subaccount associated with the billing assignment.Wildcard (*) means this assignment is not limited to a single subaccountThis is a read-only, auto-generated field."
        }
      },
      "type": "object"
    },
    "Ad": {
      "id": "Ad",
      "description": "Contains properties of a Campaign Manager ad.",
      "properties": {
        "comments": {
          "description": "Comments for this ad.",
          "type": "string"
        },
        "keyValueTargetingExpression": {
          "$ref": "KeyValueTargetingExpression",
          "description": "Key-value targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "dayPartTargeting": {
          "description": "Time and day targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
          "$ref": "DayPartTargeting"
        },
        "subaccountId": {
          "description": "Subaccount ID of this ad. This is a read-only field that can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "description": "Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).",
          "enum": [
            "AD_SERVING_STANDARD_AD",
            "AD_SERVING_DEFAULT_AD",
            "AD_SERVING_CLICK_TRACKER",
            "AD_SERVING_TRACKING",
            "AD_SERVING_BRAND_SAFE_AD"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "defaultClickThroughEventTagProperties": {
          "description": "Default click-through event tag properties for this ad.",
          "$ref": "DefaultClickThroughEventTagProperties"
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Advertiser ID of this ad. This is a required field on insertion."
        },
        "name": {
          "type": "string",
          "description": "Name of this ad. This is a required field and must be less than 256 characters long."
        },
        "targetingTemplateId": {
          "format": "int64",
          "description": "Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.",
          "type": "string"
        },
        "languageTargeting": {
          "$ref": "LanguageTargeting",
          "description": "Language targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "placementAssignments": {
          "type": "array",
          "description": "Placement assignments for this ad.",
          "items": {
            "$ref": "PlacementAssignment"
          }
        },
        "size": {
          "description": "Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.",
          "$ref": "Size"
        },
        "geoTargeting": {
          "$ref": "GeoTargeting",
          "description": "Geographical targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "idDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of this ad. This is a read-only, auto-generated field."
        },
        "active": {
          "type": "boolean",
          "description": "Whether this ad is active. When true, archived must be false."
        },
        "campaignIdDimensionValue": {
          "description": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "remarketingListExpression": {
          "$ref": "ListTargetingExpression",
          "description": "Remarketing list targeting expression for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "dynamicClickTracker": {
          "type": "boolean",
          "description": "Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert."
        },
        "clickThroughUrl": {
          "description": "Click-through URL for this ad. This is a required field on insertion. Applicable when type is AD_SERVING_CLICK_TRACKER.",
          "$ref": "ClickThroughUrl"
        },
        "deliverySchedule": {
          "$ref": "DeliverySchedule",
          "description": "Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion when type is AD_SERVING_STANDARD_AD."
        },
        "campaignId": {
          "type": "string",
          "format": "int64",
          "description": "Campaign ID of this ad. This is a required field on insertion."
        },
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this ad. This is a read-only field that can be left blank."
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "creativeGroupAssignments": {
          "type": "array",
          "items": {
            "$ref": "CreativeGroupAssignment"
          },
          "description": "Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments."
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "createInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the creation of this ad. This is a read-only field."
        },
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated."
        },
        "compatibility": {
          "description": "Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.",
          "enumDescriptions": [
            "",
            "",
            "Deprecated enum value. No longer supported.",
            "Deprecated enum value. No longer supported.",
            "",
            ""
          ],
          "enum": [
            "DISPLAY",
            "DISPLAY_INTERSTITIAL",
            "APP",
            "APP_INTERSTITIAL",
            "IN_STREAM_VIDEO",
            "IN_STREAM_AUDIO"
          ],
          "type": "string"
        },
        "sslRequired": {
          "type": "boolean",
          "description": "Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated."
        },
        "technologyTargeting": {
          "$ref": "TechnologyTargeting",
          "description": "Technology platform targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "archived": {
          "type": "boolean",
          "description": "Whether this ad is archived. When true, active must be false."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ad\".",
          "type": "string"
        },
        "creativeRotation": {
          "description": "Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD, AD_SERVING_STANDARD_AD, or AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have exactly one creativeAssignment .",
          "$ref": "CreativeRotation"
        },
        "audienceSegmentId": {
          "format": "int64",
          "type": "string",
          "description": "Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD."
        },
        "lastModifiedInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the most recent modification of this ad. This is a read-only field."
        },
        "eventTagOverrides": {
          "description": "Event tag overrides for this ad.",
          "type": "array",
          "items": {
            "$ref": "EventTagOverride"
          }
        },
        "clickThroughUrlSuffixProperties": {
          "$ref": "ClickThroughUrlSuffixProperties",
          "description": "Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad properties) the URL in the creative."
        },
        "id": {
          "format": "int64",
          "description": "ID of this ad. This is a read-only, auto-generated field.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        }
      },
      "type": "object"
    },
    "CreativeFieldValuesListResponse": {
      "type": "object",
      "description": "Creative Field Value List Response",
      "id": "CreativeFieldValuesListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "creativeFieldValues": {
          "description": "Creative field value collection.",
          "items": {
            "$ref": "CreativeFieldValue"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValuesListResponse\".",
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "description": "Describes properties of a Planning order.",
      "id": "Order",
      "properties": {
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Advertiser ID of this order."
        },
        "projectId": {
          "format": "int64",
          "description": "Project ID of this order.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this order. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "lastModifiedInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the most recent modification of this order."
        },
        "planningTermId": {
          "type": "string",
          "description": "ID of the terms and conditions template used in this order.",
          "format": "int64"
        },
        "approverUserProfileIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "IDs for users that have to approve documents created for this order."
        },
        "termsAndConditions": {
          "description": "Terms and conditions of this order.",
          "type": "string"
        },
        "buyerOrganizationName": {
          "type": "string",
          "description": "Name of the buyer organization."
        },
        "notes": {
          "description": "Notes of this order.",
          "type": "string"
        },
        "siteId": {
          "description": "Site IDs this order is associated with.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "subaccountId": {
          "description": "Subaccount ID of this order.",
          "format": "int64",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this order."
        },
        "sellerOrganizationName": {
          "type": "string",
          "description": "Name of the seller organization."
        },
        "name": {
          "type": "string",
          "description": "Name of this order."
        },
        "contacts": {
          "type": "array",
          "description": "Contacts for this order.",
          "items": {
            "$ref": "OrderContact"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#order\".",
          "type": "string"
        },
        "buyerInvoiceId": {
          "description": "Buyer invoice ID associated with this order.",
          "type": "string"
        },
        "sellerOrderId": {
          "type": "string",
          "description": "Seller order ID associated with this order."
        },
        "siteNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Free-form site names this order is associated with."
        },
        "comments": {
          "description": "Comments in this order.",
          "type": "string"
        }
      }
    },
    "ThirdPartyAuthenticationToken": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the third-party authentication token. This is a read-only, auto-generated field."
        },
        "name": {
          "description": "Name of the third-party authentication token.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Third Party Authentication Token",
      "id": "ThirdPartyAuthenticationToken"
    },
    "CustomFloodlightVariable": {
      "id": "CustomFloodlightVariable",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customFloodlightVariable\"."
        },
        "type": {
          "type": "string",
          "description": "The type of custom floodlight variable to supply a value for. These map to the \"u[1-20]=\" in the tags.",
          "enum": [
            "U1",
            "U2",
            "U3",
            "U4",
            "U5",
            "U6",
            "U7",
            "U8",
            "U9",
            "U10",
            "U11",
            "U12",
            "U13",
            "U14",
            "U15",
            "U16",
            "U17",
            "U18",
            "U19",
            "U20",
            "U21",
            "U22",
            "U23",
            "U24",
            "U25",
            "U26",
            "U27",
            "U28",
            "U29",
            "U30",
            "U31",
            "U32",
            "U33",
            "U34",
            "U35",
            "U36",
            "U37",
            "U38",
            "U39",
            "U40",
            "U41",
            "U42",
            "U43",
            "U44",
            "U45",
            "U46",
            "U47",
            "U48",
            "U49",
            "U50",
            "U51",
            "U52",
            "U53",
            "U54",
            "U55",
            "U56",
            "U57",
            "U58",
            "U59",
            "U60",
            "U61",
            "U62",
            "U63",
            "U64",
            "U65",
            "U66",
            "U67",
            "U68",
            "U69",
            "U70",
            "U71",
            "U72",
            "U73",
            "U74",
            "U75",
            "U76",
            "U77",
            "U78",
            "U79",
            "U80",
            "U81",
            "U82",
            "U83",
            "U84",
            "U85",
            "U86",
            "U87",
            "U88",
            "U89",
            "U90",
            "U91",
            "U92",
            "U93",
            "U94",
            "U95",
            "U96",
            "U97",
            "U98",
            "U99",
            "U100"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "value": {
          "description": "The value of the custom floodlight variable. The length of string must not exceed 100 characters.",
          "type": "string"
        }
      },
      "description": "A custom floodlight variable. This field may only be used when calling batchinsert; it is not supported by batchupdate."
    },
    "CampaignSummary": {
      "type": "object",
      "id": "CampaignSummary",
      "properties": {
        "preTaxAmountMicros": {
          "format": "int64",
          "description": "The pre-tax amount for this campaign, in micros of the invoice's currency.",
          "type": "string"
        },
        "campaignId": {
          "type": "string",
          "description": "Campaign ID.",
          "format": "int64"
        },
        "taxAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "The tax amount for this campaign, in micros of the invoice's currency."
        },
        "billingInvoiceCode": {
          "type": "string",
          "description": "Campaign billing invoice code."
        },
        "totalAmountMicros": {
          "format": "int64",
          "description": "The total amount of charges for this campaign, in micros of the invoice's currency.",
          "type": "string"
        }
      },
      "description": "Represents a summarized campaign information associated with this invoice."
    },
    "CustomRichMediaEvents": {
      "description": "Represents a Custom Rich Media Events group.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#customRichMediaEvents."
        },
        "filteredEventIds": {
          "items": {
            "$ref": "DimensionValue"
          },
          "description": "List of custom rich media event IDs. Dimension values must be all of type dfa:richMediaEventTypeIdAndName.",
          "type": "array"
        }
      },
      "id": "CustomRichMediaEvents",
      "type": "object"
    },
    "SitesListResponse": {
      "description": "Site List Response",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sitesListResponse\".",
          "type": "string"
        },
        "sites": {
          "description": "Site collection.",
          "items": {
            "$ref": "Site"
          },
          "type": "array"
        }
      },
      "id": "SitesListResponse",
      "type": "object"
    },
    "PathFilter": {
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#pathFilter.",
          "type": "string"
        },
        "pathMatchPosition": {
          "description": "Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.",
          "enum": [
            "PATH_MATCH_POSITION_UNSPECIFIED",
            "ANY",
            "FIRST",
            "LAST"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "eventFilters": {
          "type": "array",
          "description": "Event filters in path report.",
          "items": {
            "$ref": "EventFilter"
          }
        }
      },
      "id": "PathFilter",
      "type": "object",
      "description": "Represents a DfaReporting path filter."
    },
    "Metro": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "Country code of the country to which this metro region belongs."
        },
        "countryDartId": {
          "description": "DART ID of the country to which this metro region belongs.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Name of this metro region.",
          "type": "string"
        },
        "dmaId": {
          "description": "DMA ID of this metro region. This is the ID used for targeting and generating reports, and is equivalent to metro_code.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metro\"."
        },
        "dartId": {
          "type": "string",
          "description": "DART ID of this metro region.",
          "format": "int64"
        },
        "metroCode": {
          "type": "string",
          "description": "Metro code of this metro region. This is equivalent to dma_id."
        }
      },
      "description": "Contains information about a metro region that can be targeted by ads.",
      "id": "Metro"
    },
    "InventoryItemsListResponse": {
      "id": "InventoryItemsListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "inventoryItems": {
          "description": "Inventory item collection",
          "items": {
            "$ref": "InventoryItem"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItemsListResponse\"."
        }
      },
      "description": "Inventory item List Response",
      "type": "object"
    },
    "CreativeGroupsListResponse": {
      "properties": {
        "creativeGroups": {
          "description": "Creative group collection.",
          "type": "array",
          "items": {
            "$ref": "CreativeGroup"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroupsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      },
      "id": "CreativeGroupsListResponse",
      "type": "object",
      "description": "Creative Group List Response"
    },
    "DayPartTargeting": {
      "description": "Day Part Targeting.",
      "id": "DayPartTargeting",
      "properties": {
        "userLocalTime": {
          "type": "boolean",
          "description": "Whether or not to use the user's local time. If false, the America/New York time zone applies."
        },
        "hoursOfDay": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "Hours of the day when the ad will serve, where 0 is midnight to 1 AM and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad would serve during these hours on the specified days. For example if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm. Acceptable values are 0 to 23, inclusive."
        },
        "daysOfWeek": {
          "items": {
            "enum": [
              "SUNDAY",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "description": "Days of the week when the ad will serve. Acceptable values are: - \"SUNDAY\" - \"MONDAY\" - \"TUESDAY\" - \"WEDNESDAY\" - \"THURSDAY\" - \"FRIDAY\" - \"SATURDAY\" ",
          "type": "array"
        }
      },
      "type": "object"
    },
    "LanguagesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#languagesListResponse\".",
          "type": "string"
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "Language"
          },
          "description": "Language collection."
        }
      },
      "id": "LanguagesListResponse",
      "description": "Language List Response"
    },
    "AdsListResponse": {
      "description": "Ad List Response",
      "type": "object",
      "properties": {
        "ads": {
          "items": {
            "$ref": "Ad"
          },
          "description": "Ad collection.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#adsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      },
      "id": "AdsListResponse"
    },
    "Creative": {
      "type": "object",
      "id": "Creative",
      "description": "Contains properties of a Creative.",
      "properties": {
        "counterCustomEvents": {
          "type": "array",
          "description": "List of counter events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID.",
          "items": {
            "$ref": "CreativeCustomEvent"
          }
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative types.",
          "$ref": "DimensionValue"
        },
        "commercialId": {
          "description": "Industry standard ID assigned to creative for reach and frequency. Applicable to INSTREAM_VIDEO_REDIRECT creatives.",
          "type": "string"
        },
        "adTagKeys": {
          "items": {
            "type": "string"
          },
          "description": "Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use keywords to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "array"
        },
        "subaccountId": {
          "format": "int64",
          "description": "Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",
          "type": "string"
        },
        "accountId": {
          "description": "Account ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",
          "type": "string",
          "format": "int64"
        },
        "obaIcon": {
          "$ref": "ObaIcon",
          "description": "Online behavioral advertising icon to be added to the creative. Applicable to the following creative types: all INSTREAM_VIDEO."
        },
        "creativeFieldAssignments": {
          "type": "array",
          "items": {
            "$ref": "CreativeFieldAssignment"
          },
          "description": "Creative field assignments for this creative. Applicable to all creative types."
        },
        "sslOverride": {
          "type": "boolean",
          "description": "Whether creative should be treated as SSL compliant even if the system scan shows it's not. Applicable to all creative types."
        },
        "creativeAssetSelection": {
          "$ref": "CreativeAssetSelection",
          "description": "Required if dynamicAssetSelection is true."
        },
        "thirdPartyRichMediaImpressionsUrl": {
          "type": "string",
          "description": "Third-party URL used to record rich media impressions. Applicable to the following creative types: all RICH_MEDIA."
        },
        "compatibility": {
          "description": "Compatibilities associated with this creative. This is a read-only field. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. Only pre-existing creatives may have these compatibilities since new creatives will either be assigned DISPLAY or DISPLAY_INTERSTITIAL instead. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. IN_STREAM_AUDIO refers to rendering in in-stream audio ads developed with the VAST standard. Applicable to all creative types. Acceptable values are: - \"APP\" - \"APP_INTERSTITIAL\" - \"IN_STREAM_VIDEO\" - \"IN_STREAM_AUDIO\" - \"DISPLAY\" - \"DISPLAY_INTERSTITIAL\" ",
          "items": {
            "enum": [
              "DISPLAY",
              "DISPLAY_INTERSTITIAL",
              "APP",
              "APP_INTERSTITIAL",
              "IN_STREAM_VIDEO",
              "IN_STREAM_AUDIO"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "Deprecated enum value. No longer supported.",
              "Deprecated enum value. No longer supported.",
              "",
              ""
            ]
          },
          "type": "array"
        },
        "fsCommand": {
          "$ref": "FsCommand",
          "description": "OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess field is true. Applicable to the following creative types: FLASH_INPAGE."
        },
        "backgroundColor": {
          "type": "string",
          "description": "The 6-character HTML color code, beginning with #, for the background of the window area where the Flash file is displayed. Default is white. Applicable to the following creative types: FLASH_INPAGE."
        },
        "autoAdvanceImages": {
          "description": "Whether images are automatically advanced for image gallery creatives. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY.",
          "type": "boolean"
        },
        "totalFileSize": {
          "type": "string",
          "format": "int64",
          "description": "Combined size of all creative assets. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID."
        },
        "studioCreativeId": {
          "format": "int64",
          "description": "Studio creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "string"
        },
        "studioTraffickedCreativeId": {
          "format": "int64",
          "description": "Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "string"
        },
        "customKeyValues": {
          "description": "Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use key-values to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "redirectUrl": {
          "description": "URL of hosted image or hosted video or another ad tag. For INSTREAM_VIDEO_REDIRECT creatives this is the in-stream video redirect URL. The standard for a VAST (Video Ad Serving Template) ad response allows for a redirect link to another VAST 2.0 or 3.0 call. This is a required field when applicable. Applicable to the following creative types: DISPLAY_REDIRECT, INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO_REDIRECT",
          "type": "string"
        },
        "exitCustomEvents": {
          "items": {
            "$ref": "CreativeCustomEvent"
          },
          "type": "array",
          "description": "List of exit events configured for the creative. For DISPLAY and DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags, For DISPLAY, an event is also created from the backupImageReportingLabel. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE."
        },
        "studioAdvertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID."
        },
        "convertFlashToHtml5": {
          "type": "boolean",
          "description": "Whether Flash assets associated with the creative need to be automatically converted to HTML5. This flag is enabled by default and users can choose to disable it if they don't want the system to generate and use HTML5 asset for this creative. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE."
        },
        "active": {
          "type": "boolean",
          "description": "Whether the creative is active. Applicable to all creative types."
        },
        "thirdPartyUrls": {
          "type": "array",
          "items": {
            "$ref": "ThirdPartyTrackingUrl"
          },
          "description": "Third-party URLs for tracking in-stream creative events. Applicable to the following creative types: all INSTREAM_VIDEO, all INSTREAM_AUDIO, and all VPAID."
        },
        "skipOffset": {
          "description": "Amount of time to play the video before the skip button appears. Applicable to the following creative types: all INSTREAM_VIDEO.",
          "$ref": "VideoOffset"
        },
        "allowScriptAccess": {
          "description": "Whether script access is allowed for this creative. This is a read-only and deprecated field which will automatically be set to true on update. Applicable to the following creative types: FLASH_INPAGE.",
          "type": "boolean"
        },
        "timerCustomEvents": {
          "description": "List of timer events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset is not HTML_IMAGE.",
          "type": "array",
          "items": {
            "$ref": "CreativeCustomEvent"
          }
        },
        "additionalSizes": {
          "type": "array",
          "description": "Additional sizes associated with a responsive creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. Applicable to DISPLAY creatives when the primary asset type is HTML_IMAGE.",
          "items": {
            "$ref": "Size"
          }
        },
        "backupImageReportingLabel": {
          "description": "Reporting label used for HTML5 banner backup image. Applicable to the following creative types: DISPLAY when the primary asset type is not HTML_IMAGE.",
          "type": "string"
        },
        "progressOffset": {
          "$ref": "VideoOffset",
          "description": "Amount of time to play the video before counting a view. Applicable to the following creative types: all INSTREAM_VIDEO."
        },
        "lastModifiedInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Creative last modification information. This is a read-only field. Applicable to all creative types."
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Required. Advertiser ID of this creative. This is a required field. Applicable to all creative types."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creative\".",
          "type": "string"
        },
        "type": {
          "description": "Required. Type of this creative. Applicable to all creative types. *Note:* FLASH_INPAGE, HTML5_BANNER, and IMAGE are only used for existing creatives. New creatives should use DISPLAY as a replacement for these types.",
          "enum": [
            "IMAGE",
            "DISPLAY_REDIRECT",
            "CUSTOM_DISPLAY",
            "INTERNAL_REDIRECT",
            "CUSTOM_DISPLAY_INTERSTITIAL",
            "INTERSTITIAL_INTERNAL_REDIRECT",
            "TRACKING_TEXT",
            "RICH_MEDIA_DISPLAY_BANNER",
            "RICH_MEDIA_INPAGE_FLOATING",
            "RICH_MEDIA_IM_EXPAND",
            "RICH_MEDIA_DISPLAY_EXPANDING",
            "RICH_MEDIA_DISPLAY_INTERSTITIAL",
            "RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL",
            "RICH_MEDIA_MOBILE_IN_APP",
            "FLASH_INPAGE",
            "INSTREAM_VIDEO",
            "VPAID_LINEAR_VIDEO",
            "VPAID_NON_LINEAR_VIDEO",
            "INSTREAM_VIDEO_REDIRECT",
            "RICH_MEDIA_PEEL_DOWN",
            "HTML5_BANNER",
            "DISPLAY",
            "DISPLAY_IMAGE_GALLERY",
            "BRAND_SAFE_DEFAULT_INSTREAM_VIDEO",
            "INSTREAM_AUDIO"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "backupImageTargetWindow": {
          "$ref": "TargetWindow",
          "description": "Target window for backup image. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE."
        },
        "artworkType": {
          "enum": [
            "ARTWORK_TYPE_FLASH",
            "ARTWORK_TYPE_HTML5",
            "ARTWORK_TYPE_MIXED",
            "ARTWORK_TYPE_IMAGE"
          ],
          "description": "Type of artwork used for the creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "string",
          "enumDescriptions": [
            "The creative is a Flash creative.",
            "The creative is HTML5.",
            "The creative is HTML5 if available, Flash otherwise.",
            "The creative is Image."
          ]
        },
        "htmlCode": {
          "type": "string",
          "description": "HTML code for the creative. This is a required field when applicable. This field is ignored if htmlCodeLocked is true. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and HTML5_BANNER, and all RICH_MEDIA."
        },
        "version": {
          "format": "int32",
          "description": "The version number helps you keep track of multiple versions of your creative in your reports. The version number will always be auto-generated during insert operations to start at 1. For tracking creatives the version cannot be incremented and will always remain at 1. For all other creative types the version can be incremented only by 1 during update operations. In addition, the version will be automatically incremented by 1 when undergoing Rich Media creative merging. Applicable to all creative types.",
          "type": "integer"
        },
        "authoringSource": {
          "enum": [
            "CREATIVE_AUTHORING_SOURCE_DCM",
            "CREATIVE_AUTHORING_SOURCE_DBM",
            "CREATIVE_AUTHORING_SOURCE_STUDIO",
            "CREATIVE_AUTHORING_SOURCE_GWD",
            "CREATIVE_AUTHORING_SOURCE_ACS"
          ],
          "enumDescriptions": [
            "DCM-UI or external API used to author the creative.",
            "DBM-UI used to author the creative.",
            "Studio-UI used to author the creative.",
            "Google Web Designer used to author the creative.",
            "ACS-UI used to author the creative."
          ],
          "description": "Source application where creative was authored. Presently, only DBM authored creatives will have this field set. Applicable to all creative types.",
          "type": "string"
        },
        "universalAdId": {
          "$ref": "UniversalAdId",
          "description": "A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO and INSTREAM_VIDEO and VPAID."
        },
        "renderingIdDimensionValue": {
          "description": "Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all creative types.",
          "$ref": "DimensionValue"
        },
        "mediaDescription": {
          "description": "Description of the audio or video ad. Applicable to the following creative types: all INSTREAM_VIDEO, INSTREAM_AUDIO, and all VPAID.",
          "type": "string"
        },
        "htmlCodeLocked": {
          "type": "boolean",
          "description": "Whether HTML code is generated by Campaign Manager or manually entered. Set to true to ignore changes to htmlCode. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER."
        },
        "renderingId": {
          "type": "string",
          "format": "int64",
          "description": "ID of current rendering version. This is a read-only field. Applicable to all creative types."
        },
        "mediaDuration": {
          "description": "Creative audio or video duration in seconds. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO, INSTREAM_AUDIO, all RICH_MEDIA, and all VPAID.",
          "type": "number",
          "format": "float"
        },
        "skippable": {
          "type": "boolean",
          "description": "Whether the user can choose to skip the creative. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID."
        },
        "name": {
          "type": "string",
          "description": "Required. Name of the creative. This must be less than 256 characters long. Applicable to all creative types."
        },
        "dynamicAssetSelection": {
          "description": "Set this to true to enable the use of rules to target individual assets in this creative. When set to true creativeAssetSelection must be set. This also controls asset-level companions. When this is true, companion creatives should be assigned to creative assets. Learn more. Applicable to INSTREAM_VIDEO creatives.",
          "type": "boolean"
        },
        "overrideCss": {
          "type": "string",
          "description": "Override CSS value for rich media creatives. Applicable to the following creative types: all RICH_MEDIA."
        },
        "authoringTool": {
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "description": "Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
          "enum": [
            "NINJA",
            "SWIFFY"
          ]
        },
        "backupImageClickThroughUrl": {
          "$ref": "CreativeClickThroughUrl",
          "description": "Click-through URL for backup image. Applicable to ENHANCED_BANNER when the primary asset type is not HTML_IMAGE."
        },
        "thirdPartyBackupImageImpressionsUrl": {
          "type": "string",
          "description": "Third-party URL used to record backup image impressions. Applicable to the following creative types: all RICH_MEDIA."
        },
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative types."
        },
        "companionCreatives": {
          "type": "array",
          "description": "List of companion creatives assigned to an in-Stream video creative. Acceptable values include IDs of existing flash and image creatives. Applicable to the following creative types: all VPAID, all INSTREAM_AUDIO and all INSTREAM_VIDEO with dynamicAssetSelection set to false.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "backupImageFeatures": {
          "type": "array",
          "description": "List of feature dependencies that will cause a backup image to be served if the browser that serves the ad does not support them. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative asset correctly. This field is initially auto-generated to contain all features detected by Campaign Manager for all the assets of this creative and can then be modified by the client. To reset this field, copy over all the creativeAssets' detected features. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "items": {
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "POST_MESSAGE always required due to html5 implementation.",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "enum": [
              "CSS_FONT_FACE",
              "CSS_BACKGROUND_SIZE",
              "CSS_BORDER_IMAGE",
              "CSS_BORDER_RADIUS",
              "CSS_BOX_SHADOW",
              "CSS_FLEX_BOX",
              "CSS_HSLA",
              "CSS_MULTIPLE_BGS",
              "CSS_OPACITY",
              "CSS_RGBA",
              "CSS_TEXT_SHADOW",
              "CSS_ANIMATIONS",
              "CSS_COLUMNS",
              "CSS_GENERATED_CONTENT",
              "CSS_GRADIENTS",
              "CSS_REFLECTIONS",
              "CSS_TRANSFORMS",
              "CSS_TRANSFORMS3D",
              "CSS_TRANSITIONS",
              "APPLICATION_CACHE",
              "CANVAS",
              "CANVAS_TEXT",
              "DRAG_AND_DROP",
              "HASH_CHANGE",
              "HISTORY",
              "AUDIO",
              "VIDEO",
              "INDEXED_DB",
              "INPUT_ATTR_AUTOCOMPLETE",
              "INPUT_ATTR_AUTOFOCUS",
              "INPUT_ATTR_LIST",
              "INPUT_ATTR_PLACEHOLDER",
              "INPUT_ATTR_MAX",
              "INPUT_ATTR_MIN",
              "INPUT_ATTR_MULTIPLE",
              "INPUT_ATTR_PATTERN",
              "INPUT_ATTR_REQUIRED",
              "INPUT_ATTR_STEP",
              "INPUT_TYPE_SEARCH",
              "INPUT_TYPE_TEL",
              "INPUT_TYPE_URL",
              "INPUT_TYPE_EMAIL",
              "INPUT_TYPE_DATETIME",
              "INPUT_TYPE_DATE",
              "INPUT_TYPE_MONTH",
              "INPUT_TYPE_WEEK",
              "INPUT_TYPE_TIME",
              "INPUT_TYPE_DATETIME_LOCAL",
              "INPUT_TYPE_NUMBER",
              "INPUT_TYPE_RANGE",
              "INPUT_TYPE_COLOR",
              "LOCAL_STORAGE",
              "POST_MESSAGE",
              "SESSION_STORAGE",
              "WEB_SOCKETS",
              "WEB_SQL_DATABASE",
              "WEB_WORKERS",
              "GEO_LOCATION",
              "INLINE_SVG",
              "SMIL",
              "SVG_HREF",
              "SVG_CLIP_PATHS",
              "TOUCH",
              "WEBGL",
              "SVG_FILTERS",
              "SVG_FE_IMAGE"
            ],
            "type": "string"
          }
        },
        "adParameters": {
          "type": "string",
          "description": "Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following creative types: all VPAID."
        },
        "latestTraffickedCreativeId": {
          "format": "int64",
          "description": "Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
          "type": "string"
        },
        "archived": {
          "type": "boolean",
          "description": "Whether the creative is archived. Applicable to all creative types."
        },
        "creativeAssets": {
          "type": "array",
          "description": "Assets associated with a creative. Applicable to all but the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT",
          "items": {
            "$ref": "CreativeAsset"
          }
        },
        "requiredFlashPluginVersion": {
          "type": "string",
          "description": "The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID."
        },
        "clickTags": {
          "items": {
            "$ref": "ClickTag"
          },
          "description": "Click tags of the creative. For DISPLAY, FLASH_INPAGE, and HTML5_BANNER creatives, this is a subset of detected click tags for the assets associated with this creative. After creating a flash asset, detected click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the creative clickTags field using the creativeAssetMetadata.clickTags field. For DISPLAY_IMAGE_GALLERY creatives, there should be exactly one entry in this list for each image creative asset. A click tag is matched with a corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name field. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "type": "array"
        },
        "requiredFlashVersion": {
          "description": "The internal Flash version for this creative as calculated by Studio. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "description": "ID of this creative. This is a read-only, auto-generated field. Applicable to all creative types.",
          "type": "string",
          "format": "int64"
        },
        "size": {
          "$ref": "Size",
          "description": "Size associated with this creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. This is a required field when applicable; however for IMAGE, FLASH_INPAGE creatives, and for DISPLAY creatives with a primary asset of type HTML_IMAGE, if left blank, this field will be automatically set using the actual size of the associated image assets. Applicable to the following creative types: DISPLAY, DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA."
        }
      }
    },
    "AdvertiserInvoicesListResponse": {
      "id": "AdvertiserInvoicesListResponse",
      "description": "Invoice List Response",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserInvoicesListResponse\"."
        },
        "invoices": {
          "description": "Invoice collection",
          "type": "array",
          "items": {
            "$ref": "Invoice"
          }
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      }
    },
    "City": {
      "description": "Contains information about a city that can be targeted by ads.",
      "id": "City",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#city\".",
          "type": "string"
        },
        "countryCode": {
          "type": "string",
          "description": "Country code of the country to which this city belongs."
        },
        "regionDartId": {
          "description": "DART ID of the region to which this city belongs.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this city."
        },
        "regionCode": {
          "description": "Region code of the region to which this city belongs.",
          "type": "string"
        },
        "metroCode": {
          "type": "string",
          "description": "Metro region code of the metro region (DMA) to which this city belongs."
        },
        "dartId": {
          "type": "string",
          "description": "DART ID of this city. This is the ID used for targeting and generating reports.",
          "format": "int64"
        },
        "metroDmaId": {
          "description": "ID of the metro region (DMA) to which this city belongs.",
          "type": "string",
          "format": "int64"
        },
        "countryDartId": {
          "type": "string",
          "description": "DART ID of the country to which this city belongs.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ConversionsBatchInsertRequest": {
      "description": "Insert Conversions Request.",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchInsertRequest\".",
          "type": "string"
        },
        "conversions": {
          "items": {
            "$ref": "Conversion"
          },
          "description": "The set of conversions to insert.",
          "type": "array"
        },
        "encryptionInfo": {
          "$ref": "EncryptionInfo",
          "description": "Describes how encryptedUserId or encryptedUserIdCandidates[] is encrypted. This is a required field if encryptedUserId or encryptedUserIdCandidates[] is used."
        }
      },
      "id": "ConversionsBatchInsertRequest",
      "type": "object"
    },
    "RemarketingList": {
      "id": "RemarketingList",
      "type": "object",
      "description": "Contains properties of a remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource can be used to manage remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to your advertisers, including those that are shared to your advertiser or account, use the TargetableRemarketingLists resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingList\"."
        },
        "id": {
          "description": "Remarketing list ID. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "listSize": {
          "description": "Number of users currently in the list. This is a read-only field.",
          "type": "string",
          "format": "int64"
        },
        "listPopulationRule": {
          "description": "Rule used to populate the remarketing list with users.",
          "$ref": "ListPopulationRule"
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
          "type": "string"
        },
        "lifeSpan": {
          "format": "int64",
          "type": "string",
          "description": "Number of days that a user should remain in the remarketing list without an impression. Acceptable values are 1 to 540, inclusive."
        },
        "subaccountId": {
          "description": "Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
          "type": "string",
          "format": "int64"
        },
        "advertiserId": {
          "description": "Dimension value for the advertiser ID that owns this remarketing list. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "advertiserIdDimensionValue": {
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "listSource": {
          "enum": [
            "REMARKETING_LIST_SOURCE_OTHER",
            "REMARKETING_LIST_SOURCE_ADX",
            "REMARKETING_LIST_SOURCE_DFP",
            "REMARKETING_LIST_SOURCE_XFP",
            "REMARKETING_LIST_SOURCE_DFA",
            "REMARKETING_LIST_SOURCE_GA",
            "REMARKETING_LIST_SOURCE_YOUTUBE",
            "REMARKETING_LIST_SOURCE_DBM",
            "REMARKETING_LIST_SOURCE_GPLUS",
            "REMARKETING_LIST_SOURCE_DMP",
            "REMARKETING_LIST_SOURCE_PLAY_STORE"
          ],
          "enumDescriptions": [
            "covers sources not supported in DCM other than those listed below",
            "ADX",
            "DFP",
            "XFP",
            "DoubleClick Campaign Manager",
            "Google Analytics Premium",
            "Youtube",
            "DoubleClick Bid Manager",
            "G+",
            "DoubleClick Audience Center",
            "Playstore"
          ],
          "type": "string",
          "description": "Product from which this remarketing list was originated."
        },
        "description": {
          "description": "Remarketing list description.",
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "description": "Whether this remarketing list is active."
        },
        "name": {
          "type": "string",
          "description": "Name of the remarketing list. This is a required field. Must be no greater than 128 characters long."
        }
      }
    },
    "TranscodeSetting": {
      "id": "TranscodeSetting",
      "properties": {
        "enabledVideoFormats": {
          "description": "Allowlist of video formats to be served to this placement. Set this list to null or empty to serve all video formats.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#transcodeSetting\"."
        }
      },
      "type": "object",
      "description": "Transcode Settings"
    },
    "SiteTranscodeSetting": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#siteTranscodeSetting\"."
        },
        "enabledVideoFormats": {
          "description": "Allowlist of video formats to be served to this site template. Set this list to null or empty to serve all video formats.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "id": "SiteTranscodeSetting",
      "type": "object",
      "description": "Transcode Settings"
    },
    "SubaccountsListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccountsListResponse\".",
          "type": "string"
        },
        "subaccounts": {
          "type": "array",
          "description": "Subaccount collection.",
          "items": {
            "$ref": "Subaccount"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      },
      "id": "SubaccountsListResponse",
      "type": "object",
      "description": "Subaccount List Response"
    },
    "FloodlightConfiguration": {
      "type": "object",
      "description": "Contains properties of a Floodlight configuration.",
      "properties": {
        "lookbackConfiguration": {
          "description": "Lookback window settings for this floodlight configuration.",
          "$ref": "LookbackConfiguration"
        },
        "thirdPartyAuthenticationTokens": {
          "type": "array",
          "items": {
            "$ref": "ThirdPartyAuthenticationToken"
          },
          "description": "List of third-party authentication tokens enabled for this configuration."
        },
        "id": {
          "type": "string",
          "description": "ID of this floodlight configuration. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "analyticsDataSharingEnabled": {
          "type": "boolean",
          "description": "Whether advertiser data is shared with Google Analytics."
        },
        "subaccountId": {
          "description": "Subaccount ID of this floodlight configuration. This is a read-only field that can be left blank.",
          "type": "string",
          "format": "int64"
        },
        "exposureToConversionEnabled": {
          "description": "Whether the exposure-to-conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.",
          "type": "boolean"
        },
        "naturalSearchConversionAttributionOption": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "EXCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION",
            "INCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION",
            "INCLUDE_NATURAL_SEARCH_TIERED_CONVERSION_ATTRIBUTION"
          ],
          "description": "Types of attribution options for natural search conversions."
        },
        "firstDayOfWeek": {
          "enum": [
            "SUNDAY",
            "MONDAY"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        },
        "inAppAttributionTrackingEnabled": {
          "type": "boolean",
          "description": "Whether in-app attribution tracking is enabled."
        },
        "advertiserId": {
          "description": "Advertiser ID of the parent advertiser of this floodlight configuration.",
          "type": "string",
          "format": "int64"
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this floodlight configuration. This is a read-only field that can be left blank.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfiguration\".",
          "type": "string"
        },
        "tagSettings": {
          "$ref": "TagSettings",
          "description": "Configuration settings for dynamic and image floodlight tags."
        },
        "omnitureSettings": {
          "$ref": "OmnitureSettings",
          "description": "Settings for Campaign Manager Omniture integration."
        },
        "advertiserIdDimensionValue": {
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "userDefinedVariableConfigurations": {
          "items": {
            "$ref": "UserDefinedVariableConfiguration"
          },
          "type": "array",
          "description": "List of user defined variables enabled for this configuration."
        },
        "idDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated field."
        },
        "customViewabilityMetric": {
          "description": "Custom Viewability metric for the floodlight configuration.",
          "$ref": "CustomViewabilityMetric"
        }
      },
      "id": "FloodlightConfiguration"
    },
    "VideoFormat": {
      "description": "Contains information about supported video formats.",
      "properties": {
        "targetBitRate": {
          "description": "The target bit rate of this video format.",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the video format."
        },
        "resolution": {
          "description": "The resolution of this video format.",
          "$ref": "Size"
        },
        "fileType": {
          "description": "File type of the video format.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "FLV",
            "THREEGPP",
            "MP4",
            "WEBM",
            "M3U8"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormat\"."
        }
      },
      "type": "object",
      "id": "VideoFormat"
    },
    "LandingPage": {
      "properties": {
        "deepLinks": {
          "description": "Links that will direct the user to a mobile app, if installed.",
          "type": "array",
          "items": {
            "$ref": "DeepLink"
          }
        },
        "archived": {
          "description": "Whether this landing page has been archived.",
          "type": "boolean"
        },
        "advertiserId": {
          "description": "Advertiser ID of this landing page. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPage\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this landing page. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "url": {
          "description": "URL of this landing page. This is a required field.",
          "type": "string"
        },
        "name": {
          "description": "Name of this landing page. This is a required field. It must be less than 256 characters long.",
          "type": "string"
        }
      },
      "id": "LandingPage",
      "type": "object",
      "description": "Contains information about where a user's browser is taken after the user clicks an ad."
    },
    "Conversion": {
      "properties": {
        "floodlightConfigurationId": {
          "format": "int64",
          "type": "string",
          "description": "Floodlight Configuration ID of this conversion. This is a required field."
        },
        "mobileDeviceId": {
          "type": "string",
          "description": "The mobile device ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, gclid, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or gclid or dclid or impressionId is a required field."
        },
        "quantity": {
          "description": "The quantity of the conversion. This is a required field.",
          "format": "int64",
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number",
          "description": "The value of the conversion. This is a required field."
        },
        "nonPersonalizedAd": {
          "type": "boolean",
          "description": "Whether the conversion was for a non personalized ad."
        },
        "timestampMicros": {
          "description": "The timestamp of conversion, in Unix epoch micros. This is a required field.",
          "format": "int64",
          "type": "string"
        },
        "ordinal": {
          "type": "string",
          "description": "The ordinal of the conversion. Use this field to control how conversions of the same user and day are de-duplicated. This is a required field."
        },
        "matchId": {
          "description": "The match ID field. A match ID is your own first-party identifier that has been synced with Google using the match ID feature in Floodlight. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],mobileDeviceId, gclid, dclid, and impressionId. This or encryptedUserId orencryptedUserIdCandidates[] or mobileDeviceId or gclid or dclid or impressionIdis a required field.",
          "type": "string"
        },
        "treatmentForUnderage": {
          "description": "Whether this particular request may come from a user under the age of 16 (may differ by country), under compliance with the European Union's General Data Protection Regulation (GDPR).",
          "type": "boolean"
        },
        "userIdentifiers": {
          "description": "The user identifiers to enhance the conversion. The maximum number of user identifiers for each conversion is 5.",
          "items": {
            "$ref": "UserIdentifier"
          },
          "type": "array"
        },
        "impressionId": {
          "description": "The impression ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, and gclid. One of these identifiers must be set.",
          "type": "string"
        },
        "dclid": {
          "type": "string",
          "description": "The display click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, gclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or mobileDeviceId or gclid or impressionId is a required field."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversion\"."
        },
        "gclid": {
          "description": "The Google click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or mobileDeviceId or dclid or impressionId is a required field.",
          "type": "string"
        },
        "customVariables": {
          "type": "array",
          "description": "Custom floodlight variables. This field may only be used when calling batchinsert; it is not supported by batchupdate.",
          "items": {
            "$ref": "CustomFloodlightVariable"
          }
        },
        "encryptedUserIdCandidates": {
          "description": "A list of the alphanumeric encrypted user IDs. Any user ID with exposure prior to the conversion timestamp will be used in the inserted conversion. If no such user ID is found then the conversion will be rejected with INVALID_ARGUMENT error. When set, encryptionInfo should also be specified. This field may only be used when calling batchinsert; it is not supported by batchupdate. This field is mutually exclusive with encryptedUserId, matchId, mobileDeviceId, gclid dclid, and impressionId. This or encryptedUserId or matchId or mobileDeviceId or gclid or dclid or impressionId is a required field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limitAdTracking": {
          "description": "Whether Limit Ad Tracking is enabled. When set to true, the conversion will be used for reporting but not targeting. This will prevent remarketing.",
          "type": "boolean"
        },
        "encryptedUserId": {
          "type": "string",
          "description": "The alphanumeric encrypted user ID. When set, encryptionInfo should also be specified. This field is mutually exclusive with encryptedUserIdCandidates[], matchId, mobileDeviceId, gclid, dclid, and impressionId. This or encryptedUserIdCandidates[] or matchId or mobileDeviceId or gclid or dclid or impressionId is a required field."
        },
        "childDirectedTreatment": {
          "type": "boolean",
          "description": "Whether this particular request may come from a user under the age of 13, under COPPA compliance."
        },
        "floodlightActivityId": {
          "format": "int64",
          "type": "string",
          "description": "Floodlight Activity ID of this conversion. This is a required field."
        }
      },
      "id": "Conversion",
      "description": "A Conversion represents when a user successfully performs a desired action after seeing an ad.",
      "type": "object"
    },
    "DfpSettings": {
      "properties": {
        "pubPaidPlacementAccepted": {
          "type": "boolean",
          "description": "Whether this directory site accepts publisher-paid tags."
        },
        "programmaticPlacementAccepted": {
          "description": "Whether this directory site accepts programmatic placements.",
          "type": "boolean"
        },
        "dfpNetworkName": {
          "type": "string",
          "description": "Ad Manager network name for this directory site."
        },
        "publisherPortalOnly": {
          "description": "Whether this directory site is available only via Publisher Portal.",
          "type": "boolean"
        },
        "dfpNetworkCode": {
          "description": "Ad Manager network code for this directory site.",
          "type": "string"
        }
      },
      "description": "Google Ad Manager Settings",
      "id": "DfpSettings",
      "type": "object"
    },
    "PricingSchedulePricingPeriod": {
      "properties": {
        "units": {
          "description": "Units of this pricing period. Acceptable values are 0 to 10000000000, inclusive.",
          "format": "int64",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "rateOrCostNanos": {
          "format": "int64",
          "type": "string",
          "description": "Rate or cost of this pricing period in nanos (i.e., multiplied by 1000000000). Acceptable values are 0 to 1000000000000000000, inclusive."
        },
        "pricingComment": {
          "description": "Comments for this pricing period.",
          "type": "string"
        }
      },
      "description": "Pricing Period",
      "type": "object",
      "id": "PricingSchedulePricingPeriod"
    },
    "AdvertiserLandingPagesListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "landingPages": {
          "items": {
            "$ref": "LandingPage"
          },
          "type": "array",
          "description": "Landing page collection"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserLandingPagesListResponse\".",
          "type": "string"
        }
      },
      "description": "Landing Page List Response",
      "type": "object",
      "id": "AdvertiserLandingPagesListResponse"
    },
    "ProjectsListResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "description": "Project collection.",
          "items": {
            "$ref": "Project"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#projectsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      },
      "description": "Project List Response",
      "id": "ProjectsListResponse"
    },
    "DimensionValue": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID associated with the value if available."
        },
        "matchType": {
          "type": "string",
          "description": "Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "EXACT",
            "BEGINS_WITH",
            "CONTAINS",
            "WILDCARD_EXPRESSION"
          ]
        },
        "value": {
          "type": "string",
          "description": "The value of the dimension."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#dimensionValue."
        },
        "etag": {
          "type": "string",
          "description": "The eTag of this response for caching purposes."
        },
        "dimensionName": {
          "description": "The name of the dimension.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DimensionValue",
      "description": "Represents a DimensionValue resource."
    },
    "UvarFilter": {
      "description": "Defines the filtering on a single uvar.",
      "type": "object",
      "id": "UvarFilter",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#uvarFilter."
        },
        "index": {
          "type": "string",
          "description": "Custom variable index the filter is applied to.",
          "format": "int64"
        },
        "complement": {
          "type": "boolean",
          "description": "Return rows which don't match this filter."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Values to filter on."
        },
        "match": {
          "type": "string",
          "description": "Indicates how the filter should be matched to the values.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "UNSPECIFIED",
            "EXACT",
            "CONTAINS"
          ]
        }
      }
    },
    "MobileAppsListResponse": {
      "id": "MobileAppsListResponse",
      "description": "Mobile app List Response",
      "properties": {
        "mobileApps": {
          "description": "Mobile apps collection.",
          "items": {
            "$ref": "MobileApp"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileAppsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlacementsListResponse": {
      "id": "PlacementsListResponse",
      "properties": {
        "placements": {
          "items": {
            "$ref": "Placement"
          },
          "description": "Placement collection.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsListResponse\"."
        }
      },
      "type": "object",
      "description": "Placement List Response"
    },
    "DirectorySitesListResponse": {
      "description": "Directory Site List Response",
      "id": "DirectorySitesListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySitesListResponse\"."
        },
        "directorySites": {
          "type": "array",
          "description": "Directory site collection.",
          "items": {
            "$ref": "DirectorySite"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      }
    },
    "UserRolePermissionsListResponse": {
      "type": "object",
      "id": "UserRolePermissionsListResponse",
      "description": "User Role Permission List Response",
      "properties": {
        "userRolePermissions": {
          "items": {
            "$ref": "UserRolePermission"
          },
          "type": "array",
          "description": "User role permission collection."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionsListResponse\".",
          "type": "string"
        }
      }
    },
    "EncryptionInfo": {
      "id": "EncryptionInfo",
      "description": "A description of how user IDs are encrypted.",
      "properties": {
        "encryptionSource": {
          "enum": [
            "ENCRYPTION_SCOPE_UNKNOWN",
            "AD_SERVING",
            "DATA_TRANSFER"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Describes whether the encrypted cookie was received from ad serving (the %m macro) or from Data Transfer."
        },
        "encryptionEntityType": {
          "enum": [
            "ENCRYPTION_ENTITY_TYPE_UNKNOWN",
            "DCM_ACCOUNT",
            "DCM_ADVERTISER",
            "DBM_PARTNER",
            "DBM_ADVERTISER",
            "ADWORDS_CUSTOMER",
            "DFP_NETWORK_CODE"
          ],
          "description": "The encryption entity type. This should match the encryption configuration for ad serving or Data Transfer.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#encryptionInfo\".",
          "type": "string"
        },
        "encryptionEntityId": {
          "type": "string",
          "description": "The encryption entity ID. This should match the encryption configuration for ad serving or Data Transfer.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "BillingRatesListResponse": {
      "id": "BillingRatesListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingRatesListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "billingRates": {
          "type": "array",
          "items": {
            "$ref": "BillingRate"
          },
          "description": "Billing rates collection."
        }
      },
      "description": "Billing Rate List Response"
    },
    "TagData": {
      "type": "object",
      "description": "Placement Tag Data",
      "id": "TagData",
      "properties": {
        "creativeId": {
          "type": "string",
          "format": "int64",
          "description": "Creative associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING."
        },
        "adId": {
          "description": "Ad associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.",
          "format": "int64",
          "type": "string"
        },
        "impressionTag": {
          "type": "string",
          "description": "Tag string for serving an ad."
        },
        "format": {
          "type": "string",
          "description": "TagData tag format of this tag.",
          "enum": [
            "PLACEMENT_TAG_STANDARD",
            "PLACEMENT_TAG_IFRAME_JAVASCRIPT",
            "PLACEMENT_TAG_IFRAME_ILAYER",
            "PLACEMENT_TAG_INTERNAL_REDIRECT",
            "PLACEMENT_TAG_JAVASCRIPT",
            "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT",
            "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT",
            "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT",
            "PLACEMENT_TAG_CLICK_COMMANDS",
            "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH",
            "PLACEMENT_TAG_TRACKING",
            "PLACEMENT_TAG_TRACKING_IFRAME",
            "PLACEMENT_TAG_TRACKING_JAVASCRIPT",
            "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3",
            "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY",
            "PLACEMENT_TAG_JAVASCRIPT_LEGACY",
            "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY",
            "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY",
            "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4",
            "PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "clickTag": {
          "type": "string",
          "description": "Tag string to record a click."
        }
      }
    },
    "AdvertiserGroupsListResponse": {
      "description": "Advertiser Group List Response",
      "id": "AdvertiserGroupsListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroupsListResponse\".",
          "type": "string"
        },
        "advertiserGroups": {
          "items": {
            "$ref": "AdvertiserGroup"
          },
          "type": "array",
          "description": "Advertiser group collection."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      }
    },
    "PathReportDimensionValue": {
      "id": "PathReportDimensionValue",
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The possible values of the dimension."
        },
        "ids": {
          "type": "array",
          "description": "The possible ID's associated with the value if available.",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#pathReportDimensionValue.",
          "type": "string"
        },
        "matchType": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "EXACT",
            "BEGINS_WITH",
            "CONTAINS",
            "WILDCARD_EXPRESSION"
          ],
          "description": "Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.",
          "type": "string"
        },
        "dimensionName": {
          "type": "string",
          "description": "The name of the dimension."
        }
      },
      "description": "Represents a PathReportDimensionValue resource.",
      "type": "object"
    },
    "CreativeCustomEvent": {
      "description": "Creative Custom Event.",
      "id": "CreativeCustomEvent",
      "properties": {
        "exitClickThroughUrl": {
          "$ref": "CreativeClickThroughUrl",
          "description": "Exit click-through URL for the event. This field is used only for exit events."
        },
        "popupWindowProperties": {
          "$ref": "PopupWindowProperties",
          "description": "Properties for rich media popup windows. This field is used only for exit events."
        },
        "targetType": {
          "type": "string",
          "enumDescriptions": [
            "New tab",
            "Current tab",
            "Same frame",
            "Parent frame",
            "New window with properties specified in window_properties"
          ],
          "enum": [
            "TARGET_BLANK",
            "TARGET_TOP",
            "TARGET_SELF",
            "TARGET_PARENT",
            "TARGET_POPUP"
          ],
          "description": "Target type used by the event."
        },
        "videoReportingId": {
          "type": "string",
          "description": "Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only field."
        },
        "advertiserCustomEventName": {
          "type": "string",
          "description": "User-entered name for the event."
        },
        "advertiserCustomEventId": {
          "format": "int64",
          "type": "string",
          "description": "Unique ID of this event used by Reporting and Data Transfer. This is a read-only field."
        },
        "artworkType": {
          "description": "Artwork type used by the creative.This is a read-only field.",
          "enum": [
            "ARTWORK_TYPE_FLASH",
            "ARTWORK_TYPE_HTML5",
            "ARTWORK_TYPE_MIXED",
            "ARTWORK_TYPE_IMAGE"
          ],
          "type": "string",
          "enumDescriptions": [
            "The creative is a Flash creative.",
            "The creative is HTML5.",
            "The creative is HTML5 if available, Flash otherwise.",
            "The creative is Image."
          ]
        },
        "id": {
          "description": "ID of this event. This is a required field and should not be modified after insertion.",
          "format": "int64",
          "type": "string"
        },
        "artworkLabel": {
          "description": "Artwork label column, used to link events in Campaign Manager back to events in Studio. This is a required field and should not be modified after insertion.",
          "type": "string"
        },
        "advertiserCustomEventType": {
          "description": "Type of the event. This is a read-only field.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "ADVERTISER_EVENT_TIMER",
            "ADVERTISER_EVENT_EXIT",
            "ADVERTISER_EVENT_COUNTER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "invoiceType": {
          "type": "string",
          "description": "The type of invoice document.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "INVOICE_TYPE_UNSPECIFIED",
            "INVOICE_TYPE_CREDIT",
            "INVOICE_TYPE_INVOICE"
          ]
        },
        "purchaseOrderNumber": {
          "type": "string",
          "description": "Purchase order number associated with the invoice."
        },
        "issueDate": {
          "description": "The date when the invoice was issued.",
          "type": "string"
        },
        "paymentsProfileId": {
          "type": "string",
          "description": "The ID of the payments profile the invoice belongs to. Appears on the invoice PDF as *Billing ID*."
        },
        "currencyCode": {
          "type": "string",
          "description": "Invoice currency code in ISO 4217 format."
        },
        "totalTaxAmountMicros": {
          "type": "string",
          "description": "The sum of all taxes in invoice, in micros of the invoice's currency.",
          "format": "int64"
        },
        "paymentsAccountId": {
          "description": "The ID of the payments account the invoice belongs to. Appears on the invoice PDF as *Billing Account Number*.",
          "type": "string"
        },
        "serviceStartDate": {
          "type": "string",
          "description": "The invoice service start date."
        },
        "subtotalAmountMicros": {
          "type": "string",
          "description": "The pre-tax subtotal amount, in micros of the invoice's currency.",
          "format": "int64"
        },
        "pdfUrl": {
          "description": "The URL to download a PDF copy of the invoice. Note that this URL is user specific and requires a valid OAuth 2.0 access token to access. The access token must be provided in an *Authorization: Bearer* HTTP header. The URL will only be usable for 7 days from when the api is called.",
          "type": "string"
        },
        "serviceEndDate": {
          "description": "The invoice service end date.",
          "type": "string"
        },
        "totalAmountMicros": {
          "type": "string",
          "format": "int64",
          "description": "The invoice total amount, in micros of the invoice's currency."
        },
        "replacedInvoiceIds": {
          "description": "The originally issued invoice(s) that is being cancelled by this invoice, if applicable. May appear on invoice PDF as *Replaced invoice numbers*. Note: There may be multiple replaced invoices due to consolidation of multiple invoices into a single invoice.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dueDate": {
          "type": "string",
          "description": "The invoice due date."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#invoice\"."
        },
        "id": {
          "type": "string",
          "description": "ID of this invoice."
        },
        "correctedInvoiceId": {
          "type": "string",
          "description": "The originally issued invoice that is being adjusted by this invoice, if applicable. May appear on invoice PDF as *Reference invoice number*."
        },
        "campaign_summaries": {
          "items": {
            "$ref": "CampaignSummary"
          },
          "description": "The list of summarized campaign information associated with this invoice.",
          "type": "array"
        }
      },
      "id": "Invoice",
      "description": "Contains information about a single invoice"
    },
    "BillingAssignmentsListResponse": {
      "description": "Billing assignment List Response",
      "properties": {
        "billingAssignments": {
          "items": {
            "$ref": "BillingAssignment"
          },
          "description": "Billing assignments collection.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingAssignmentsListResponse\"."
        }
      },
      "type": "object",
      "id": "BillingAssignmentsListResponse"
    },
    "SiteVideoSettings": {
      "id": "SiteVideoSettings",
      "description": "Video Settings",
      "properties": {
        "publisherSpecificationId": {
          "type": "string",
          "format": "int64",
          "description": "Publisher specification ID used to identify site-associated publisher requirements and automatically populate transcode settings. If publisher specification ID is specified, it will take precedence over transcode settings."
        },
        "skippableSettings": {
          "$ref": "SiteSkippableSetting",
          "description": "Settings for the skippability of video creatives served to this site. This will act as default for new placements created under this site."
        },
        "obaSettings": {
          "$ref": "ObaIcon",
          "description": "Settings for the OBA icon of video creatives served to this site. This will act as default for new placements created under this site."
        },
        "transcodeSettings": {
          "$ref": "SiteTranscodeSetting",
          "description": "Settings for the transcodes of video creatives served to this site. This will act as default for new placements created under this site."
        },
        "orientation": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "ANY",
            "LANDSCAPE",
            "PORTRAIT"
          ],
          "description": "Orientation of a site template used for video. This will act as default for new placements created under this site.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#siteVideoSettings\"."
        },
        "companionSettings": {
          "description": "Settings for the companion creatives of video creatives served to this site.",
          "$ref": "SiteCompanionSetting"
        },
        "obaEnabled": {
          "type": "boolean",
          "description": "Whether OBA icons are enabled for this placement."
        }
      },
      "type": "object"
    },
    "ChannelGroupingRule": {
      "description": "Represents a DfaReporting channel grouping rule.",
      "id": "ChannelGroupingRule",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#channelGroupingRule."
        },
        "disjunctiveMatchStatements": {
          "description": "The disjunctive match statements contained within this rule.",
          "type": "array",
          "items": {
            "$ref": "DisjunctiveMatchStatement"
          }
        },
        "name": {
          "description": "Rule name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SizesListResponse": {
      "type": "object",
      "description": "Size List Response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sizesListResponse\"."
        },
        "sizes": {
          "description": "Size collection.",
          "type": "array",
          "items": {
            "$ref": "Size"
          }
        }
      },
      "id": "SizesListResponse"
    },
    "MobileCarrier": {
      "id": "MobileCarrier",
      "description": "Contains information about a mobile carrier that can be targeted by ads.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this mobile carrier."
        },
        "countryDartId": {
          "type": "string",
          "description": "DART ID of the country to which this mobile carrier belongs.",
          "format": "int64"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarrier\".",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code of the country to which this mobile carrier belongs.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this mobile carrier.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ContentCategory": {
      "id": "ContentCategory",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "int64",
          "description": "Account ID of this content category. This is a read-only field that can be left blank."
        },
        "id": {
          "type": "string",
          "description": "ID of this content category. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategory\"."
        },
        "name": {
          "description": "Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfflineUserAddressInfo": {
      "id": "OfflineUserAddressInfo",
      "properties": {
        "hashedStreetAddress": {
          "description": "The street address of the user hashed using SHA-256 hash function after normalization (lower case only).",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "State code of the address."
        },
        "hashedFirstName": {
          "type": "string",
          "description": "First name of the user, which is hashed as SHA-256 after normalized (Lowercase all characters; Remove any extra spaces before, after, and in between)."
        },
        "city": {
          "description": "City of the address.",
          "type": "string"
        },
        "hashedLastName": {
          "type": "string",
          "description": "Last name of the user, which is hashed as SHA-256 after normalized (lower case only and no punctuation)."
        },
        "countryCode": {
          "type": "string",
          "description": "2-letter country code in ISO-3166-1 alpha-2 of the user's address."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code of the user's address."
        }
      },
      "type": "object",
      "description": "Identify a user by name and address."
    },
    "BillingRate": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "description": "Start date of this billing rate."
        },
        "currencyCode": {
          "description": "Billing currency code in ISO 4217 format.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this billing rate. This must be less than 256 characters long."
        },
        "type": {
          "type": "string",
          "description": "Type of this billing rate.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "AD_SERVING",
            "CLICKS",
            "MINIMUM_SERVICE",
            "PATH_TO_CONVERSION",
            "RICH_MEDIA_INPAGE",
            "RICH_MEDIA_EXPANDING",
            "RICH_MEDIA_FLOATING",
            "RICH_MEDIA_VIDEO",
            "RICH_MEDIA_TEASER",
            "RICH_MEDIA_VPAID",
            "INSTREAM_VIDEO",
            "PIXEL",
            "TRACKING",
            "TRAFFICKING_FEATURE",
            "CUSTOM_REPORTS",
            "EXPOSURE_TO_CONVERSION",
            "DATA_TRANSFER",
            "DATA_TRANSFER_SETUP",
            "STARTUP",
            "STATEMENT_OF_WORK",
            "PROVIDED_LIST",
            "PROVIDED_LIST_SETUP",
            "ENHANCED_FORMATS",
            "TRACKING_AD_IMPRESSIONS",
            "TRACKING_AD_CLICKS",
            "NIELSEN_DIGITAL_AD_RATINGS_FEE",
            "INSTREAM_VIDEO_REDIRECT",
            "INSTREAM_VIDEO_VPAID",
            "DISPLAY_AD_SERVING",
            "VIDEO_AD_SERVING",
            "AUDIO_AD_SERVING",
            "ADVANCED_DISPLAY_AD_SERVING"
          ]
        },
        "endDate": {
          "type": "string",
          "description": "End date of this billing rate."
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of this billing rate."
        },
        "unitOfMeasure": {
          "description": "Unit of measure for this billing rate.",
          "enum": [
            "CPM",
            "CPC",
            "EA",
            "P2C"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "tieredRates": {
          "items": {
            "$ref": "BillingRateTieredRate"
          },
          "type": "array",
          "description": "Tiered rate of this billing rate. This cannot co-exist with flat rate."
        },
        "rateInMicros": {
          "format": "int64",
          "description": "Flat rate in micros of this billing rate. This cannot co-exist with tiered rate.",
          "type": "string"
        }
      },
      "id": "BillingRate"
    },
    "InventoryItem": {
      "type": "object",
      "id": "InventoryItem",
      "description": "Represents a buy from the Planning inventory store.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Type of inventory item.",
          "enum": [
            "PLANNING_PLACEMENT_TYPE_REGULAR",
            "PLANNING_PLACEMENT_TYPE_CREDIT"
          ],
          "type": "string"
        },
        "subaccountId": {
          "type": "string",
          "format": "int64",
          "description": "Subaccount ID of this inventory item."
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Advertiser ID of this inventory item."
        },
        "projectId": {
          "description": "Project ID of this inventory item.",
          "type": "string",
          "format": "int64"
        },
        "negotiationChannelId": {
          "type": "string",
          "description": "Negotiation channel ID of this inventory item.",
          "format": "int64"
        },
        "inPlan": {
          "description": "Whether this inventory item is in plan.",
          "type": "boolean"
        },
        "contentCategoryId": {
          "description": "Content category ID of this inventory item.",
          "format": "int64",
          "type": "string"
        },
        "pricing": {
          "$ref": "Pricing",
          "description": "Pricing of this inventory item."
        },
        "accountId": {
          "description": "Account ID of this inventory item.",
          "type": "string",
          "format": "int64"
        },
        "adSlots": {
          "type": "array",
          "description": "Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.",
          "items": {
            "$ref": "AdSlot"
          }
        },
        "estimatedConversionRate": {
          "description": "Estimated conversion rate of this inventory item.",
          "format": "int64",
          "type": "string"
        },
        "orderId": {
          "type": "string",
          "format": "int64",
          "description": "Order ID of this inventory item."
        },
        "estimatedClickThroughRate": {
          "type": "string",
          "description": "Estimated click-through rate of this inventory item.",
          "format": "int64"
        },
        "lastModifiedInfo": {
          "description": "Information about the most recent modification of this inventory item.",
          "$ref": "LastModifiedInfo"
        },
        "siteId": {
          "type": "string",
          "description": "ID of the site this inventory item is associated with.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots."
        },
        "rfpId": {
          "format": "int64",
          "description": "RFP ID of this inventory item.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItem\"."
        },
        "placementStrategyId": {
          "format": "int64",
          "description": "Placement strategy ID of this inventory item.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID of this inventory item.",
          "format": "int64"
        }
      }
    },
    "Dimension": {
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#dimension.",
          "type": "string"
        },
        "name": {
          "description": "The dimension name, e.g. advertiser",
          "type": "string"
        }
      },
      "description": "Represents a dimension.",
      "id": "Dimension",
      "type": "object"
    },
    "CreativeFieldAssignment": {
      "properties": {
        "creativeFieldId": {
          "format": "int64",
          "description": "ID of the creative field.",
          "type": "string"
        },
        "creativeFieldValueId": {
          "description": "ID of the creative field value.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "CreativeFieldAssignment",
      "type": "object",
      "description": "Creative Field Assignment."
    },
    "AdvertisersListResponse": {
      "id": "AdvertisersListResponse",
      "type": "object",
      "properties": {
        "advertisers": {
          "description": "Advertiser collection.",
          "items": {
            "$ref": "Advertiser"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertisersListResponse\".",
          "type": "string"
        }
      },
      "description": "Advertiser List Response"
    },
    "UserDefinedVariableConfiguration": {
      "type": "object",
      "properties": {
        "dataType": {
          "enum": [
            "STRING",
            "NUMBER"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Data type for the variable. This is a required field.",
          "type": "string"
        },
        "reportName": {
          "description": "User-friendly name for the variable which will appear in reports. This is a required field, must be less than 64 characters long, and cannot contain the following characters: \"\"\u003c\u003e\".",
          "type": "string"
        },
        "variableType": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Variable name in the tag. This is a required field.",
          "enum": [
            "U1",
            "U2",
            "U3",
            "U4",
            "U5",
            "U6",
            "U7",
            "U8",
            "U9",
            "U10",
            "U11",
            "U12",
            "U13",
            "U14",
            "U15",
            "U16",
            "U17",
            "U18",
            "U19",
            "U20",
            "U21",
            "U22",
            "U23",
            "U24",
            "U25",
            "U26",
            "U27",
            "U28",
            "U29",
            "U30",
            "U31",
            "U32",
            "U33",
            "U34",
            "U35",
            "U36",
            "U37",
            "U38",
            "U39",
            "U40",
            "U41",
            "U42",
            "U43",
            "U44",
            "U45",
            "U46",
            "U47",
            "U48",
            "U49",
            "U50",
            "U51",
            "U52",
            "U53",
            "U54",
            "U55",
            "U56",
            "U57",
            "U58",
            "U59",
            "U60",
            "U61",
            "U62",
            "U63",
            "U64",
            "U65",
            "U66",
            "U67",
            "U68",
            "U69",
            "U70",
            "U71",
            "U72",
            "U73",
            "U74",
            "U75",
            "U76",
            "U77",
            "U78",
            "U79",
            "U80",
            "U81",
            "U82",
            "U83",
            "U84",
            "U85",
            "U86",
            "U87",
            "U88",
            "U89",
            "U90",
            "U91",
            "U92",
            "U93",
            "U94",
            "U95",
            "U96",
            "U97",
            "U98",
            "U99",
            "U100"
          ],
          "type": "string"
        }
      },
      "description": "User Defined Variable configuration.",
      "id": "UserDefinedVariableConfiguration"
    },
    "UserProfile": {
      "description": "A UserProfile resource lets you list all DFA user profiles that are associated with a Google user account. The profile_id needs to be specified in other API requests. ",
      "id": "UserProfile",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userProfile\"."
        },
        "subAccountId": {
          "type": "string",
          "description": "The sub account ID this profile belongs to if applicable.",
          "format": "int64"
        },
        "userName": {
          "type": "string",
          "description": "The user name."
        },
        "accountId": {
          "type": "string",
          "description": "The account ID to which this profile belongs.",
          "format": "int64"
        },
        "profileId": {
          "type": "string",
          "format": "int64",
          "description": "The unique ID of the user profile."
        },
        "accountName": {
          "description": "The account name this profile belongs to.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "subAccountName": {
          "description": "The sub account name this profile belongs to if applicable.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountPermission": {
      "description": "AccountPermissions contains information about a particular account permission. Some features of Campaign Manager require an account permission to be present in the account.",
      "id": "AccountPermission",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermission\".",
          "type": "string"
        },
        "level": {
          "type": "string",
          "description": "Administrative level required to enable this account permission.",
          "enum": [
            "USER",
            "ADMINISTRATOR"
          ],
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "permissionGroupId": {
          "format": "int64",
          "type": "string",
          "description": "Permission group of this account permission."
        },
        "accountProfiles": {
          "type": "array",
          "items": {
            "enum": [
              "ACCOUNT_PROFILE_BASIC",
              "ACCOUNT_PROFILE_STANDARD"
            ],
            "type": "string",
            "enumDescriptions": [
              "Basic profile has fewer features and lower CPM.",
              "Standard profile as a higher CPM and all the features."
            ]
          },
          "description": "Account profiles associated with this account permission. Possible values are: - \"ACCOUNT_PROFILE_BASIC\" - \"ACCOUNT_PROFILE_STANDARD\" "
        },
        "id": {
          "description": "ID of this account permission.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this account permission."
        }
      },
      "type": "object"
    },
    "DimensionFilter": {
      "id": "DimensionFilter",
      "description": "Represents a dimension filter.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the dimension to filter."
        },
        "dimensionName": {
          "type": "string",
          "description": "The name of the dimension to filter."
        },
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#dimensionFilter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPopulationTerm": {
      "id": "ListPopulationTerm",
      "description": "Remarketing List Population Rule Term.",
      "properties": {
        "variableName": {
          "description": "Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
          "type": "string"
        },
        "variableFriendlyName": {
          "type": "string",
          "description": "Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM."
        },
        "negation": {
          "type": "boolean",
          "description": "Whether to negate the comparison result of this term during rule evaluation. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM."
        },
        "contains": {
          "type": "boolean",
          "description": "Will be true if the term should check if the user is in the list and false if the term should check if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by default."
        },
        "remarketingListId": {
          "description": "ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.",
          "type": "string",
          "format": "int64"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "CUSTOM_VARIABLE_TERM",
            "LIST_MEMBERSHIP_TERM",
            "REFERRER_TERM"
          ],
          "description": "List population term type determines the applicable fields in this object. If left unset or set to CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable. If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM then operator, value, and negation are applicable.",
          "type": "string"
        },
        "operator": {
          "description": "Comparison operator of this term. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
          "type": "string",
          "enum": [
            "NUM_EQUALS",
            "NUM_LESS_THAN",
            "NUM_LESS_THAN_EQUAL",
            "NUM_GREATER_THAN",
            "NUM_GREATER_THAN_EQUAL",
            "STRING_EQUALS",
            "STRING_CONTAINS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "value": {
          "description": "Literal to compare the variable to. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PlacementGroup": {
      "type": "object",
      "id": "PlacementGroup",
      "description": "Contains properties of a package or roadblock.",
      "properties": {
        "primaryPlacementIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the primary placement. This is a read-only, auto-generated field."
        },
        "campaignIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field."
        },
        "placementStrategyId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the placement strategy assigned to this placement group."
        },
        "siteId": {
          "format": "int64",
          "description": "Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this placement group. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "siteIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the site. This is a read-only, auto-generated field."
        },
        "campaignId": {
          "type": "string",
          "description": "Campaign ID of this placement group. This field is required on insertion.",
          "format": "int64"
        },
        "placementGroupType": {
          "type": "string",
          "description": "Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.",
          "enumDescriptions": [
            "A simple group of site-placements (tags). Basically acts as a single pricing point for a group of tags.",
            "A group of site-placements (tags) that not only acts as a single pricing point but also assumes that all the tags in it will be served at the same time. This kind of group requires one of its assigned site-placements to be marked as primary for reporting purposes."
          ],
          "enum": [
            "PLACEMENT_PACKAGE",
            "PLACEMENT_ROADBLOCK"
          ]
        },
        "directorySiteId": {
          "type": "string",
          "description": "Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",
          "format": "int64"
        },
        "createInfo": {
          "$ref": "LastModifiedInfo",
          "description": "Information about the creation of this placement group. This is a read-only field."
        },
        "subaccountId": {
          "description": "Subaccount ID of this placement group. This is a read-only field that can be left blank.",
          "type": "string",
          "format": "int64"
        },
        "contentCategoryId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the content category assigned to this placement group."
        },
        "accountId": {
          "description": "Account ID of this placement group. This is a read-only field that can be left blank.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroup\".",
          "type": "string"
        },
        "id": {
          "description": "ID of this placement group. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "childPlacementIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field."
        },
        "externalId": {
          "description": "External ID for this placement.",
          "type": "string"
        },
        "activeStatus": {
          "description": "Whether this placement group is active, inactive, archived or permanently archived.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PLACEMENT_STATUS_UNKNOWN",
            "PLACEMENT_STATUS_ACTIVE",
            "PLACEMENT_STATUS_INACTIVE",
            "PLACEMENT_STATUS_ARCHIVED",
            "PLACEMENT_STATUS_PERMANENTLY_ARCHIVED"
          ]
        },
        "directorySiteIdDimensionValue": {
          "description": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "lastModifiedInfo": {
          "description": "Information about the most recent modification of this placement group. This is a read-only field.",
          "$ref": "LastModifiedInfo"
        },
        "pricingSchedule": {
          "$ref": "PricingSchedule",
          "description": "Pricing schedule of this placement group. This field is required on insertion."
        },
        "comment": {
          "description": "Comments for this placement group.",
          "type": "string"
        },
        "primaryPlacementId": {
          "format": "int64",
          "description": "ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this placement group. This is a required field and must be less than 256 characters long."
        },
        "advertiserId": {
          "description": "Advertiser ID of this placement group. This is a required field on insertion.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "CreativeRotation": {
      "id": "CreativeRotation",
      "type": "object",
      "properties": {
        "creativeAssignments": {
          "items": {
            "$ref": "CreativeAssignment"
          },
          "type": "array",
          "description": "Creative assignments in this creative rotation."
        },
        "type": {
          "enum": [
            "CREATIVE_ROTATION_TYPE_SEQUENTIAL",
            "CREATIVE_ROTATION_TYPE_RANDOM"
          ],
          "enumDescriptions": [
            "The weights of each creative in the rotation should be sequential starting at 1. The user may adjust the order.",
            "The weights are calculated according to the ad's CreativeRoationWeightStrategy."
          ],
          "type": "string",
          "description": "Type of creative rotation. Can be used to specify whether to use sequential or random rotation."
        },
        "weightCalculationStrategy": {
          "description": "Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.",
          "type": "string",
          "enumDescriptions": [
            "The creative weights should all be equal to 1. This is the default value for all ads with a rotation type of Random.",
            "The creative weights can be any user provided positive integer.",
            "The weights will be automatically calculated giving preference to the creative that has the highest CTR. The CTR for campaigns that are optimized for clicks = clicks/impressions. The CTR for campaigns that are optimized for view-through or click through is sum(activities + floodlight weight)/impressions.",
            "The creative weights will be automatically calculated using a formula that could not possibly be explained in these comments. The value will be within some predetermined range (probably 0 - 1,000,000)."
          ],
          "enum": [
            "WEIGHT_STRATEGY_EQUAL",
            "WEIGHT_STRATEGY_CUSTOM",
            "WEIGHT_STRATEGY_HIGHEST_CTR",
            "WEIGHT_STRATEGY_OPTIMIZED"
          ]
        },
        "creativeOptimizationConfigurationId": {
          "description": "Creative optimization configuration that is used by this ad. It should refer to one of the existing optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default optimization configuration will be used for this ad.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Creative Rotation."
    },
    "UserProfileList": {
      "description": "Represents the list of user profiles.",
      "id": "UserProfileList",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userProfileList\".",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "UserProfile"
          },
          "description": "The user profiles returned in this response.",
          "type": "array"
        }
      }
    },
    "CreativeOptimizationConfiguration": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this creative optimization config. This is a required field and must be less than 129 characters long."
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns."
        },
        "optimizationActivitys": {
          "items": {
            "$ref": "OptimizationActivity"
          },
          "type": "array",
          "description": "List of optimization activities associated with this configuration."
        },
        "optimizationModel": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "CLICK",
            "POST_CLICK",
            "POST_IMPRESSION",
            "POST_CLICK_AND_IMPRESSION",
            "VIDEO_COMPLETION"
          ],
          "type": "string",
          "description": "Optimization model for this configuration."
        }
      },
      "description": "Creative optimization settings.",
      "type": "object",
      "id": "CreativeOptimizationConfiguration"
    },
    "UserRolePermission": {
      "id": "UserRolePermission",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermission\"."
        },
        "availability": {
          "description": "Levels of availability for a user role permission.",
          "type": "string",
          "enumDescriptions": [
            "Not available by default.",
            "Available by default to accounts only.",
            "Available by default to both accounts and subaccounts.",
            "Always available to accounts.",
            "Always available to both accounts and subaccounts.",
            "Available for user profile permissions only."
          ],
          "enum": [
            "NOT_AVAILABLE_BY_DEFAULT",
            "ACCOUNT_BY_DEFAULT",
            "SUBACCOUNT_AND_ACCOUNT_BY_DEFAULT",
            "ACCOUNT_ALWAYS",
            "SUBACCOUNT_AND_ACCOUNT_ALWAYS",
            "USER_PROFILE_ONLY"
          ]
        },
        "id": {
          "description": "ID of this user role permission.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "Name of this user role permission.",
          "type": "string"
        },
        "permissionGroupId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the permission group that this user role permission belongs to."
        }
      },
      "description": "Contains properties of a user role permission."
    },
    "ObaIcon": {
      "id": "ObaIcon",
      "description": "Online Behavioral Advertiser icon.",
      "properties": {
        "size": {
          "description": "OBA icon size.",
          "$ref": "Size"
        },
        "program": {
          "description": "Identifies the industry initiative that the icon supports. For example, AdChoices.",
          "type": "string"
        },
        "iconViewTrackingUrl": {
          "type": "string",
          "description": "URL to track view when an OBA icon is clicked."
        },
        "resourceUrl": {
          "description": "OBA icon resource URL. Campaign Manager only supports image and JavaScript icons. Learn more",
          "type": "string"
        },
        "xPosition": {
          "type": "string",
          "description": "OBA icon x coordinate position. Accepted values are left or right."
        },
        "iconClickThroughUrl": {
          "type": "string",
          "description": "URL to redirect to when an OBA icon is clicked."
        },
        "yPosition": {
          "type": "string",
          "description": "OBA icon y coordinate position. Accepted values are top or bottom."
        },
        "iconClickTrackingUrl": {
          "description": "URL to track click when an OBA icon is clicked.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClickTag": {
      "id": "ClickTag",
      "properties": {
        "eventName": {
          "type": "string",
          "description": "Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE."
        },
        "name": {
          "description": "Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match the value of the creative asset's creativeAssetId.name field.",
          "type": "string"
        },
        "clickThroughUrl": {
          "$ref": "CreativeClickThroughUrl",
          "description": "Parameter value for the specified click tag. This field contains a click-through url."
        }
      },
      "description": "Creative Click Tag.",
      "type": "object"
    },
    "Pricing": {
      "id": "Pricing",
      "properties": {
        "pricingType": {
          "description": "Pricing type of this inventory item.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PLANNING_PLACEMENT_PRICING_TYPE_IMPRESSIONS",
            "PLANNING_PLACEMENT_PRICING_TYPE_CPM",
            "PLANNING_PLACEMENT_PRICING_TYPE_CLICKS",
            "PLANNING_PLACEMENT_PRICING_TYPE_CPC",
            "PLANNING_PLACEMENT_PRICING_TYPE_CPA",
            "PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_IMPRESSIONS",
            "PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_CLICKS",
            "PLANNING_PLACEMENT_PRICING_TYPE_CPM_ACTIVEVIEW"
          ]
        },
        "groupType": {
          "enumDescriptions": [
            "A placement package represents \"package pricing\": Pricing and flight information is defined on the package, not on its child placements. The placements in a package do not need to be on the same page.",
            "A roadblock represents a set of placements that are all the same page. One of the child placements is designated as the \"primary\" placement for reporting purposes."
          ],
          "type": "string",
          "description": "Group type of this inventory item if it represents a placement group. Is null otherwise. There are two type of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items that acts as a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group of inventory items that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned inventory items to be marked as primary.",
          "enum": [
            "PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE",
            "PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK"
          ]
        },
        "flights": {
          "type": "array",
          "description": "Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item pricing information for a specific period of time.",
          "items": {
            "$ref": "Flight"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "capCostType": {
          "description": "Cap cost type of this inventory item.",
          "enum": [
            "PLANNING_PLACEMENT_CAP_COST_TYPE_NONE",
            "PLANNING_PLACEMENT_CAP_COST_TYPE_MONTHLY",
            "PLANNING_PLACEMENT_CAP_COST_TYPE_CUMULATIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      },
      "type": "object"
    },
    "CampaignCreativeAssociation": {
      "description": "Identifies a creative which has been associated with a given campaign.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociation\"."
        },
        "creativeId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the creative associated with the campaign. This is a required field."
        }
      },
      "type": "object",
      "id": "CampaignCreativeAssociation"
    },
    "FsCommand": {
      "type": "object",
      "properties": {
        "positionOption": {
          "type": "string",
          "enum": [
            "CENTERED",
            "DISTANCE_FROM_TOP_LEFT_CORNER"
          ],
          "description": "Position in the browser where the window will open.",
          "enumDescriptions": [
            "Center of the window Corresponds to \"center\" in UI",
            "user-defined distance from top left-hand corner of the window Corresponds to \"top-left\" in UI"
          ]
        },
        "top": {
          "format": "int32",
          "description": "Distance from the top of the browser. Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.",
          "type": "integer"
        },
        "windowWidth": {
          "description": "Width of the window.",
          "format": "int32",
          "type": "integer"
        },
        "windowHeight": {
          "format": "int32",
          "description": "Height of the window.",
          "type": "integer"
        },
        "left": {
          "format": "int32",
          "type": "integer",
          "description": "Distance from the left of the browser.Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER."
        }
      },
      "id": "FsCommand",
      "description": "FsCommand."
    },
    "CreativesListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativesListResponse\"."
        },
        "creatives": {
          "type": "array",
          "items": {
            "$ref": "Creative"
          },
          "description": "Creative collection."
        }
      },
      "type": "object",
      "id": "CreativesListResponse",
      "description": "Creative List Response"
    },
    "PostalCodesListResponse": {
      "type": "object",
      "description": "Postal Code List Response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCodesListResponse\"."
        },
        "postalCodes": {
          "description": "Postal code collection.",
          "items": {
            "$ref": "PostalCode"
          },
          "type": "array"
        }
      },
      "id": "PostalCodesListResponse"
    },
    "PricingSchedule": {
      "properties": {
        "pricingPeriods": {
          "description": "Pricing periods for this placement.",
          "items": {
            "$ref": "PricingSchedulePricingPeriod"
          },
          "type": "array"
        },
        "testingStartDate": {
          "type": "string",
          "format": "date"
        },
        "flighted": {
          "type": "boolean",
          "description": "Whether this placement is flighted. If true, pricing periods will be computed automatically."
        },
        "floodlightActivityId": {
          "format": "int64",
          "description": "Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.",
          "type": "string"
        },
        "pricingType": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Placement pricing type. This field is required on insertion.",
          "enum": [
            "PRICING_TYPE_CPM",
            "PRICING_TYPE_CPC",
            "PRICING_TYPE_CPA",
            "PRICING_TYPE_FLAT_RATE_IMPRESSIONS",
            "PRICING_TYPE_FLAT_RATE_CLICKS",
            "PRICING_TYPE_CPM_ACTIVEVIEW"
          ],
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "capCostOption": {
          "type": "string",
          "enum": [
            "CAP_COST_NONE",
            "CAP_COST_MONTHLY",
            "CAP_COST_CUMULATIVE"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Placement cap cost option."
        },
        "endDate": {
          "format": "date",
          "type": "string"
        }
      },
      "description": "Pricing Schedule",
      "type": "object",
      "id": "PricingSchedule"
    },
    "LanguageTargeting": {
      "id": "LanguageTargeting",
      "properties": {
        "languages": {
          "type": "array",
          "description": "Languages that this ad targets. For each language only languageId is required. The other fields are populated automatically when the ad is inserted or updated.",
          "items": {
            "$ref": "Language"
          }
        }
      },
      "type": "object",
      "description": "Language Targeting."
    },
    "Recipient": {
      "type": "object",
      "id": "Recipient",
      "description": "Represents a recipient.",
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#recipient.",
          "type": "string"
        },
        "deliveryType": {
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string",
          "description": "The delivery type for the recipient.",
          "enum": [
            "LINK",
            "ATTACHMENT"
          ]
        },
        "email": {
          "description": "The email address of the recipient.",
          "type": "string"
        }
      }
    },
    "ConversionError": {
      "description": "The error code and description for a conversion that failed to insert or update.",
      "type": "object",
      "id": "ConversionError",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionError\"."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "code": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The error code.",
          "enum": [
            "INVALID_ARGUMENT",
            "INTERNAL",
            "PERMISSION_DENIED",
            "NOT_FOUND"
          ],
          "type": "string"
        }
      }
    },
    "PlacementStrategiesListResponse": {
      "type": "object",
      "description": "Placement Strategy List Response",
      "id": "PlacementStrategiesListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "placementStrategies": {
          "type": "array",
          "items": {
            "$ref": "PlacementStrategy"
          },
          "description": "Placement strategy collection."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategiesListResponse\"."
        }
      }
    },
    "ConversionStatus": {
      "description": "The original conversion that was inserted or updated and whether there were any errors.",
      "id": "ConversionStatus",
      "type": "object",
      "properties": {
        "conversion": {
          "$ref": "Conversion",
          "description": "The original conversion that was inserted or updated."
        },
        "errors": {
          "description": "A list of errors related to this conversion.",
          "items": {
            "$ref": "ConversionError"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionStatus\".",
          "type": "string"
        }
      }
    },
    "AccountPermissionGroup": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroup\"."
        },
        "name": {
          "type": "string",
          "description": "Name of this account permission group."
        },
        "id": {
          "description": "ID of this account permission group.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "AccountPermissionGroup",
      "description": "AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a grouping of account permissions.",
      "type": "object"
    },
    "PlacementTag": {
      "description": "Placement Tag",
      "id": "PlacementTag",
      "type": "object",
      "properties": {
        "tagDatas": {
          "type": "array",
          "description": "Tags generated for this placement.",
          "items": {
            "$ref": "TagData"
          }
        },
        "placementId": {
          "type": "string",
          "description": "Placement ID",
          "format": "int64"
        }
      }
    },
    "OperatingSystemVersion": {
      "type": "object",
      "properties": {
        "minorVersion": {
          "description": "Minor version (number after the first dot) of this operating system version.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this operating system version."
        },
        "id": {
          "type": "string",
          "description": "ID of this operating system version.",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\"."
        },
        "majorVersion": {
          "description": "Major version (leftmost number) of this operating system version.",
          "type": "string"
        },
        "operatingSystem": {
          "$ref": "OperatingSystem",
          "description": "Operating system of this operating system version."
        }
      },
      "description": "Contains information about a particular version of an operating system that can be targeted by ads.",
      "id": "OperatingSystemVersion"
    },
    "CompatibleFields": {
      "id": "CompatibleFields",
      "type": "object",
      "properties": {
        "floodlightReportCompatibleFields": {
          "$ref": "FloodlightReportCompatibleFields",
          "description": "Contains items that are compatible to be selected for a report of type \"FLOODLIGHT\"."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#compatibleFields."
        },
        "crossDimensionReachReportCompatibleFields": {
          "description": "Contains items that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",
          "$ref": "CrossDimensionReachReportCompatibleFields"
        },
        "pathAttributionReportCompatibleFields": {
          "$ref": "PathReportCompatibleFields",
          "description": "Contains items that are compatible to be selected for a report of type \"PATH_ATTRIBUTION\"."
        },
        "reachReportCompatibleFields": {
          "description": "Contains items that are compatible to be selected for a report of type \"REACH\".",
          "$ref": "ReachReportCompatibleFields"
        },
        "pathReportCompatibleFields": {
          "description": "Contains items that are compatible to be selected for a report of type \"PATH\".",
          "$ref": "PathReportCompatibleFields"
        },
        "pathToConversionReportCompatibleFields": {
          "$ref": "PathToConversionReportCompatibleFields",
          "description": "Contains items that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\"."
        },
        "reportCompatibleFields": {
          "$ref": "ReportCompatibleFields",
          "description": "Contains items that are compatible to be selected for a report of type \"STANDARD\"."
        }
      },
      "description": "Represents a response to the queryCompatibleFields method."
    },
    "PlatformTypesListResponse": {
      "description": "Platform Type List Response",
      "type": "object",
      "id": "PlatformTypesListResponse",
      "properties": {
        "platformTypes": {
          "items": {
            "$ref": "PlatformType"
          },
          "description": "Platform type collection.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformTypesListResponse\".",
          "type": "string"
        }
      }
    },
    "Flight": {
      "id": "Flight",
      "description": "Flight",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date",
          "type": "string"
        },
        "rateOrCost": {
          "format": "int64",
          "description": "Rate or cost of this flight.",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "type": "string"
        },
        "units": {
          "description": "Units of this flight.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "CreativeField": {
      "type": "object",
      "description": "Contains properties of a creative field.",
      "id": "CreativeField",
      "properties": {
        "subaccountId": {
          "type": "string",
          "format": "int64",
          "description": "Subaccount ID of this creative field. This is a read-only field that can be left blank."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeField\".",
          "type": "string"
        },
        "advertiserId": {
          "format": "int64",
          "description": "Advertiser ID of this creative field. This is a required field on insertion.",
          "type": "string"
        },
        "advertiserIdDimensionValue": {
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "id": {
          "description": "ID of this creative field. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "accountId": {
          "description": "Account ID of this creative field. This is a read-only field that can be left blank.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this creative field. This is a required field and must be less than 256 characters long and unique among creative fields of the same advertiser."
        }
      }
    },
    "DirectorySite": {
      "description": "DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement.",
      "properties": {
        "idDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of this directory site. This is a read-only, auto-generated field."
        },
        "name": {
          "description": "Name of this directory site.",
          "type": "string"
        },
        "inpageTagFormats": {
          "items": {
            "enum": [
              "STANDARD",
              "IFRAME_JAVASCRIPT_INPAGE",
              "INTERNAL_REDIRECT_INPAGE",
              "JAVASCRIPT_INPAGE"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "",
              ""
            ]
          },
          "description": "Tag types for regular placements. Acceptable values are: - \"STANDARD\" - \"IFRAME_JAVASCRIPT_INPAGE\" - \"INTERNAL_REDIRECT_INPAGE\" - \"JAVASCRIPT_INPAGE\" ",
          "type": "array"
        },
        "url": {
          "description": "URL of this directory site.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySite\"."
        },
        "id": {
          "description": "ID of this directory site. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "settings": {
          "$ref": "DirectorySiteSettings",
          "description": "Directory site settings."
        },
        "interstitialTagFormats": {
          "type": "array",
          "items": {
            "enum": [
              "IFRAME_JAVASCRIPT_INTERSTITIAL",
              "INTERNAL_REDIRECT_INTERSTITIAL",
              "JAVASCRIPT_INTERSTITIAL"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "description": "Tag types for interstitial placements. Acceptable values are: - \"IFRAME_JAVASCRIPT_INTERSTITIAL\" - \"INTERNAL_REDIRECT_INTERSTITIAL\" - \"JAVASCRIPT_INTERSTITIAL\" "
        }
      },
      "id": "DirectorySite",
      "type": "object"
    },
    "AccountUserProfilesListResponse": {
      "id": "AccountUserProfilesListResponse",
      "description": "Account User Profile List Response",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "accountUserProfiles": {
          "items": {
            "$ref": "AccountUserProfile"
          },
          "description": "Account user profile collection.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfilesListResponse\"."
        }
      },
      "type": "object"
    },
    "FloodlightActivitiesListResponse": {
      "properties": {
        "floodlightActivities": {
          "description": "Floodlight activity collection.",
          "type": "array",
          "items": {
            "$ref": "FloodlightActivity"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Floodlight Activity List Response",
      "id": "FloodlightActivitiesListResponse"
    },
    "UserRolePermissionGroup": {
      "id": "UserRolePermissionGroup",
      "description": "Represents a grouping of related user role permissions.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this user role permission group."
        },
        "id": {
          "description": "ID of this user role permission.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroup\"."
        }
      }
    },
    "UserRole": {
      "id": "UserRole",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account ID of this user role. This is a read-only field that can be left blank.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRole\"."
        },
        "subaccountId": {
          "description": "Subaccount ID of this user role. This is a read-only field that can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "parentUserRoleId": {
          "description": "ID of the user role that this user role is based on or copied from. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "ID of this user role. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "defaultUserRole": {
          "description": "Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.",
          "type": "boolean"
        },
        "permissions": {
          "description": "List of permissions associated with this user role.",
          "items": {
            "$ref": "UserRolePermission"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Contains properties of auser role, which is used to manage user access."
    },
    "PlacementStrategy": {
      "type": "object",
      "description": "Contains properties of a placement strategy.",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategy\".",
          "type": "string"
        },
        "accountId": {
          "format": "int64",
          "description": "Account ID of this placement strategy.This is a read-only field that can be left blank.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of this placement strategy. This is a required field. It must be less than 256 characters long and unique among placement strategies of the same account."
        },
        "id": {
          "type": "string",
          "description": "ID of this placement strategy. This is a read-only, auto-generated field.",
          "format": "int64"
        }
      },
      "id": "PlacementStrategy"
    },
    "TargetableRemarketingListsListResponse": {
      "properties": {
        "targetableRemarketingLists": {
          "description": "Targetable remarketing list collection.",
          "type": "array",
          "items": {
            "$ref": "TargetableRemarketingList"
          }
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingListsListResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TargetableRemarketingListsListResponse",
      "description": "Targetable remarketing list response"
    },
    "Project": {
      "id": "Project",
      "type": "object",
      "description": "Contains properties of a Planning project.",
      "properties": {
        "audienceGender": {
          "type": "string",
          "description": "Audience gender of this project.",
          "enum": [
            "PLANNING_AUDIENCE_GENDER_MALE",
            "PLANNING_AUDIENCE_GENDER_FEMALE"
          ],
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "ID of this project. This is a read-only, auto-generated field."
        },
        "targetCpmNanos": {
          "description": "CPM that the advertiser is targeting.",
          "type": "string",
          "format": "int64"
        },
        "budget": {
          "format": "int64",
          "type": "string",
          "description": "Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar."
        },
        "targetCpcNanos": {
          "type": "string",
          "format": "int64",
          "description": "CPC that the advertiser is targeting."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\"."
        },
        "audienceAgeGroup": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PLANNING_AUDIENCE_AGE_18_24",
            "PLANNING_AUDIENCE_AGE_25_34",
            "PLANNING_AUDIENCE_AGE_35_44",
            "PLANNING_AUDIENCE_AGE_45_54",
            "PLANNING_AUDIENCE_AGE_55_64",
            "PLANNING_AUDIENCE_AGE_65_OR_MORE",
            "PLANNING_AUDIENCE_AGE_UNKNOWN"
          ],
          "description": "Audience age group of this project."
        },
        "targetClicks": {
          "description": "Number of clicks that the advertiser is targeting.",
          "type": "string",
          "format": "int64"
        },
        "overview": {
          "type": "string",
          "description": "Overview of this project."
        },
        "endDate": {
          "format": "date",
          "type": "string"
        },
        "clientBillingCode": {
          "type": "string",
          "description": "Client billing code of this project."
        },
        "lastModifiedInfo": {
          "description": "Information about the most recent modification of this project.",
          "$ref": "LastModifiedInfo"
        },
        "advertiserId": {
          "format": "int64",
          "description": "Advertiser ID of this project.",
          "type": "string"
        },
        "targetConversions": {
          "type": "string",
          "format": "int64",
          "description": "Number of conversions that the advertiser is targeting."
        },
        "targetImpressions": {
          "format": "int64",
          "description": "Number of impressions that the advertiser is targeting.",
          "type": "string"
        },
        "subaccountId": {
          "type": "string",
          "description": "Subaccount ID of this project.",
          "format": "int64"
        },
        "startDate": {
          "format": "date",
          "type": "string"
        },
        "targetCpaNanos": {
          "type": "string",
          "description": "CPA that the advertiser is targeting.",
          "format": "int64"
        },
        "clientName": {
          "type": "string",
          "description": "Name of the project client."
        },
        "name": {
          "type": "string",
          "description": "Name of this project."
        },
        "targetCpmActiveViewNanos": {
          "description": "vCPM from Active View that the advertiser is targeting.",
          "format": "int64",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "Account ID of this project.",
          "format": "int64"
        }
      }
    },
    "CreativeAssetMetadata": {
      "properties": {
        "assetIdentifier": {
          "$ref": "CreativeAssetId",
          "description": "ID of the creative asset. This is a required field."
        },
        "detectedFeatures": {
          "items": {
            "type": "string",
            "enum": [
              "CSS_FONT_FACE",
              "CSS_BACKGROUND_SIZE",
              "CSS_BORDER_IMAGE",
              "CSS_BORDER_RADIUS",
              "CSS_BOX_SHADOW",
              "CSS_FLEX_BOX",
              "CSS_HSLA",
              "CSS_MULTIPLE_BGS",
              "CSS_OPACITY",
              "CSS_RGBA",
              "CSS_TEXT_SHADOW",
              "CSS_ANIMATIONS",
              "CSS_COLUMNS",
              "CSS_GENERATED_CONTENT",
              "CSS_GRADIENTS",
              "CSS_REFLECTIONS",
              "CSS_TRANSFORMS",
              "CSS_TRANSFORMS3D",
              "CSS_TRANSITIONS",
              "APPLICATION_CACHE",
              "CANVAS",
              "CANVAS_TEXT",
              "DRAG_AND_DROP",
              "HASH_CHANGE",
              "HISTORY",
              "AUDIO",
              "VIDEO",
              "INDEXED_DB",
              "INPUT_ATTR_AUTOCOMPLETE",
              "INPUT_ATTR_AUTOFOCUS",
              "INPUT_ATTR_LIST",
              "INPUT_ATTR_PLACEHOLDER",
              "INPUT_ATTR_MAX",
              "INPUT_ATTR_MIN",
              "INPUT_ATTR_MULTIPLE",
              "INPUT_ATTR_PATTERN",
              "INPUT_ATTR_REQUIRED",
              "INPUT_ATTR_STEP",
              "INPUT_TYPE_SEARCH",
              "INPUT_TYPE_TEL",
              "INPUT_TYPE_URL",
              "INPUT_TYPE_EMAIL",
              "INPUT_TYPE_DATETIME",
              "INPUT_TYPE_DATE",
              "INPUT_TYPE_MONTH",
              "INPUT_TYPE_WEEK",
              "INPUT_TYPE_TIME",
              "INPUT_TYPE_DATETIME_LOCAL",
              "INPUT_TYPE_NUMBER",
              "INPUT_TYPE_RANGE",
              "INPUT_TYPE_COLOR",
              "LOCAL_STORAGE",
              "POST_MESSAGE",
              "SESSION_STORAGE",
              "WEB_SOCKETS",
              "WEB_SQL_DATABASE",
              "WEB_WORKERS",
              "GEO_LOCATION",
              "INLINE_SVG",
              "SMIL",
              "SVG_HREF",
              "SVG_CLIP_PATHS",
              "TOUCH",
              "WEBGL",
              "SVG_FILTERS",
              "SVG_FE_IMAGE"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "POST_MESSAGE always required due to html5 implementation.",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          "type": "array",
          "description": "List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field."
        },
        "id": {
          "description": "Numeric ID of the asset. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "timerCustomEvents": {
          "items": {
            "$ref": "CreativeCustomEvent"
          },
          "description": "List of timer events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset.",
          "type": "array"
        },
        "richMedia": {
          "type": "boolean",
          "description": "True if the uploaded asset is a rich media asset. This is a read-only, auto-generated field."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeAssetMetadata\"."
        },
        "idDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the numeric ID of the asset. This is a read-only, auto-generated field."
        },
        "clickTags": {
          "items": {
            "$ref": "ClickTag"
          },
          "type": "array",
          "description": "List of detected click tags for assets. This is a read-only, auto-generated field. This field is empty for a rich media asset."
        },
        "exitCustomEvents": {
          "description": "List of exit events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset.",
          "type": "array",
          "items": {
            "$ref": "CreativeCustomEvent"
          }
        },
        "counterCustomEvents": {
          "type": "array",
          "items": {
            "$ref": "CreativeCustomEvent"
          },
          "description": "List of counter events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset."
        },
        "warnedValidationRules": {
          "description": "Rules validated during code generation that generated a warning. This is a read-only, auto-generated field. Possible values are: - \"ADMOB_REFERENCED\" - \"ASSET_FORMAT_UNSUPPORTED_DCM\" - \"ASSET_INVALID\" - \"CLICK_TAG_HARD_CODED\" - \"CLICK_TAG_INVALID\" - \"CLICK_TAG_IN_GWD\" - \"CLICK_TAG_MISSING\" - \"CLICK_TAG_MORE_THAN_ONE\" - \"CLICK_TAG_NON_TOP_LEVEL\" - \"COMPONENT_UNSUPPORTED_DCM\" - \"ENABLER_UNSUPPORTED_METHOD_DCM\" - \"EXTERNAL_FILE_REFERENCED\" - \"FILE_DETAIL_EMPTY\" - \"FILE_TYPE_INVALID\" - \"GWD_PROPERTIES_INVALID\" - \"HTML5_FEATURE_UNSUPPORTED\" - \"LINKED_FILE_NOT_FOUND\" - \"MAX_FLASH_VERSION_11\" - \"MRAID_REFERENCED\" - \"NOT_SSL_COMPLIANT\" - \"ORPHANED_ASSET\" - \"PRIMARY_HTML_MISSING\" - \"SVG_INVALID\" - \"ZIP_INVALID\" ",
          "items": {
            "enum": [
              "CLICK_TAG_NON_TOP_LEVEL",
              "CLICK_TAG_MISSING",
              "CLICK_TAG_MORE_THAN_ONE",
              "CLICK_TAG_INVALID",
              "ORPHANED_ASSET",
              "PRIMARY_HTML_MISSING",
              "EXTERNAL_FILE_REFERENCED",
              "MRAID_REFERENCED",
              "ADMOB_REFERENCED",
              "FILE_TYPE_INVALID",
              "ZIP_INVALID",
              "LINKED_FILE_NOT_FOUND",
              "MAX_FLASH_VERSION_11",
              "NOT_SSL_COMPLIANT",
              "FILE_DETAIL_EMPTY",
              "ASSET_INVALID",
              "GWD_PROPERTIES_INVALID",
              "ENABLER_UNSUPPORTED_METHOD_DCM",
              "ASSET_FORMAT_UNSUPPORTED_DCM",
              "COMPONENT_UNSUPPORTED_DCM",
              "HTML5_FEATURE_UNSUPPORTED",
              "CLICK_TAG_IN_GWD",
              "CLICK_TAG_HARD_CODED",
              "SVG_INVALID",
              "CLICK_TAG_IN_RICH_MEDIA",
              "MISSING_ENABLER_REFERENCE"
            ],
            "enumDescriptions": [
              "Click tag initialization detected but not at the top level of the primary html file.",
              "No click tag detected.",
              "More than one click tag detected.",
              "Click tag invalid (failed url validation).",
              "Orphaned asset not referenced.",
              "Primary html file missing.",
              "Reference to a third-party resource. Problematic because the volume of ad serving could bring down unprepared web servers due to high load. e.g. http://www.zibble.net/smiles.gif",
              "Reference to INAPP MRAID feature.",
              "Reference to INAPP ADMOB feature.",
              "Invalid file type referenced.",
              "Invalid zip passed in (could not extract from zip",
              "A relative file was linked to that wasn't included in zip. e.g. images/missing_file.gif",
              "Max flash version at 11.",
              "Whether the asset uses secure urls or not.",
              "File detail empty.",
              "Asset is not valid and could not be processed.",
              "GWD properties are invalid.",
              "Unsupported Enabler methods in DCM.",
              "Asset ad format is unsupported in DCM.",
              "Component is unsupported in DCM.",
              "Html5 feature is unsupported.",
              "Click tag defined in GWD asset. GWD-published creatives should use exit events instead of defining var clickTag. Defined var clickTags are a symptom of an unsupported workflow, and an error should be thrown.",
              "Whether the asset has hard coded click tag url(s).",
              "Whether an SVG block could not be parsed.",
              "Click tag defined in rich media asset. Rich media creatives should use exit events instead of defining var clickTag. Defined var clickTags are a symptom of an unsupported workflow, and an error should be thrown.",
              "Rich media primary asset is missing the Enabler reference."
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "CreativeAssets contains properties of a creative asset file which will be uploaded or has already been uploaded. Refer to the creative sample code for how to upload assets and insert a creative.",
      "id": "CreativeAssetMetadata"
    },
    "FileList": {
      "id": "FileList",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token used to page through files. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#fileList\".",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "File"
          },
          "type": "array",
          "description": "The files returned in this response."
        }
      },
      "type": "object",
      "description": "List of files for a report."
    },
    "CreativeAssetId": {
      "id": "CreativeAssetId",
      "type": "object",
      "description": "Creative Asset ID.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Type of asset to upload. This is a required field. FLASH and IMAGE are no longer supported for new uploads. All image assets should use HTML_IMAGE.",
          "enum": [
            "IMAGE",
            "FLASH",
            "VIDEO",
            "HTML",
            "HTML_IMAGE",
            "AUDIO"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the creative asset. This is a required field while inserting an asset. After insertion, this assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or one of the following: \".-_ \". Spaces are allowed."
        }
      }
    },
    "Country": {
      "description": "Contains information about a country that can be targeted by ads.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#country\".",
          "type": "string"
        },
        "sslEnabled": {
          "type": "boolean",
          "description": "Whether ad serving supports secure servers in this country."
        },
        "countryCode": {
          "description": "Country code.",
          "type": "string"
        },
        "dartId": {
          "description": "DART ID of this country. This is the ID used for targeting and generating reports.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this country."
        }
      },
      "id": "Country"
    },
    "MobileApp": {
      "description": "Contains information about a mobile app. Used as a landing page deep link.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileApp\"."
        },
        "directory": {
          "type": "string",
          "description": "Mobile app directory.",
          "enum": [
            "UNKNOWN",
            "APPLE_APP_STORE",
            "GOOGLE_PLAY_STORE",
            "ROKU_APP_STORE",
            "AMAZON_FIRETV_APP_STORE",
            "PLAYSTATION_APP_STORE",
            "APPLE_TV_APP_STORE",
            "XBOX_APP_STORE",
            "SAMSUNG_TV_APP_STORE",
            "ANDROID_TV_APP_STORE",
            "GENERIC_CTV_APP_STORE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "title": {
          "type": "string",
          "description": "Title of this mobile app."
        },
        "publisherName": {
          "description": "Publisher name.",
          "type": "string"
        },
        "id": {
          "description": "ID of this mobile app.",
          "type": "string"
        }
      },
      "id": "MobileApp"
    },
    "VideoFormatsListResponse": {
      "id": "VideoFormatsListResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormatsListResponse\".",
          "type": "string"
        },
        "videoFormats": {
          "description": "Video format collection.",
          "type": "array",
          "items": {
            "$ref": "VideoFormat"
          }
        }
      },
      "description": "Video Format List Response",
      "type": "object"
    },
    "FloodlightActivityGroup": {
      "id": "FloodlightActivityGroup",
      "properties": {
        "floodlightConfigurationIdDimensionValue": {
          "description": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "floodlightConfigurationId": {
          "description": "Floodlight configuration ID of this floodlight activity group. This is a required field.",
          "format": "int64",
          "type": "string"
        },
        "idDimensionValue": {
          "description": "Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "name": {
          "description": "Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Type of the floodlight activity group. This is a required field that is read-only after insertion.",
          "enum": [
            "COUNTER",
            "SALE"
          ],
          "type": "string"
        },
        "advertiserId": {
          "description": "Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.",
          "type": "string",
          "format": "int64"
        },
        "accountId": {
          "description": "Account ID of this floodlight activity group. This is a read-only field that can be left blank.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".",
          "type": "string"
        },
        "subaccountId": {
          "format": "int64",
          "description": "Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.",
          "type": "string"
        },
        "tagString": {
          "description": "Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of this floodlight activity group. This is a read-only, auto-generated field."
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        }
      },
      "description": "Contains properties of a Floodlight activity group.",
      "type": "object"
    },
    "ListPopulationClause": {
      "type": "object",
      "id": "ListPopulationClause",
      "description": "A group clause made up of list population terms representing constraints joined by ORs.",
      "properties": {
        "terms": {
          "description": "Terms of this list population clause. Each clause is made up of list population terms representing constraints and are joined by ORs.",
          "items": {
            "$ref": "ListPopulationTerm"
          },
          "type": "array"
        }
      }
    },
    "OrderContact": {
      "type": "object",
      "description": "Contact of an order.",
      "properties": {
        "contactInfo": {
          "description": "Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.",
          "type": "string"
        },
        "contactType": {
          "enum": [
            "PLANNING_ORDER_CONTACT_BUYER_CONTACT",
            "PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT",
            "PLANNING_ORDER_CONTACT_SELLER_CONTACT"
          ],
          "description": "Type of this contact.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "signatureUserProfileId": {
          "type": "string",
          "format": "int64",
          "description": "ID of the user profile containing the signature that will be embedded into order documents."
        },
        "contactTitle": {
          "type": "string",
          "description": "Title of this contact."
        },
        "contactName": {
          "type": "string",
          "description": "Name of this contact."
        }
      },
      "id": "OrderContact"
    },
    "LastModifiedInfo": {
      "properties": {
        "time": {
          "format": "int64",
          "type": "string",
          "description": "Timestamp of the last change in milliseconds since epoch."
        }
      },
      "id": "LastModifiedInfo",
      "description": "Modification timestamp.",
      "type": "object"
    },
    "OperatingSystemsListResponse": {
      "description": "Operating System List Response",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemsListResponse\".",
          "type": "string"
        },
        "operatingSystems": {
          "description": "Operating system collection.",
          "type": "array",
          "items": {
            "$ref": "OperatingSystem"
          }
        }
      },
      "type": "object",
      "id": "OperatingSystemsListResponse"
    },
    "AudienceSegment": {
      "properties": {
        "allocation": {
          "type": "integer",
          "description": "Weight allocated to this segment. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group. Acceptable values are 1 to 1000, inclusive.",
          "format": "int32"
        },
        "id": {
          "description": "ID of this audience segment. This is a read-only, auto-generated field.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "Name of this audience segment. This is a required field and must be less than 65 characters long.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AudienceSegment",
      "description": "Audience Segment."
    },
    "AccountPermissionsListResponse": {
      "properties": {
        "accountPermissions": {
          "type": "array",
          "items": {
            "$ref": "AccountPermission"
          },
          "description": "Account permission collection."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionsListResponse\"."
        }
      },
      "id": "AccountPermissionsListResponse",
      "type": "object",
      "description": "Account Permission List Response"
    },
    "SiteContact": {
      "description": "Site Contact",
      "properties": {
        "phone": {
          "description": "Primary phone number of this site contact.",
          "type": "string"
        },
        "contactType": {
          "type": "string",
          "enum": [
            "SALES_PERSON",
            "TRAFFICKER"
          ],
          "description": "Site contact type.",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "lastName": {
          "type": "string",
          "description": "Last name of this site contact."
        },
        "email": {
          "description": "Email address of this site contact. This is a required field.",
          "type": "string"
        },
        "address": {
          "description": "Address of this site contact.",
          "type": "string"
        },
        "firstName": {
          "description": "First name of this site contact.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title or designation of this site contact."
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "ID of this site contact. This is a read-only, auto-generated field."
        }
      },
      "id": "SiteContact",
      "type": "object"
    },
    "FloodlightActivityGroupsListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroupsListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "floodlightActivityGroups": {
          "type": "array",
          "description": "Floodlight activity group collection.",
          "items": {
            "$ref": "FloodlightActivityGroup"
          }
        }
      },
      "id": "FloodlightActivityGroupsListResponse",
      "description": "Floodlight Activity Group List Response",
      "type": "object"
    },
    "PlacementGroupsListResponse": {
      "type": "object",
      "id": "PlacementGroupsListResponse",
      "properties": {
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroupsListResponse\".",
          "type": "string"
        },
        "placementGroups": {
          "type": "array",
          "description": "Placement group collection.",
          "items": {
            "$ref": "PlacementGroup"
          }
        }
      },
      "description": "Placement Group List Response"
    },
    "TargetingTemplatesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplatesListResponse\".",
          "type": "string"
        },
        "targetingTemplates": {
          "type": "array",
          "description": "Targeting template collection.",
          "items": {
            "$ref": "TargetingTemplate"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        }
      },
      "id": "TargetingTemplatesListResponse",
      "description": "Targeting Template List Response"
    },
    "File": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#file\".",
          "type": "string"
        },
        "reportId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the report this file was generated from."
        },
        "dateRange": {
          "$ref": "DateRange",
          "description": "The date range for which the file has report data. The date range will always be the absolute date range for which the report is run."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "int64",
          "description": "The timestamp in milliseconds since epoch when this file was last modified."
        },
        "fileName": {
          "description": "The filename of the file.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PROCESSING",
            "REPORT_AVAILABLE",
            "FAILED",
            "CANCELLED",
            "QUEUED"
          ],
          "description": "The status of the report file."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "format": {
          "enum": [
            "CSV",
            "EXCEL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "The output format of the report. Only available once the file is available."
        },
        "urls": {
          "description": "The URLs where the completed report file can be downloaded.",
          "properties": {
            "apiUrl": {
              "type": "string",
              "description": "The URL for downloading the report data through the API."
            },
            "browserUrl": {
              "type": "string",
              "description": "The URL for downloading the report data through a browser."
            }
          },
          "type": "object"
        },
        "id": {
          "description": "The unique ID of this report file.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Represents a File resource. A file contains the metadata for a report run. It shows the status of the run and holds the URLs to the generated report data if the run is finished and the status is \"REPORT_AVAILABLE\".",
      "id": "File",
      "type": "object"
    },
    "SortedDimension": {
      "id": "SortedDimension",
      "description": "Represents a sorted dimension.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#sortedDimension.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the dimension."
        },
        "sortOrder": {
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "An optional sort order for the dimension column.",
          "enum": [
            "ASCENDING",
            "DESCENDING"
          ]
        }
      }
    },
    "TargetingTemplate": {
      "id": "TargetingTemplate",
      "properties": {
        "geoTargeting": {
          "$ref": "GeoTargeting",
          "description": "Geographical targeting criteria."
        },
        "advertiserId": {
          "format": "int64",
          "type": "string",
          "description": "Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert."
        },
        "keyValueTargetingExpression": {
          "$ref": "KeyValueTargetingExpression",
          "description": "Key-value targeting criteria."
        },
        "languageTargeting": {
          "$ref": "LanguageTargeting",
          "description": "Language targeting criteria."
        },
        "id": {
          "description": "ID of this targeting template. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.",
          "type": "string"
        },
        "subaccountId": {
          "format": "int64",
          "type": "string",
          "description": "Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert."
        },
        "listTargetingExpression": {
          "description": "Remarketing list targeting criteria.",
          "$ref": "ListTargetingExpression"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplate\".",
          "type": "string"
        },
        "dayPartTargeting": {
          "$ref": "DayPartTargeting",
          "description": "Time and day targeting criteria."
        },
        "accountId": {
          "type": "string",
          "description": "Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.",
          "format": "int64"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "technologyTargeting": {
          "description": "Technology platform targeting criteria.",
          "$ref": "TechnologyTargeting"
        }
      },
      "type": "object",
      "description": "Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads."
    },
    "Language": {
      "id": "Language",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#language\".",
          "type": "string"
        },
        "name": {
          "description": "Name of this language.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Language ID of this language. This is the ID used for targeting and generating reports.",
          "format": "int64"
        },
        "languageCode": {
          "type": "string",
          "description": "Format of language code is an ISO 639 two-letter language code optionally followed by an underscore followed by an ISO 3166 code. Examples are \"en\" for English or \"zh_CN\" for Simplified Chinese."
        }
      },
      "type": "object",
      "description": "Contains information about a language that can be targeted by ads."
    },
    "DynamicTargetingKeysListResponse": {
      "id": "DynamicTargetingKeysListResponse",
      "type": "object",
      "properties": {
        "dynamicTargetingKeys": {
          "description": "Dynamic targeting key collection.",
          "type": "array",
          "items": {
            "$ref": "DynamicTargetingKey"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKeysListResponse\"."
        }
      },
      "description": "Dynamic Targeting Key List Response"
    },
    "FloodlightActivityDynamicTag": {
      "type": "object",
      "description": "Dynamic Tag",
      "id": "FloodlightActivityDynamicTag",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of this dynamic tag. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this tag."
        },
        "tag": {
          "type": "string",
          "description": "Tag code."
        }
      }
    },
    "ConversionsBatchUpdateResponse": {
      "type": "object",
      "id": "ConversionsBatchUpdateResponse",
      "description": "Update Conversions Response.",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchUpdateResponse\".",
          "type": "string"
        },
        "hasFailures": {
          "type": "boolean",
          "description": "Indicates that some or all conversions failed to update."
        },
        "status": {
          "description": "The update status of each conversion. Statuses are returned in the same order that conversions are updated.",
          "type": "array",
          "items": {
            "$ref": "ConversionStatus"
          }
        }
      }
    },
    "ConnectionTypesListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionTypesListResponse\"."
        },
        "connectionTypes": {
          "description": "Collection of connection types such as broadband and mobile.",
          "type": "array",
          "items": {
            "$ref": "ConnectionType"
          }
        }
      },
      "id": "ConnectionTypesListResponse",
      "type": "object",
      "description": "Connection Type List Response"
    },
    "UniversalAdId": {
      "id": "UniversalAdId",
      "description": "A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID.",
      "type": "object",
      "properties": {
        "registry": {
          "description": "Registry used for the Ad ID value.",
          "enum": [
            "OTHER",
            "AD_ID_OFFICIAL",
            "CLEARCAST",
            "DCM"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "value": {
          "description": "ID value for this creative. Only alphanumeric characters and the following symbols are valid: \"_/\\-\". Maximum length is 64 characters. Read only when registry is DCM.",
          "type": "string"
        }
      }
    },
    "SiteSettings": {
      "description": "Site Settings",
      "properties": {
        "vpaidAdapterChoiceTemplate": {
          "enumDescriptions": [
            "DEFAULT means Google chooses which adapter, if any, to serve.",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Default VPAID adapter setting for new placements created under this site. This value will be used to populate the placements.vpaidAdapterChoice field, when no value is specified for the new placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to the placement. The publisher's specifications will typically determine this setting. For VPAID creatives, the adapter format will match the VPAID format (HTML5 VPAID creatives use the HTML5 adapter). *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.",
          "enum": [
            "DEFAULT",
            "FLASH",
            "HTML5",
            "BOTH"
          ]
        },
        "tagSetting": {
          "description": "Configuration settings for dynamic and image floodlight tags.",
          "$ref": "TagSetting"
        },
        "activeViewOptOut": {
          "description": "Whether active view creatives are disabled for this site.",
          "type": "boolean"
        },
        "videoActiveViewOptOutTemplate": {
          "type": "boolean",
          "description": "Whether Verification and ActiveView for in-stream video creatives are disabled by default for new placements created under this site. This value will be used to populate the placement.videoActiveViewOptOut field, when no value is specified for the new placement."
        },
        "disableNewCookie": {
          "type": "boolean",
          "description": "Whether new cookies are disabled for this site."
        },
        "adBlockingOptOut": {
          "description": "Whether this site opts out of ad blocking. When true, ad blocking is disabled for all placements under the site, regardless of the individual placement settings. When false, the campaign and placement settings take effect.",
          "type": "boolean"
        }
      },
      "id": "SiteSettings",
      "type": "object"
    },
    "CreativeFieldValue": {
      "description": "Contains properties of a creative field value.",
      "id": "CreativeFieldValue",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValue\".",
          "type": "string"
        },
        "value": {
          "description": "Value of this creative field value. It needs to be less than 256 characters in length and unique per creative field.",
          "type": "string"
        },
        "id": {
          "description": "ID of this creative field value. This is a read-only, auto-generated field.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "AccountsListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountsListResponse\"."
        },
        "nextPageToken": {
          "description": "Pagination token to be used for the next list operation.",
          "type": "string"
        },
        "accounts": {
          "items": {
            "$ref": "Account"
          },
          "type": "array",
          "description": "Account collection."
        }
      },
      "description": "Account List Response",
      "id": "AccountsListResponse",
      "type": "object"
    },
    "EventTag": {
      "properties": {
        "subaccountId": {
          "type": "string",
          "description": "Subaccount ID of this event tag. This is a read-only field that can be left blank.",
          "format": "int64"
        },
        "status": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "type": "string"
        },
        "id": {
          "description": "ID of this event tag. This is a read-only, auto-generated field.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of this event tag. This is a required field and must be less than 256 characters long."
        },
        "type": {
          "enum": [
            "IMPRESSION_IMAGE_EVENT_TAG",
            "IMPRESSION_JAVASCRIPT_EVENT_TAG",
            "CLICK_THROUGH_EVENT_TAG"
          ],
          "type": "string",
          "description": "Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking. This is a required field.",
          "enumDescriptions": [
            "A third-party pixel for impression tracking.",
            "A third-party JavaScript URL for impression tracking.",
            "A third-party URL for click tracking that redirects to the landing page."
          ]
        },
        "campaignId": {
          "description": "Campaign ID of this event tag. This field or the advertiserId field is required on insertion.",
          "format": "int64",
          "type": "string"
        },
        "siteIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a allowlist or blocklist filter.",
          "type": "array"
        },
        "advertiserIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field."
        },
        "url": {
          "description": "Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended to the end of it. This field is required on insertion.",
          "type": "string"
        },
        "urlEscapeLevels": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times the landing page URL should be URL-escaped before being appended to the click-through event tag URL. Only applies to click-through event tags as specified by the event tag type."
        },
        "enabledByDefault": {
          "description": "Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.",
          "type": "boolean"
        },
        "siteFilterType": {
          "description": "Site filter type for this event tag. If no type is specified then the event tag will be applied to all sites.",
          "enum": [
            "ALLOWLIST",
            "BLOCKLIST"
          ],
          "type": "string",
          "enumDescriptions": [
            "The event tag should only ever fire on specified sites.",
            "The event tag should fire on all sites EXCEPT the specified sites."
          ]
        },
        "sslCompliant": {
          "type": "boolean",
          "description": "Whether this tag is SSL-compliant or not. This is a read-only field."
        },
        "advertiserId": {
          "description": "Advertiser ID of this event tag. This field or the campaignId field is required on insertion.",
          "type": "string",
          "format": "int64"
        },
        "accountId": {
          "description": "Account ID of this event tag. This is a read-only field that can be left blank.",
          "type": "string",
          "format": "int64"
        },
        "excludeFromAdxRequests": {
          "type": "boolean",
          "description": "Whether to remove this event tag from ads that are trafficked through Display & Video 360 to Ad Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or more networks, such as the Google Display Network."
        },
        "campaignIdDimensionValue": {
          "description": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
          "$ref": "DimensionValue"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTag\"."
        }
      },
      "description": "Contains properties of an event tag.",
      "type": "object",
      "id": "EventTag"
    },
    "Account": {
      "id": "Account",
      "properties": {
        "teaserSizeLimit": {
          "format": "int64",
          "description": "File size limit in kilobytes of Rich Media teaser creatives. Acceptable values are 1 to 10240, inclusive.",
          "type": "string"
        },
        "currencyId": {
          "format": "int64",
          "description": "ID of currency associated with this account. This is a required field. Acceptable values are: - \"1\" for USD - \"2\" for GBP - \"3\" for ESP - \"4\" for SEK - \"5\" for CAD - \"6\" for JPY - \"7\" for DEM - \"8\" for AUD - \"9\" for FRF - \"10\" for ITL - \"11\" for DKK - \"12\" for NOK - \"13\" for FIM - \"14\" for ZAR - \"15\" for IEP - \"16\" for NLG - \"17\" for EUR - \"18\" for KRW - \"19\" for TWD - \"20\" for SGD - \"21\" for CNY - \"22\" for HKD - \"23\" for NZD - \"24\" for MYR - \"25\" for BRL - \"26\" for PTE - \"28\" for CLP - \"29\" for TRY - \"30\" for ARS - \"31\" for PEN - \"32\" for ILS - \"33\" for CHF - \"34\" for VEF - \"35\" for COP - \"36\" for GTQ - \"37\" for PLN - \"39\" for INR - \"40\" for THB - \"41\" for IDR - \"42\" for CZK - \"43\" for RON - \"44\" for HUF - \"45\" for RUB - \"46\" for AED - \"47\" for BGN - \"48\" for HRK - \"49\" for MXN - \"50\" for NGN - \"51\" for EGP ",
          "type": "string"
        },
        "maximumImageSize": {
          "description": "Maximum image size allowed for this account, in kilobytes. Value must be greater than or equal to 1.",
          "format": "int64",
          "type": "string"
        },
        "shareReportsWithTwitter": {
          "description": "Share Path to Conversion reports with Twitter.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Name of this account. This is a required field, and must be less than 128 characters long and be globally unique."
        },
        "id": {
          "type": "string",
          "description": "ID of this account. This is a read-only, auto-generated field.",
          "format": "int64"
        },
        "defaultCreativeSizeId": {
          "description": "Default placement dimensions for this account.",
          "format": "int64",
          "type": "string"
        },
        "countryId": {
          "format": "int64",
          "type": "string",
          "description": "ID of the country associated with this account."
        },
        "activeViewOptOut": {
          "type": "boolean",
          "description": "Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions."
        },
        "nielsenOcrEnabled": {
          "description": "Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.",
          "type": "boolean"
        },
        "availablePermissionIds": {
          "description": "User role permissions available to the user roles of this account.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "accountPermissionIds": {
          "type": "array",
          "description": "Account permissions assigned to this account.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "description": {
          "description": "Description of this account.",
          "type": "string"
        },
        "activeAdsLimitTier": {
          "enum": [
            "ACTIVE_ADS_TIER_40K",
            "ACTIVE_ADS_TIER_75K",
            "ACTIVE_ADS_TIER_100K",
            "ACTIVE_ADS_TIER_200K",
            "ACTIVE_ADS_TIER_300K",
            "ACTIVE_ADS_TIER_500K",
            "ACTIVE_ADS_TIER_750K",
            "ACTIVE_ADS_TIER_1M"
          ],
          "description": "Maximum number of active ads allowed for this account.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "locale": {
          "description": "Locale of this account. Acceptable values are: - \"cs\" (Czech) - \"de\" (German) - \"en\" (English) - \"en-GB\" (English United Kingdom) - \"es\" (Spanish) - \"fr\" (French) - \"it\" (Italian) - \"ja\" (Japanese) - \"ko\" (Korean) - \"pl\" (Polish) - \"pt-BR\" (Portuguese Brazil) - \"ru\" (Russian) - \"sv\" (Swedish) - \"tr\" (Turkish) - \"zh-CN\" (Chinese Simplified) - \"zh-TW\" (Chinese Traditional) ",
          "type": "string"
        },
        "accountProfile": {
          "enumDescriptions": [
            "Basic profile has fewer features and lower CPM.",
            "Standard profile as a higher CPM and all the features."
          ],
          "description": "Profile for this account. This is a read-only field that can be left blank.",
          "enum": [
            "ACCOUNT_PROFILE_BASIC",
            "ACCOUNT_PROFILE_STANDARD"
          ],
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#account\"."
        },
        "reportsConfiguration": {
          "$ref": "ReportsConfiguration",
          "description": "Reporting configuration of this account."
        },
        "active": {
          "type": "boolean",
          "description": "Whether this account is active."
        }
      },
      "type": "object",
      "description": "Contains properties of a Campaign Manager account."
    },
    "ClickThroughUrl": {
      "type": "object",
      "properties": {
        "computedClickThroughUrl": {
          "description": "Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If defaultLandingPage is enabled then the campaign's default landing page URL is assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then that landing page's URL is assigned to this field. - If neither of the above cases apply, then the customClickThroughUrl is assigned to this field. ",
          "type": "string"
        },
        "defaultLandingPage": {
          "description": "Whether the campaign default landing page is used.",
          "type": "boolean"
        },
        "customClickThroughUrl": {
          "type": "string",
          "description": "Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset."
        },
        "landingPageId": {
          "format": "int64",
          "type": "string",
          "description": "ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false."
        }
      },
      "id": "ClickThroughUrl",
      "description": "Click-through URL"
    },
    "Rule": {
      "type": "object",
      "description": "A rule associates an asset with a targeting template for asset-level targeting. Applicable to INSTREAM_VIDEO creatives.",
      "id": "Rule",
      "properties": {
        "targetingTemplateId": {
          "description": "A targeting template ID. The targeting from the targeting template will be used to determine whether this asset should be served. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "assetId": {
          "type": "string",
          "format": "int64",
          "description": "A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required field."
        },
        "name": {
          "type": "string",
          "description": "A user-friendly name for this rule. This is a required field."
        }
      }
    },
    "FloodlightActivitiesGenerateTagResponse": {
      "id": "FloodlightActivitiesGenerateTagResponse",
      "type": "object",
      "description": "Floodlight Activity GenerateTag Response",
      "properties": {
        "floodlightActivityTag": {
          "description": "Generated tag for this Floodlight activity. For global site tags, this is the event snippet.",
          "type": "string"
        },
        "globalSiteTagGlobalSnippet": {
          "description": "The global snippet section of a global site tag. The global site tag sets new cookies on your domain, which will store a unique identifier for a user or the ad click that brought the user to your site. Learn more.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesGenerateTagResponse\".",
          "type": "string"
        }
      }
    },
    "DimensionValueList": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "The eTag of this response for caching purposes."
        },
        "items": {
          "description": "The dimension values returned in this response.",
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          }
        },
        "nextPageToken": {
          "description": "Continuation token used to page through dimension values. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of list this is, in this case dfareporting#dimensionValueList."
        }
      },
      "id": "DimensionValueList",
      "description": "Represents the list of DimensionValue resources.",
      "type": "object"
    },
    "OperatingSystemVersionsListResponse": {
      "description": "Operating System Version List Response",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersionsListResponse\"."
        },
        "operatingSystemVersions": {
          "description": "Operating system version collection.",
          "items": {
            "$ref": "OperatingSystemVersion"
          },
          "type": "array"
        }
      },
      "id": "OperatingSystemVersionsListResponse"
    },
    "BrowsersListResponse": {
      "id": "BrowsersListResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browsersListResponse\".",
          "type": "string"
        },
        "browsers": {
          "description": "Browser collection.",
          "type": "array",
          "items": {
            "$ref": "Browser"
          }
        }
      },
      "type": "object",
      "description": "Browser List Response"
    },
    "UserIdentifier": {
      "id": "UserIdentifier",
      "properties": {
        "hashedPhoneNumber": {
          "type": "string",
          "description": "Hashed phone number using SHA-256 hash function after normalization (E164 standard)."
        },
        "addressInfo": {
          "description": "Address information.",
          "$ref": "OfflineUserAddressInfo"
        },
        "hashedEmail": {
          "type": "string",
          "description": "Hashed email address using SHA-256 hash function after normalization."
        }
      },
      "description": "User identifying information. Exactly one type of identifier must be specified.",
      "type": "object"
    },
    "CampaignsListResponse": {
      "description": "Campaign List Response",
      "properties": {
        "campaigns": {
          "description": "Campaign collection.",
          "type": "array",
          "items": {
            "$ref": "Campaign"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token to be used for the next list operation."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignsListResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CampaignsListResponse"
    },
    "RegionsListResponse": {
      "properties": {
        "regions": {
          "description": "Region collection.",
          "type": "array",
          "items": {
            "$ref": "Region"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#regionsListResponse\"."
        }
      },
      "type": "object",
      "id": "RegionsListResponse",
      "description": "Region List Response"
    },
    "SiteCompanionSetting": {
      "type": "object",
      "description": "Companion Settings",
      "id": "SiteCompanionSetting",
      "properties": {
        "imageOnly": {
          "type": "boolean",
          "description": "Whether to serve only static images as companions."
        },
        "companionsDisabled": {
          "description": "Whether companions are disabled for this site template.",
          "type": "boolean"
        },
        "enabledSizes": {
          "type": "array",
          "items": {
            "$ref": "Size"
          },
          "description": "Allowlist of companion sizes to be served via this site template. Set this list to null or empty to serve all companion sizes."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#siteCompanionSetting\"."
        }
      }
    },
    "CitiesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#citiesListResponse\".",
          "type": "string"
        },
        "cities": {
          "description": "City collection.",
          "items": {
            "$ref": "City"
          },
          "type": "array"
        }
      },
      "id": "CitiesListResponse",
      "description": "City List Response"
    },
    "ChangeLog": {
      "type": "object",
      "id": "ChangeLog",
      "description": "Describes a change that a user has made to a resource.",
      "properties": {
        "userProfileName": {
          "description": "User profile name of the user who modified the object.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "Action which caused the change."
        },
        "transactionId": {
          "format": "int64",
          "type": "string",
          "description": "Transaction ID of this change log. When a single API call results in many changes, each change will have a separate ID in the change log but will share the same transactionId."
        },
        "subaccountId": {
          "format": "int64",
          "description": "Subaccount ID of the modified object.",
          "type": "string"
        },
        "id": {
          "description": "ID of this change log.",
          "format": "int64",
          "type": "string"
        },
        "objectType": {
          "description": "Object type of the change log.",
          "type": "string"
        },
        "oldValue": {
          "type": "string",
          "description": "Old value of the object field."
        },
        "fieldName": {
          "description": "Field name of the object which changed.",
          "type": "string"
        },
        "newValue": {
          "type": "string",
          "description": "New value of the object field."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLog\".",
          "type": "string"
        },
        "objectId": {
          "description": "ID of the object of this change log. The object could be a campaign, placement, ad, or other type.",
          "type": "string",
          "format": "int64"
        },
        "changeTime": {
          "format": "date-time",
          "type": "string"
        },
        "userProfileId": {
          "description": "ID of the user who modified the object.",
          "format": "int64",
          "type": "string"
        },
        "accountId": {
          "description": "Account ID of the modified object.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "LookbackConfiguration": {
      "type": "object",
      "description": "Lookback configuration settings.",
      "id": "LookbackConfiguration",
      "properties": {
        "clickDuration": {
          "format": "int32",
          "type": "integer",
          "description": "Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter 0, clicks will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used. Acceptable values are 0 to 90, inclusive."
        },
        "postImpressionActivitiesDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0, impressions will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used. Acceptable values are 0 to 90, inclusive."
        }
      }
    },
    "PlacementAssignment": {
      "description": "Placement Assignment.",
      "type": "object",
      "properties": {
        "sslRequired": {
          "description": "Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated when the ad is inserted or updated.",
          "type": "boolean"
        },
        "placementId": {
          "description": "ID of the placement to be assigned. This is a required field.",
          "type": "string",
          "format": "int64"
        },
        "placementIdDimensionValue": {
          "$ref": "DimensionValue",
          "description": "Dimension value for the ID of the placement. This is a read-only, auto-generated field."
        },
        "active": {
          "type": "boolean",
          "description": "Whether this placement assignment is active. When true, the placement will be included in the ad's rotation."
        }
      },
      "id": "PlacementAssignment"
    },
    "PathReportCompatibleFields": {
      "properties": {
        "kind": {
          "description": "The kind of resource this is, in this case dfareporting#pathReportCompatibleFields.",
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",
          "items": {
            "$ref": "Dimension"
          }
        },
        "channelGroupings": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"channelGroupings\" section of the report."
        },
        "pathFilters": {
          "items": {
            "$ref": "Dimension"
          },
          "type": "array",
          "description": "Dimensions which are compatible to be selected in the \"pathFilters\" section of the report."
        },
        "metrics": {
          "type": "array",
          "description": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
          "items": {
            "$ref": "Metric"
          }
        }
      },
      "description": "Represents fields that are compatible to be selected for a report of type \"PATH\".",
      "id": "PathReportCompatibleFields",
      "type": "object"
    },
    "Activities": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of resource this is, in this case dfareporting#activities."
        },
        "metricNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of names of floodlight activity metrics."
        },
        "filters": {
          "items": {
            "$ref": "DimensionValue"
          },
          "type": "array",
          "description": "List of activity filters. The dimension values need to be all either of type \"dfa:activity\" or \"dfa:activityGroup\"."
        }
      },
      "id": "Activities",
      "description": "Represents an activity group.",
      "type": "object"
    },
    "CreativeClickThroughUrl": {
      "id": "CreativeClickThroughUrl",
      "properties": {
        "customClickThroughUrl": {
          "type": "string",
          "description": "Custom click-through URL. Applicable if the landingPageId field is left unset."
        },
        "computedClickThroughUrl": {
          "type": "string",
          "description": "Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If landingPageId is specified then that landing page's URL is assigned to this field. - Otherwise, the customClickThroughUrl is assigned to this field. "
        },
        "landingPageId": {
          "format": "int64",
          "description": "ID of the landing page for the click-through URL.",
          "type": "string"
        }
      },
      "description": "Click-through URL",
      "type": "object"
    }
  },
  "basePath": "/dfareporting/v4/",
  "baseUrl": "https://dfareporting.googleapis.com/dfareporting/v4/",
  "name": "dfareporting",
  "version": "v4",
  "servicePath": "dfareporting/v4/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "revision": "20230726",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Dfareporting",
  "ownerDomain": "google.com"
}

{
  "id": "sqladmin:v1beta4",
  "kind": "discovery#restDescription",
  "name": "sqladmin",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v1beta4",
  "baseUrl": "https://sqladmin.googleapis.com/",
  "ownerDomain": "google.com",
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "batchPath": "batch",
  "rootUrl": "https://sqladmin.googleapis.com/",
  "schemas": {
    "SqlServerUserDetails": {
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "id": "SqlServerUserDetails",
      "type": "object",
      "properties": {
        "serverRoles": {
          "description": "The server roles for this user",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "disabled": {
          "description": "If the user has been disabled",
          "type": "boolean"
        }
      }
    },
    "FlagsListResponse": {
      "properties": {
        "kind": {
          "description": "This is always `sql#flagsList`.",
          "type": "string"
        },
        "items": {
          "description": "List of flags.",
          "type": "array",
          "items": {
            "$ref": "Flag"
          }
        }
      },
      "description": "Flags list response.",
      "id": "FlagsListResponse",
      "type": "object"
    },
    "SyncFlags": {
      "type": "object",
      "id": "SyncFlags",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the flag. This field must be omitted if the flag doesn't take a value."
        },
        "name": {
          "type": "string",
          "description": "The name of the flag."
        }
      },
      "description": "Initial sync flags for certain Cloud SQL APIs. Currently used for the MySQL external server initial dump."
    },
    "OperationError": {
      "type": "object",
      "description": "Database instance operation error.",
      "properties": {
        "kind": {
          "description": "This is always `sql#operationError`.",
          "type": "string"
        },
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "code": {
          "description": "Identifies the specific error that occurred.",
          "type": "string"
        }
      },
      "id": "OperationError"
    },
    "DenyMaintenancePeriod": {
      "id": "DenyMaintenancePeriod",
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        },
        "time": {
          "type": "string",
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00"
        },
        "startDate": {
          "type": "string",
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        }
      },
      "description": "Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied."
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "properties": {
        "warnings": {
          "description": "List of migration warnings.",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#migrationSettingErrorList`."
        },
        "errors": {
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "description": "List of migration violations.",
          "type": "array"
        }
      },
      "description": "Instance verify external sync settings response.",
      "type": "object",
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse"
    },
    "ExportContext": {
      "description": "Database instance export context.",
      "type": "object",
      "id": "ExportContext",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form `gs://bucketName/fileName`. If the file already exists, the request succeeds, but the operation fails. If `fileType` is `SQL` and the filename ends with .gz, the contents are compressed."
        },
        "csvExportOptions": {
          "type": "object",
          "description": "Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only.",
          "properties": {
            "escapeCharacter": {
              "description": "Specifies the character that should appear before a data character that needs to be escaped.",
              "type": "string"
            },
            "fieldsTerminatedBy": {
              "type": "string",
              "description": "Specifies the character that separates columns within each row (line) of the file."
            },
            "quoteCharacter": {
              "type": "string",
              "description": "Specifies the quoting character to be used when a data value is quoted."
            },
            "linesTerminatedBy": {
              "description": "This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.",
              "type": "string"
            },
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          }
        },
        "kind": {
          "description": "This is always `sql#exportContext`.",
          "type": "string"
        },
        "fileType": {
          "type": "string",
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "description": "The file type for the specified uri."
        },
        "sqlExportOptions": {
          "description": "Options for exporting data as SQL statements.",
          "type": "object",
          "properties": {
            "schemaOnly": {
              "type": "boolean",
              "description": "Export only schemas."
            },
            "mysqlExportOptions": {
              "type": "object",
              "description": "Options for exporting from MySQL.",
              "properties": {
                "masterData": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Option to include SQL statement required to set up replication. If set to `1`, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to `2`, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than `1`, --set-gtid-purged is set to OFF."
                }
              }
            },
            "tables": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
            }
          }
        },
        "offload": {
          "description": "Option for export offload.",
          "type": "boolean"
        },
        "databases": {
          "items": {
            "type": "string"
          },
          "description": "Databases to be exported. `MySQL instances:` If `fileType` is `SQL` and no database is specified, all databases are exported, except for the `mysql` system database. If `fileType` is `CSV`, you can specify one database, either by using this property or by using the `csvExportOptions.selectQuery` property, which takes precedence over this property. `PostgreSQL instances:` You must specify one database to be exported. If `fileType` is `CSV`, this database must match the one specified in the `csvExportOptions.selectQuery` property. `SQL Server instances:` You must specify one database to be exported, and the `fileType` must be `BAK`.",
          "type": "array"
        }
      }
    },
    "OnPremisesConfiguration": {
      "id": "OnPremisesConfiguration",
      "description": "On-premises instance configuration.",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "password": {
          "description": "The password for connecting to on-premises instance.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "The username for connecting to on-premises instance."
        },
        "hostPort": {
          "type": "string",
          "description": "The host and port of the on-premises instance in host:port format"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#onPremisesConfiguration`."
        },
        "sourceInstance": {
          "description": "The reference to Cloud SQL instance if the source is Cloud SQL.",
          "$ref": "InstanceReference"
        },
        "dumpFilePath": {
          "description": "The dump file to create the Cloud SQL replica.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseInstance": {
      "id": "DatabaseInstance",
      "description": "A Cloud SQL instance resource.",
      "properties": {
        "secondaryGceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone."
        },
        "state": {
          "type": "string",
          "description": "The current serving state of the Cloud SQL instance.",
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance is running, or has been stopped by owner.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance.",
            "Deprecated"
          ],
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED",
            "ONLINE_MAINTENANCE"
          ]
        },
        "maintenanceVersion": {
          "description": "The current software version on the instance.",
          "type": "string"
        },
        "databaseVersion": {
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database major version is MySQL 8.0 and the minor version is 18.",
            "The database major version is MySQL 8.0 and the minor version is 26.",
            "The database major version is MySQL 8.0 and the minor version is 27.",
            "The database major version is MySQL 8.0 and the minor version is 28.",
            "The database major version is MySQL 8.0 and the minor version is 29.",
            "The database major version is MySQL 8.0 and the minor version is 30.",
            "The database version is PostgreSQL 13.",
            "The database version is PostgreSQL 14.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ],
          "description": "The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.",
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "MYSQL_8_0_18",
            "MYSQL_8_0_26",
            "MYSQL_8_0_27",
            "MYSQL_8_0_28",
            "MYSQL_8_0_29",
            "MYSQL_8_0_30",
            "POSTGRES_13",
            "POSTGRES_14",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ],
          "type": "string"
        },
        "currentDiskSize": {
          "type": "string",
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.",
          "format": "int64"
        },
        "databaseInstalledVersion": {
          "readOnly": true,
          "description": "Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.",
          "type": "string"
        },
        "availableMaintenanceVersions": {
          "description": "List all maintenance versions applicable on the instance",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Disk encryption status specific to an instance."
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as primary in the replication setup.",
          "type": "string"
        },
        "backendType": {
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "description": "The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.",
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "ReplicaConfiguration",
          "description": "Configuration specific to failover replicas and read replicas."
        },
        "satisfiesPzs": {
          "type": "boolean",
          "description": "The status indicating if instance satisfiesPzs. Reserved for future use."
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "type": "array",
          "items": {
            "$ref": "IpMapping"
          }
        },
        "suspensionReason": {
          "type": "array",
          "items": {
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ],
            "type": "string",
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ]
          },
          "description": "If the instance state is SUSPENDED, the reason for the suspension."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "readOnly": true
        },
        "instanceType": {
          "type": "string",
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance that is not replicating from a primary instance.",
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
            "A Cloud SQL instance acting as a read-replica."
          ],
          "description": "The instance type."
        },
        "scheduledMaintenance": {
          "$ref": "SqlScheduledMaintenance",
          "description": "The start time of any upcoming scheduled maintenance for this instance."
        },
        "gceZone": {
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.",
          "type": "string"
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        },
        "rootPassword": {
          "type": "string",
          "description": "Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances."
        },
        "failoverReplica": {
          "type": "object",
          "description": "The name and status of the failover replica.",
          "properties": {
            "name": {
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID.",
              "type": "string"
            },
            "available": {
              "type": "boolean",
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true."
            }
          }
        },
        "connectionName": {
          "type": "string",
          "description": "Connection name of the Cloud SQL instance used in connection strings."
        },
        "etag": {
          "type": "string",
          "description": "This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead."
        },
        "region": {
          "description": "The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.",
          "type": "string"
        },
        "serviceAccountEmailAddress": {
          "type": "string",
          "description": "The service account email address assigned to the instance. \\This property is read-only."
        },
        "outOfDiskReport": {
          "description": "This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job",
          "$ref": "SqlOutOfDiskReport"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "kind": {
          "description": "This is always `sql#instance`.",
          "type": "string"
        },
        "replicaNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The replicas of the instance."
        },
        "onPremisesConfiguration": {
          "$ref": "OnPremisesConfiguration",
          "description": "Configuration specific to on-premises instances."
        },
        "settings": {
          "$ref": "Settings",
          "description": "The user settings."
        },
        "maxDiskSize": {
          "description": "The maximum disk size of the instance in bytes.",
          "format": "int64",
          "type": "string"
        },
        "ipv6Address": {
          "type": "string",
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances."
        },
        "diskEncryptionConfiguration": {
          "description": "Disk encryption configuration specific to an instance.",
          "$ref": "DiskEncryptionConfiguration"
        }
      },
      "type": "object"
    },
    "GenerateEphemeralCertRequest": {
      "type": "object",
      "id": "GenerateEphemeralCertRequest",
      "properties": {
        "readTime": {
          "format": "google-datetime",
          "description": "Optional. Optional snapshot read timestamp to trade freshness for performance.",
          "type": "string"
        },
        "access_token": {
          "type": "string",
          "description": "Optional. Access token to include in the signed certificate."
        },
        "validDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. If set, it will contain the cert valid duration."
        },
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        }
      },
      "description": "Ephemeral certificate creation request."
    },
    "ImportContext": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file."
        },
        "kind": {
          "description": "This is always `sql#importContext`.",
          "type": "string"
        },
        "fileType": {
          "type": "string",
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "description": "The file type for the specified uri. * `SQL`: The file contains SQL statements. * `CSV`: The file contains CSV data. * `BAK`: The file contains backup data for a SQL Server instance."
        },
        "database": {
          "description": "The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.",
          "type": "string"
        },
        "csvImportOptions": {
          "description": "Options for importing data as CSV.",
          "type": "object",
          "properties": {
            "fieldsTerminatedBy": {
              "type": "string",
              "description": "Specifies the character that separates columns within each row (line) of the file."
            },
            "escapeCharacter": {
              "type": "string",
              "description": "Specifies the character that should appear before a data character that needs to be escaped."
            },
            "quoteCharacter": {
              "description": "Specifies the quoting character to be used when a data value is quoted.",
              "type": "string"
            },
            "columns": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
            },
            "linesTerminatedBy": {
              "description": "This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.",
              "type": "string"
            },
            "table": {
              "description": "The table to which CSV data is imported.",
              "type": "string"
            }
          }
        },
        "bakImportOptions": {
          "description": "Import parameters specific to SQL Server .BAK files",
          "properties": {
            "encryptionOptions": {
              "type": "object",
              "properties": {
                "pvkPath": {
                  "type": "string",
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file."
                },
                "pvkPassword": {
                  "description": "Password that encrypts the private key",
                  "type": "string"
                },
                "certPath": {
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                }
              }
            }
          },
          "type": "object"
        },
        "importUser": {
          "type": "string",
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
        }
      },
      "id": "ImportContext",
      "description": "Database instance import context."
    },
    "SslCertDetail": {
      "type": "object",
      "description": "SslCertDetail.",
      "properties": {
        "certPrivateKey": {
          "type": "string",
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security."
        },
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        }
      },
      "id": "SslCertDetail"
    },
    "MySqlSyncConfig": {
      "type": "object",
      "description": "MySQL-specific external server sync settings.",
      "properties": {
        "initialSyncFlags": {
          "type": "array",
          "items": {
            "$ref": "SyncFlags"
          },
          "description": "Flags to use for the initial dump."
        }
      },
      "id": "MySqlSyncConfig"
    },
    "InsightsConfig": {
      "id": "InsightsConfig",
      "description": "Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.",
      "type": "object",
      "properties": {
        "recordClientAddress": {
          "type": "boolean",
          "description": "Whether Query Insights will record client address when enabled."
        },
        "queryStringLength": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database."
        },
        "queryPlansPerMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Number of query execution plans captured by Insights per minute for all queries combined. Default is 5."
        },
        "queryInsightsEnabled": {
          "description": "Whether Query Insights feature is enabled.",
          "type": "boolean"
        },
        "recordApplicationTags": {
          "type": "boolean",
          "description": "Whether Query Insights will record application tags from query when enabled."
        }
      }
    },
    "IpMapping": {
      "description": "Database instance IP Mapping.",
      "properties": {
        "ipAddress": {
          "description": "The IP address assigned.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown IP address type.",
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
          ],
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "description": "The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported."
        },
        "timeToRetire": {
          "description": "The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "IpMapping",
      "type": "object"
    },
    "InstancesFailoverRequest": {
      "type": "object",
      "id": "InstancesFailoverRequest",
      "description": "Instance failover request.",
      "properties": {
        "failoverContext": {
          "$ref": "FailoverContext",
          "description": "Failover Context."
        }
      }
    },
    "TiersListResponse": {
      "type": "object",
      "description": "Tiers list response.",
      "properties": {
        "items": {
          "items": {
            "$ref": "Tier"
          },
          "type": "array",
          "description": "List of tiers."
        },
        "kind": {
          "description": "This is always `sql#tiersList`.",
          "type": "string"
        }
      },
      "id": "TiersListResponse"
    },
    "MaintenanceWindow": {
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
      "type": "object",
      "properties": {
        "updateTrack": {
          "description": "Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).",
          "type": "string",
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
          ]
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "day of week (1-7), starting on Monday."
        },
        "kind": {
          "description": "This is always `sql#maintenanceWindow`.",
          "type": "string"
        },
        "hour": {
          "format": "int32",
          "description": "hour of day - 0 to 23.",
          "type": "integer"
        }
      },
      "id": "MaintenanceWindow"
    },
    "SslCertsCreateEphemeralRequest": {
      "description": "SslCerts create ephemeral certificate request.",
      "id": "SslCertsCreateEphemeralRequest",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "Access token to include in the signed certificate."
        },
        "public_key": {
          "type": "string",
          "description": "PEM encoded public key to include in the signed certificate."
        }
      },
      "type": "object"
    },
    "SqlServerDatabaseDetails": {
      "id": "SqlServerDatabaseDetails",
      "type": "object",
      "description": "Represents a Sql Server database on the Cloud SQL instance.",
      "properties": {
        "recoveryModel": {
          "description": "The recovery model of a SQL Server database",
          "type": "string"
        },
        "compatibilityLevel": {
          "type": "integer",
          "description": "The version of SQL Server with which the database is to be made compatible",
          "format": "int32"
        }
      }
    },
    "TruncateLogContext": {
      "description": "Database Instance truncate log context.",
      "id": "TruncateLogContext",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and `MYSQL_SLOW_TABLE`.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#truncateLogContext`."
        }
      }
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "properties": {
        "password": {
          "type": "string",
          "description": "The password for the replication connection."
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#demoteMasterMysqlReplicaConfiguration`."
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        }
      },
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "type": "object"
    },
    "LocationPreference": {
      "properties": {
        "secondaryZone": {
          "description": "The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.).",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance."
        },
        "kind": {
          "description": "This is always `sql#locationPreference`.",
          "type": "string"
        },
        "followGaeApplication": {
          "type": "string",
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance."
        }
      },
      "id": "LocationPreference",
      "description": "Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "type": "object"
    },
    "DatabasesListResponse": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Database"
          },
          "description": "List of database resources in the instance.",
          "type": "array"
        },
        "kind": {
          "description": "This is always `sql#databasesList`.",
          "type": "string"
        }
      },
      "description": "Database list response.",
      "id": "DatabasesListResponse"
    },
    "InstancesExportRequest": {
      "type": "object",
      "description": "Database instance export request.",
      "id": "InstancesExportRequest",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      }
    },
    "DiskEncryptionConfiguration": {
      "id": "DiskEncryptionConfiguration",
      "type": "object",
      "description": "Disk encryption configuration for an instance.",
      "properties": {
        "kind": {
          "description": "This is always `sql#diskEncryptionConfiguration`.",
          "type": "string"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of KMS key for disk encryption"
        }
      }
    },
    "SqlInstancesStartExternalSyncRequest": {
      "type": "object",
      "id": "SqlInstancesStartExternalSyncRequest",
      "properties": {
        "syncMode": {
          "enumDescriptions": [
            "Unknown external sync mode, will be defaulted to ONLINE mode",
            "Online external sync will set up replication after initial data external sync",
            "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
          ],
          "enum": [
            "EXTERNAL_SYNC_MODE_UNSPECIFIED",
            "ONLINE",
            "OFFLINE"
          ],
          "type": "string",
          "description": "External sync mode."
        },
        "mysqlSyncConfig": {
          "$ref": "MySqlSyncConfig",
          "description": "MySQL-specific settings for start external sync."
        },
        "skipVerification": {
          "description": "Whether to skip the verification step (VESS).",
          "type": "boolean"
        }
      }
    },
    "BackupContext": {
      "properties": {
        "backupId": {
          "type": "string",
          "format": "int64",
          "description": "The identifier of the backup."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupContext`."
        }
      },
      "type": "object",
      "description": "Backup context.",
      "id": "BackupContext"
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "type": "object",
      "properties": {
        "region": {
          "type": "array",
          "description": "The applicable regions for this tier.",
          "items": {
            "type": "string"
          }
        },
        "RAM": {
          "format": "int64",
          "description": "The maximum RAM usage of this tier in bytes.",
          "type": "string"
        },
        "DiskQuota": {
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "tier": {
          "description": "An identifier for the machine type, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing).",
          "type": "string"
        },
        "kind": {
          "description": "This is always `sql#tier`.",
          "type": "string"
        }
      },
      "id": "Tier"
    },
    "BackupConfiguration": {
      "description": "Database instance backup configuration.",
      "properties": {
        "binaryLogEnabled": {
          "type": "boolean",
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether this configuration is enabled."
        },
        "pointInTimeRecoveryEnabled": {
          "type": "boolean",
          "description": "(Postgres only) Whether point in time recovery is enabled."
        },
        "startTime": {
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.",
          "type": "string"
        },
        "transactionLogRetentionDays": {
          "format": "int32",
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7.",
          "type": "integer"
        },
        "kind": {
          "description": "This is always `sql#backupConfiguration`.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location of the backup"
        },
        "replicationLogArchivingEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "backupRetentionSettings": {
          "$ref": "BackupRetentionSettings",
          "description": "Backup retention settings."
        }
      },
      "type": "object",
      "id": "BackupConfiguration"
    },
    "RotateServerCaContext": {
      "id": "RotateServerCaContext",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `sql#rotateServerCaContext`.",
          "type": "string"
        },
        "nextVersion": {
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.",
          "type": "string"
        }
      },
      "description": "Instance rotate server CA context."
    },
    "InstancesTruncateLogRequest": {
      "id": "InstancesTruncateLogRequest",
      "description": "Instance truncate log request.",
      "properties": {
        "truncateLogContext": {
          "$ref": "TruncateLogContext",
          "description": "Contains details about the truncate log operation."
        }
      },
      "type": "object"
    },
    "SslCertsInsertResponse": {
      "description": "SslCert insert response.",
      "id": "SslCertsInsertResponse",
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "Operation",
          "description": "The operation to track the ssl certs insert request."
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource."
        },
        "clientCert": {
          "description": "The new client certificate and private key.",
          "$ref": "SslCertDetail"
        },
        "kind": {
          "description": "This is always `sql#sslCertsInsert`.",
          "type": "string"
        }
      }
    },
    "FailoverContext": {
      "id": "FailoverContext",
      "description": "Database instance failover context.",
      "properties": {
        "kind": {
          "description": "This is always `sql#failoverContext`.",
          "type": "string"
        },
        "settingsVersion": {
          "format": "int64",
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloneContext": {
      "type": "object",
      "properties": {
        "binLogCoordinates": {
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates.",
          "$ref": "BinLogCoordinates"
        },
        "destinationInstanceName": {
          "description": "Name of the Cloud SQL instance to be created as a clone.",
          "type": "string"
        },
        "allocatedIpRange": {
          "type": "string",
          "description": "The name of the allocated ip range for the private ip CloudSQL instance. For example: \"google-managed-services-default\". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use."
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "format": "int64",
          "type": "string"
        },
        "pointInTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp, if specified, identifies the time to which the source instance is cloned."
        },
        "kind": {
          "description": "This is always `sql#cloneContext`.",
          "type": "string"
        }
      },
      "id": "CloneContext",
      "description": "Database instance clone context."
    },
    "GenerateEphemeralCertResponse": {
      "id": "GenerateEphemeralCertResponse",
      "properties": {
        "ephemeralCert": {
          "$ref": "SslCert",
          "description": "Generated cert"
        }
      },
      "description": "Ephemeral certificate creation request.",
      "type": "object"
    },
    "InstancesRotateServerCaRequest": {
      "id": "InstancesRotateServerCaRequest",
      "type": "object",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      },
      "description": "Rotate Server CA request."
    },
    "BinLogCoordinates": {
      "id": "BinLogCoordinates",
      "description": "Binary log coordinates.",
      "properties": {
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        },
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#binLogCoordinates`."
        }
      },
      "type": "object"
    },
    "SqlInstancesVerifyExternalSyncSettingsRequest": {
      "properties": {
        "verifyReplicationOnly": {
          "description": "Optional. Flag to verify settings required by replication setup only",
          "type": "boolean"
        },
        "mysqlSyncConfig": {
          "$ref": "MySqlSyncConfig",
          "description": "Optional. MySQL-specific settings for start external sync."
        },
        "verifyConnectionOnly": {
          "type": "boolean",
          "description": "Flag to enable verifying connection only"
        },
        "syncMode": {
          "type": "string",
          "enumDescriptions": [
            "Unknown external sync mode, will be defaulted to ONLINE mode",
            "Online external sync will set up replication after initial data external sync",
            "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
          ],
          "enum": [
            "EXTERNAL_SYNC_MODE_UNSPECIFIED",
            "ONLINE",
            "OFFLINE"
          ],
          "description": "External sync mode"
        }
      },
      "id": "SqlInstancesVerifyExternalSyncSettingsRequest",
      "type": "object"
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "properties": {
        "reschedule": {
          "description": "Required. The type of the reschedule the user wants.",
          "$ref": "Reschedule"
        }
      },
      "type": "object",
      "description": "Reschedule options for maintenance windows.",
      "id": "SqlInstancesRescheduleMaintenanceRequestBody"
    },
    "Settings": {
      "description": "Database instance settings.",
      "properties": {
        "authorizedGaeApplications": {
          "type": "array",
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
          "items": {
            "type": "string"
          }
        },
        "connectorEnforcement": {
          "type": "string",
          "enumDescriptions": [
            "The requirement for Cloud SQL connectors is unknown.",
            "Do not require Cloud SQL connectors.",
            "Require all connections to use Cloud SQL connectors, including the Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors. Note: This disables all existing authorized networks."
          ],
          "description": "Specifies if connections must use Cloud SQL connectors. Option values include the following: * `NOT_REQUIRED`: Cloud SQL instances can be connected without Cloud SQL Connectors. * `REQUIRED`: Only allow connections that use Cloud SQL Connectors. Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.",
          "enum": [
            "CONNECTOR_ENFORCEMENT_UNSPECIFIED",
            "NOT_REQUIRED",
            "REQUIRED"
          ]
        },
        "crashSafeReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
        },
        "collation": {
          "type": "string",
          "description": "The name of server Instance collation."
        },
        "tier": {
          "description": "The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.",
          "type": "string"
        },
        "deletionProtectionEnabled": {
          "description": "Configuration to protect against accidental instance deletion.",
          "type": "boolean"
        },
        "sqlServerAuditConfig": {
          "$ref": "SqlServerAuditConfig",
          "description": "SQL Server specific audit configuration."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#settings`."
        },
        "passwordValidationPolicy": {
          "$ref": "PasswordValidationPolicy",
          "description": "The local user password validation policy of the instance."
        },
        "storageAutoResize": {
          "type": "boolean",
          "description": "Configuration to increase storage size automatically. The default value is true."
        },
        "locationPreference": {
          "$ref": "LocationPreference",
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances."
        },
        "dataDiskType": {
          "type": "string",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ],
          "description": "The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.",
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
            "This field is deprecated and will be removed from a future version of the API."
          ]
        },
        "settingsVersion": {
          "type": "string",
          "format": "int64",
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value."
        },
        "ipConfiguration": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.",
          "$ref": "IpConfiguration"
        },
        "activationPolicy": {
          "type": "string",
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ],
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
            "The instance never starts.",
            "The instance starts upon receiving requests."
          ]
        },
        "userLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair."
        },
        "availabilityType": {
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ],
          "description": "Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).",
          "type": "string"
        },
        "databaseFlags": {
          "type": "array",
          "items": {
            "$ref": "DatabaseFlags"
          },
          "description": "The database flags passed to the instance at startup."
        },
        "activeDirectoryConfig": {
          "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
          "$ref": "SqlActiveDirectoryConfig"
        },
        "denyMaintenancePeriods": {
          "type": "array",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "description": "Deny maintenance periods"
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "databaseReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.",
          "type": "boolean"
        },
        "replicationType": {
          "description": "The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.",
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
          ],
          "type": "string",
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ]
        },
        "maintenanceWindow": {
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.",
          "$ref": "MaintenanceWindow"
        },
        "insightsConfig": {
          "$ref": "InsightsConfig",
          "description": "Insights configuration, for now relevant only for Postgres."
        },
        "pricingPlan": {
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ],
          "type": "string",
          "description": "The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances."
        },
        "storageAutoResizeLimit": {
          "format": "int64",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "type": "string"
        },
        "dataDiskSizeGb": {
          "type": "string",
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "Settings"
    },
    "DemoteMasterConfiguration": {
      "properties": {
        "mysqlReplicaConfiguration": {
          "$ref": "DemoteMasterMySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory."
        },
        "kind": {
          "description": "This is always `sql#demoteMasterConfiguration`.",
          "type": "string"
        }
      },
      "id": "DemoteMasterConfiguration",
      "description": "Read-replica configuration for connecting to the on-premises primary instance.",
      "type": "object"
    },
    "SslCert": {
      "type": "object",
      "id": "SslCert",
      "description": "SslCerts Resource",
      "properties": {
        "certSerialNumber": {
          "type": "string",
          "description": "Serial number, as extracted from the certificate."
        },
        "sha1Fingerprint": {
          "type": "string",
          "description": "Sha1 Fingerprint."
        },
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "expirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "instance": {
          "type": "string",
          "description": "Name of the database instance."
        },
        "commonName": {
          "type": "string",
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#sslCert`."
        }
      }
    },
    "RestoreBackupContext": {
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id.",
      "properties": {
        "instanceId": {
          "description": "The ID of the instance that the backup was taken from.",
          "type": "string"
        },
        "backupRunId": {
          "description": "The ID of the backup run to restore from.",
          "format": "int64",
          "type": "string"
        },
        "project": {
          "description": "The full project ID of the source instance.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `sql#restoreBackupContext`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RestoreBackupContext"
    },
    "SqlExternalSyncSettingError": {
      "properties": {
        "detail": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "kind": {
          "description": "Can be `sql#externalSyncSettingError` or `sql#externalSyncSettingWarning`.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Identifies the specific error that occurred.",
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "SQLSERVER_SERVERNAME_MISMATCH",
            "PRIMARY_ALREADY_SETUP",
            "UNSUPPORTED_BINLOG_FORMAT",
            "BINLOG_RETENTION_SETTING",
            "UNSUPPORTED_STORAGE_ENGINE",
            "LIMITED_SUPPORT_TABLES"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running.",
            "The table definition is not support due to missing primary key or replica identity, applicable for postgres.",
            "The customer has a definer that will break EM setup.",
            "SQL Server @@SERVERNAME does not match actual host name",
            "The primary instance has been setup and will fail the setup.",
            "The primary instance has unsupported binary log format.",
            "The primary instance's binary log retention setting.",
            "The primary instance has tables with unsupported storage engine.",
            "Source has tables with limited support eg: PostgreSQL tables without primary keys"
          ]
        }
      },
      "id": "SqlExternalSyncSettingError",
      "type": "object",
      "description": "External primary instance migration setting error/warning."
    },
    "DatabaseFlags": {
      "type": "object",
      "id": "DatabaseFlags",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value."
        },
        "name": {
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation.",
          "type": "string"
        }
      },
      "description": "Database flags for Cloud SQL instances."
    },
    "AclEntry": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. A label to identify this entry."
        },
        "expirationTime": {
          "type": "string",
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "value": {
          "type": "string",
          "description": "The allowlisted value for the access control list."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#aclEntry`."
        }
      },
      "id": "AclEntry",
      "description": "An entry for an Access Control list.",
      "type": "object"
    },
    "BackupRetentionSettings": {
      "type": "object",
      "id": "BackupRetentionSettings",
      "properties": {
        "retentionUnit": {
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ],
          "type": "string",
          "description": "The unit that 'retained_backups' represents.",
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ]
        },
        "retainedBackups": {
          "format": "int32",
          "type": "integer",
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups."
        }
      },
      "description": "We currently only support backup retention by specifying the number of backups we will retain."
    },
    "PasswordStatus": {
      "id": "PasswordStatus",
      "properties": {
        "locked": {
          "type": "boolean",
          "description": "If true, user does not have login privileges."
        },
        "passwordExpirationTime": {
          "format": "google-datetime",
          "description": "The expiration time of the current password.",
          "type": "string"
        }
      },
      "description": "Read-only password status.",
      "type": "object"
    },
    "Flag": {
      "id": "Flag",
      "description": "A flag resource.",
      "properties": {
        "allowedStringValues": {
          "items": {
            "type": "string"
          },
          "description": "For `STRING` flags, a list of strings that the value can be set to.",
          "type": "array"
        },
        "allowedIntValues": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values."
        },
        "appliesTo": {
          "items": {
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
              "POSTGRES_12",
              "MYSQL_8_0",
              "MYSQL_8_0_18",
              "MYSQL_8_0_26",
              "MYSQL_8_0_27",
              "MYSQL_8_0_28",
              "MYSQL_8_0_29",
              "MYSQL_8_0_30",
              "POSTGRES_13",
              "POSTGRES_14",
              "SQLSERVER_2019_STANDARD",
              "SQLSERVER_2019_ENTERPRISE",
              "SQLSERVER_2019_EXPRESS",
              "SQLSERVER_2019_WEB"
            ],
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is MySQL 8.",
              "The database major version is MySQL 8.0 and the minor version is 18.",
              "The database major version is MySQL 8.0 and the minor version is 26.",
              "The database major version is MySQL 8.0 and the minor version is 27.",
              "The database major version is MySQL 8.0 and the minor version is 28.",
              "The database major version is MySQL 8.0 and the minor version is 29.",
              "The database major version is MySQL 8.0 and the minor version is 30.",
              "The database version is PostgreSQL 13.",
              "The database version is PostgreSQL 14.",
              "The database version is SQL Server 2019 Standard.",
              "The database version is SQL Server 2019 Enterprise.",
              "The database version is SQL Server 2019 Express.",
              "The database version is SQL Server 2019 Web."
            ],
            "type": "string"
          },
          "description": "The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).",
          "type": "array"
        },
        "maxValue": {
          "description": "For `INTEGER` flags, the maximum allowed value.",
          "type": "string",
          "format": "int64"
        },
        "inBeta": {
          "type": "boolean",
          "description": "Whether or not the flag is considered in beta."
        },
        "name": {
          "type": "string",
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet`"
        },
        "minValue": {
          "description": "For `INTEGER` flags, the minimum allowed value.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ],
          "type": "string",
          "description": "The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags which do not take a value, such as `skip_grant_tables`.",
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
            "Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ]
        },
        "requiresRestart": {
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#flag`."
        }
      },
      "type": "object"
    },
    "SqlOutOfDiskReport": {
      "properties": {
        "sqlMinRecommendedIncreaseSizeGb": {
          "description": "The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:",
          "format": "int32",
          "type": "integer"
        },
        "sqlOutOfDiskState": {
          "enum": [
            "SQL_OUT_OF_DISK_STATE_UNSPECIFIED",
            "NORMAL",
            "SOFT_SHUTDOWN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state",
            "The instance has plenty space on data disk",
            "Data disk is almost used up. It is shutdown to prevent data corruption."
          ],
          "description": "This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job"
        }
      },
      "description": "This message wraps up the information written by out-of-disk detection job.",
      "type": "object",
      "id": "SqlOutOfDiskReport"
    },
    "User": {
      "type": "object",
      "id": "User",
      "description": "A Cloud SQL user resource.",
      "properties": {
        "host": {
          "description": "Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it's required; for a PostgreSQL or SQL Server instance, it's optional.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ],
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ]
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the user."
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* because it is already specified on the URL.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* because it is already specified on the URL.",
          "type": "string"
        },
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        },
        "name": {
          "type": "string",
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#user`."
        },
        "dualPasswordType": {
          "description": "Dual password status for the user.",
          "type": "string",
          "enumDescriptions": [
            "The default value.",
            "Do not update the user's dual password status.",
            "No dual password usable for connecting using this user.",
            "Dual password usable for connecting using this user."
          ],
          "enum": [
            "DUAL_PASSWORD_TYPE_UNSPECIFIED",
            "NO_MODIFY_DUAL_PASSWORD",
            "NO_DUAL_PASSWORD",
            "DUAL_PASSWORD"
          ]
        },
        "passwordPolicy": {
          "$ref": "UserPasswordValidationPolicy",
          "description": "User level password validation policy."
        }
      }
    },
    "DemoteMasterContext": {
      "description": "Database instance demote primary instance context.",
      "type": "object",
      "id": "DemoteMasterContext",
      "properties": {
        "skipReplicationSetup": {
          "description": "Flag to skip replication setup on the instance.",
          "type": "boolean"
        },
        "replicaConfiguration": {
          "$ref": "DemoteMasterConfiguration",
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance."
        },
        "verifyGtidConsistency": {
          "type": "boolean",
          "description": "Verify the GTID consistency for demote operation. Default value: `True`. Setting this flag to `false` enables you to bypass the GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues."
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup."
        },
        "kind": {
          "description": "This is always `sql#demoteMasterContext`.",
          "type": "string"
        }
      }
    },
    "BackupRun": {
      "description": "A BackupRun resource.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of this run, only applicable to on-demand backups."
        },
        "enqueuedTime": {
          "type": "string",
          "description": "The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "diskEncryptionStatus": {
          "description": "Encryption status specific to a backup.",
          "$ref": "DiskEncryptionStatus"
        },
        "id": {
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "format": "int64",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupRun`."
        },
        "windowStartTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Encryption configuration specific to a backup."
        },
        "backupKind": {
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ],
          "type": "string",
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ],
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT."
        },
        "location": {
          "description": "Location of the backups.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ],
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\" or \"FINAL\". This field defaults to \"ON_DEMAND\" and is ignored, when specified for insert requests.",
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ]
        },
        "error": {
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status.",
          "$ref": "OperationError"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "status": {
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "description": "The status of this run.",
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "type": "string"
        }
      },
      "id": "BackupRun"
    },
    "IpConfiguration": {
      "description": "IP Management configuration.",
      "type": "object",
      "id": "IpConfiguration",
      "properties": {
        "allocatedIpRange": {
          "description": "The name of the allocated ip range for the private ip CloudSQL instance. For example: \"google-managed-services-default\". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`",
          "type": "string"
        },
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`).",
          "type": "array",
          "items": {
            "$ref": "AclEntry"
          }
        },
        "ipv4Enabled": {
          "description": "Whether the instance is assigned a public IP address or not.",
          "type": "boolean"
        },
        "requireSsl": {
          "type": "boolean",
          "description": "Whether SSL connections over IP are enforced or not."
        },
        "privateNetwork": {
          "type": "string",
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
        }
      }
    },
    "SqlScheduledMaintenance": {
      "description": "Any scheduled maintenance for this instance.",
      "type": "object",
      "properties": {
        "scheduleDeadlineTime": {
          "description": "Maintenance cannot be rescheduled to start beyond this deadline.",
          "format": "google-datetime",
          "type": "string"
        },
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        },
        "startTime": {
          "type": "string",
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "format": "google-datetime"
        },
        "canDefer": {
          "type": "boolean"
        }
      },
      "id": "SqlScheduledMaintenance"
    },
    "InstancesCloneRequest": {
      "properties": {
        "cloneContext": {
          "$ref": "CloneContext",
          "description": "Contains details about the clone operation."
        }
      },
      "id": "InstancesCloneRequest",
      "description": "Database instance clone request.",
      "type": "object"
    },
    "SslCertsInsertRequest": {
      "id": "SslCertsInsertRequest",
      "type": "object",
      "properties": {
        "commonName": {
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance.",
          "type": "string"
        }
      },
      "description": "SslCerts insert request."
    },
    "SqlActiveDirectoryConfig": {
      "properties": {
        "kind": {
          "description": "This is always sql#activeDirectoryConfig.",
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "The name of the domain (e.g., mydomain.com)."
        }
      },
      "id": "SqlActiveDirectoryConfig",
      "type": "object",
      "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server."
    },
    "InstancesListResponse": {
      "type": "object",
      "description": "Database instances list response.",
      "id": "InstancesListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#instancesList`."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "ApiWarning"
          },
          "description": "List of warnings that occurred while handling the request."
        },
        "items": {
          "description": "List of database instance resources.",
          "type": "array",
          "items": {
            "$ref": "DatabaseInstance"
          }
        }
      }
    },
    "SslCertsListResponse": {
      "type": "object",
      "id": "SslCertsListResponse",
      "properties": {
        "items": {
          "items": {
            "$ref": "SslCert"
          },
          "description": "List of client certificates for the instance.",
          "type": "array"
        },
        "kind": {
          "description": "This is always `sql#sslCertsList`.",
          "type": "string"
        }
      },
      "description": "SslCerts list response."
    },
    "PasswordValidationPolicy": {
      "description": "Database instance local user password validation policy",
      "properties": {
        "complexity": {
          "enumDescriptions": [
            "Complexity check is not specified.",
            "A combination of lowercase, uppercase, numeric, and non-alphanumeric characters."
          ],
          "type": "string",
          "enum": [
            "COMPLEXITY_UNSPECIFIED",
            "COMPLEXITY_DEFAULT"
          ],
          "description": "The complexity of the password."
        },
        "minLength": {
          "format": "int32",
          "description": "Minimum number of characters allowed.",
          "type": "integer"
        },
        "passwordChangeInterval": {
          "format": "google-duration",
          "description": "Minimum interval after which the password can be changed. This flag is only supported for PostgresSQL.",
          "type": "string"
        },
        "enablePasswordPolicy": {
          "description": "Whether the password policy is enabled or not.",
          "type": "boolean"
        },
        "reuseInterval": {
          "description": "Number of previous passwords that cannot be reused.",
          "format": "int32",
          "type": "integer"
        },
        "disallowUsernameSubstring": {
          "type": "boolean",
          "description": "Disallow username as a part of the password."
        }
      },
      "id": "PasswordValidationPolicy",
      "type": "object"
    },
    "OperationsListResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "kind": {
          "description": "This is always `sql#operationsList`.",
          "type": "string"
        },
        "items": {
          "description": "List of operation resources.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object",
      "id": "OperationsListResponse",
      "description": "Operations list response."
    },
    "ConnectSettings": {
      "id": "ConnectSettings",
      "description": "Connect settings retrieval response.",
      "type": "object",
      "properties": {
        "backendType": {
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "type": "string",
          "description": "`SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#connectSettings`."
        },
        "databaseVersion": {
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database major version is MySQL 8.0 and the minor version is 18.",
            "The database major version is MySQL 8.0 and the minor version is 26.",
            "The database major version is MySQL 8.0 and the minor version is 27.",
            "The database major version is MySQL 8.0 and the minor version is 28.",
            "The database major version is MySQL 8.0 and the minor version is 29.",
            "The database major version is MySQL 8.0 and the minor version is 30.",
            "The database version is PostgreSQL 13.",
            "The database version is PostgreSQL 14.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ],
          "type": "string",
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "MYSQL_8_0_18",
            "MYSQL_8_0_26",
            "MYSQL_8_0_27",
            "MYSQL_8_0_28",
            "MYSQL_8_0_29",
            "MYSQL_8_0_30",
            "POSTGRES_13",
            "POSTGRES_14",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ],
          "description": "The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. MySQL instances: `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server instances: `SQLSERVER_2017_STANDARD` (default), `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`."
        },
        "ipAddresses": {
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array",
          "description": "The assigned IP addresses for the instance."
        },
        "region": {
          "description": "The cloud region for the instance. e.g. `us-central1`, `europe-west1`. The region cannot be changed after instance creation.",
          "type": "string"
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        }
      }
    },
    "UsersListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#usersList*."
        },
        "items": {
          "items": {
            "$ref": "User"
          },
          "description": "List of user resources in the instance.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
        }
      },
      "id": "UsersListResponse",
      "description": "User list response.",
      "type": "object"
    },
    "BackupRunsListResponse": {
      "type": "object",
      "id": "BackupRunsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupRunsList`."
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "BackupRun"
          },
          "description": "A list of backup runs in reverse chronological order of the enqueued time."
        }
      },
      "description": "Backup run list results."
    },
    "Database": {
      "description": "Represents a SQL database on the Cloud SQL instance.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "This field is deprecated and will be removed from a future version of the API."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#database`."
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        },
        "charset": {
          "type": "string",
          "description": "The Cloud SQL charset value."
        },
        "name": {
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
          "type": "string"
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "collation": {
          "description": "The Cloud SQL collation value.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable."
        }
      },
      "id": "Database"
    },
    "InstancesDemoteMasterRequest": {
      "properties": {
        "demoteMasterContext": {
          "description": "Contains details about the demoteMaster operation.",
          "$ref": "DemoteMasterContext"
        }
      },
      "type": "object",
      "description": "Database demote primary instance request.",
      "id": "InstancesDemoteMasterRequest"
    },
    "InstancesListServerCasResponse": {
      "properties": {
        "activeVersion": {
          "type": "string"
        },
        "certs": {
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#instancesListServerCas`."
        }
      },
      "id": "InstancesListServerCasResponse",
      "description": "Instances ListServerCas response.",
      "type": "object"
    },
    "ApiWarning": {
      "description": "An Admin API warning message.",
      "type": "object",
      "id": "ApiWarning",
      "properties": {
        "message": {
          "description": "The warning message.",
          "type": "string"
        },
        "region": {
          "description": "The region name for REGION_UNREACHABLE warning.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
            "Warning when one or more regions are not reachable. The returned result set may be incomplete.",
            "Warning when user provided maxResults parameter exceeds the limit. The returned result set may be incomplete."
          ],
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE",
            "MAX_RESULTS_EXCEEDS_LIMIT"
          ],
          "description": "Code to uniquely identify the warning type."
        }
      }
    },
    "InstancesRestoreBackupRequest": {
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "description": "Database instance restore backup request.",
      "type": "object",
      "id": "InstancesRestoreBackupRequest"
    },
    "ReplicaConfiguration": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `sql#replicaConfiguration`.",
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "$ref": "MySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory."
        },
        "failoverTarget": {
          "description": "Specifies if the replica is the failover target. If the field is set to `true` the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.",
          "type": "boolean"
        }
      },
      "id": "ReplicaConfiguration",
      "description": "Read-replica configuration for connecting to the primary instance."
    },
    "InstancesImportRequest": {
      "description": "Database instance import request.",
      "type": "object",
      "id": "InstancesImportRequest",
      "properties": {
        "importContext": {
          "description": "Contains details about the import operation.",
          "$ref": "ImportContext"
        }
      }
    },
    "SqlServerAuditConfig": {
      "type": "object",
      "description": "SQL Server specific audit configuration.",
      "properties": {
        "retentionInterval": {
          "format": "google-duration",
          "description": "How long to keep generated audit files.",
          "type": "string"
        },
        "uploadInterval": {
          "format": "google-duration",
          "type": "string",
          "description": "How often to upload generated audit files."
        },
        "bucket": {
          "type": "string",
          "description": "The name of the destination bucket (e.g., gs://mybucket)."
        },
        "kind": {
          "type": "string",
          "description": "This is always sql#sqlServerAuditConfig"
        }
      },
      "id": "SqlServerAuditConfig"
    },
    "Operation": {
      "properties": {
        "importContext": {
          "description": "The context for import operation, if applicable.",
          "$ref": "ImportContext"
        },
        "targetLink": {
          "type": "string"
        },
        "backupContext": {
          "$ref": "BackupContext",
          "description": "The context for backup operation, if applicable."
        },
        "targetProject": {
          "type": "string",
          "description": "The project ID of the target instance related to this operation."
        },
        "status": {
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ],
          "description": "The status of an operation."
        },
        "operationType": {
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC",
            "LOG_CLEANUP",
            "AUTO_RESTART"
          ],
          "description": "The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE`",
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
            "Starts external sync of a Cloud SQL EM replica to an external primary instance.",
            "Recovers logs from an instance's old data disk.",
            "Performs auto-restart of an HA-enabled Cloud SQL database for auto recovery."
          ],
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "user": {
          "type": "string",
          "description": "The email address of the user who initiated this operation."
        },
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "kind": {
          "description": "This is always `sql#operation`.",
          "type": "string"
        },
        "insertTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "endTime": {
          "type": "string",
          "description": "The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "error": {
          "$ref": "OperationErrors",
          "description": "If errors occurred during processing of this operation, this field will be populated."
        },
        "exportContext": {
          "description": "The context for export operation, if applicable.",
          "$ref": "ExportContext"
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "startTime": {
          "description": "The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "Operation",
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.",
      "type": "object"
    },
    "Reschedule": {
      "properties": {
        "rescheduleType": {
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ],
          "description": "Required. The type of the reschedule.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Reschedules maintenance to happen now (within 5 minutes).",
            "Reschedules maintenance to occur within one week from the originally scheduled day and time.",
            "Reschedules maintenance to a specific time and day."
          ]
        },
        "scheduleTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        }
      },
      "type": "object",
      "id": "Reschedule"
    },
    "UserPasswordValidationPolicy": {
      "description": "User level password validation policy.",
      "properties": {
        "enableFailedAttemptsCheck": {
          "type": "boolean",
          "description": "If true, failed login attempts check will be enabled."
        },
        "passwordExpirationDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Expiration duration after password is updated."
        },
        "enablePasswordVerification": {
          "type": "boolean",
          "description": "If true, the user must specify the current password before changing the password. This flag is supported only for MySQL."
        },
        "allowedFailedAttempts": {
          "format": "int32",
          "description": "Number of failed login attempts allowed before user get locked.",
          "type": "integer"
        },
        "status": {
          "readOnly": true,
          "$ref": "PasswordStatus",
          "description": "Output only. Read-only password status."
        }
      },
      "id": "UserPasswordValidationPolicy",
      "type": "object"
    },
    "DiskEncryptionStatus": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#diskEncryptionStatus`."
        },
        "kmsKeyVersionName": {
          "type": "string",
          "description": "KMS key version used to encrypt the Cloud SQL instance resource"
        }
      },
      "id": "DiskEncryptionStatus",
      "description": "Disk encryption status for an instance.",
      "type": "object"
    },
    "MySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "type": "object",
      "id": "MySqlReplicaConfiguration",
      "properties": {
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "verifyServerCertificate": {
          "type": "boolean",
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake."
        },
        "sslCipher": {
          "type": "string",
          "description": "A list of permissible ciphers to use for SSL encryption."
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "connectRetryInterval": {
          "format": "int32",
          "type": "integer",
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds."
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "dumpFilePath": {
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "format": "int64",
          "description": "Interval in milliseconds between replication heartbeats.",
          "type": "string"
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#mysqlReplicaConfiguration`."
        },
        "clientKey": {
          "type": "string",
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
        }
      }
    },
    "OperationErrors": {
      "description": "Database instance operation errors list wrapper.",
      "id": "OperationErrors",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `sql#operationErrors`.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "OperationError"
          },
          "description": "The list of errors encountered while processing this operation.",
          "type": "array"
        }
      }
    },
    "InstanceReference": {
      "type": "object",
      "description": "Reference to another Cloud SQL instance.",
      "properties": {
        "region": {
          "type": "string",
          "description": "The region of the Cloud SQL instance being referenced."
        },
        "project": {
          "type": "string",
          "description": "The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it."
        },
        "name": {
          "description": "The name of the Cloud SQL instance being referenced. This does not include the project ID.",
          "type": "string"
        }
      },
      "id": "InstanceReference"
    }
  },
  "ownerName": "Google",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
  "description": "API for Cloud SQL database instance management",
  "servicePath": "",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud SQL Admin API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "canonicalName": "SQL Admin",
  "basePath": "",
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "id": "sql.operations.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/operations/{operation}",
          "path": "sql/v1beta4/projects/{project}/operations/{operation}",
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "operation": {
              "location": "path",
              "description": "Instance operation ID.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "operation"
          ]
        },
        "list": {
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            },
            "instance": {
              "type": "string",
              "location": "query",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "Maximum number of operations per response.",
              "format": "uint32"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.operations.list",
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "httpMethod": "GET",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "path": "sql/v1beta4/projects/{project}/operations",
          "parameterOrder": [
            "project"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/operations"
        }
      }
    },
    "databases": {
      "methods": {
        "insert": {
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "httpMethod": "POST",
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "request": {
            "$ref": "Database"
          },
          "id": "sql.databases.insert"
        },
        "update": {
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.databases.update",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "database": {
              "required": true,
              "description": "Name of the database to be updated in the instance.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "required": true,
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "httpMethod": "PUT",
          "request": {
            "$ref": "Database"
          },
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "id": "sql.databases.list",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "description": "Lists databases in the specified Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "get": {
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "database": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Name of the database in the instance."
            }
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Database"
          },
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.databases.get",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "id": "sql.databases.delete",
          "description": "Deletes a database from a Cloud SQL instance.",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "required": true,
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path"
            },
            "database": {
              "location": "path",
              "type": "string",
              "description": "Name of the database to be deleted in the instance.",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}"
        },
        "patch": {
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            },
            "database": {
              "location": "path",
              "type": "string",
              "description": "Name of the database to be updated in the instance.",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          },
          "id": "sql.databases.patch",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ]
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "rescheduleMaintenance": {
              "id": "sql.projects.instances.rescheduleMaintenance",
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              },
              "response": {
                "$ref": "Operation"
              },
              "description": "Reschedules the maintenance on the given instance.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "parameters": {
                "project": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the project that contains the instance.",
                  "location": "path"
                },
                "instance": {
                  "type": "string",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "httpMethod": "POST",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance"
            },
            "startExternalSync": {
              "parameters": {
                "project": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "ID of the project that contains the instance."
                },
                "instance": {
                  "required": true,
                  "type": "string",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "SqlInstancesStartExternalSyncRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "httpMethod": "POST",
              "description": "Start External primary instance migration.",
              "id": "sql.projects.instances.startExternalSync"
            },
            "verifyExternalSyncSettings": {
              "description": "Verify External primary instance external sync settings.",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "request": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsRequest"
              },
              "httpMethod": "POST",
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "parameters": {
                "project": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Project ID of the project that contains the instance."
                },
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              }
            }
          }
        }
      }
    },
    "connect": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "description": "Retrieves connect settings about a Cloud SQL instance.",
          "response": {
            "$ref": "ConnectSettings"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/connectSettings",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/connectSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "readTime": {
              "format": "google-datetime",
              "type": "string",
              "location": "query",
              "description": "Optional. Optional snapshot read timestamp to trade freshness for performance."
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.connect.get"
        },
        "generateEphemeralCert": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}:generateEphemeralCert",
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "id": "sql.connect.generateEphemeral",
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "response": {
            "$ref": "GenerateEphemeralCertResponse"
          },
          "request": {
            "$ref": "GenerateEphemeralCertRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}:generateEphemeralCert",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST"
        }
      }
    },
    "sslCerts": {
      "methods": {
        "delete": {
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            },
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.sslCerts.delete",
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "createEphemeral": {
          "id": "sql.sslCerts.createEphemeral",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "SslCert"
          },
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the Cloud SQL project.",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          }
        },
        "list": {
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "GET",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "id": "sql.sslCerts.list",
          "description": "Lists all of the current SSL certificates for the instance.",
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            }
          }
        },
        "insert": {
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "httpMethod": "POST",
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "id": "sql.sslCerts.insert",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted."
        },
        "get": {
          "response": {
            "$ref": "SslCert"
          },
          "parameters": {
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "id": "sql.sslCerts.get",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "users": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameters": {
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "id": "sql.users.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Lists users in the specified Cloud SQL instance.",
          "response": {
            "$ref": "UsersListResponse"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users"
        },
        "delete": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "description": "Deletes a user from a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.users.delete",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            },
            "host": {
              "type": "string",
              "description": "Host of the user in the instance.",
              "location": "query"
            },
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users"
        },
        "insert": {
          "description": "Creates a new user in a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.users.insert",
          "request": {
            "$ref": "User"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          }
        },
        "update": {
          "parameters": {
            "host": {
              "type": "string",
              "description": "Optional. Host of the user in the instance.",
              "location": "query"
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string"
            },
            "instance": {
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string"
            },
            "name": {
              "location": "query",
              "type": "string",
              "description": "Name of the user in the instance."
            }
          },
          "request": {
            "$ref": "User"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "PUT",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "description": "Updates an existing user in a Cloud SQL instance.",
          "id": "sql.users.update",
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "get": {
          "id": "sql.users.get",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            },
            "name": {
              "required": true,
              "type": "string",
              "description": "User of the instance. If the database user has a host, this is specified as {username}@{host} else as {username}.",
              "location": "path"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users/{name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "User"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "instance",
            "name"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users/{name}",
          "description": "Retrieves a resource containing information about a user."
        }
      }
    },
    "instances": {
      "methods": {
        "restart": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "description": "Restarts a Cloud SQL instance.",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance to be restarted.",
              "type": "string"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "id": "sql.instances.restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "resetSslConfig": {
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.resetSslConfig",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig"
        },
        "startReplica": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "description": "Starts the replication in the read replica instance.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.startReplica",
          "httpMethod": "POST",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL read replica instance name."
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "ID of the project that contains the read replica.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica"
        },
        "truncateLog": {
          "id": "sql.instances.truncateLog",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true
            }
          },
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Truncate MySQL general and slow query log tables MySQL only.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST"
        },
        "restoreBackup": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "id": "sql.instances.restoreBackup"
        },
        "rotateServerCa": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.rotateServerCa",
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa"
        },
        "promoteReplica": {
          "httpMethod": "POST",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
          "id": "sql.instances.promoteReplica",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "ID of the project that contains the read replica."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "addServerCa": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "id": "sql.instances.addServerCa",
          "httpMethod": "POST",
          "description": "Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa"
        },
        "demoteMaster": {
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "ID of the project that contains the instance.",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance name.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.demoteMaster",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          }
        },
        "update": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "DatabaseInstance"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "id": "sql.instances.update",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart."
        },
        "listServerCas": {
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.listServerCas",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "GET",
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "response": {
            "$ref": "InstancesListServerCasResponse"
          }
        },
        "export": {
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "id": "sql.instances.export",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance to be exported."
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          }
        },
        "import": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "parameters": {
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
          "id": "sql.instances.import",
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/import"
        },
        "patch": {
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.patch"
        },
        "get": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "id": "sql.instances.get",
          "httpMethod": "GET",
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "response": {
            "$ref": "DatabaseInstance"
          }
        },
        "failover": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the [Overview of high availability](https://cloud.google.com/sql/docs/mysql/high-availability) page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance.",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "required": true,
              "description": "ID of the project that contains the read replica.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "id": "sql.instances.failover"
        },
        "clone": {
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
          "parameters": {
            "instance": {
              "required": true,
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "type": "string",
              "location": "path"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the source as well as the clone Cloud SQL instance."
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.clone",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "httpMethod": "POST"
        },
        "delete": {
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance to be deleted.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "httpMethod": "DELETE",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Deletes a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.delete"
        },
        "list": {
          "parameters": {
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project for which to list Cloud SQL instances."
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly."
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of instances to return. The service may return fewer than this value. If unspecified, at most 500 instances are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
              "type": "integer",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.list",
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "parameterOrder": [
            "project"
          ],
          "path": "sql/v1beta4/projects/{project}/instances",
          "response": {
            "$ref": "InstancesListResponse"
          },
          "description": "Lists instances under a given project.",
          "httpMethod": "GET"
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong."
            }
          },
          "parameterOrder": [
            "project"
          ],
          "path": "sql/v1beta4/projects/{project}/instances",
          "description": "Creates a new Cloud SQL instance.",
          "id": "sql.instances.insert",
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "httpMethod": "POST"
        },
        "stopReplica": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "httpMethod": "POST",
          "id": "sql.instances.stopReplica",
          "description": "Stops the replication in the read replica instance.",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "ID of the project that contains the read replica.",
              "location": "path"
            },
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "response": {
            "$ref": "Operation"
          }
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ],
          "id": "sql.tiers.list",
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing).",
          "flatPath": "sql/v1beta4/projects/{project}/tiers",
          "response": {
            "$ref": "TiersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/tiers",
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project for which to list tiers."
            }
          }
        }
      }
    },
    "backupRuns": {
      "methods": {
        "get": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "description": "Retrieves a resource containing information about a backup run.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "id": {
              "type": "string",
              "required": true,
              "location": "path",
              "format": "int64",
              "description": "The ID of this backup run."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "BackupRun"
          },
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "id": "sql.backupRuns.get",
          "httpMethod": "GET"
        },
        "delete": {
          "description": "Deletes the backup taken by a backup run.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string"
            },
            "id": {
              "type": "string",
              "description": "The ID of the backup run to delete. To find a backup run ID, use the [list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1beta4/backupRuns/list) method.",
              "location": "path",
              "format": "int64",
              "required": true
            }
          },
          "id": "sql.backupRuns.delete",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "BackupRun"
          },
          "description": "Creates a new backup run on demand.",
          "httpMethod": "POST",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "id": "sql.backupRuns.insert"
        },
        "list": {
          "description": "Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID, or \"-\" for all instances. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "Maximum number of backup runs per response."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "GET",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "response": {
            "$ref": "BackupRunsListResponse"
          },
          "id": "sql.backupRuns.list"
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "path": "sql/v1beta4/flags",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "FlagsListResponse"
          },
          "id": "sql.flags.list",
          "httpMethod": "GET",
          "parameters": {
            "databaseVersion": {
              "location": "query",
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions.",
              "type": "string"
            }
          },
          "flatPath": "sql/v1beta4/flags",
          "description": "Lists all available database flags for Cloud SQL instances."
        }
      }
    }
  },
  "protocol": "rest",
  "documentationLink": "https://developers.google.com/cloud-sql/",
  "revision": "20220824"
}

{
  "canonicalName": "SQL Admin",
  "basePath": "",
  "discoveryVersion": "v1",
  "resources": {
    "users": {
      "methods": {
        "update": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "User"
          },
          "id": "sql.users.update",
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "name": {
              "location": "query",
              "type": "string",
              "description": "Name of the user in the instance."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true
            },
            "host": {
              "type": "string",
              "description": "Optional. Host of the user in the instance.",
              "location": "query"
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/users",
          "httpMethod": "PUT",
          "description": "Updates an existing user in a Cloud SQL instance."
        },
        "list": {
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "description": "Lists users in the specified Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/users",
          "id": "sql.users.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "body.password": {
              "location": "query",
              "description": "The password for the user.",
              "type": "string"
            },
            "body.etag": {
              "type": "string",
              "description": "This field is deprecated and will be removed from a future version of the API.",
              "location": "query"
            },
            "body.type": {
              "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
              "enumDescriptions": [
                "The database's built-in user type.",
                "Cloud IAM user.",
                "Cloud IAM service account."
              ],
              "enum": [
                "BUILT_IN",
                "CLOUD_IAM_USER",
                "CLOUD_IAM_SERVICE_ACCOUNT"
              ],
              "type": "string",
              "location": "query"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "body.sqlserverUserDetails.serverRoles": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "The server roles for this user"
            },
            "body.kind": {
              "description": "This is always *sql#user*.",
              "type": "string",
              "location": "query"
            },
            "body.sqlserverUserDetails.disabled": {
              "location": "query",
              "type": "boolean",
              "description": "If the user has been disabled"
            },
            "body.host": {
              "location": "query",
              "type": "string",
              "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
            },
            "body.instance": {
              "location": "query",
              "type": "string",
              "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
            },
            "body.name": {
              "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL.",
              "type": "string",
              "location": "query"
            },
            "body.project": {
              "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "UsersListResponse"
          }
        },
        "insert": {
          "id": "sql.users.insert",
          "path": "v1/projects/{project}/instances/{instance}/users",
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "description": "Creates a new user in a Cloud SQL instance."
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "host": {
              "description": "Host of the user in the instance.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "type": "string",
              "required": true,
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path"
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "id": "sql.users.delete",
          "path": "v1/projects/{project}/instances/{instance}/users",
          "description": "Deletes a user from a Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          }
        }
      }
    },
    "databases": {
      "methods": {
        "list": {
          "flatPath": "v1/projects/{project}/instances/{instance}/databases",
          "description": "Lists databases in the specified Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/databases",
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.databases.list"
        },
        "delete": {
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Deletes a database from a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "database": {
              "location": "path",
              "description": "Name of the database to be deleted in the instance.",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "DELETE",
          "id": "sql.databases.delete"
        },
        "patch": {
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Database"
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "database": {
              "required": true,
              "location": "path",
              "description": "Name of the database to be updated in the instance.",
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "id": "sql.databases.patch",
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "update": {
          "httpMethod": "PUT",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "id": "sql.databases.update",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "request": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "get": {
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            },
            "database": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Name of the database in the instance."
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "response": {
            "$ref": "Database"
          },
          "httpMethod": "GET",
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.databases.get",
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}"
        },
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "id": "sql.databases.insert",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases",
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/databases",
          "request": {
            "$ref": "Database"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance."
        }
      }
    },
    "instances": {
      "methods": {
        "import": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/import",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "path": "v1/projects/{project}/instances/{instance}/import",
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
          "id": "sql.instances.import"
        },
        "startReplica": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ID of the project that contains the read replica."
            },
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL read replica instance name.",
              "type": "string"
            }
          },
          "id": "sql.instances.startReplica",
          "path": "v1/projects/{project}/instances/{instance}/startReplica",
          "flatPath": "v1/projects/{project}/instances/{instance}/startReplica",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Starts the replication in the read replica instance."
        },
        "demoteMaster": {
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/demoteMaster",
          "id": "sql.instances.demoteMaster",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "parameters": {
            "project": {
              "type": "string",
              "description": "ID of the project that contains the instance.",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance name.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/demoteMaster",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "resetSslConfig": {
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/resetSslConfig",
          "flatPath": "v1/projects/{project}/instances/{instance}/resetSslConfig",
          "httpMethod": "POST",
          "id": "sql.instances.resetSslConfig"
        },
        "restart": {
          "path": "v1/projects/{project}/instances/{instance}/restart",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.restart",
          "description": "Restarts a Cloud SQL instance.",
          "httpMethod": "POST",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance to be restarted.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "patch": {
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "path": "v1/projects/{project}/instances/{instance}",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.patch",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "response": {
            "$ref": "Operation"
          },
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          }
        },
        "delete": {
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "httpMethod": "DELETE",
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance to be deleted.",
              "type": "string",
              "required": true
            }
          },
          "path": "v1/projects/{project}/instances/{instance}",
          "description": "Deletes a Cloud SQL instance.",
          "id": "sql.instances.delete",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "truncateLog": {
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/truncateLog",
          "id": "sql.instances.truncateLog",
          "path": "v1/projects/{project}/instances/{instance}/truncateLog",
          "description": "Truncate MySQL general and slow query log tables MySQL only.",
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the Cloud SQL project.",
              "type": "string"
            }
          }
        },
        "addServerCa": {
          "httpMethod": "POST",
          "flatPath": "v1/projects/{project}/instances/{instance}/addServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/addServerCa",
          "id": "sql.instances.addServerCa",
          "response": {
            "$ref": "Operation"
          },
          "description": "Adds a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          }
        },
        "failover": {
          "parameters": {
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "ID of the project that contains the read replica.",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/failover",
          "id": "sql.instances.failover",
          "description": "Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the Overview of high availability page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "path": "v1/projects/{project}/instances/{instance}/failover"
        },
        "update": {
          "request": {
            "$ref": "DatabaseInstance"
          },
          "parameters": {
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.update",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "path": "v1/projects/{project}/instances/{instance}",
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart."
        },
        "rotateServerCa": {
          "flatPath": "v1/projects/{project}/instances/{instance}/rotateServerCa",
          "path": "v1/projects/{project}/instances/{instance}/rotateServerCa",
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "sql.instances.rotateServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "request": {
            "$ref": "DatabaseInstance"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "project"
          ],
          "id": "sql.instances.insert",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Creates a new Cloud SQL instance.",
          "flatPath": "v1/projects/{project}/instances",
          "path": "v1/projects/{project}/instances",
          "parameters": {
            "project": {
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Operation"
          }
        },
        "listServerCas": {
          "flatPath": "v1/projects/{project}/instances/{instance}/listServerCas",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/listServerCas",
          "httpMethod": "GET",
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.listServerCas"
        },
        "get": {
          "response": {
            "$ref": "DatabaseInstance"
          },
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          },
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "path": "v1/projects/{project}/instances/{instance}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.get"
        },
        "restoreBackup": {
          "path": "v1/projects/{project}/instances/{instance}/restoreBackup",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/restoreBackup",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.restoreBackup"
        },
        "export": {
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance to be exported."
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "sql.instances.export",
          "flatPath": "v1/projects/{project}/instances/{instance}/export",
          "path": "v1/projects/{project}/instances/{instance}/export",
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "list": {
          "response": {
            "$ref": "InstancesListResponse"
          },
          "path": "v1/projects/{project}/instances",
          "parameterOrder": [
            "project"
          ],
          "id": "sql.instances.list",
          "flatPath": "v1/projects/{project}/instances",
          "httpMethod": "GET",
          "description": "Lists instances under a given project.",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly."
            },
            "maxResults": {
              "location": "query",
              "description": "The maximum number of results to return per response.",
              "format": "uint32",
              "type": "integer"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "clone": {
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "description": "Project ID of the source as well as the clone Cloud SQL instance.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "required": true
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/clone",
          "httpMethod": "POST",
          "id": "sql.instances.clone",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/clone"
        },
        "stopReplica": {
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/stopReplica",
          "path": "v1/projects/{project}/instances/{instance}/stopReplica",
          "description": "Stops the replication in the read replica instance.",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL read replica instance name.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "description": "ID of the project that contains the read replica.",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST"
        },
        "promoteReplica": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Cloud SQL read replica instance name."
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
          "httpMethod": "POST",
          "id": "sql.instances.promoteReplica",
          "path": "v1/projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/promoteReplica"
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "rescheduleMaintenance": {
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              },
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "instance": {
                  "required": true,
                  "location": "path",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "type": "string"
                },
                "project": {
                  "type": "string",
                  "description": "ID of the project that contains the instance.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "path": "v1/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "httpMethod": "POST",
              "id": "sql.projects.instances.rescheduleMaintenance",
              "description": "Reschedules the maintenance on the given instance.",
              "flatPath": "v1/projects/{project}/instances/{instance}/rescheduleMaintenance"
            },
            "startExternalSync": {
              "parameters": {
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "skipVerification": {
                  "description": "Whether to skip the verification step (VESS).",
                  "location": "query",
                  "type": "boolean"
                },
                "syncMode": {
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "location": "query",
                  "description": "External sync mode."
                },
                "project": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of the project that contains the instance."
                }
              },
              "path": "v1/projects/{project}/instances/{instance}/startExternalSync",
              "flatPath": "v1/projects/{project}/instances/{instance}/startExternalSync",
              "httpMethod": "POST",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "description": "Start External primary instance migration.",
              "response": {
                "$ref": "Operation"
              },
              "id": "sql.projects.instances.startExternalSync"
            },
            "verifyExternalSyncSettings": {
              "description": "Verify External primary instance external sync settings.",
              "httpMethod": "POST",
              "parameters": {
                "project": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Project ID of the project that contains the instance."
                },
                "verifyConnectionOnly": {
                  "description": "Flag to enable verifying connection only",
                  "location": "query",
                  "type": "boolean"
                },
                "instance": {
                  "required": true,
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "type": "string"
                },
                "syncMode": {
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "description": "External sync mode",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ]
                }
              },
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "path": "v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              },
              "flatPath": "v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ]
            }
          }
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "parameterOrder": [],
          "path": "v1/flags",
          "id": "sql.flags.list",
          "httpMethod": "GET",
          "description": "Lists all available database flags for Cloud SQL instances.",
          "flatPath": "v1/flags",
          "response": {
            "$ref": "FlagsListResponse"
          },
          "parameters": {
            "databaseVersion": {
              "type": "string",
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions.",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "sslCerts": {
      "methods": {
        "createEphemeral": {
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.sslCerts.createEphemeral",
          "response": {
            "$ref": "SslCert"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "path": "v1/projects/{project}/instances/{instance}/createEphemeral",
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "flatPath": "v1/projects/{project}/instances/{instance}/createEphemeral"
        },
        "list": {
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "sql.sslCerts.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET",
          "path": "v1/projects/{project}/instances/{instance}/sslCerts",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts",
          "description": "Lists all of the current SSL certificates for the instance.",
          "response": {
            "$ref": "SslCertsListResponse"
          }
        },
        "get": {
          "id": "sql.sslCerts.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "SslCert"
          },
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "parameters": {
            "sha1Fingerprint": {
              "type": "string",
              "required": true,
              "description": "Sha1 FingerPrint.",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            }
          }
        },
        "delete": {
          "id": "sql.sslCerts.delete",
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "sha1Fingerprint": {
              "location": "path",
              "description": "Sha1 FingerPrint.",
              "required": true,
              "type": "string"
            },
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          }
        },
        "insert": {
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "path": "v1/projects/{project}/instances/{instance}/sslCerts",
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts",
          "id": "sql.sslCerts.insert"
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, db-custom-1-3840. For more information, see https://cloud.google.com/sql/pricing.",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project for which to list tiers.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "sql.tiers.list",
          "path": "v1/projects/{project}/tiers",
          "response": {
            "$ref": "TiersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET",
          "flatPath": "v1/projects/{project}/tiers"
        }
      }
    },
    "operations": {
      "methods": {
        "list": {
          "id": "sql.operations.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "description": "Maximum number of operations per response.",
              "location": "query"
            },
            "instance": {
              "location": "query",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "flatPath": "v1/projects/{project}/operations",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/operations"
        },
        "get": {
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "operation": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Instance operation ID."
            }
          },
          "flatPath": "v1/projects/{project}/operations/{operation}",
          "path": "v1/projects/{project}/operations/{operation}",
          "id": "sql.operations.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "operation"
          ],
          "response": {
            "$ref": "Operation"
          }
        }
      }
    },
    "connect": {
      "methods": {
        "generateEphemeralCert": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "flatPath": "v1/projects/{project}/instances/{instance}:generateEphemeralCert",
          "path": "v1/projects/{project}/instances/{instance}:generateEphemeralCert",
          "request": {
            "$ref": "GenerateEphemeralCertRequest"
          },
          "id": "sql.connect.generateEphemeral",
          "response": {
            "$ref": "GenerateEphemeralCertResponse"
          },
          "httpMethod": "POST",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            }
          }
        },
        "get": {
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "readTime": {
              "type": "string",
              "format": "google-datetime",
              "location": "query",
              "description": "Optional. Optional snapshot read timestamp to trade freshness for performance."
            },
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "id": "sql.connect.get",
          "flatPath": "v1/projects/{project}/instances/{instance}/connectSettings",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Retrieves connect settings about a Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/connectSettings",
          "httpMethod": "GET",
          "response": {
            "$ref": "ConnectSettings"
          }
        }
      }
    },
    "backupRuns": {
      "methods": {
        "get": {
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path"
            },
            "id": {
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of this backup run."
            }
          },
          "id": "sql.backupRuns.get",
          "httpMethod": "GET",
          "path": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "response": {
            "$ref": "BackupRun"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Retrieves a resource containing information about a backup run."
        },
        "list": {
          "description": "Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "path": "v1/projects/{project}/instances/{instance}/backupRuns",
          "httpMethod": "GET",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID, or \"-\" for all instances. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of backup runs per response.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.backupRuns.list",
          "response": {
            "$ref": "BackupRunsListResponse"
          }
        },
        "delete": {
          "description": "Deletes the backup taken by a backup run.",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "id": "sql.backupRuns.delete",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "parameters": {
            "id": {
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the backup run to delete. To find a backup run ID, use the list method."
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/backupRuns/{id}"
        },
        "insert": {
          "description": "Creates a new backup run on demand.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.backupRuns.insert",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/backupRuns",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "BackupRun"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns",
          "httpMethod": "POST"
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "revision": "20210715",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "id": "sqladmin:v1",
  "title": "Cloud SQL Admin API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        },
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        }
      }
    }
  },
  "version": "v1",
  "schemas": {
    "BackupContext": {
      "id": "BackupContext",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always **sql#backupContext**."
        },
        "backupId": {
          "format": "int64",
          "type": "string",
          "description": "The identifier of the backup."
        }
      },
      "type": "object",
      "description": "Backup context."
    },
    "InsightsConfig": {
      "properties": {
        "queryPlansPerMinute": {
          "description": "Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.",
          "type": "integer",
          "format": "int32"
        },
        "recordApplicationTags": {
          "type": "boolean",
          "description": "Whether Query Insights will record application tags from query when enabled."
        },
        "queryStringLength": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database."
        },
        "queryInsightsEnabled": {
          "description": "Whether Query Insights feature is enabled.",
          "type": "boolean"
        },
        "recordClientAddress": {
          "type": "boolean",
          "description": "Whether Query Insights will record client address when enabled."
        }
      },
      "description": "Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.",
      "id": "InsightsConfig",
      "type": "object"
    },
    "SslCertsListResponse": {
      "id": "SslCertsListResponse",
      "properties": {
        "items": {
          "description": "List of client certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
          "description": "This is always *sql#sslCertsList*.",
          "type": "string"
        }
      },
      "description": "SslCerts list response.",
      "type": "object"
    },
    "SslCertsInsertResponse": {
      "type": "object",
      "id": "SslCertsInsertResponse",
      "properties": {
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource."
        },
        "operation": {
          "description": "The operation to track the ssl certs insert request.",
          "$ref": "Operation"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#sslCertsInsert*."
        },
        "clientCert": {
          "description": "The new client certificate and private key.",
          "$ref": "SslCertDetail"
        }
      },
      "description": "SslCert insert response."
    },
    "TiersListResponse": {
      "type": "object",
      "description": "Tiers list response.",
      "properties": {
        "items": {
          "items": {
            "$ref": "Tier"
          },
          "description": "List of tiers.",
          "type": "array"
        },
        "kind": {
          "description": "This is always *sql#tiersList*.",
          "type": "string"
        }
      },
      "id": "TiersListResponse"
    },
    "DiskEncryptionStatus": {
      "properties": {
        "kmsKeyVersionName": {
          "type": "string",
          "description": "KMS key version used to encrypt the Cloud SQL instance resource"
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#diskEncryptionStatus**."
        }
      },
      "id": "DiskEncryptionStatus",
      "description": "Disk encryption status for an instance.",
      "type": "object"
    },
    "InstancesFailoverRequest": {
      "description": "Instance failover request.",
      "id": "InstancesFailoverRequest",
      "properties": {
        "failoverContext": {
          "$ref": "FailoverContext",
          "description": "Failover Context."
        }
      },
      "type": "object"
    },
    "GenerateEphemeralCertRequest": {
      "properties": {
        "readTime": {
          "type": "string",
          "description": "Optional. Optional snapshot read timestamp to trade freshness for performance.",
          "format": "google-datetime"
        },
        "access_token": {
          "type": "string",
          "description": "Optional. Access token to include in the signed certificate."
        },
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        }
      },
      "id": "GenerateEphemeralCertRequest",
      "type": "object",
      "description": "Ephemeral certificate creation request."
    },
    "InstancesDemoteMasterRequest": {
      "type": "object",
      "properties": {
        "demoteMasterContext": {
          "$ref": "DemoteMasterContext",
          "description": "Contains details about the demoteMaster operation."
        }
      },
      "description": "Database demote primary instance request.",
      "id": "InstancesDemoteMasterRequest"
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "type": "object",
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
      "description": "Instance verify external sync settings response.",
      "properties": {
        "warnings": {
          "description": "List of migration warnings.",
          "type": "array",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          }
        },
        "errors": {
          "description": "List of migration violations.",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#migrationSettingErrorList*."
        }
      }
    },
    "ApiWarning": {
      "id": "ApiWarning",
      "type": "object",
      "description": "An Admin API warning message.",
      "properties": {
        "region": {
          "type": "string",
          "description": "The region name for REGION_UNREACHABLE warning."
        },
        "code": {
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
            "Warning when one or more regions are not reachable. The returned result set may be incomplete."
          ],
          "type": "string",
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE"
          ],
          "description": "Code to uniquely identify the warning type."
        },
        "message": {
          "description": "The warning message.",
          "type": "string"
        }
      }
    },
    "Flag": {
      "description": "A flag resource.",
      "id": "Flag",
      "properties": {
        "allowedIntValues": {
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "type": {
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
            "Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ],
          "type": "string",
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ],
          "description": "The type of the flag. Flags are typed to being **BOOLEAN**, **STRING**, **INTEGER** or **NONE**. **NONE** is used for flags which do not take a value, such as **skip_grant_tables**."
        },
        "name": {
          "type": "string",
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: **max_allowed_packet**"
        },
        "appliesTo": {
          "description": "The database version this flag applies to. Can be **MYSQL_8_0**, **MYSQL_5_6**, or **MYSQL_5_7**.",
          "type": "array",
          "items": {
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
              "POSTGRES_12",
              "POSTGRES_13",
              "SQLSERVER_2019_STANDARD",
              "SQLSERVER_2019_ENTERPRISE",
              "SQLSERVER_2019_EXPRESS",
              "SQLSERVER_2019_WEB"
            ],
            "type": "string",
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is PostgreSQL 13.",
              "The database version is SQL Server 2019 Standard.",
              "The database version is SQL Server 2019 Enterprise.",
              "The database version is SQL Server 2019 Express.",
              "The database version is SQL Server 2019 Web."
            ]
          }
        },
        "allowedStringValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For **STRING** flags, a list of strings that the value can be set to."
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#flag**."
        },
        "maxValue": {
          "description": "For **INTEGER** flags, the maximum allowed value.",
          "type": "string",
          "format": "int64"
        },
        "inBeta": {
          "description": "Whether or not the flag is considered in beta.",
          "type": "boolean"
        },
        "minValue": {
          "description": "For **INTEGER** flags, the minimum allowed value.",
          "format": "int64",
          "type": "string"
        },
        "requiresRestart": {
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MySqlReplicaConfiguration": {
      "properties": {
        "dumpFilePath": {
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "type": "string",
          "description": "Interval in milliseconds between replication heartbeats.",
          "format": "int64"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "sslCipher": {
          "description": "A list of permissible ciphers to use for SSL encryption.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "connectRetryInterval": {
          "format": "int32",
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
          "type": "integer"
        },
        "kind": {
          "description": "This is always **sql#mysqlReplicaConfiguration**.",
          "type": "string"
        },
        "verifyServerCertificate": {
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.",
          "type": "boolean"
        }
      },
      "id": "MySqlReplicaConfiguration",
      "description": "Read-replica configuration specific to MySQL databases.",
      "type": "object"
    },
    "BinLogCoordinates": {
      "description": "Binary log coordinates.",
      "type": "object",
      "properties": {
        "binLogFileName": {
          "type": "string",
          "description": "Name of the binary log file for a Cloud SQL instance."
        },
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#binLogCoordinates*.",
          "type": "string"
        }
      },
      "id": "BinLogCoordinates"
    },
    "DemoteMasterContext": {
      "type": "object",
      "id": "DemoteMasterContext",
      "description": "Database instance demote primary instance context.",
      "properties": {
        "kind": {
          "description": "This is always *sql#demoteMasterContext*.",
          "type": "string"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup.",
          "type": "string"
        },
        "verifyGtidConsistency": {
          "description": "Verify GTID consistency for demote operation. Default value: *True*. Setting this flag to false enables you to bypass GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.",
          "type": "boolean"
        },
        "replicaConfiguration": {
          "$ref": "DemoteMasterConfiguration",
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance."
        }
      }
    },
    "RestoreBackupContext": {
      "properties": {
        "instanceId": {
          "description": "The ID of the instance that the backup was taken from.",
          "type": "string"
        },
        "project": {
          "description": "The full project ID of the source instance.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#restoreBackupContext*."
        },
        "backupRunId": {
          "format": "int64",
          "description": "The ID of the backup run to restore from.",
          "type": "string"
        }
      },
      "id": "RestoreBackupContext",
      "type": "object",
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id."
    },
    "BackupRun": {
      "properties": {
        "enqueuedTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        },
        "id": {
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "type": "string",
          "format": "int64"
        },
        "backupKind": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ],
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ]
        },
        "status": {
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "type": "string",
          "description": "The status of this run."
        },
        "location": {
          "type": "string",
          "description": "Location of the backups."
        },
        "kind": {
          "description": "This is always *sql#backupRun*.",
          "type": "string"
        },
        "endTime": {
          "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "type": {
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ],
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\". This field defaults to \"ON_DEMAND\" and is ignored, when specified for insert requests.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ]
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Encryption status specific to a backup."
        },
        "diskEncryptionConfiguration": {
          "description": "Encryption configuration specific to a backup.",
          "$ref": "DiskEncryptionConfiguration"
        },
        "error": {
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status.",
          "$ref": "OperationError"
        },
        "startTime": {
          "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        },
        "windowStartTime": {
          "type": "string",
          "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime"
        },
        "description": {
          "description": "The description of this run, only applicable to on-demand backups.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "BackupRun",
      "description": "A BackupRun resource."
    },
    "SqlExternalSyncSettingError": {
      "properties": {
        "detail": {
          "type": "string",
          "description": "Additional information about the error encountered."
        },
        "type": {
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "SQLSERVER_SERVERNAME_MISMATCH",
            "PRIMARY_ALREADY_SETUP"
          ],
          "description": "Identifies the specific error that occurred.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running.",
            "The table definition is not support due to missing primary key or replica identity, applicable for postgres.",
            "The customer has a definer that will break EM setup.",
            "SQL Server @@SERVERNAME does not match actual host name",
            "The primary instance has been setup and will fail the setup."
          ]
        },
        "kind": {
          "type": "string",
          "description": "Can be *sql#externalSyncSettingError* or *sql#externalSyncSettingWarning*."
        }
      },
      "type": "object",
      "description": "External primary instance migration setting error.",
      "id": "SqlExternalSyncSettingError"
    },
    "InstancesRestoreBackupRequest": {
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "type": "object",
      "description": "Database instance restore backup request.",
      "id": "InstancesRestoreBackupRequest"
    },
    "GenerateEphemeralCertResponse": {
      "properties": {
        "ephemeralCert": {
          "$ref": "SslCert",
          "description": "Generated cert"
        }
      },
      "type": "object",
      "id": "GenerateEphemeralCertResponse",
      "description": "Ephemeral certificate creation request."
    },
    "FailoverContext": {
      "type": "object",
      "id": "FailoverContext",
      "description": "Database instance failover context.",
      "properties": {
        "kind": {
          "description": "This is always *sql#failoverContext*.",
          "type": "string"
        },
        "settingsVersion": {
          "type": "string",
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.",
          "format": "int64"
        }
      }
    },
    "SslCertsInsertRequest": {
      "properties": {
        "commonName": {
          "type": "string",
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance."
        }
      },
      "id": "SslCertsInsertRequest",
      "description": "SslCerts insert request.",
      "type": "object"
    },
    "CloneContext": {
      "id": "CloneContext",
      "type": "object",
      "description": "Database instance clone context.",
      "properties": {
        "pointInTime": {
          "type": "string",
          "description": "Timestamp, if specified, identifies the time to which the source instance is cloned.",
          "format": "google-datetime"
        },
        "destinationInstanceName": {
          "type": "string",
          "description": "Name of the Cloud SQL instance to be created as a clone."
        },
        "kind": {
          "description": "This is always *sql#cloneContext*.",
          "type": "string"
        },
        "binLogCoordinates": {
          "$ref": "BinLogCoordinates",
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates."
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "UsersListResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
        },
        "kind": {
          "description": "This is always *sql#usersList*.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "User"
          },
          "description": "List of user resources in the instance."
        }
      },
      "description": "User list response.",
      "id": "UsersListResponse",
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.",
      "id": "Operation",
      "properties": {
        "status": {
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ],
          "type": "string",
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "The status of an operation. Valid values are: **PENDING** **RUNNING** **DONE** **SQL_OPERATION_STATUS_UNSPECIFIED**"
        },
        "exportContext": {
          "description": "The context for export operation, if applicable.",
          "$ref": "ExportContext"
        },
        "operationType": {
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
            "Starts external sync of a Cloud SQL EM replica to an external primary instance."
          ],
          "type": "string",
          "description": "The type of the operation. Valid values are: **CREATE** **DELETE** **UPDATE** **RESTART** **IMPORT** **EXPORT** **BACKUP_VOLUME** **RESTORE_VOLUME** **CREATE_USER** **DELETE_USER** **CREATE_DATABASE** **DELETE_DATABASE**",
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC"
          ]
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "user": {
          "description": "The email address of the user who initiated this operation.",
          "type": "string"
        },
        "targetProject": {
          "type": "string",
          "description": "The project ID of the target instance related to this operation."
        },
        "error": {
          "description": "If errors occurred during processing of this operation, this field will be populated.",
          "$ref": "OperationErrors"
        },
        "importContext": {
          "description": "The context for import operation, if applicable.",
          "$ref": "ImportContext"
        },
        "backupContext": {
          "$ref": "BackupContext",
          "description": "The context for backup operation, if applicable."
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#operation**."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**."
        },
        "targetLink": {
          "type": "string"
        },
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "insertTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**."
        }
      }
    },
    "Settings": {
      "properties": {
        "dataDiskSizeGb": {
          "format": "int64",
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
          "type": "string"
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
        },
        "activationPolicy": {
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: **ALWAYS**: The instance is on, and remains so even in the absence of connection requests. **NEVER**: The instance is off; it is not activated, even if a connection request arrives.",
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
            "The instance never starts.",
            "The instance starts upon receiving requests."
          ]
        },
        "denyMaintenancePeriods": {
          "description": "Deny maintenance periods",
          "type": "array",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          }
        },
        "locationPreference": {
          "$ref": "LocationPreference",
          "description": "The location preference settings. This allows the instance to be located as near as possible to Compute Engine zone for better performance."
        },
        "databaseFlags": {
          "type": "array",
          "items": {
            "$ref": "DatabaseFlags"
          },
          "description": "The database flags passed to the instance at startup."
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "collation": {
          "type": "string",
          "description": "The name of server Instance collation."
        },
        "availabilityType": {
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ],
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "type": "string",
          "description": "Availability type. Potential values: **ZONAL**: The instance serves data from only one zone. Outages in that zone affect data accessibility. **REGIONAL**: The instance can serve data from more than one zone in a region (it is highly available). For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability)."
        },
        "settingsVersion": {
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
          "type": "string",
          "format": "int64"
        },
        "databaseReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not."
        },
        "replicationType": {
          "type": "string",
          "description": "The type of replication this instance uses. This can be either **ASYNCHRONOUS** or **SYNCHRONOUS**. (Deprecated) This property was only applicable to First Generation instances.",
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
          ]
        },
        "dataDiskType": {
          "type": "string",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ],
          "description": "The type of data disk: **PD_SSD** (default) or **PD_HDD**.",
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
            "This field is deprecated and will be removed from a future version of the API."
          ]
        },
        "ipConfiguration": {
          "$ref": "IpConfiguration",
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances."
        },
        "activeDirectoryConfig": {
          "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
          "$ref": "SqlActiveDirectoryConfig"
        },
        "authorizedGaeApplications": {
          "type": "array",
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
          "items": {
            "type": "string"
          }
        },
        "insightsConfig": {
          "$ref": "InsightsConfig",
          "description": "Insights configuration, for now relevant only for Postgres."
        },
        "storageAutoResizeLimit": {
          "format": "int64",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "type": "string"
        },
        "crashSafeReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#settings**."
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example **db-custom-1-3840**."
        },
        "pricingPlan": {
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "description": "The pricing plan for this instance. This can be either **PER_USE** or **PACKAGE**. Only **PER_USE** is supported for Second Generation instances."
        },
        "userLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair."
        },
        "storageAutoResize": {
          "type": "boolean",
          "description": "Configuration to increase storage size automatically. The default value is true."
        }
      },
      "id": "Settings",
      "description": "Database instance settings.",
      "type": "object"
    },
    "SqlScheduledMaintenance": {
      "id": "SqlScheduledMaintenance",
      "description": "Any scheduled maintenancce for this instance.",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "type": "string"
        },
        "canDefer": {
          "type": "boolean"
        },
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        },
        "scheduleDeadlineTime": {
          "description": "Maintenance cannot be rescheduled to start beyond this deadline.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "SqlActiveDirectoryConfig": {
      "id": "SqlActiveDirectoryConfig",
      "properties": {
        "domain": {
          "type": "string",
          "description": "The name of the domain (e.g., mydomain.com)."
        },
        "kind": {
          "type": "string",
          "description": "This is always sql#activeDirectoryConfig."
        }
      },
      "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
      "type": "object"
    },
    "DatabaseInstance": {
      "type": "object",
      "description": "A Cloud SQL instance resource.",
      "id": "DatabaseInstance",
      "properties": {
        "outOfDiskReport": {
          "description": "This field represents the report generated by the proactive database wellness job for OutOfDisk issues. Writers: -- the proactive database wellness job for OOD. Readers: -- the Pantheon frontend -- the proactive database wellness job",
          "$ref": "SqlOutOfDiskReport"
        },
        "maxDiskSize": {
          "description": "The maximum disk size of the instance in bytes.",
          "type": "string",
          "format": "int64"
        },
        "scheduledMaintenance": {
          "$ref": "SqlScheduledMaintenance",
          "description": "The start time of any upcoming scheduled maintenance for this instance."
        },
        "onPremisesConfiguration": {
          "description": "Configuration specific to on-premises instances.",
          "$ref": "OnPremisesConfiguration"
        },
        "name": {
          "type": "string",
          "description": "Name of the Cloud SQL instance. This does not include the project ID."
        },
        "region": {
          "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation.",
          "type": "string"
        },
        "ipv6Address": {
          "type": "string",
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances."
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array"
        },
        "replicaConfiguration": {
          "description": "Configuration specific to failover replicas and read replicas.",
          "$ref": "ReplicaConfiguration"
        },
        "secondaryGceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone. Reserved for future use."
        },
        "backendType": {
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "type": "string",
          "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.",
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ]
        },
        "diskEncryptionStatus": {
          "description": "Disk encryption status specific to an instance.",
          "$ref": "DiskEncryptionStatus"
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Disk encryption configuration specific to an instance."
        },
        "currentDiskSize": {
          "format": "int64",
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details.",
          "type": "string"
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as primary in the replication setup."
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "instanceType": {
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance.",
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
            "A Cloud SQL instance acting as a read-replica."
          ],
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
          "type": "string"
        },
        "settings": {
          "$ref": "Settings",
          "description": "The user settings."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead.",
          "type": "string"
        },
        "failoverReplica": {
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID."
            },
            "available": {
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.",
              "type": "boolean"
            }
          },
          "type": "object",
          "description": "The name and status of the failover replica."
        },
        "connectionName": {
          "type": "string",
          "description": "Connection name of the Cloud SQL instance used in connection strings."
        },
        "satisfiesPzs": {
          "type": "boolean",
          "description": "The status indicating if instance satisfiesPzs. Reserved for future use."
        },
        "replicaNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The replicas of the instance."
        },
        "rootPassword": {
          "type": "string",
          "description": "Initial root password. Use only on creation."
        },
        "state": {
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED"
          ],
          "type": "string",
          "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance is running, or has been stopped by owner. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed.",
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance is running, or has been stopped by owner.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance."
          ]
        },
        "databaseVersion": {
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "POSTGRES_13",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is PostgreSQL 13.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ],
          "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11*, *POSTGRES_12*, *POSTGRES_13* (default). SQL Server instances: *SQLSERVER_2019_STANDARD*, *SQLSERVER_2019_ENTERPRISE*, *SQLSERVER_2019_EXPRESS*, or *SQLSERVER_2019_WEB*, *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*."
        },
        "suspensionReason": {
          "type": "array",
          "description": "If the instance state is SUSPENDED, the reason for the suspension.",
          "items": {
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ],
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ],
            "type": "string"
          }
        },
        "serviceAccountEmailAddress": {
          "type": "string",
          "description": "The service account email address assigned to the instance. This property is read-only."
        },
        "gceZone": {
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instance*."
        }
      }
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "id": "Tier",
      "properties": {
        "tier": {
          "description": "An identifier for the machine type, for example, db-custom-1-3840. For related information, see Pricing.",
          "type": "string"
        },
        "DiskQuota": {
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "RAM": {
          "description": "The maximum RAM usage of this tier in bytes.",
          "type": "string",
          "format": "int64"
        },
        "region": {
          "items": {
            "type": "string"
          },
          "description": "The applicable regions for this tier.",
          "type": "array"
        },
        "kind": {
          "description": "This is always *sql#tier*.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationError": {
      "id": "OperationError",
      "description": "Database instance operation error.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "code": {
          "description": "Identifies the specific error that occurred.",
          "type": "string"
        },
        "kind": {
          "description": "This is always **sql#operationError**.",
          "type": "string"
        }
      }
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "description": "Read-replica configuration specific to MySQL databases.",
      "properties": {
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8.",
          "type": "string"
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#demoteMasterMysqlReplicaConfiguration**."
        },
        "password": {
          "type": "string",
          "description": "The password for the replication connection."
        }
      },
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "type": "object"
    },
    "SslCert": {
      "id": "SslCert",
      "type": "object",
      "properties": {
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**",
          "format": "google-datetime",
          "type": "string"
        },
        "commonName": {
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+.",
          "type": "string"
        },
        "expirationTime": {
          "format": "google-datetime",
          "description": "The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "certSerialNumber": {
          "type": "string",
          "description": "Serial number, as extracted from the certificate."
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "sha1Fingerprint": {
          "description": "Sha1 Fingerprint.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always sql#sslCert."
        }
      },
      "description": "SslCerts Resource"
    },
    "DenyMaintenancePeriod": {
      "properties": {
        "startDate": {
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "endDate": {
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "time": {
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DenyMaintenancePeriod",
      "description": "Deny maintenance Periods. This specifies a date range during when all CSA rollout will be denied."
    },
    "ExportContext": {
      "description": "Database instance export context.",
      "id": "ExportContext",
      "type": "object",
      "properties": {
        "sqlExportOptions": {
          "description": "Options for exporting data as SQL statements.",
          "type": "object",
          "properties": {
            "mysqlExportOptions": {
              "description": "Options for exporting from MySQL.",
              "type": "object",
              "properties": {
                "masterData": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Option to include SQL statement required to set up replication. If set to **1**, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to **2**, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than **1**, --set-gtid-purged is set to OFF."
                }
              }
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            },
            "tables": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
            }
          }
        },
        "csvExportOptions": {
          "description": "Options for exporting data as CSV. **MySQL** and **PostgreSQL** instances only.",
          "properties": {
            "selectQuery": {
              "type": "string",
              "description": "The select query used to extract the data."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#exportContext**."
        },
        "databases": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Databases to be exported. **MySQL instances:** If **fileType** is **SQL** and no database is specified, all databases are exported, except for the **mysql** system database. If **fileType** is **CSV**, you can specify one database, either by using this property or by using the **csvExportOptions.selectQuery** property, which takes precedence over this property. **PostgreSQL instances:** You must specify one database to be exported. If **fileType** is **CSV**, this database must match the one specified in the **csvExportOptions.selectQuery** property. **SQL Server instances:** You must specify one database to be exported, and the **fileType** must be **BAK**."
        },
        "offload": {
          "type": "boolean",
          "description": "Option for export offload."
        },
        "fileType": {
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "description": "The file type for the specified uri. **SQL**: The file contains SQL statements. **CSV**: The file contains CSV data. **BAK**: The file contains backup data for a SQL Server instance.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form **gs://bucketName/fileName**. If the file already exists, the request succeeds, but the operation fails. If **fileType** is **SQL** and the filename ends with .gz, the contents are compressed."
        }
      }
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "description": "Reschedule options for maintenance windows.",
      "type": "object",
      "id": "SqlInstancesRescheduleMaintenanceRequestBody",
      "properties": {
        "reschedule": {
          "$ref": "Reschedule",
          "description": "Required. The type of the reschedule the user wants."
        }
      }
    },
    "FlagsListResponse": {
      "description": "Flags list response.",
      "type": "object",
      "id": "FlagsListResponse",
      "properties": {
        "items": {
          "description": "List of flags.",
          "items": {
            "$ref": "Flag"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#flagsList**."
        }
      }
    },
    "ReplicaConfiguration": {
      "id": "ReplicaConfiguration",
      "type": "object",
      "properties": {
        "mysqlReplicaConfiguration": {
          "$ref": "MySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata.The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
        },
        "failoverTarget": {
          "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#replicaConfiguration*."
        }
      },
      "description": "Read-replica configuration for connecting to the primary instance."
    },
    "InstancesListServerCasResponse": {
      "type": "object",
      "description": "Instances ListServerCas response.",
      "id": "InstancesListServerCasResponse",
      "properties": {
        "activeVersion": {
          "type": "string"
        },
        "certs": {
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instancesListServerCas*."
        }
      }
    },
    "SslCertsCreateEphemeralRequest": {
      "id": "SslCertsCreateEphemeralRequest",
      "properties": {
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        },
        "access_token": {
          "description": "Access token to include in the signed certificate.",
          "type": "string"
        }
      },
      "description": "SslCerts create ephemeral certificate request.",
      "type": "object"
    },
    "SqlServerDatabaseDetails": {
      "type": "object",
      "description": "Represents a Sql Server database on the Cloud SQL instance.",
      "properties": {
        "compatibilityLevel": {
          "type": "integer",
          "description": "The version of SQL Server with which the database is to be made compatible",
          "format": "int32"
        },
        "recoveryModel": {
          "description": "The recovery model of a SQL Server database",
          "type": "string"
        }
      },
      "id": "SqlServerDatabaseDetails"
    },
    "MaintenanceWindow": {
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
      "properties": {
        "day": {
          "description": "day of week (1-7), starting on Monday.",
          "format": "int32",
          "type": "integer"
        },
        "hour": {
          "description": "hour of day - 0 to 23.",
          "type": "integer",
          "format": "int32"
        },
        "updateTrack": {
          "description": "Maintenance timing setting: **canary** (Earlier) or **stable** (Later). [Learn more] (https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).",
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
          ]
        },
        "kind": {
          "description": "This is always **sql#maintenanceWindow**.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MaintenanceWindow"
    },
    "User": {
      "type": "object",
      "properties": {
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL."
        },
        "host": {
          "type": "string",
          "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
        },
        "type": {
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ],
          "type": "string",
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ],
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#user*."
        },
        "etag": {
          "type": "string",
          "description": "This field is deprecated and will be removed from a future version of the API."
        },
        "password": {
          "description": "The password for the user.",
          "type": "string"
        },
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        }
      },
      "description": "A Cloud SQL user resource.",
      "id": "User"
    },
    "SqlServerUserDetails": {
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "If the user has been disabled"
        },
        "serverRoles": {
          "type": "array",
          "description": "The server roles for this user",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "SqlServerUserDetails"
    },
    "TruncateLogContext": {
      "id": "TruncateLogContext",
      "properties": {
        "logType": {
          "description": "The type of log to truncate. Valid values are *MYSQL_GENERAL_TABLE* and *MYSQL_SLOW_TABLE*.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#truncateLogContext*."
        }
      },
      "type": "object",
      "description": "Database Instance truncate log context."
    },
    "DemoteMasterConfiguration": {
      "id": "DemoteMasterConfiguration",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always **sql#demoteMasterConfiguration**."
        },
        "mysqlReplicaConfiguration": {
          "$ref": "DemoteMasterMySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named **master.info** in the data directory."
        }
      },
      "type": "object",
      "description": "Read-replica configuration for connecting to the on-premises primary instance."
    },
    "BackupRetentionSettings": {
      "type": "object",
      "properties": {
        "retentionUnit": {
          "description": "The unit that 'retained_backups' represents.",
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ],
          "type": "string",
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ]
        },
        "retainedBackups": {
          "type": "integer",
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.",
          "format": "int32"
        }
      },
      "id": "BackupRetentionSettings",
      "description": "We currently only support backup retention by specifying the number of backups we will retain."
    },
    "Database": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name."
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#database**."
        },
        "charset": {
          "type": "string",
          "description": "The Cloud SQL charset value."
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID."
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "collation": {
          "type": "string",
          "description": "The Cloud SQL collation value."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Database",
      "description": "Represents a SQL database on the Cloud SQL instance."
    },
    "InstancesExportRequest": {
      "id": "InstancesExportRequest",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      },
      "description": "Database instance export request.",
      "type": "object"
    },
    "OperationErrors": {
      "type": "object",
      "description": "Database instance operation errors list wrapper.",
      "id": "OperationErrors",
      "properties": {
        "kind": {
          "description": "This is always **sql#operationErrors**.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "OperationError"
          },
          "type": "array",
          "description": "The list of errors encountered while processing this operation."
        }
      }
    },
    "InstancesListResponse": {
      "id": "InstancesListResponse",
      "description": "Database instances list response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#instancesList*.",
          "type": "string"
        },
        "warnings": {
          "description": "List of warnings that occurred while handling the request.",
          "type": "array",
          "items": {
            "$ref": "ApiWarning"
          }
        },
        "items": {
          "description": "List of database instance resources.",
          "type": "array",
          "items": {
            "$ref": "DatabaseInstance"
          }
        }
      }
    },
    "Reschedule": {
      "type": "object",
      "properties": {
        "rescheduleType": {
          "type": "string",
          "description": "Required. The type of the reschedule.",
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ],
          "enumDescriptions": [
            "",
            "Reschedules maintenance to happen now (within 5 minutes).",
            "Reschedules maintenance to occur within one week from the originally scheduled day and time.",
            "Reschedules maintenance to a specific time and day."
          ]
        },
        "scheduleTime": {
          "type": "string",
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime"
        }
      },
      "id": "Reschedule"
    },
    "IpConfiguration": {
      "type": "object",
      "description": "IP Management configuration.",
      "id": "IpConfiguration",
      "properties": {
        "ipv4Enabled": {
          "description": "Whether the instance is assigned a public IP address or not.",
          "type": "boolean"
        },
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, **/projects/myProject/global/networks/default**. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP are enforced or not.",
          "type": "boolean"
        },
        "authorizedNetworks": {
          "type": "array",
          "items": {
            "$ref": "AclEntry"
          },
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: **192.168.100.0/24**)."
        }
      }
    },
    "ImportContext": {
      "properties": {
        "uri": {
          "description": "Path to the import file in Cloud Storage, in the form **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported when **fileType** is **SQL**. The instance must have write permissions to the bucket and read access to the file.",
          "type": "string"
        },
        "csvImportOptions": {
          "properties": {
            "columns": {
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "table": {
              "description": "The table to which CSV data is imported.",
              "type": "string"
            }
          },
          "description": "Options for importing data as CSV.",
          "type": "object"
        },
        "database": {
          "description": "The target database for the import. If **fileType** is **SQL**, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If **fileType** is **CSV**, one database must be specified.",
          "type": "string"
        },
        "fileType": {
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "type": "string",
          "description": "The file type for the specified uri. **SQL**: The file contains SQL statements. **CSV**: The file contains CSV data."
        },
        "kind": {
          "description": "This is always **sql#importContext**.",
          "type": "string"
        },
        "importUser": {
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only.",
          "type": "string"
        },
        "bakImportOptions": {
          "type": "object",
          "description": "Import parameters specific to SQL Server .BAK files",
          "properties": {
            "encryptionOptions": {
              "properties": {
                "pvkPassword": {
                  "type": "string",
                  "description": "Password that encrypts the private key"
                },
                "pvkPath": {
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form **gs://bucketName/fileName**. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                },
                "certPath": {
                  "type": "string",
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form **gs://bucketName/fileName**. The instance must have write permissions to the bucket and read access to the file."
                }
              },
              "type": "object"
            }
          }
        }
      },
      "id": "ImportContext",
      "type": "object",
      "description": "Database instance import context."
    },
    "SslCertDetail": {
      "type": "object",
      "properties": {
        "certPrivateKey": {
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security.",
          "type": "string"
        },
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        }
      },
      "description": "SslCertDetail.",
      "id": "SslCertDetail"
    },
    "OnPremisesConfiguration": {
      "properties": {
        "kind": {
          "description": "This is always *sql#onPremisesConfiguration*.",
          "type": "string"
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "dumpFilePath": {
          "type": "string",
          "description": "The dump file to create the Cloud SQL replica."
        },
        "hostPort": {
          "type": "string",
          "description": "The host and port of the on-premises instance in host:port format"
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "password": {
          "description": "The password for connecting to on-premises instance.",
          "type": "string"
        },
        "username": {
          "description": "The username for connecting to on-premises instance.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OnPremisesConfiguration",
      "description": "On-premises instance configuration."
    },
    "LocationPreference": {
      "type": "object",
      "description": "Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "properties": {
        "zone": {
          "type": "string",
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.)."
        },
        "followGaeApplication": {
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance.",
          "type": "string"
        },
        "secondaryZone": {
          "type": "string",
          "description": "The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). Reserved for future use."
        },
        "kind": {
          "type": "string",
          "description": "This is always **sql#locationPreference**."
        }
      },
      "id": "LocationPreference"
    },
    "DatabasesListResponse": {
      "description": "Database list response.",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of database resources in the instance.",
          "items": {
            "$ref": "Database"
          }
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#databasesList*."
        }
      },
      "id": "DatabasesListResponse",
      "type": "object"
    },
    "RotateServerCaContext": {
      "id": "RotateServerCaContext",
      "type": "object",
      "properties": {
        "nextVersion": {
          "type": "string",
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version."
        },
        "kind": {
          "description": "This is always *sql#rotateServerCaContext*.",
          "type": "string"
        }
      },
      "description": "Instance rotate server CA context."
    },
    "AclEntry": {
      "description": "An entry for an Access Control list.",
      "type": "object",
      "id": "AclEntry",
      "properties": {
        "value": {
          "type": "string",
          "description": "The allowlisted value for the access control list."
        },
        "kind": {
          "description": "This is always **sql#aclEntry**.",
          "type": "string"
        },
        "expirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**."
        },
        "name": {
          "description": "Optional. A label to identify this entry.",
          "type": "string"
        }
      }
    },
    "OperationsListResponse": {
      "description": "Operations list response.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#operationsList*."
        },
        "items": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "List of operation resources."
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "id": "OperationsListResponse",
      "type": "object"
    },
    "DatabaseFlags": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation."
        },
        "value": {
          "type": "string",
          "description": "The value of the flag. Booleans are set to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a value."
        }
      },
      "description": "Database flags for Cloud SQL instances.",
      "id": "DatabaseFlags"
    },
    "InstancesImportRequest": {
      "properties": {
        "importContext": {
          "description": "Contains details about the import operation.",
          "$ref": "ImportContext"
        }
      },
      "type": "object",
      "description": "Database instance import request.",
      "id": "InstancesImportRequest"
    },
    "InstancesCloneRequest": {
      "id": "InstancesCloneRequest",
      "description": "Database instance clone request.",
      "type": "object",
      "properties": {
        "cloneContext": {
          "description": "Contains details about the clone operation.",
          "$ref": "CloneContext"
        }
      }
    },
    "BackupRunsListResponse": {
      "id": "BackupRunsListResponse",
      "description": "Backup run list results.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "items": {
          "description": "A list of backup runs in reverse chronological order of the enqueued time.",
          "items": {
            "$ref": "BackupRun"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#backupRunsList*."
        }
      }
    },
    "DiskEncryptionConfiguration": {
      "id": "DiskEncryptionConfiguration",
      "description": "Disk encryption configuration for an instance.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always **sql#diskEncryptionConfiguration**."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of KMS key for disk encryption"
        }
      },
      "type": "object"
    },
    "InstancesRotateServerCaRequest": {
      "id": "InstancesRotateServerCaRequest",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      },
      "type": "object",
      "description": "Rotate server CA request."
    },
    "IpMapping": {
      "properties": {
        "timeToRetire": {
          "format": "google-datetime",
          "type": "string",
          "description": "The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**. This field is only available when the IP is scheduled to be retired."
        },
        "type": {
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "description": "The type of this IP address. A **PRIMARY** address is a public address that can accept incoming connections. A **PRIVATE** address is a private address that can accept incoming connections. An **OUTGOING** address is the source address of connections originating from the instance, if supported.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown IP address type.",
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address assigned."
        }
      },
      "description": "Database instance IP Mapping.",
      "id": "IpMapping",
      "type": "object"
    },
    "SqlOutOfDiskReport": {
      "description": "This message wraps up the information written by out-of-disk detection job.",
      "type": "object",
      "id": "SqlOutOfDiskReport",
      "properties": {
        "sqlOutOfDiskState": {
          "description": "This field represents the state generated by the proactive database wellness job for OutOfDisk issues. Writers: -- the proactive database wellness job for OOD. Readers: -- the Pantheon frontend -- the proactive database wellness job",
          "enumDescriptions": [
            "Unspecified state",
            "The instance has plenty space on data disk",
            "Data disk is almost used up. It is shutdown to prevent data corruption."
          ],
          "type": "string",
          "enum": [
            "SQL_OUT_OF_DISK_STATE_UNSPECIFIED",
            "NORMAL",
            "SOFT_SHUTDOWN"
          ]
        },
        "sqlMinRecommendedIncreaseSizeGb": {
          "description": "The minimum recommended increase size in GigaBytes This field is consumed by the frontend Writers: -- the proactive database wellness job for OOD. Readers: -- the Pantheon frontend",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupConfiguration": {
      "properties": {
        "kind": {
          "description": "This is always **sql#backupConfiguration**.",
          "type": "string"
        },
        "backupRetentionSettings": {
          "$ref": "BackupRetentionSettings",
          "description": "Backup retention settings."
        },
        "startTime": {
          "type": "string",
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - **HH:MM**."
        },
        "replicationLogArchivingEnabled": {
          "type": "boolean",
          "description": "Reserved for future use."
        },
        "enabled": {
          "description": "Whether this configuration is enabled.",
          "type": "boolean"
        },
        "binaryLogEnabled": {
          "type": "boolean",
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
        },
        "transactionLogRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7."
        },
        "pointInTimeRecoveryEnabled": {
          "type": "boolean",
          "description": "(Postgres only) Whether point in time recovery is enabled."
        },
        "location": {
          "type": "string",
          "description": "Location of the backup"
        }
      },
      "description": "Database instance backup configuration.",
      "type": "object",
      "id": "BackupConfiguration"
    },
    "InstancesTruncateLogRequest": {
      "type": "object",
      "id": "InstancesTruncateLogRequest",
      "description": "Instance truncate log request.",
      "properties": {
        "truncateLogContext": {
          "description": "Contains details about the truncate log operation.",
          "$ref": "TruncateLogContext"
        }
      }
    },
    "ConnectSettings": {
      "type": "object",
      "description": "Connect settings retrieval response.",
      "id": "ConnectSettings",
      "properties": {
        "backendType": {
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "type": "string",
          "description": "**SECOND_GEN**: Cloud SQL database instance. **EXTERNAL**: A database server that is not managed by Google. This property is read-only; use the **tier** property in the **settings** object to determine the database type.",
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ]
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array"
        },
        "databaseVersion": {
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "POSTGRES_13",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ],
          "type": "string",
          "description": "The database engine type and version. The **databaseVersion** field cannot be changed after instance creation. MySQL instances: **MYSQL_8_0**, **MYSQL_5_7** (default), or **MYSQL_5_6**. PostgreSQL instances: **POSTGRES_9_6**, **POSTGRES_10**, **POSTGRES_11** or **POSTGRES_12** (default). SQL Server instances: **SQLSERVER_2017_STANDARD** (default), **SQLSERVER_2017_ENTERPRISE**, **SQLSERVER_2017_EXPRESS**, or **SQLSERVER_2017_WEB**.",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is PostgreSQL 13.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ]
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#connectSettings`."
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        }
      }
    }
  },
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "name": "sqladmin",
  "documentationLink": "https://developers.google.com/cloud-sql/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "description": "API for Cloud SQL database instance management",
  "batchPath": "batch",
  "ownerName": "Google",
  "baseUrl": "https://sqladmin.googleapis.com/",
  "rootUrl": "https://sqladmin.googleapis.com/"
}

{
  "resources": {
    "backupRuns": {
      "methods": {
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/backupRuns",
          "description": "Creates a new backup run on demand.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "BackupRun"
          },
          "id": "sql.backupRuns.insert",
          "httpMethod": "POST"
        },
        "list": {
          "path": "v1/projects/{project}/instances/{instance}/backupRuns",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns",
          "httpMethod": "GET",
          "response": {
            "$ref": "BackupRunsListResponse"
          },
          "description": "Lists all backup runs associated with the project or a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "int32",
              "description": "Maximum number of backup runs per response."
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            },
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID, or \"-\" for all instances. This does not include the project ID.",
              "required": true
            },
            "pageToken": {
              "location": "query",
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "type": "string"
            }
          },
          "id": "sql.backupRuns.list"
        },
        "get": {
          "description": "Retrieves a resource containing information about a backup run.",
          "path": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "id": "sql.backupRuns.get",
          "httpMethod": "GET",
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "BackupRun"
          },
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "id": {
              "format": "int64",
              "location": "path",
              "required": true,
              "description": "The ID of this backup run.",
              "type": "string"
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "id": {
              "description": "The ID of the backup run to delete. To find a backup run ID, use the [list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/backupRuns/list) method.",
              "required": true,
              "location": "path",
              "format": "int64",
              "type": "string"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "id": "sql.backupRuns.delete",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "response": {
            "$ref": "Operation"
          },
          "description": "Deletes the backup taken by a backup run.",
          "path": "v1/projects/{project}/instances/{instance}/backupRuns/{id}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "instances": {
      "methods": {
        "truncateLog": {
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the Cloud SQL project.",
              "required": true,
              "type": "string"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "id": "sql.instances.truncateLog",
          "flatPath": "v1/projects/{project}/instances/{instance}/truncateLog",
          "path": "v1/projects/{project}/instances/{instance}/truncateLog",
          "description": "Truncate MySQL general and slow query log tables MySQL only.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          }
        },
        "patch": {
          "path": "v1/projects/{project}/instances/{instance}",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "PATCH",
          "id": "sql.instances.patch",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          }
        },
        "rotateServerCa": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "flatPath": "v1/projects/{project}/instances/{instance}/rotateServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "path": "v1/projects/{project}/instances/{instance}/rotateServerCa",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "id": "sql.instances.rotateServerCa"
        },
        "demoteMaster": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "httpMethod": "POST",
          "flatPath": "v1/projects/{project}/instances/{instance}/demoteMaster",
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "description": "ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance name.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.demoteMaster",
          "path": "v1/projects/{project}/instances/{instance}/demoteMaster"
        },
        "listServerCas": {
          "httpMethod": "GET",
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/listServerCas",
          "id": "sql.instances.listServerCas",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/listServerCas",
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          }
        },
        "addServerCa": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/addServerCa",
          "path": "v1/projects/{project}/instances/{instance}/addServerCa",
          "description": "Adds a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "id": "sql.instances.addServerCa"
        },
        "failover": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/failover",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "httpMethod": "POST",
          "description": "Initiates a manual failover of a high availability (HA) primary instance to a standby instance, which becomes the primary instance. Users are then rerouted to the new primary. For more information, see the [Overview of high availability](https://cloud.google.com/sql/docs/mysql/high-availability) page in the Cloud SQL documentation. If using Legacy HA (MySQL only), this causes the instance to failover to its failover replica instance.",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "description": "ID of the project that contains the read replica.",
              "required": true
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/failover",
          "id": "sql.instances.failover",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "startReplica": {
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/startReplica",
          "description": "Starts the replication in the read replica instance.",
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL read replica instance name.",
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "ID of the project that contains the read replica."
            }
          },
          "httpMethod": "POST",
          "id": "sql.instances.startReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/startReplica",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "clone": {
          "response": {
            "$ref": "Operation"
          },
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.clone",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/clone",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "path": "v1/projects/{project}/instances/{instance}/clone",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the source as well as the clone Cloud SQL instance.",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST"
        },
        "import": {
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "id": "sql.instances.import",
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/projects/{project}/instances/{instance}/import",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/import",
          "httpMethod": "POST",
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage."
        },
        "update": {
          "request": {
            "$ref": "DatabaseInstance"
          },
          "httpMethod": "PUT",
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.update",
          "path": "v1/projects/{project}/instances/{instance}"
        },
        "resetSslConfig": {
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.resetSslConfig",
          "flatPath": "v1/projects/{project}/instances/{instance}/resetSslConfig",
          "path": "v1/projects/{project}/instances/{instance}/resetSslConfig",
          "parameters": {
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "description": "Lists instances under a given project.",
          "id": "sql.instances.list",
          "path": "v1/projects/{project}/instances",
          "flatPath": "v1/projects/{project}/instances",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "filter": {
              "type": "string",
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly.",
              "location": "query"
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "location": "path",
              "required": true
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of instances to return. The service may return fewer than this value. If unspecified, at most 500 instances are returned. The maximum value is 1000; values above 1000 are coerced to 1000."
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "InstancesListResponse"
          }
        },
        "promoteReplica": {
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of the project that contains the read replica."
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/promoteReplica",
          "id": "sql.instances.promoteReplica",
          "path": "v1/projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          }
        },
        "export": {
          "httpMethod": "POST",
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/export",
          "id": "sql.instances.export",
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/projects/{project}/instances/{instance}/export",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance to be exported.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "restoreBackup": {
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string"
            }
          },
          "id": "sql.instances.restoreBackup",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/restoreBackup",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/restoreBackup",
          "httpMethod": "POST"
        },
        "delete": {
          "httpMethod": "DELETE",
          "description": "Deletes a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.delete",
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance to be deleted."
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          }
        },
        "stopReplica": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.stopReplica",
          "httpMethod": "POST",
          "flatPath": "v1/projects/{project}/instances/{instance}/stopReplica",
          "path": "v1/projects/{project}/instances/{instance}/stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Stops the replication in the read replica instance.",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL read replica instance name.",
              "type": "string",
              "required": true
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Operation"
          }
        },
        "restart": {
          "flatPath": "v1/projects/{project}/instances/{instance}/restart",
          "httpMethod": "POST",
          "description": "Restarts a Cloud SQL instance.",
          "id": "sql.instances.restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/restart",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be restarted.",
              "type": "string",
              "location": "path",
              "required": true
            }
          }
        },
        "insert": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.insert",
          "parameters": {
            "project": {
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "project"
          ],
          "flatPath": "v1/projects/{project}/instances",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "DatabaseInstance"
          },
          "path": "v1/projects/{project}/instances",
          "description": "Creates a new Cloud SQL instance."
        },
        "get": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}",
          "flatPath": "v1/projects/{project}/instances/{instance}",
          "id": "sql.instances.get",
          "response": {
            "$ref": "DatabaseInstance"
          },
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "users": {
      "methods": {
        "insert": {
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "v1/projects/{project}/instances/{instance}/users",
          "description": "Creates a new user in a Cloud SQL instance.",
          "id": "sql.users.insert",
          "request": {
            "$ref": "User"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          }
        },
        "get": {
          "flatPath": "v1/projects/{project}/instances/{instance}/users/{name}",
          "parameterOrder": [
            "project",
            "instance",
            "name"
          ],
          "response": {
            "$ref": "User"
          },
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "name": {
              "type": "string",
              "location": "path",
              "description": "User of the instance. If the database user has a host, this is specified as {username}@{host} else as {username}.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/users/{name}",
          "description": "Retrieves a resource containing information about a user.",
          "id": "sql.users.get",
          "httpMethod": "GET"
        },
        "delete": {
          "description": "Deletes a user from a Cloud SQL instance.",
          "path": "v1/projects/{project}/instances/{instance}/users",
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "host": {
              "location": "query",
              "description": "Host of the user in the instance.",
              "type": "string"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "name": {
              "location": "query",
              "type": "string",
              "description": "Name of the user in the instance."
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "DELETE",
          "id": "sql.users.delete"
        },
        "list": {
          "id": "sql.users.list",
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET",
          "path": "v1/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "UsersListResponse"
          },
          "description": "Lists users in the specified Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          }
        },
        "update": {
          "flatPath": "v1/projects/{project}/instances/{instance}/users",
          "request": {
            "$ref": "User"
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/projects/{project}/instances/{instance}/users",
          "id": "sql.users.update",
          "parameters": {
            "name": {
              "description": "Name of the user in the instance.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Database instance ID. This does not include the project ID."
            },
            "host": {
              "location": "query",
              "type": "string",
              "description": "Optional. Host of the user in the instance."
            }
          },
          "description": "Updates an existing user in a Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "operations": {
      "methods": {
        "list": {
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "Maximum number of operations per response.",
              "format": "uint32"
            },
            "pageToken": {
              "type": "string",
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            }
          },
          "id": "sql.operations.list",
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "path": "v1/projects/{project}/operations",
          "flatPath": "v1/projects/{project}/operations",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ]
        },
        "get": {
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "flatPath": "v1/projects/{project}/operations/{operation}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "GET",
          "id": "sql.operations.get",
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "operation": {
              "description": "Instance operation ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "operation"
          ],
          "path": "v1/projects/{project}/operations/{operation}"
        }
      }
    },
    "sslCerts": {
      "methods": {
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "id": "sql.sslCerts.insert",
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string"
            },
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/sslCerts"
        },
        "delete": {
          "path": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "sha1Fingerprint": {
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "id": "sql.sslCerts.delete"
        },
        "createEphemeral": {
          "flatPath": "v1/projects/{project}/instances/{instance}/createEphemeral",
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "response": {
            "$ref": "SslCert"
          },
          "httpMethod": "POST",
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.sslCerts.createEphemeral",
          "path": "v1/projects/{project}/instances/{instance}/createEphemeral",
          "parameters": {
            "project": {
              "description": "Project ID of the Cloud SQL project.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "get": {
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "sha1Fingerprint": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Sha1 FingerPrint."
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "httpMethod": "GET",
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "response": {
            "$ref": "SslCert"
          },
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "id": "sql.sslCerts.get"
        },
        "list": {
          "path": "v1/projects/{project}/instances/{instance}/sslCerts",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Lists all of the current SSL certificates for the instance.",
          "httpMethod": "GET",
          "id": "sql.sslCerts.list",
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/sslCerts",
          "parameterOrder": [
            "project",
            "instance"
          ]
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "path": "v1/projects/{project}/tiers",
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the project for which to list tiers.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "project"
          ],
          "id": "sql.tiers.list",
          "flatPath": "v1/projects/{project}/tiers",
          "response": {
            "$ref": "TiersListResponse"
          },
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, `db-custom-1-3840`. For more information, see https://cloud.google.com/sql/pricing.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.flags.list",
          "path": "v1/flags",
          "flatPath": "v1/flags",
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "Lists all available database flags for Cloud SQL instances.",
          "parameters": {
            "databaseVersion": {
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "FlagsListResponse"
          }
        }
      }
    },
    "connect": {
      "methods": {
        "generateEphemeralCert": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}:generateEphemeralCert",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "GenerateEphemeralCertRequest"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}:generateEphemeralCert",
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            }
          },
          "id": "sql.connect.generateEphemeral",
          "response": {
            "$ref": "GenerateEphemeralCertResponse"
          }
        },
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ConnectSettings"
          },
          "path": "v1/projects/{project}/instances/{instance}/connectSettings",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Retrieves connect settings about a Cloud SQL instance.",
          "parameters": {
            "readTime": {
              "format": "google-datetime",
              "location": "query",
              "type": "string",
              "description": "Optional. Optional snapshot read timestamp to trade freshness for performance."
            },
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/connectSettings",
          "id": "sql.connect.get"
        }
      }
    },
    "databases": {
      "methods": {
        "list": {
          "id": "sql.databases.list",
          "description": "Lists databases in the specified Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "GET",
          "path": "v1/projects/{project}/instances/{instance}/databases",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases",
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            },
            "instance": {
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "DatabasesListResponse"
          }
        },
        "update": {
          "request": {
            "$ref": "Database"
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "id": "sql.databases.update",
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "httpMethod": "PUT",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "database": {
              "description": "Name of the database to be updated in the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}"
        },
        "get": {
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Database"
          },
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID."
            },
            "database": {
              "type": "string",
              "required": true,
              "description": "Name of the database in the instance.",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
          "id": "sql.databases.get"
        },
        "insert": {
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/databases",
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.databases.insert",
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
          "request": {
            "$ref": "Database"
          }
        },
        "patch": {
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "database": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Name of the database to be updated in the instance."
            },
            "instance": {
              "type": "string",
              "required": true,
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path"
            }
          },
          "httpMethod": "PATCH",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "id": "sql.databases.patch",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "request": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Operation"
          }
        },
        "delete": {
          "path": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "description": "Deletes a database from a Cloud SQL instance.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "database": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Name of the database to be deleted in the instance."
            },
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "id": "sql.databases.delete",
          "flatPath": "v1/projects/{project}/instances/{instance}/databases/{database}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "startExternalSync": {
              "flatPath": "v1/projects/{project}/instances/{instance}/startExternalSync",
              "description": "Start External primary instance migration.",
              "id": "sql.projects.instances.startExternalSync",
              "request": {
                "$ref": "SqlInstancesStartExternalSyncRequest"
              },
              "parameterOrder": [
                "project",
                "instance"
              ],
              "path": "v1/projects/{project}/instances/{instance}/startExternalSync",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "project": {
                  "required": true,
                  "description": "ID of the project that contains the instance.",
                  "type": "string",
                  "location": "path"
                },
                "instance": {
                  "type": "string",
                  "required": true,
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path"
                }
              }
            },
            "verifyExternalSyncSettings": {
              "flatPath": "v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "path": "v1/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "httpMethod": "POST",
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              },
              "parameterOrder": [
                "project",
                "instance"
              ],
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "parameters": {
                "project": {
                  "type": "string",
                  "required": true,
                  "description": "Project ID of the project that contains the instance.",
                  "location": "path"
                },
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsRequest"
              },
              "description": "Verify External primary instance external sync settings."
            },
            "rescheduleMaintenance": {
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              },
              "id": "sql.projects.instances.rescheduleMaintenance",
              "flatPath": "v1/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "parameters": {
                "project": {
                  "type": "string",
                  "required": true,
                  "description": "ID of the project that contains the instance.",
                  "location": "path"
                },
                "instance": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Cloud SQL instance ID. This does not include the project ID."
                }
              },
              "parameterOrder": [
                "project",
                "instance"
              ],
              "path": "v1/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "description": "Reschedules the maintenance on the given instance."
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "id": "sqladmin:v1",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "SqlServerAuditConfig": {
      "id": "SqlServerAuditConfig",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always sql#sqlServerAuditConfig",
          "type": "string"
        },
        "retentionInterval": {
          "type": "string",
          "format": "google-duration",
          "description": "How long to keep generated audit files."
        },
        "bucket": {
          "type": "string",
          "description": "The name of the destination bucket (e.g., gs://mybucket)."
        },
        "uploadInterval": {
          "format": "google-duration",
          "description": "How often to upload generated audit files.",
          "type": "string"
        }
      },
      "description": "SQL Server specific audit configuration."
    },
    "SqlServerDatabaseDetails": {
      "type": "object",
      "properties": {
        "compatibilityLevel": {
          "format": "int32",
          "description": "The version of SQL Server with which the database is to be made compatible",
          "type": "integer"
        },
        "recoveryModel": {
          "description": "The recovery model of a SQL Server database",
          "type": "string"
        }
      },
      "id": "SqlServerDatabaseDetails",
      "description": "Represents a Sql Server database on the Cloud SQL instance."
    },
    "OperationsListResponse": {
      "properties": {
        "kind": {
          "description": "This is always `sql#operationsList`.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "List of operation resources."
        }
      },
      "id": "OperationsListResponse",
      "description": "Operations list response.",
      "type": "object"
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "properties": {
        "kind": {
          "description": "This is always `sql#tier`.",
          "type": "string"
        },
        "region": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The applicable regions for this tier."
        },
        "tier": {
          "type": "string",
          "description": "An identifier for the machine type, for example, `db-custom-1-3840`. For related information, see [Pricing](/sql/pricing)."
        },
        "RAM": {
          "type": "string",
          "format": "int64",
          "description": "The maximum RAM usage of this tier in bytes."
        },
        "DiskQuota": {
          "type": "string",
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64"
        }
      },
      "id": "Tier",
      "type": "object"
    },
    "MySqlSyncConfig": {
      "properties": {
        "initialSyncFlags": {
          "items": {
            "$ref": "SyncFlags"
          },
          "type": "array",
          "description": "Flags to use for the initial dump."
        }
      },
      "type": "object",
      "description": "MySQL-specific external server sync settings.",
      "id": "MySqlSyncConfig"
    },
    "SslCert": {
      "type": "object",
      "description": "SslCerts Resource",
      "properties": {
        "sha1Fingerprint": {
          "description": "Sha1 Fingerprint.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "certSerialNumber": {
          "type": "string",
          "description": "Serial number, as extracted from the certificate."
        },
        "kind": {
          "description": "This is always `sql#sslCert`.",
          "type": "string"
        },
        "commonName": {
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`",
          "type": "string",
          "format": "google-datetime"
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "cert": {
          "type": "string",
          "description": "PEM representation."
        }
      },
      "id": "SslCert"
    },
    "DatabasesListResponse": {
      "type": "object",
      "description": "Database list response.",
      "id": "DatabasesListResponse",
      "properties": {
        "items": {
          "description": "List of database resources in the instance.",
          "items": {
            "$ref": "Database"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#databasesList`."
        }
      }
    },
    "InstancesTruncateLogRequest": {
      "description": "Instance truncate log request.",
      "properties": {
        "truncateLogContext": {
          "$ref": "TruncateLogContext",
          "description": "Contains details about the truncate log operation."
        }
      },
      "type": "object",
      "id": "InstancesTruncateLogRequest"
    },
    "GenerateEphemeralCertResponse": {
      "properties": {
        "ephemeralCert": {
          "$ref": "SslCert",
          "description": "Generated cert"
        }
      },
      "id": "GenerateEphemeralCertResponse",
      "description": "Ephemeral certificate creation request.",
      "type": "object"
    },
    "MySqlReplicaConfiguration": {
      "properties": {
        "dumpFilePath": {
          "type": "string",
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump."
        },
        "kind": {
          "description": "This is always `sql#mysqlReplicaConfiguration`.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the replication connection."
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "sslCipher": {
          "description": "A list of permissible ciphers to use for SSL encryption.",
          "type": "string"
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        },
        "connectRetryInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds."
        },
        "verifyServerCertificate": {
          "type": "boolean",
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake."
        },
        "masterHeartbeatPeriod": {
          "type": "string",
          "format": "int64",
          "description": "Interval in milliseconds between replication heartbeats."
        },
        "username": {
          "type": "string",
          "description": "The username for the replication connection."
        },
        "clientKey": {
          "type": "string",
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
        }
      },
      "type": "object",
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "MySqlReplicaConfiguration"
    },
    "DatabaseFlags": {
      "description": "Database flags for Cloud SQL instances.",
      "id": "DatabaseFlags",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation."
        },
        "value": {
          "description": "The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskEncryptionStatus": {
      "properties": {
        "kind": {
          "description": "This is always `sql#diskEncryptionStatus`.",
          "type": "string"
        },
        "kmsKeyVersionName": {
          "description": "KMS key version used to encrypt the Cloud SQL instance resource",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Disk encryption status for an instance.",
      "id": "DiskEncryptionStatus"
    },
    "Settings": {
      "id": "Settings",
      "description": "Database instance settings.",
      "properties": {
        "databaseReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.",
          "type": "boolean"
        },
        "locationPreference": {
          "$ref": "LocationPreference",
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances."
        },
        "denyMaintenancePeriods": {
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "description": "Deny maintenance periods",
          "type": "array"
        },
        "pricingPlan": {
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "type": "string",
          "description": "The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.",
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ]
        },
        "crashSafeReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
        },
        "tier": {
          "description": "The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.",
          "type": "string"
        },
        "availabilityType": {
          "description": "Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ]
        },
        "ipConfiguration": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.",
          "$ref": "IpConfiguration"
        },
        "maintenanceWindow": {
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.",
          "$ref": "MaintenanceWindow"
        },
        "dataDiskSizeGb": {
          "type": "string",
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
          "format": "int64"
        },
        "passwordValidationPolicy": {
          "description": "The local user password validation policy of the instance.",
          "$ref": "PasswordValidationPolicy"
        },
        "databaseFlags": {
          "description": "The database flags passed to the instance at startup.",
          "type": "array",
          "items": {
            "$ref": "DatabaseFlags"
          }
        },
        "sqlServerAuditConfig": {
          "$ref": "SqlServerAuditConfig",
          "description": "SQL Server specific audit configuration."
        },
        "insightsConfig": {
          "description": "Insights configuration, for now relevant only for Postgres.",
          "$ref": "InsightsConfig"
        },
        "authorizedGaeApplications": {
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "connectorEnforcement": {
          "enumDescriptions": [
            "The requirement for Cloud SQL connectors is unknown.",
            "Do not require Cloud SQL connectors.",
            "Require all connections to use Cloud SQL connectors, including the Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors. Note: This disables all existing authorized networks."
          ],
          "enum": [
            "CONNECTOR_ENFORCEMENT_UNSPECIFIED",
            "NOT_REQUIRED",
            "REQUIRED"
          ],
          "type": "string",
          "description": "Specifies if connections must use Cloud SQL connectors. Option values include the following: * `NOT_REQUIRED`: Cloud SQL instances can be connected without Cloud SQL Connectors. * `REQUIRED`: Only allow connections that use Cloud SQL Connectors. Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance."
        },
        "dataDiskType": {
          "type": "string",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ],
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
            "This field is deprecated and will be removed from a future version of the API."
          ],
          "description": "The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances."
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "kind": {
          "description": "This is always `sql#settings`.",
          "type": "string"
        },
        "userLabels": {
          "type": "object",
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deletionProtectionEnabled": {
          "description": "Configuration to protect against accidental instance deletion.",
          "type": "boolean"
        },
        "storageAutoResizeLimit": {
          "type": "string",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "format": "int64"
        },
        "activeDirectoryConfig": {
          "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
          "$ref": "SqlActiveDirectoryConfig"
        },
        "storageAutoResize": {
          "type": "boolean",
          "description": "Configuration to increase storage size automatically. The default value is true."
        },
        "activationPolicy": {
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
            "The instance never starts.",
            "The instance starts upon receiving requests."
          ],
          "type": "string",
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ]
        },
        "settingsVersion": {
          "type": "string",
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
          "format": "int64"
        },
        "collation": {
          "description": "The name of server Instance collation.",
          "type": "string"
        },
        "replicationType": {
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
          ],
          "description": "The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FailoverContext": {
      "description": "Database instance failover context.",
      "type": "object",
      "properties": {
        "settingsVersion": {
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#failoverContext`."
        }
      },
      "id": "FailoverContext"
    },
    "InstancesRestoreBackupRequest": {
      "description": "Database instance restore backup request.",
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "id": "InstancesRestoreBackupRequest",
      "type": "object"
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "properties": {
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#demoteMasterMysqlReplicaConfiguration`."
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8."
        }
      },
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "type": "object",
      "description": "Read-replica configuration specific to MySQL databases."
    },
    "SslCertsInsertRequest": {
      "properties": {
        "commonName": {
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance.",
          "type": "string"
        }
      },
      "id": "SslCertsInsertRequest",
      "description": "SslCerts insert request.",
      "type": "object"
    },
    "UsersListResponse": {
      "properties": {
        "items": {
          "description": "List of user resources in the instance.",
          "type": "array",
          "items": {
            "$ref": "User"
          }
        },
        "nextPageToken": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#usersList`."
        }
      },
      "id": "UsersListResponse",
      "description": "User list response.",
      "type": "object"
    },
    "DenyMaintenancePeriod": {
      "properties": {
        "time": {
          "type": "string",
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00"
        },
        "startDate": {
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        }
      },
      "type": "object",
      "id": "DenyMaintenancePeriod",
      "description": "Deny maintenance Periods. This specifies a date range during when all CSA rollout will be denied."
    },
    "ReplicaConfiguration": {
      "description": "Read-replica configuration for connecting to the primary instance.",
      "properties": {
        "failoverTarget": {
          "type": "boolean",
          "description": "Specifies if the replica is the failover target. If the field is set to `true`, the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance."
        },
        "kind": {
          "description": "This is always `sql#replicaConfiguration`.",
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.",
          "$ref": "MySqlReplicaConfiguration"
        }
      },
      "id": "ReplicaConfiguration",
      "type": "object"
    },
    "DiskEncryptionConfiguration": {
      "properties": {
        "kind": {
          "description": "This is always `sql#diskEncryptionConfiguration`.",
          "type": "string"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of KMS key for disk encryption"
        }
      },
      "id": "DiskEncryptionConfiguration",
      "type": "object",
      "description": "Disk encryption configuration for an instance."
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "properties": {
        "operationType": {
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC",
            "LOG_CLEANUP",
            "AUTO_RESTART"
          ],
          "description": "The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE`",
          "type": "string",
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
            "Starts external sync of a Cloud SQL EM replica to an external primary instance.",
            "Recovers logs from an instance's old data disk.",
            "Performs auto-restart of an HA-enabled Cloud SQL database for auto recovery."
          ]
        },
        "insertTime": {
          "type": "string",
          "description": "The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "kind": {
          "description": "This is always `sql#operation`.",
          "type": "string"
        },
        "targetLink": {
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "status": {
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "description": "The status of an operation.",
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ]
        },
        "backupContext": {
          "$ref": "BackupContext",
          "description": "The context for backup operation, if applicable."
        },
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "The email address of the user who initiated this operation."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "error": {
          "$ref": "OperationErrors",
          "description": "If errors occurred during processing of this operation, this field will be populated."
        },
        "exportContext": {
          "$ref": "ExportContext",
          "description": "The context for export operation, if applicable."
        },
        "importContext": {
          "$ref": "ImportContext",
          "description": "The context for import operation, if applicable."
        },
        "targetId": {
          "type": "string",
          "description": "Name of the database instance related to this operation."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "targetProject": {
          "type": "string",
          "description": "The project ID of the target instance related to this operation."
        }
      },
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
    },
    "Flag": {
      "properties": {
        "maxValue": {
          "type": "string",
          "description": "For `INTEGER` flags, the maximum allowed value.",
          "format": "int64"
        },
        "appliesTo": {
          "description": "The database version this flag applies to. Can be MySQL instances: `MYSQL_8_0`, `MYSQL_8_0_18`, `MYSQL_8_0_26`, `MYSQL_5_7`, or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11` or `POSTGRES_12`. SQL Server instances: `SQLSERVER_2017_STANDARD`, `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`. See [the complete list](/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).",
          "items": {
            "type": "string",
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
              "POSTGRES_12",
              "MYSQL_8_0",
              "MYSQL_8_0_18",
              "MYSQL_8_0_26",
              "MYSQL_8_0_27",
              "MYSQL_8_0_28",
              "MYSQL_8_0_29",
              "MYSQL_8_0_30",
              "POSTGRES_13",
              "POSTGRES_14",
              "SQLSERVER_2019_STANDARD",
              "SQLSERVER_2019_ENTERPRISE",
              "SQLSERVER_2019_EXPRESS",
              "SQLSERVER_2019_WEB"
            ],
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is MySQL 8.",
              "The database major version is MySQL 8.0 and the minor version is 18.",
              "The database major version is MySQL 8.0 and the minor version is 26.",
              "The database major version is MySQL 8.0 and the minor version is 27.",
              "The database major version is MySQL 8.0 and the minor version is 28.",
              "The database major version is MySQL 8.0 and the minor version is 29.",
              "The database major version is MySQL 8.0 and the minor version is 30.",
              "The database version is PostgreSQL 13.",
              "The database version is PostgreSQL 14.",
              "The database version is SQL Server 2019 Standard.",
              "The database version is SQL Server 2019 Enterprise.",
              "The database version is SQL Server 2019 Express.",
              "The database version is SQL Server 2019 Web."
            ]
          },
          "type": "array"
        },
        "minValue": {
          "format": "int64",
          "description": "For `INTEGER` flags, the minimum allowed value.",
          "type": "string"
        },
        "allowedStringValues": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "For `STRING` flags, a list of strings that the value can be set to."
        },
        "name": {
          "type": "string",
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: `max_allowed_packet`"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
            "Type introduced specially for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ],
          "description": "The type of the flag. Flags are typed to being `BOOLEAN`, `STRING`, `INTEGER` or `NONE`. `NONE` is used for flags that do not take a value, such as `skip_grant_tables`.",
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ]
        },
        "allowedIntValues": {
          "type": "array",
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "requiresRestart": {
          "type": "boolean",
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances."
        },
        "inBeta": {
          "description": "Whether or not the flag is considered in beta.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always `sql#flag`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A flag resource.",
      "id": "Flag"
    },
    "ApiWarning": {
      "id": "ApiWarning",
      "type": "object",
      "description": "An Admin API warning message.",
      "properties": {
        "region": {
          "type": "string",
          "description": "The region name for REGION_UNREACHABLE warning."
        },
        "code": {
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE",
            "MAX_RESULTS_EXCEEDS_LIMIT"
          ],
          "description": "Code to uniquely identify the warning type.",
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
            "Warning when one or more regions are not reachable. The returned result set may be incomplete.",
            "Warning when user provided maxResults parameter exceeds the limit. The returned result set may be incomplete."
          ],
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "The warning message."
        }
      }
    },
    "BackupRun": {
      "type": "object",
      "properties": {
        "backupKind": {
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ],
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ],
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "status": {
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "description": "The status of this run.",
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "type": "string"
        },
        "windowStartTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "description": {
          "description": "The description of this run, only applicable to on-demand backups.",
          "type": "string"
        },
        "diskEncryptionConfiguration": {
          "description": "Encryption configuration specific to a backup.",
          "$ref": "DiskEncryptionConfiguration"
        },
        "id": {
          "type": "string",
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "format": "int64"
        },
        "type": {
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ],
          "type": "string",
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\" or \"FINAL\". This field defaults to \"ON_DEMAND\" and is ignored, when specified for insert requests.",
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ]
        },
        "startTime": {
          "description": "The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status.",
          "$ref": "OperationError"
        },
        "diskEncryptionStatus": {
          "description": "Encryption status specific to a backup.",
          "$ref": "DiskEncryptionStatus"
        },
        "kind": {
          "description": "This is always `sql#backupRun`.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location of the backups."
        },
        "instance": {
          "type": "string",
          "description": "Name of the database instance."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        },
        "enqueuedTime": {
          "type": "string",
          "description": "The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        }
      },
      "description": "A BackupRun resource.",
      "id": "BackupRun"
    },
    "SqlInstancesStartExternalSyncRequest": {
      "properties": {
        "syncMode": {
          "description": "External sync mode.",
          "enumDescriptions": [
            "Unknown external sync mode, will be defaulted to ONLINE mode",
            "Online external sync will set up replication after initial data external sync",
            "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
          ],
          "enum": [
            "EXTERNAL_SYNC_MODE_UNSPECIFIED",
            "ONLINE",
            "OFFLINE"
          ],
          "type": "string"
        },
        "mysqlSyncConfig": {
          "$ref": "MySqlSyncConfig",
          "description": "MySQL-specific settings for start external sync."
        },
        "skipVerification": {
          "type": "boolean",
          "description": "Whether to skip the verification step (VESS)."
        }
      },
      "description": "Instance start external sync request.",
      "type": "object",
      "id": "SqlInstancesStartExternalSyncRequest"
    },
    "SslCertsCreateEphemeralRequest": {
      "description": "SslCerts create ephemeral certificate request.",
      "properties": {
        "public_key": {
          "type": "string",
          "description": "PEM encoded public key to include in the signed certificate."
        },
        "access_token": {
          "description": "Access token to include in the signed certificate.",
          "type": "string"
        }
      },
      "id": "SslCertsCreateEphemeralRequest",
      "type": "object"
    },
    "InstancesCloneRequest": {
      "properties": {
        "cloneContext": {
          "description": "Contains details about the clone operation.",
          "$ref": "CloneContext"
        }
      },
      "type": "object",
      "description": "Database instance clone request.",
      "id": "InstancesCloneRequest"
    },
    "SqlActiveDirectoryConfig": {
      "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always sql#activeDirectoryConfig."
        },
        "domain": {
          "description": "The name of the domain (e.g., mydomain.com).",
          "type": "string"
        }
      },
      "id": "SqlActiveDirectoryConfig",
      "type": "object"
    },
    "InstancesImportRequest": {
      "description": "Database instance import request.",
      "properties": {
        "importContext": {
          "description": "Contains details about the import operation.",
          "$ref": "ImportContext"
        }
      },
      "id": "InstancesImportRequest",
      "type": "object"
    },
    "BackupRunsListResponse": {
      "type": "object",
      "id": "BackupRunsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupRunsList`."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "items": {
          "type": "array",
          "description": "A list of backup runs in reverse chronological order of the enqueued time.",
          "items": {
            "$ref": "BackupRun"
          }
        }
      },
      "description": "Backup run list results."
    },
    "IpMapping": {
      "description": "Database instance IP Mapping.",
      "type": "object",
      "id": "IpMapping",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IP address assigned."
        },
        "timeToRetire": {
          "type": "string",
          "description": "The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.",
          "format": "google-datetime"
        },
        "type": {
          "enumDescriptions": [
            "This is an unknown IP address type.",
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
          ],
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "description": "The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.",
          "type": "string"
        }
      }
    },
    "InstanceReference": {
      "properties": {
        "project": {
          "description": "The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Cloud SQL instance being referenced. This does not include the project ID.",
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "The region of the Cloud SQL instance being referenced."
        }
      },
      "type": "object",
      "id": "InstanceReference",
      "description": "Reference to another Cloud SQL instance."
    },
    "BinLogCoordinates": {
      "type": "object",
      "id": "BinLogCoordinates",
      "description": "Binary log coordinates.",
      "properties": {
        "kind": {
          "description": "This is always `sql#binLogCoordinates`.",
          "type": "string"
        },
        "binLogPosition": {
          "type": "string",
          "description": "Position (offset) within the binary log file.",
          "format": "int64"
        },
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        }
      }
    },
    "SqlOutOfDiskReport": {
      "id": "SqlOutOfDiskReport",
      "type": "object",
      "description": "This message wraps up the information written by out-of-disk detection job.",
      "properties": {
        "sqlMinRecommendedIncreaseSizeGb": {
          "description": "The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:",
          "type": "integer",
          "format": "int32"
        },
        "sqlOutOfDiskState": {
          "enum": [
            "SQL_OUT_OF_DISK_STATE_UNSPECIFIED",
            "NORMAL",
            "SOFT_SHUTDOWN"
          ],
          "description": "This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state",
            "The instance has plenty space on data disk",
            "Data disk is almost used up. It is shutdown to prevent data corruption."
          ]
        }
      }
    },
    "BackupConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether this configuration is enabled."
        },
        "replicationLogArchivingEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "backupRetentionSettings": {
          "$ref": "BackupRetentionSettings",
          "description": "Backup retention settings."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupConfiguration`."
        },
        "binaryLogEnabled": {
          "type": "boolean",
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
        },
        "pointInTimeRecoveryEnabled": {
          "description": "(Postgres only) Whether point in time recovery is enabled.",
          "type": "boolean"
        },
        "location": {
          "description": "Location of the backup",
          "type": "string"
        },
        "transactionLogRetentionDays": {
          "format": "int32",
          "type": "integer",
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7."
        },
        "startTime": {
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.",
          "type": "string"
        }
      },
      "description": "Database instance backup configuration.",
      "id": "BackupConfiguration",
      "type": "object"
    },
    "SqlInstancesVerifyExternalSyncSettingsRequest": {
      "properties": {
        "verifyReplicationOnly": {
          "type": "boolean",
          "description": "Optional. Flag to verify settings required by replication setup only"
        },
        "syncMode": {
          "enumDescriptions": [
            "Unknown external sync mode, will be defaulted to ONLINE mode",
            "Online external sync will set up replication after initial data external sync",
            "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
          ],
          "type": "string",
          "enum": [
            "EXTERNAL_SYNC_MODE_UNSPECIFIED",
            "ONLINE",
            "OFFLINE"
          ],
          "description": "External sync mode"
        },
        "mysqlSyncConfig": {
          "description": "Optional. MySQL-specific settings for start external sync.",
          "$ref": "MySqlSyncConfig"
        },
        "verifyConnectionOnly": {
          "type": "boolean",
          "description": "Flag to enable verifying connection only"
        }
      },
      "type": "object",
      "description": "Instance verify external sync settings request.",
      "id": "SqlInstancesVerifyExternalSyncSettingsRequest"
    },
    "RestoreBackupContext": {
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id.",
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "description": "The full project ID of the source instance."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#restoreBackupContext`."
        },
        "backupRunId": {
          "description": "The ID of the backup run to restore from.",
          "format": "int64",
          "type": "string"
        },
        "instanceId": {
          "type": "string",
          "description": "The ID of the instance that the backup was taken from."
        }
      },
      "id": "RestoreBackupContext"
    },
    "RotateServerCaContext": {
      "type": "object",
      "description": "Instance rotate server CA context.",
      "id": "RotateServerCaContext",
      "properties": {
        "nextVersion": {
          "type": "string",
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#rotateServerCaContext`."
        }
      }
    },
    "InsightsConfig": {
      "properties": {
        "queryInsightsEnabled": {
          "type": "boolean",
          "description": "Whether Query Insights feature is enabled."
        },
        "queryPlansPerMinute": {
          "format": "int32",
          "type": "integer",
          "description": "Number of query execution plans captured by Insights per minute for all queries combined. Default is 5."
        },
        "recordClientAddress": {
          "type": "boolean",
          "description": "Whether Query Insights will record client address when enabled."
        },
        "queryStringLength": {
          "type": "integer",
          "description": "Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.",
          "format": "int32"
        },
        "recordApplicationTags": {
          "type": "boolean",
          "description": "Whether Query Insights will record application tags from query when enabled."
        }
      },
      "description": "Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.",
      "type": "object",
      "id": "InsightsConfig"
    },
    "InstancesFailoverRequest": {
      "properties": {
        "failoverContext": {
          "description": "Failover Context.",
          "$ref": "FailoverContext"
        }
      },
      "description": "Instance failover request.",
      "type": "object",
      "id": "InstancesFailoverRequest"
    },
    "Reschedule": {
      "id": "Reschedule",
      "properties": {
        "rescheduleType": {
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ],
          "enumDescriptions": [
            "",
            "Reschedules maintenance to happen now (within 5 minutes).",
            "Reschedules maintenance to occur within one week from the originally scheduled day and time.",
            "Reschedules maintenance to a specific time and day."
          ],
          "description": "Required. The type of the reschedule.",
          "type": "string"
        },
        "scheduleTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`."
        }
      },
      "type": "object"
    },
    "OperationError": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#operationError`."
        },
        "code": {
          "type": "string",
          "description": "Identifies the specific error that occurred."
        },
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        }
      },
      "id": "OperationError",
      "type": "object",
      "description": "Database instance operation error."
    },
    "PasswordValidationPolicy": {
      "properties": {
        "minLength": {
          "description": "Minimum number of characters allowed.",
          "type": "integer",
          "format": "int32"
        },
        "complexity": {
          "type": "string",
          "enum": [
            "COMPLEXITY_UNSPECIFIED",
            "COMPLEXITY_DEFAULT"
          ],
          "description": "The complexity of the password.",
          "enumDescriptions": [
            "Complexity check is not specified.",
            "A combination of lowercase, uppercase, numeric, and non-alphanumeric characters."
          ]
        },
        "enablePasswordPolicy": {
          "type": "boolean",
          "description": "Whether the password policy is enabled or not."
        },
        "passwordChangeInterval": {
          "format": "google-duration",
          "description": "Minimum interval after which the password can be changed. This flag is only supported for PostgresSQL.",
          "type": "string"
        },
        "reuseInterval": {
          "format": "int32",
          "description": "Number of previous passwords that cannot be reused.",
          "type": "integer"
        },
        "disallowUsernameSubstring": {
          "description": "Disallow username as a part of the password.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Database instance local user password validation policy",
      "id": "PasswordValidationPolicy"
    },
    "SqlScheduledMaintenance": {
      "description": "Any scheduled maintenance for this instance.",
      "id": "SqlScheduledMaintenance",
      "properties": {
        "canDefer": {
          "type": "boolean"
        },
        "scheduleDeadlineTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Maintenance cannot be rescheduled to start beyond this deadline."
        },
        "startTime": {
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "format": "google-datetime",
          "type": "string"
        },
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GenerateEphemeralCertRequest": {
      "id": "GenerateEphemeralCertRequest",
      "properties": {
        "access_token": {
          "description": "Optional. Access token to include in the signed certificate.",
          "type": "string"
        },
        "validDuration": {
          "description": "Optional. If set, it will contain the cert valid duration.",
          "format": "google-duration",
          "type": "string"
        },
        "public_key": {
          "type": "string",
          "description": "PEM encoded public key to include in the signed certificate."
        },
        "readTime": {
          "description": "Optional. Optional snapshot read timestamp to trade freshness for performance.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Ephemeral certificate creation request."
    },
    "ExportContext": {
      "id": "ExportContext",
      "properties": {
        "fileType": {
          "description": "The file type for the specified uri.",
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "type": "string"
        },
        "sqlExportOptions": {
          "description": "Options for exporting data as SQL statements.",
          "type": "object",
          "properties": {
            "tables": {
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mysqlExportOptions": {
              "type": "object",
              "description": "Options for exporting from MySQL.",
              "properties": {
                "masterData": {
                  "description": "Option to include SQL statement required to set up replication. If set to `1`, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to `2`, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than `1`, --set-gtid-purged is set to OFF.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            }
          }
        },
        "uri": {
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form `gs://bucketName/fileName`. If the file already exists, the request succeeds, but the operation fails. If `fileType` is `SQL` and the filename ends with .gz, the contents are compressed.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#exportContext`."
        },
        "offload": {
          "description": "Option for export offload.",
          "type": "boolean"
        },
        "csvExportOptions": {
          "description": "Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only.",
          "type": "object",
          "properties": {
            "fieldsTerminatedBy": {
              "description": "Specifies the character that separates columns within each row (line) of the file.",
              "type": "string"
            },
            "quoteCharacter": {
              "description": "Specifies the quoting character to be used when a data value is quoted.",
              "type": "string"
            },
            "linesTerminatedBy": {
              "description": "This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.",
              "type": "string"
            },
            "escapeCharacter": {
              "description": "Specifies the character that should appear before a data character that needs to be escaped.",
              "type": "string"
            },
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          }
        },
        "databases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Databases to be exported. `MySQL instances:` If `fileType` is `SQL` and no database is specified, all databases are exported, except for the `mysql` system database. If `fileType` is `CSV`, you can specify one database, either by using this property or by using the `csvExportOptions.selectQuery` property, which takes precedence over this property. `PostgreSQL instances:` You must specify one database to be exported. If `fileType` is `CSV`, this database must match the one specified in the `csvExportOptions.selectQuery` property. `SQL Server instances:` You must specify one database to be exported, and the `fileType` must be `BAK`."
        }
      },
      "description": "Database instance export context.",
      "type": "object"
    },
    "SslCertsInsertResponse": {
      "description": "SslCert insert response.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "This is always `sql#sslCertsInsert`.",
          "type": "string"
        },
        "serverCaCert": {
          "$ref": "SslCert",
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource."
        },
        "operation": {
          "$ref": "Operation",
          "description": "The operation to track the ssl certs insert request."
        },
        "clientCert": {
          "description": "The new client certificate and private key.",
          "$ref": "SslCertDetail"
        }
      },
      "id": "SslCertsInsertResponse"
    },
    "OperationErrors": {
      "id": "OperationErrors",
      "description": "Database instance operation errors list wrapper.",
      "type": "object",
      "properties": {
        "errors": {
          "items": {
            "$ref": "OperationError"
          },
          "description": "The list of errors encountered while processing this operation.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#operationErrors`."
        }
      }
    },
    "InstancesRotateServerCaRequest": {
      "type": "object",
      "description": "Rotate server CA request.",
      "properties": {
        "rotateServerCaContext": {
          "description": "Contains details about the rotate server CA operation.",
          "$ref": "RotateServerCaContext"
        }
      },
      "id": "InstancesRotateServerCaRequest"
    },
    "InstancesDemoteMasterRequest": {
      "id": "InstancesDemoteMasterRequest",
      "properties": {
        "demoteMasterContext": {
          "description": "Contains details about the demoteMaster operation.",
          "$ref": "DemoteMasterContext"
        }
      },
      "type": "object",
      "description": "Database demote primary instance request."
    },
    "FlagsListResponse": {
      "id": "FlagsListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#flagsList`."
        },
        "items": {
          "items": {
            "$ref": "Flag"
          },
          "type": "array",
          "description": "List of flags."
        }
      },
      "description": "Flags list response."
    },
    "BackupContext": {
      "properties": {
        "backupId": {
          "format": "int64",
          "description": "The identifier of the backup.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#backupContext`."
        }
      },
      "type": "object",
      "id": "BackupContext",
      "description": "Backup context."
    },
    "SqlServerUserDetails": {
      "id": "SqlServerUserDetails",
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "type": "object",
      "properties": {
        "serverRoles": {
          "description": "The server roles for this user",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disabled": {
          "description": "If the user has been disabled",
          "type": "boolean"
        }
      }
    },
    "InstancesListResponse": {
      "properties": {
        "items": {
          "description": "List of database instance resources.",
          "items": {
            "$ref": "DatabaseInstance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "kind": {
          "description": "This is always `sql#instancesList`.",
          "type": "string"
        },
        "warnings": {
          "description": "List of warnings that occurred while handling the request.",
          "items": {
            "$ref": "ApiWarning"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Database instances list response.",
      "id": "InstancesListResponse"
    },
    "User": {
      "type": "object",
      "id": "User",
      "description": "A Cloud SQL user resource.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ],
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ],
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type."
        },
        "host": {
          "description": "Optional. The host from which the user can connect. For `insert` operations, host defaults to an empty string. For `update` operations, host is specified as part of the request URL. The host name cannot be updated after insertion. For a MySQL instance, it's required; for a PostgreSQL or SQL Server instance, it's optional.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for `update` because it is already specified on the URL."
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for `update` because it is already specified on the URL.",
          "type": "string"
        },
        "passwordPolicy": {
          "description": "User level password validation policy.",
          "$ref": "UserPasswordValidationPolicy"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#user`."
        },
        "name": {
          "type": "string",
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for `update` because it is already specified in the URL."
        },
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        },
        "dualPasswordType": {
          "description": "Dual password status for the user.",
          "type": "string",
          "enum": [
            "DUAL_PASSWORD_TYPE_UNSPECIFIED",
            "NO_MODIFY_DUAL_PASSWORD",
            "NO_DUAL_PASSWORD",
            "DUAL_PASSWORD"
          ],
          "enumDescriptions": [
            "The default value.",
            "Do not update the user's dual password status.",
            "No dual password usable for connecting using this user.",
            "Dual password usable for connecting using this user."
          ]
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the user."
        }
      }
    },
    "LocationPreference": {
      "description": "Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "id": "LocationPreference",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#locationPreference`."
        },
        "zone": {
          "type": "string",
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance."
        },
        "followGaeApplication": {
          "type": "string",
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance."
        },
        "secondaryZone": {
          "description": "The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.).",
          "type": "string"
        }
      }
    },
    "OnPremisesConfiguration": {
      "description": "On-premises instance configuration.",
      "id": "OnPremisesConfiguration",
      "properties": {
        "dumpFilePath": {
          "description": "The dump file to create the Cloud SQL replica.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "sourceInstance": {
          "description": "The reference to Cloud SQL instance if the source is Cloud SQL.",
          "$ref": "InstanceReference"
        },
        "hostPort": {
          "type": "string",
          "description": "The host and port of the on-premises instance in host:port format"
        },
        "username": {
          "type": "string",
          "description": "The username for connecting to on-premises instance."
        },
        "kind": {
          "description": "This is always `sql#onPremisesConfiguration`.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for connecting to on-premises instance."
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        }
      },
      "type": "object"
    },
    "PasswordStatus": {
      "description": "Read-only password status.",
      "properties": {
        "locked": {
          "type": "boolean",
          "description": "If true, user does not have login privileges."
        },
        "passwordExpirationTime": {
          "type": "string",
          "description": "The expiration time of the current password.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "PasswordStatus"
    },
    "Database": {
      "properties": {
        "name": {
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
          "type": "string"
        },
        "collation": {
          "description": "The Cloud SQL collation value.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "This field is deprecated and will be removed from a future version of the API."
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable."
        },
        "kind": {
          "description": "This is always `sql#database`.",
          "type": "string"
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID."
        },
        "charset": {
          "type": "string",
          "description": "The Cloud SQL charset value."
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        }
      },
      "type": "object",
      "id": "Database",
      "description": "Represents a SQL database on the Cloud SQL instance."
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "description": "Reschedule options for maintenance windows.",
      "id": "SqlInstancesRescheduleMaintenanceRequestBody",
      "properties": {
        "reschedule": {
          "description": "Required. The type of the reschedule the user wants.",
          "$ref": "Reschedule"
        }
      },
      "type": "object"
    },
    "IpConfiguration": {
      "type": "object",
      "properties": {
        "requireSsl": {
          "type": "boolean",
          "description": "Whether SSL connections over IP are enforced or not."
        },
        "privateNetwork": {
          "type": "string",
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
        },
        "authorizedNetworks": {
          "items": {
            "$ref": "AclEntry"
          },
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`).",
          "type": "array"
        },
        "allocatedIpRange": {
          "description": "The name of the allocated ip range for the private ip CloudSQL instance. For example: \"google-managed-services-default\". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`",
          "type": "string"
        },
        "ipv4Enabled": {
          "type": "boolean",
          "description": "Whether the instance is assigned a public IP address or not."
        }
      },
      "description": "IP Management configuration.",
      "id": "IpConfiguration"
    },
    "DemoteMasterConfiguration": {
      "id": "DemoteMasterConfiguration",
      "description": "Read-replica configuration for connecting to the on-premises primary instance.",
      "properties": {
        "mysqlReplicaConfiguration": {
          "$ref": "DemoteMasterMySqlReplicaConfiguration",
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory."
        },
        "kind": {
          "description": "This is always `sql#demoteMasterConfiguration`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertDetail": {
      "id": "SslCertDetail",
      "description": "SslCertDetail.",
      "type": "object",
      "properties": {
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        },
        "certPrivateKey": {
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security.",
          "type": "string"
        }
      }
    },
    "SyncFlags": {
      "id": "SyncFlags",
      "description": "Initial sync flags for certain Cloud SQL APIs. Currently used for the MySQL external server initial dump.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag."
        },
        "value": {
          "description": "The value of the flag. This field must be omitted if the flag doesn't take a value.",
          "type": "string"
        }
      }
    },
    "AclEntry": {
      "id": "AclEntry",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. A label to identify this entry."
        },
        "value": {
          "type": "string",
          "description": "The allowlisted value for the access control list."
        },
        "expirationTime": {
          "type": "string",
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#aclEntry`."
        }
      },
      "description": "An entry for an Access Control list."
    },
    "TiersListResponse": {
      "id": "TiersListResponse",
      "type": "object",
      "description": "Tiers list response.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#tiersList`."
        },
        "items": {
          "description": "List of tiers.",
          "items": {
            "$ref": "Tier"
          },
          "type": "array"
        }
      }
    },
    "ConnectSettings": {
      "id": "ConnectSettings",
      "type": "object",
      "description": "Connect settings retrieval response.",
      "properties": {
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        },
        "ipAddresses": {
          "description": "The assigned IP addresses for the instance.",
          "type": "array",
          "items": {
            "$ref": "IpMapping"
          }
        },
        "databaseVersion": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database major version is MySQL 8.0 and the minor version is 18.",
            "The database major version is MySQL 8.0 and the minor version is 26.",
            "The database major version is MySQL 8.0 and the minor version is 27.",
            "The database major version is MySQL 8.0 and the minor version is 28.",
            "The database major version is MySQL 8.0 and the minor version is 29.",
            "The database major version is MySQL 8.0 and the minor version is 30.",
            "The database version is PostgreSQL 13.",
            "The database version is PostgreSQL 14.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ],
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "MYSQL_8_0_18",
            "MYSQL_8_0_26",
            "MYSQL_8_0_27",
            "MYSQL_8_0_28",
            "MYSQL_8_0_29",
            "MYSQL_8_0_30",
            "POSTGRES_13",
            "POSTGRES_14",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ],
          "description": "The database engine type and version. The `databaseVersion` field cannot be changed after instance creation. MySQL instances: `MYSQL_8_0`, `MYSQL_5_7` (default), or `MYSQL_5_6`. PostgreSQL instances: `POSTGRES_9_6`, `POSTGRES_10`, `POSTGRES_11`, `POSTGRES_12` (default), `POSTGRES_13`, or `POSTGRES_14`. SQL Server instances: `SQLSERVER_2017_STANDARD` (default), `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`, `SQLSERVER_2019_STANDARD`, `SQLSERVER_2019_ENTERPRISE`, `SQLSERVER_2019_EXPRESS`, or `SQLSERVER_2019_WEB`."
        },
        "region": {
          "type": "string",
          "description": "The cloud region for the instance. For example, `us-central1`, `europe-west1`. The region cannot be changed after instance creation."
        },
        "backendType": {
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "type": "string",
          "description": "`SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.",
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ]
        },
        "kind": {
          "description": "This is always `sql#connectSettings`.",
          "type": "string"
        }
      }
    },
    "CloneContext": {
      "type": "object",
      "id": "CloneContext",
      "description": "Database instance clone context.",
      "properties": {
        "allocatedIpRange": {
          "description": "The name of the allocated ip range for the private ip CloudSQL instance. For example: \"google-managed-services-default\". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use.",
          "type": "string"
        },
        "binLogCoordinates": {
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates.",
          "$ref": "BinLogCoordinates"
        },
        "destinationInstanceName": {
          "description": "Name of the Cloud SQL instance to be created as a clone.",
          "type": "string"
        },
        "pointInTime": {
          "description": "Timestamp, if specified, identifies the time to which the source instance is cloned.",
          "format": "google-datetime",
          "type": "string"
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#cloneContext`."
        }
      }
    },
    "UserPasswordValidationPolicy": {
      "description": "User level password validation policy.",
      "properties": {
        "enablePasswordVerification": {
          "type": "boolean",
          "description": "If true, the user must specify the current password before changing the password. This flag is supported only for MySQL."
        },
        "status": {
          "readOnly": true,
          "description": "Output only. Read-only password status.",
          "$ref": "PasswordStatus"
        },
        "enableFailedAttemptsCheck": {
          "description": "If true, failed login attempts check will be enabled.",
          "type": "boolean"
        },
        "passwordExpirationDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Expiration duration after password is updated."
        },
        "allowedFailedAttempts": {
          "format": "int32",
          "type": "integer",
          "description": "Number of failed login attempts allowed before user get locked."
        }
      },
      "id": "UserPasswordValidationPolicy",
      "type": "object"
    },
    "BackupRetentionSettings": {
      "id": "BackupRetentionSettings",
      "description": "We currently only support backup retention by specifying the number of backups we will retain.",
      "type": "object",
      "properties": {
        "retentionUnit": {
          "type": "string",
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ],
          "description": "The unit that 'retained_backups' represents.",
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ]
        },
        "retainedBackups": {
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InstancesExportRequest": {
      "description": "Database instance export request.",
      "type": "object",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      },
      "id": "InstancesExportRequest"
    },
    "ImportContext": {
      "properties": {
        "fileType": {
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "type": "string",
          "description": "The file type for the specified uri.\\`SQL`: The file contains SQL statements. \\`CSV`: The file contains CSV data."
        },
        "bakImportOptions": {
          "description": "Import parameters specific to SQL Server .BAK files",
          "type": "object",
          "properties": {
            "encryptionOptions": {
              "type": "object",
              "properties": {
                "pvkPath": {
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                },
                "certPath": {
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                },
                "pvkPassword": {
                  "type": "string",
                  "description": "Password that encrypts the private key"
                }
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#importContext`."
        },
        "database": {
          "description": "The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file."
        },
        "importUser": {
          "type": "string",
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
        },
        "csvImportOptions": {
          "properties": {
            "table": {
              "type": "string",
              "description": "The table to which CSV data is imported."
            },
            "fieldsTerminatedBy": {
              "type": "string",
              "description": "Specifies the character that separates columns within each row (line) of the file."
            },
            "linesTerminatedBy": {
              "type": "string",
              "description": "This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values."
            },
            "escapeCharacter": {
              "description": "Specifies the character that should appear before a data character that needs to be escaped.",
              "type": "string"
            },
            "quoteCharacter": {
              "description": "Specifies the quoting character to be used when a data value is quoted.",
              "type": "string"
            },
            "columns": {
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "description": "Options for importing data as CSV.",
          "type": "object"
        }
      },
      "id": "ImportContext",
      "description": "Database instance import context.",
      "type": "object"
    },
    "TruncateLogContext": {
      "description": "Database Instance truncate log context.",
      "type": "object",
      "id": "TruncateLogContext",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#truncateLogContext`."
        },
        "logType": {
          "description": "The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and `MYSQL_SLOW_TABLE`.",
          "type": "string"
        }
      }
    },
    "DemoteMasterContext": {
      "id": "DemoteMasterContext",
      "properties": {
        "verifyGtidConsistency": {
          "description": "Verify the GTID consistency for demote operation. Default value: `True`. Setting this flag to `false` enables you to bypass the GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.",
          "type": "boolean"
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#demoteMasterContext`."
        },
        "replicaConfiguration": {
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance.",
          "$ref": "DemoteMasterConfiguration"
        },
        "skipReplicationSetup": {
          "type": "boolean",
          "description": "Flag to skip replication setup on the instance."
        }
      },
      "description": "Database instance demote primary instance context.",
      "type": "object"
    },
    "SslCertsListResponse": {
      "description": "SslCerts list response.",
      "type": "object",
      "id": "SslCertsListResponse",
      "properties": {
        "kind": {
          "description": "This is always `sql#sslCertsList`.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "SslCert"
          },
          "description": "List of client certificates for the instance."
        }
      }
    },
    "MaintenanceWindow": {
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "day of week (1-7), starting on Monday."
        },
        "updateTrack": {
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
          ],
          "description": "Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen)."
        },
        "hour": {
          "format": "int32",
          "type": "integer",
          "description": "hour of day - 0 to 23."
        },
        "kind": {
          "type": "string",
          "description": "This is always `sql#maintenanceWindow`."
        }
      },
      "type": "object",
      "id": "MaintenanceWindow",
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes."
    },
    "SqlExternalSyncSettingError": {
      "id": "SqlExternalSyncSettingError",
      "properties": {
        "detail": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running.",
            "The table definition is not support due to missing primary key or replica identity, applicable for postgres.",
            "The customer has a definer that will break EM setup.",
            "SQL Server @@SERVERNAME does not match actual host name",
            "The primary instance has been setup and will fail the setup.",
            "The primary instance has unsupported binary log format.",
            "The primary instance's binary log retention setting.",
            "The primary instance has tables with unsupported storage engine.",
            "Source has tables with limited support eg: PostgreSQL tables without primary keys"
          ],
          "type": "string",
          "description": "Identifies the specific error that occurred.",
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "SQLSERVER_SERVERNAME_MISMATCH",
            "PRIMARY_ALREADY_SETUP",
            "UNSUPPORTED_BINLOG_FORMAT",
            "BINLOG_RETENTION_SETTING",
            "UNSUPPORTED_STORAGE_ENGINE",
            "LIMITED_SUPPORT_TABLES"
          ]
        },
        "kind": {
          "description": "Can be `sql#externalSyncSettingError` or `sql#externalSyncSettingWarning`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "External primary instance migration setting error/warning."
    },
    "DatabaseInstance": {
      "type": "object",
      "description": "A Cloud SQL instance resource.",
      "properties": {
        "kind": {
          "description": "This is always `sql#instance`.",
          "type": "string"
        },
        "maxDiskSize": {
          "type": "string",
          "format": "int64",
          "description": "The maximum disk size of the instance in bytes."
        },
        "diskEncryptionConfiguration": {
          "description": "Disk encryption configuration specific to an instance.",
          "$ref": "DiskEncryptionConfiguration"
        },
        "outOfDiskReport": {
          "$ref": "SqlOutOfDiskReport",
          "description": "This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job"
        },
        "serviceAccountEmailAddress": {
          "description": "The service account email address assigned to the instance.\\This property is read-only.",
          "type": "string"
        },
        "instanceType": {
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance that is not replicating from a primary instance.",
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
            "A Cloud SQL instance acting as a read-replica."
          ],
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "type": "string",
          "description": "The instance type."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.",
          "type": "string"
        },
        "settings": {
          "$ref": "Settings",
          "description": "The user settings."
        },
        "ipAddresses": {
          "items": {
            "$ref": "IpMapping"
          },
          "description": "The assigned IP addresses for the instance.",
          "type": "array"
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        },
        "rootPassword": {
          "description": "Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.",
          "type": "string"
        },
        "suspensionReason": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ],
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ]
          },
          "type": "array",
          "description": "If the instance state is SUSPENDED, the reason for the suspension."
        },
        "currentDiskSize": {
          "format": "int64",
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.",
          "type": "string"
        },
        "databaseVersion": {
          "description": "The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database major version is MySQL 8.0 and the minor version is 18.",
            "The database major version is MySQL 8.0 and the minor version is 26.",
            "The database major version is MySQL 8.0 and the minor version is 27.",
            "The database major version is MySQL 8.0 and the minor version is 28.",
            "The database major version is MySQL 8.0 and the minor version is 29.",
            "The database major version is MySQL 8.0 and the minor version is 30.",
            "The database version is PostgreSQL 13.",
            "The database version is PostgreSQL 14.",
            "The database version is SQL Server 2019 Standard.",
            "The database version is SQL Server 2019 Enterprise.",
            "The database version is SQL Server 2019 Express.",
            "The database version is SQL Server 2019 Web."
          ],
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "MYSQL_8_0_18",
            "MYSQL_8_0_26",
            "MYSQL_8_0_27",
            "MYSQL_8_0_28",
            "MYSQL_8_0_29",
            "MYSQL_8_0_30",
            "POSTGRES_13",
            "POSTGRES_14",
            "SQLSERVER_2019_STANDARD",
            "SQLSERVER_2019_ENTERPRISE",
            "SQLSERVER_2019_EXPRESS",
            "SQLSERVER_2019_WEB"
          ]
        },
        "masterInstanceName": {
          "description": "The name of the instance which will act as primary in the replication setup.",
          "type": "string"
        },
        "connectionName": {
          "type": "string",
          "description": "Connection name of the Cloud SQL instance used in connection strings."
        },
        "region": {
          "type": "string",
          "description": "The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation."
        },
        "secondaryGceZone": {
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.",
          "type": "string"
        },
        "gceZone": {
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "databaseInstalledVersion": {
          "readOnly": true,
          "description": "Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance is running, or has been stopped by owner.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance.",
            "Deprecated"
          ],
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED",
            "ONLINE_MAINTENANCE"
          ],
          "type": "string",
          "description": "The current serving state of the Cloud SQL instance."
        },
        "maintenanceVersion": {
          "type": "string",
          "description": "The current software version on the instance."
        },
        "diskEncryptionStatus": {
          "$ref": "DiskEncryptionStatus",
          "description": "Disk encryption status specific to an instance."
        },
        "onPremisesConfiguration": {
          "$ref": "OnPremisesConfiguration",
          "description": "Configuration specific to on-premises instances."
        },
        "replicaNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The replicas of the instance."
        },
        "name": {
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "satisfiesPzs": {
          "description": "The status indicating if instance satisfiesPzs. Reserved for future use.",
          "type": "boolean"
        },
        "availableMaintenanceVersions": {
          "description": "List all maintenance versions applicable on the instance",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "backendType": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "description": "The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.",
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ]
        },
        "scheduledMaintenance": {
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "$ref": "SqlScheduledMaintenance"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable."
        },
        "failoverReplica": {
          "properties": {
            "name": {
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID.",
              "type": "string"
            },
            "available": {
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.",
              "type": "boolean"
            }
          },
          "type": "object",
          "description": "The name and status of the failover replica."
        },
        "replicaConfiguration": {
          "description": "Configuration specific to failover replicas and read replicas.",
          "$ref": "ReplicaConfiguration"
        },
        "ipv6Address": {
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.",
          "type": "string"
        }
      },
      "id": "DatabaseInstance"
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "description": "Instance verify external sync settings response.",
      "properties": {
        "warnings": {
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "description": "List of migration warnings.",
          "type": "array"
        },
        "errors": {
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "description": "List of migration violations.",
          "type": "array"
        },
        "kind": {
          "description": "This is always `sql#migrationSettingErrorList`.",
          "type": "string"
        }
      },
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
      "type": "object"
    },
    "InstancesListServerCasResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always `sql#instancesListServerCas`."
        },
        "certs": {
          "items": {
            "$ref": "SslCert"
          },
          "type": "array",
          "description": "List of server CA certificates for the instance."
        },
        "activeVersion": {
          "type": "string"
        }
      },
      "type": "object",
      "description": "Instances ListServerCas response.",
      "id": "InstancesListServerCasResponse"
    }
  },
  "revision": "20220824",
  "title": "Cloud SQL Admin API",
  "version": "v1",
  "parameters": {
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    }
  },
  "basePath": "",
  "ownerName": "Google",
  "description": "API for Cloud SQL database instance management",
  "name": "sqladmin",
  "servicePath": "",
  "discoveryVersion": "v1",
  "documentationLink": "https://developers.google.com/cloud-sql/",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://sqladmin.googleapis.com/",
  "protocol": "rest",
  "canonicalName": "SQL Admin",
  "rootUrl": "https://sqladmin.googleapis.com/",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}

{
  "name": "servicecontrol",
  "revision": "20220218",
  "ownerDomain": "google.com",
  "version": "v2",
  "baseUrl": "https://servicecontrol.googleapis.com/",
  "servicePath": "",
  "id": "servicecontrol:v2",
  "protocol": "rest",
  "batchPath": "batch",
  "description": "Provides admission control and telemetry reporting for services integrated with Service Infrastructure. ",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "kind": "discovery#restDescription",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://cloud.google.com/service-control/",
  "ownerName": "Google",
  "version_module": true,
  "canonicalName": "Service Control",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/servicecontrol": {
          "description": "Manage your Google Service Control data"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "resources": {
    "services": {
      "methods": {
        "check": {
          "flatPath": "v2/services/{serviceName}:check",
          "path": "v2/services/{serviceName}:check",
          "id": "servicecontrol.services.check",
          "parameterOrder": [
            "serviceName"
          ],
          "parameters": {
            "serviceName": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name."
            }
          },
          "description": "Private Preview. This feature is only available for approved services. This method provides admission control for services that are integrated with [Service Infrastructure](/service-infrastructure). It checks whether an operation should be allowed based on the service configuration and relevant policies. It must be called before the operation is executed. For more information, see [Admission Control](/service-infrastructure/docs/admission-control). NOTE: The admission control has an expected policy propagation delay of 60s. The caller **must** not depend on the most recent policy changes. NOTE: The admission control has a hard limit of 1 referenced resources per call. If an operation refers to more than 1 resources, the caller must call the Check method multiple times. This method requires the `servicemanagement.services.check` permission on the specified service. For more information, see [Service Control API Access Control](https://cloud.google.com/service-infrastructure/docs/service-control/access-control).",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "CheckRequest"
          },
          "response": {
            "$ref": "CheckResponse"
          }
        },
        "report": {
          "parameters": {
            "serviceName": {
              "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "ReportResponse"
          },
          "request": {
            "$ref": "ReportRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "parameterOrder": [
            "serviceName"
          ],
          "path": "v2/services/{serviceName}:report",
          "description": "Private Preview. This feature is only available for approved services. This method provides telemetry reporting for services that are integrated with [Service Infrastructure](/service-infrastructure). It reports a list of operations that have occurred on a service. It must be called after the operations have been executed. For more information, see [Telemetry Reporting](/service-infrastructure/docs/telemetry-reporting). NOTE: The telemetry reporting has a hard limit of 1000 operations and 1MB per Report call. It is recommended to have no more than 100 operations per call. This method requires the `servicemanagement.services.report` permission on the specified service. For more information, see [Service Control API Access Control](https://cloud.google.com/service-infrastructure/docs/service-control/access-control).",
          "httpMethod": "POST",
          "id": "servicecontrol.services.report",
          "flatPath": "v2/services/{serviceName}:report"
        }
      }
    }
  },
  "schemas": {
    "ReportResponse": {
      "properties": {},
      "id": "ReportResponse",
      "description": "Response message for the Report method. If the request contains any invalid data, the server returns an RPC error.",
      "type": "object"
    },
    "ThirdPartyPrincipal": {
      "type": "object",
      "id": "ThirdPartyPrincipal",
      "properties": {
        "thirdPartyClaims": {
          "description": "Metadata about third party identity.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        }
      },
      "description": "Third party identity principal."
    },
    "CheckRequest": {
      "properties": {
        "serviceConfigId": {
          "description": "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.",
          "type": "string"
        },
        "attributes": {
          "description": "Describes attributes about the operation being executed by the service.",
          "$ref": "AttributeContext"
        },
        "resources": {
          "type": "array",
          "description": "Describes the resources and the policies applied to each resource.",
          "items": {
            "$ref": "ResourceInfo"
          }
        },
        "flags": {
          "type": "string",
          "description": "Optional. Contains a comma-separated list of flags."
        }
      },
      "type": "object",
      "description": "Request message for the Check method.",
      "id": "CheckRequest"
    },
    "AttributeContext": {
      "description": "This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.",
      "properties": {
        "origin": {
          "description": "The origin of a network activity. In a multi hop network activity, the origin represents the sender of the first hop. For the first hop, the `source` and the `origin` must have the same content.",
          "$ref": "Peer"
        },
        "destination": {
          "$ref": "Peer",
          "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop."
        },
        "request": {
          "$ref": "Request",
          "description": "Represents a network request, such as an HTTP request."
        },
        "source": {
          "$ref": "Peer",
          "description": "The source of a network activity, such as starting a TCP connection. In a multi hop network activity, the source represents the sender of the last hop."
        },
        "resource": {
          "description": "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one.",
          "$ref": "Resource"
        },
        "api": {
          "description": "Represents an API operation that is involved to a network activity.",
          "$ref": "Api"
        },
        "extensions": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "Supports extensions for advanced use cases, such as logs and metrics."
        },
        "response": {
          "$ref": "Response",
          "description": "Represents a network response, such as an HTTP response."
        }
      },
      "type": "object",
      "id": "AttributeContext"
    },
    "Request": {
      "id": "Request",
      "type": "object",
      "description": "This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request.",
      "properties": {
        "size": {
          "format": "int64",
          "description": "The HTTP request size in bytes. If unknown, it must be -1.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service.",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "The HTTP request method, such as `GET`, `POST`."
        },
        "reason": {
          "description": "A special parameter for request reason. It is used by security systems to associate auditing information with a request.",
          "type": "string"
        },
        "scheme": {
          "type": "string",
          "description": "The HTTP URL scheme, such as `http` and `https`."
        },
        "query": {
          "type": "string",
          "description": "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed."
        },
        "time": {
          "format": "google-datetime",
          "description": "The timestamp when the `destination` service receives the last byte of the request.",
          "type": "string"
        },
        "host": {
          "type": "string",
          "description": "The HTTP request `Host` header value."
        },
        "headers": {
          "type": "object",
          "description": "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "$ref": "Auth",
          "description": "The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent."
        },
        "protocol": {
          "description": "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "The HTTP URL path, excluding the query parameters."
        }
      }
    },
    "Resource": {
      "description": "This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.",
      "id": "Resource",
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request."
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was deleted. If the resource is not deleted, this must be empty.",
          "type": "string"
        },
        "etag": {
          "description": "Output only. An opaque value that uniquely identifies a version or generation of a resource. It can be used to confirm that the client and server agree on the ordering of a resource being written.",
          "type": "string"
        },
        "name": {
          "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated. Any change to the resource made by users must refresh this value. Changes to a resource made by the service should refresh this value.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created. This may be either the time creation was initiated or when it was completed.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "description": "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\", such as \"pubsub.googleapis.com/Topic\".",
          "type": "string"
        },
        "annotations": {
          "description": "Annotations is an unstructured key-value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/user-guide/annotations",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "location": {
          "description": "Immutable. The location of the resource. The location encoding is specific to the service provider, and new encoding may be introduced as the service evolves. For Google Cloud products, the encoding is what is used by Google Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The semantics of `location` is identical to the `cloud.googleapis.com/location` label used by some Google Cloud APIs.",
          "type": "string"
        },
        "displayName": {
          "description": "Mutable. The display name set by clients. Must be \u003c= 63 characters.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4."
        }
      }
    },
    "ReportRequest": {
      "type": "object",
      "description": "Request message for the Report method.",
      "id": "ReportRequest",
      "properties": {
        "operations": {
          "description": "Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access.",
          "type": "array",
          "items": {
            "$ref": "AttributeContext"
          }
        },
        "serviceConfigId": {
          "type": "string",
          "description": "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration."
        }
      }
    },
    "V2LogEntryOperation": {
      "description": "Additional information about a potentially long-running operation with which a log entry is associated.",
      "properties": {
        "producer": {
          "type": "string",
          "description": "Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`."
        },
        "id": {
          "type": "string",
          "description": "Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation."
        },
        "first": {
          "type": "boolean",
          "description": "Optional. Set this to True if this is the first log entry in the operation."
        },
        "last": {
          "type": "boolean",
          "description": "Optional. Set this to True if this is the last log entry in the operation."
        }
      },
      "type": "object",
      "id": "V2LogEntryOperation"
    },
    "AuditLog": {
      "properties": {
        "status": {
          "$ref": "Status",
          "description": "The status of the overall operation."
        },
        "resourceName": {
          "type": "string",
          "description": "The resource or collection that is the target of the operation. The name is a scheme-less URI, not including the API service name. For example: \"projects/PROJECT_ID/zones/us-central1-a/instances\" \"projects/PROJECT_ID/datasets/DATASET_ID\""
        },
        "authenticationInfo": {
          "description": "Authentication information.",
          "$ref": "AuthenticationInfo"
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the API service performing the operation. For example, `\"compute.googleapis.com\"`."
        },
        "requestMetadata": {
          "$ref": "RequestMetadata",
          "description": "Metadata about the operation."
        },
        "authorizationInfo": {
          "type": "array",
          "items": {
            "$ref": "AuthorizationInfo"
          },
          "description": "Authorization information. If there are multiple resources or permissions involved, then there is one AuthorizationInfo element for each {resource, permission} tuple."
        },
        "methodName": {
          "type": "string",
          "description": "The name of the service method or operation. For API calls, this should be the name of the API method. For example, \"google.cloud.bigquery.v2.TableService.InsertTable\" \"google.logging.v2.ConfigServiceV2.CreateSink\""
        },
        "request": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "The operation request. This may not include all request parameters, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "numResponseItems": {
          "type": "string",
          "format": "int64",
          "description": "The number of items returned from a List or Query API method, if applicable."
        },
        "serviceData": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Deprecated. Use the `metadata` field instead. Other service-specific data about the request, response, and other activities."
        },
        "resourceOriginalState": {
          "type": "object",
          "description": "The resource's original state before mutation. Present only for operations which have successfully modified the targeted resource(s). In general, this field should contain all changed fields, except those that are already been included in `request`, `response`, `metadata` or `service_data` fields. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "resourceLocation": {
          "$ref": "ResourceLocation",
          "description": "The resource location information."
        },
        "response": {
          "description": "The operation response. This may not include all response elements, such as those that are too large, privacy-sensitive, or duplicated elsewhere in the log record. It should never include user-generated data, such as file contents. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "metadata": {
          "description": "Other service-specific data about the request, response, and other information associated with the current audited event.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "id": "AuditLog",
      "description": "Common audit log format for Google Cloud Platform API operations. "
    },
    "RequestMetadata": {
      "description": "Metadata about the request.",
      "properties": {
        "requestAttributes": {
          "description": "Request attributes used in IAM condition evaluation. This field contains request attributes like request time and access levels associated with the request. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.authentication_info.resource_attributes`.",
          "$ref": "Request"
        },
        "destinationAttributes": {
          "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop. Only two fields are used in this message, Peer.port and Peer.ip. These fields are optionally populated by those services utilizing the IAM condition feature.",
          "$ref": "Peer"
        },
        "callerNetwork": {
          "description": "The network of the caller. Set only if the network host project is part of the same GCP organization (or project) as the accessed resource. See https://cloud.google.com/compute/docs/vpc/ for more information. This is a scheme-less URI full resource name. For example: \"//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID\"",
          "type": "string"
        },
        "callerSuppliedUserAgent": {
          "description": "The user agent of the caller. This information is not authenticated and should be treated accordingly. For example: + `google-api-python-client/1.4.0`: The request was made by the Google API client for Python. + `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`: The request was made by the Google Cloud SDK CLI (gcloud). + `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`: The request was made from the `my-project` App Engine app. NOLINT",
          "type": "string"
        },
        "callerIp": {
          "type": "string",
          "description": "The IP address of the caller. For caller from internet, this will be public IPv4 or IPv6 address. For caller from a Compute Engine VM with external IP address, this will be the VM's external IP address. For caller from a Compute Engine VM without external IP address, if the VM is in the same organization (or project) as the accessed resource, `caller_ip` will be the VM's internal IPv4 address, otherwise the `caller_ip` will be redacted to \"gce-internal-ip\". See https://cloud.google.com/compute/docs/vpc/ for more information."
        }
      },
      "type": "object",
      "id": "RequestMetadata"
    },
    "FirstPartyPrincipal": {
      "id": "FirstPartyPrincipal",
      "properties": {
        "serviceMetadata": {
          "description": "Metadata about the service that uses the service account. .",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "principalEmail": {
          "type": "string",
          "description": "The email address of a Google account. ."
        }
      },
      "type": "object",
      "description": "First party identity principal."
    },
    "Response": {
      "description": "This message defines attributes for a typical network response. It generally models semantics of an HTTP response.",
      "id": "Response",
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "format": "int64",
          "description": "The HTTP response size in bytes. If unknown, it must be -1."
        },
        "time": {
          "description": "The timestamp when the `destination` service sends the last byte of the response.",
          "format": "google-datetime",
          "type": "string"
        },
        "backendLatency": {
          "format": "google-duration",
          "type": "string",
          "description": "The amount of time it takes the backend service to fully respond to a request. Measured from when the destination service starts to send the request to the backend until when the destination service receives the complete response from the backend."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive."
        },
        "code": {
          "format": "int64",
          "description": "The HTTP response status code, such as `200` and `404`.",
          "type": "string"
        }
      }
    },
    "ResourceLocation": {
      "description": "Location information about a resource.",
      "properties": {
        "originalLocations": {
          "items": {
            "type": "string"
          },
          "description": "The locations of a resource prior to the execution of the operation. Requests that mutate the resource's location must populate both the 'original_locations' as well as the 'current_locations' fields. For example: \"europe-west1-a\" \"us-east1\" \"nam3\"",
          "type": "array"
        },
        "currentLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The locations of a resource after the execution of the operation. Requests to create or delete a location based resource must populate the 'current_locations' field and not the 'original_locations' field. For example: \"europe-west1-a\" \"us-east1\" \"nam3\""
        }
      },
      "type": "object",
      "id": "ResourceLocation"
    },
    "Peer": {
      "id": "Peer",
      "type": "object",
      "description": "This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.",
      "properties": {
        "principal": {
          "type": "string",
          "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
        },
        "port": {
          "type": "string",
          "format": "int64",
          "description": "The network port of the peer."
        },
        "labels": {
          "description": "The labels associated with the peer.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "regionCode": {
          "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running.",
          "type": "string"
        },
        "ip": {
          "type": "string",
          "description": "The IP address of the peer."
        }
      }
    },
    "CheckResponse": {
      "description": "Response message for the Check method.",
      "id": "CheckResponse",
      "properties": {
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Returns a set of request contexts generated from the `CheckRequest`.",
          "type": "object"
        },
        "status": {
          "description": "Operation is allowed when this field is not set. Any non-'OK' status indicates a denial; [google.rpc.Status.details]() would contain additional details about the denial.",
          "$ref": "Status"
        }
      },
      "type": "object"
    },
    "Api": {
      "type": "object",
      "description": "This message defines attributes associated with API operations, such as a network API request. The terminology is based on the conventions used by Google APIs, Istio, and OpenAPI.",
      "id": "Api",
      "properties": {
        "service": {
          "type": "string",
          "description": "The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request."
        },
        "operation": {
          "description": "The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\".",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\"."
        },
        "protocol": {
          "type": "string",
          "description": "The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\"."
        }
      }
    },
    "SpanContext": {
      "properties": {
        "spanName": {
          "description": "The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] `[TRACE_ID]` is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. `[SPAN_ID]` is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
          "type": "string"
        }
      },
      "description": "The context of a span. This is attached to an Exemplar in Distribution values during aggregation. It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID]",
      "id": "SpanContext",
      "type": "object"
    },
    "Auth": {
      "description": "This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards.",
      "properties": {
        "claims": {
          "type": "object",
          "description": "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "audiences": {
          "type": "array",
          "description": "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided.",
          "items": {
            "type": "string"
          }
        },
        "accessLevels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\""
        },
        "principal": {
          "type": "string",
          "description": "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\""
        },
        "presenter": {
          "type": "string",
          "description": "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\"."
        }
      },
      "type": "object",
      "id": "Auth"
    },
    "V2LogEntry": {
      "id": "V2LogEntry",
      "description": "An individual log entry.",
      "properties": {
        "severity": {
          "type": "string",
          "enumDescriptions": [
            "(0) The log entry has no assigned severity level.",
            "(100) Debug or trace information.",
            "(200) Routine information, such as ongoing status or performance.",
            "(300) Normal but significant events, such as start up, shut down, or a configuration change.",
            "(400) Warning events might cause problems.",
            "(500) Error events are likely to cause problems.",
            "(600) Critical events cause more severe problems or outages.",
            "(700) A person must take an action immediately.",
            "(800) One or more systems are unusable."
          ],
          "enum": [
            "DEFAULT",
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "ALERT",
            "EMERGENCY"
          ],
          "description": "The severity of the log entry. The default value is `LogSeverity.DEFAULT`."
        },
        "textPayload": {
          "description": "The log entry payload, represented as a Unicode string (UTF-8).",
          "type": "string"
        },
        "timestamp": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the event described by the log entry occurred. If omitted, defaults to operation start time."
        },
        "protoPayload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog."
        },
        "name": {
          "type": "string",
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`."
        },
        "sourceLocation": {
          "$ref": "V2LogEntrySourceLocation",
          "description": "Optional. Source code location information associated with the log entry, if any."
        },
        "labels": {
          "description": "A set of user-defined (key, value) data that provides additional information about the log entry.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "structPayload": {
          "description": "The log entry payload, represented as a structure that is expressed as a JSON object.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "operation": {
          "description": "Optional. Information about an operation associated with the log entry, if applicable.",
          "$ref": "V2LogEntryOperation"
        },
        "insertId": {
          "type": "string",
          "description": "A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id."
        },
        "monitoredResourceLabels": {
          "type": "object",
          "description": "A set of user-defined (key, value) data that provides additional information about the moniotored resource that the log entry belongs to.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "trace": {
          "description": "Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`",
          "type": "string"
        },
        "httpRequest": {
          "$ref": "V2HttpRequest",
          "description": "Optional. Information about the HTTP request associated with this log entry, if applicable."
        }
      },
      "type": "object"
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status"
    },
    "AuthenticationInfo": {
      "type": "object",
      "description": "Authentication information for the operation.",
      "id": "AuthenticationInfo",
      "properties": {
        "principalEmail": {
          "type": "string",
          "description": "The email address of the authenticated user (or service account on behalf of third party principal) making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id)."
        },
        "serviceAccountKeyName": {
          "type": "string",
          "description": "The name of the service account key used to create or exchange credentials for authenticating the service account making the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\""
        },
        "thirdPartyPrincipal": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The third party identification (if any) of the authenticated user making the request. When the JSON object represented here has a proto equivalent, the proto name will be indicated in the `@type` property."
        },
        "principalSubject": {
          "description": "String representation of identity of requesting party. Populated for both first and third party identities.",
          "type": "string"
        },
        "serviceAccountDelegationInfo": {
          "type": "array",
          "items": {
            "$ref": "ServiceAccountDelegationInfo"
          },
          "description": "Identity delegation history of an authenticated service account that makes the request. It contains information on the real authorities that try to access GCP resources by delegating on a service account. When multiple authorities present, they are guaranteed to be sorted based on the original ordering of the identity delegation events."
        },
        "authoritySelector": {
          "description": "The authority selector specified by the requestor, if any. It is not guaranteed that the principal was allowed to use this authority.",
          "type": "string"
        }
      }
    },
    "V2HttpRequest": {
      "id": "V2HttpRequest",
      "description": "A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.",
      "type": "object",
      "properties": {
        "requestSize": {
          "description": "The size of the HTTP request message in bytes, including the request headers and the request body.",
          "format": "int64",
          "type": "string"
        },
        "latency": {
          "format": "google-duration",
          "type": "string",
          "description": "The request processing latency on the server, from the time the request was received until the response was sent."
        },
        "cacheValidatedWithOriginServer": {
          "description": "Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.",
          "type": "boolean"
        },
        "protocol": {
          "description": "Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"",
          "type": "string"
        },
        "responseSize": {
          "description": "The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.",
          "format": "int64",
          "type": "string"
        },
        "remoteIp": {
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.",
          "type": "string"
        },
        "userAgent": {
          "description": "The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.",
          "type": "string"
        },
        "requestUrl": {
          "type": "string",
          "description": "The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`."
        },
        "referer": {
          "type": "string",
          "description": "The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)."
        },
        "requestMethod": {
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.",
          "type": "string"
        },
        "serverIp": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to.",
          "type": "string"
        },
        "cacheLookup": {
          "description": "Whether or not a cache lookup was attempted.",
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The response code indicating the status of the response. Examples: 200, 404."
        },
        "cacheHit": {
          "type": "boolean",
          "description": "Whether or not an entity was served from cache (with or without validation)."
        },
        "cacheFillBytes": {
          "format": "int64",
          "type": "string",
          "description": "The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted."
        }
      }
    },
    "ServiceAccountDelegationInfo": {
      "type": "object",
      "id": "ServiceAccountDelegationInfo",
      "description": "Identity delegation history of an authenticated service account.",
      "properties": {
        "thirdPartyPrincipal": {
          "$ref": "ThirdPartyPrincipal",
          "description": "Third party identity as the real authority."
        },
        "principalSubject": {
          "type": "string",
          "description": "A string representing the principal_subject associated with the identity. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subject/{subject)` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`"
        },
        "firstPartyPrincipal": {
          "description": "First party (Google) identity as the real authority.",
          "$ref": "FirstPartyPrincipal"
        }
      }
    },
    "ResourceInfo": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource referenced in the request."
        },
        "container": {
          "type": "string",
          "description": "Optional. The identifier of the container of this resource. For Google Cloud APIs, the resource container must be one of the following formats: - `projects/` - `folders/` - `organizations/` For the policy enforcement on the container level (VPCSC and Location Policy check), this field takes precedence on the container extracted from name when presents."
        },
        "location": {
          "description": "Optional. The location of the resource. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"",
          "type": "string"
        },
        "type": {
          "description": "The resource type in the format of \"{service}/{kind}\".",
          "type": "string"
        },
        "permission": {
          "description": "The resource permission needed for this request. The format must be \"{service}/{plural}.{verb}\".",
          "type": "string"
        }
      },
      "id": "ResourceInfo",
      "description": "Describes a resource referenced in the request.",
      "type": "object"
    },
    "AuthorizationInfo": {
      "properties": {
        "granted": {
          "type": "boolean",
          "description": "Whether or not authorization for `resource` and `permission` was granted."
        },
        "resource": {
          "type": "string",
          "description": "The resource being accessed, as a REST-style or cloud resource string. For example: bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID or projects/PROJECTID/datasets/DATASETID"
        },
        "resourceAttributes": {
          "$ref": "Resource",
          "description": "Resource attributes used in IAM condition evaluation. This field contains resource attributes like resource type and resource name. To get the whole view of the attributes used in IAM condition evaluation, the user must also look into `AuditLog.request_metadata.request_attributes`."
        },
        "permission": {
          "type": "string",
          "description": "The required IAM permission."
        }
      },
      "id": "AuthorizationInfo",
      "description": "Authorization information for the operation.",
      "type": "object"
    },
    "V2LogEntrySourceLocation": {
      "type": "object",
      "description": "Additional information about the source code location that produced the log entry.",
      "properties": {
        "file": {
          "description": "Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.",
          "type": "string"
        },
        "line": {
          "type": "string",
          "description": "Optional. Line within the source file. 1-based; 0 indicates no line number available.",
          "format": "int64"
        },
        "function": {
          "description": "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).",
          "type": "string"
        }
      },
      "id": "V2LogEntrySourceLocation"
    }
  },
  "title": "Service Control API",
  "mtlsRootUrl": "https://servicecontrol.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "rootUrl": "https://servicecontrol.googleapis.com/"
}

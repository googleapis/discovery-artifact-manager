{
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "default": "json",
      "description": "Data format for response."
    }
  },
  "resources": {
    "folders": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "id": "recommender.folders.locations.insightTypes.insights.get",
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the insight.",
                          "type": "string",
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "type": "integer"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `stateInfo.state` * `insightSubtype` * `severity` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `insightSubtype = PERMISSIONS_USAGE` * `severity = CRITICAL OR severity = HIGH` * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)` (These expressions are based on the filter language described at https://google.aip.dev/160)"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListInsightsResponse"
                      },
                      "path": "v1beta1/{+parent}/insights",
                      "httpMethod": "GET",
                      "description": "Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.",
                      "id": "recommender.folders.locations.insightTypes.insights.list"
                    },
                    "markAccepted": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.folders.locations.insightTypes.insights.markAccepted",
                      "httpMethod": "POST",
                      "path": "v1beta1/{+name}:markAccepted",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the insight.",
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest"
                      }
                    }
                  }
                }
              }
            },
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "httpMethod": "GET",
                      "id": "recommender.folders.locations.recommenders.recommendations.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: * `state_info.state` * `recommenderSubtype` * `priority` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE` * `priority = P1 OR priority = P2` * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)` (These expressions are based on the filter language described at https://google.aip.dev/160)"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListRecommendationsResponse"
                      },
                      "id": "recommender.folders.locations.recommenders.recommendations.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta1/{+parent}/recommendations",
                      "description": "Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "httpMethod": "GET"
                    },
                    "markFailed": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the recommendation.",
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+name}:markFailed",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "id": "recommender.folders.locations.recommenders.recommendations.markFailed"
                    },
                    "markSucceeded": {
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest"
                      },
                      "path": "v1beta1/{+name}:markSucceeded",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the recommendation.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "id": "recommender.folders.locations.recommenders.recommendations.markSucceeded"
                    },
                    "markClaimed": {
                      "id": "recommender.folders.locations.recommenders.recommendations.markClaimed",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "flatPath": "v1beta1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "path": "v1beta1/{+name}:markClaimed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "methods": {
                "updateConfig": {
                  "path": "v1beta1/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Updates an InsightTypeConfig change. This will create a new revision of the config.",
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "If true, validate the request and preview the change, but do not actually update it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/config$",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "id": "recommender.projects.locations.insightTypes.updateConfig"
                },
                "getConfig": {
                  "path": "v1beta1/{+name}",
                  "id": "recommender.projects.locations.insightTypes.getConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "description": "Gets the requested InsightTypeConfig. There is only one instance of the config for each InsightType.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/config$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the InsightTypeConfig to get. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config` * `projects/[PROJECT_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config` * `organizations/[ORGANIZATION_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config`"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config"
                }
              },
              "resources": {
                "insights": {
                  "methods": {
                    "markAccepted": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the insight."
                        }
                      },
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "id": "recommender.projects.locations.insightTypes.insights.markAccepted",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest"
                      },
                      "path": "v1beta1/{+name}:markAccepted",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "id": "recommender.projects.locations.insightTypes.insights.list",
                      "description": "Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListInsightsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "format": "int32",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `stateInfo.state` * `insightSubtype` * `severity` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `insightSubtype = PERMISSIONS_USAGE` * `severity = CRITICAL OR severity = HIGH` * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)` (These expressions are based on the filter language described at https://google.aip.dev/160)"
                        }
                      },
                      "path": "v1beta1/{+parent}/insights"
                    },
                    "get": {
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the insight.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.projects.locations.insightTypes.insights.get"
                    }
                  }
                }
              }
            },
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "markFailed": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "path": "v1beta1/{+name}:markFailed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "id": "recommender.projects.locations.recommenders.recommendations.markFailed",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender."
                    },
                    "markClaimed": {
                      "path": "v1beta1/{+name}:markClaimed",
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "httpMethod": "POST",
                      "id": "recommender.projects.locations.recommenders.recommendations.markClaimed"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.projects.locations.recommenders.recommendations.get",
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender."
                    },
                    "markSucceeded": {
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "id": "recommender.projects.locations.recommenders.recommendations.markSucceeded",
                      "path": "v1beta1/{+name}:markSucceeded",
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the recommendation.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "description": "Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListRecommendationsResponse"
                      },
                      "path": "v1beta1/{+parent}/recommendations",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "recommender.projects.locations.recommenders.recommendations.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: * `state_info.state` * `recommenderSubtype` * `priority` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE` * `priority = P1 OR priority = P2` * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)` (These expressions are based on the filter language described at https://google.aip.dev/160)",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "getConfig": {
                  "httpMethod": "GET",
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the Recommendation Config to get. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/config$",
                      "required": true
                    }
                  },
                  "description": "Gets the requested Recommender Config. There is only one instance of the config for each Recommender.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "recommender.projects.locations.recommenders.getConfig",
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/config"
                },
                "updateConfig": {
                  "id": "recommender.projects.locations.recommenders.updateConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/config",
                  "request": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "description": "Updates a Recommender Config. This will create a new revision of the config.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/config$"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "If true, validate the request and preview the change, but do not actually update it.",
                      "type": "boolean"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to be updated."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "billingAccounts": {
      "resources": {
        "locations": {
          "resources": {
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "markClaimed": {
                      "path": "v1beta1/{+name}:markClaimed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest"
                      },
                      "httpMethod": "POST",
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markClaimed",
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed"
                    },
                    "markSucceeded": {
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest"
                      },
                      "path": "v1beta1/{+name}:markSucceeded",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markSucceeded",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "markFailed": {
                      "path": "v1beta1/{+name}:markFailed",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markFailed"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: * `state_info.state` * `recommenderSubtype` * `priority` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE` * `priority = P1 OR priority = P2` * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)` (These expressions are based on the filter language described at https://google.aip.dev/160)",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.list",
                      "httpMethod": "GET",
                      "path": "v1beta1/{+parent}/recommendations",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListRecommendationsResponse"
                      },
                      "description": "Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations"
                    },
                    "get": {
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.get",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the recommendation.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      }
                    }
                  }
                }
              }
            },
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "description": "Required. Name of the insight."
                        }
                      },
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.get"
                    },
                    "list": {
                      "description": "Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `stateInfo.state` * `insightSubtype` * `severity` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `insightSubtype = PERMISSIONS_USAGE` * `severity = CRITICAL OR severity = HIGH` * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)` (These expressions are based on the filter language described at https://google.aip.dev/160)",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListInsightsResponse"
                      },
                      "path": "v1beta1/{+parent}/insights"
                    },
                    "markAccepted": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest"
                      },
                      "flatPath": "v1beta1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.markAccepted",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the insight."
                        }
                      },
                      "path": "v1beta1/{+name}:markAccepted",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "methods": {
                "config": {
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "recommender.organizations.locations.insightTypes.config",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to be updated.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "If true, validate the request and preview the change, but do not actually update it.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/config$"
                    }
                  },
                  "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "description": "Updates an InsightTypeConfig change. This will create a new revision of the config."
                },
                "getConfig": {
                  "description": "Gets the requested InsightTypeConfig. There is only one instance of the config for each InsightType.",
                  "id": "recommender.organizations.locations.insightTypes.getConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1InsightTypeConfig"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the InsightTypeConfig to get. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config` * `projects/[PROJECT_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config` * `organizations/[ORGANIZATION_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config`",
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/config$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/config",
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "insights": {
                  "methods": {
                    "list": {
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "description": "Lists insights for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified insight type.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListInsightsResponse"
                      },
                      "path": "v1beta1/{+parent}/insights",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: * `stateInfo.state` * `insightSubtype` * `severity` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `insightSubtype = PERMISSIONS_USAGE` * `severity = CRITICAL OR severity = HIGH` * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)` (These expressions are based on the filter language described at https://google.aip.dev/160)"
                        },
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+$"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "recommender.organizations.locations.insightTypes.insights.list"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the insight."
                        }
                      },
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "id": "recommender.organizations.locations.insightTypes.insights.get",
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "httpMethod": "GET"
                    },
                    "markAccepted": {
                      "id": "recommender.organizations.locations.insightTypes.insights.markAccepted",
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}:markAccepted",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the insight."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Insight"
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest"
                      },
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "recommenders": {
              "methods": {
                "getConfig": {
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the requested Recommender Config. There is only one instance of the config for each Recommender.",
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the Recommendation Config to get. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/config$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "recommender.organizations.locations.recommenders.getConfig",
                  "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/config"
                },
                "config": {
                  "description": "Updates a Recommender Config. This will create a new revision of the config.",
                  "path": "v1beta1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/config",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudRecommenderV1beta1RecommenderConfig"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/config$",
                      "location": "path",
                      "required": true,
                      "description": "Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If true, validate the request and preview the change, but do not actually update it."
                    }
                  },
                  "id": "recommender.organizations.locations.recommenders.config",
                  "parameterOrder": [
                    "name"
                  ]
                }
              },
              "resources": {
                "recommendations": {
                  "methods": {
                    "get": {
                      "path": "v1beta1/{+name}",
                      "httpMethod": "GET",
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "id": "recommender.organizations.locations.recommenders.recommendations.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      }
                    },
                    "markSucceeded": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.organizations.locations.recommenders.recommendations.markSucceeded",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest"
                      },
                      "path": "v1beta1/{+name}:markSucceeded"
                    },
                    "markClaimed": {
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "path": "v1beta1/{+name}:markClaimed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.organizations.locations.recommenders.recommendations.markClaimed"
                    },
                    "markFailed": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "path": "v1beta1/{+name}:markFailed",
                      "id": "recommender.organizations.locations.recommenders.recommendations.markFailed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
                      }
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1beta1ListRecommendationsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: * `state_info.state` * `recommenderSubtype` * `priority` Examples: * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED` * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE` * `priority = P1 OR priority = P2` * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)` (These expressions are based on the filter language described at https://google.aip.dev/160)",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        },
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+$"
                        }
                      },
                      "id": "recommender.organizations.locations.recommenders.recommendations.list",
                      "description": "Lists recommendations for the specified Cloud Resource. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "path": "v1beta1/{+parent}/recommendations",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "ownerDomain": "google.com",
  "name": "recommender",
  "documentationLink": "https://cloud.google.com/recommender/docs/",
  "discoveryVersion": "v1",
  "basePath": "",
  "baseUrl": "https://recommender.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://recommender.mtls.googleapis.com/",
  "title": "Recommender API",
  "description": "",
  "id": "recommender:v1beta1",
  "schemas": {
    "GoogleCloudRecommenderV1beta1InsightTypeConfig": {
      "id": "GoogleCloudRecommenderV1beta1InsightTypeConfig",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Fingerprint of the InsightTypeConfig. Provides optimistic locking when updating."
        },
        "insightTypeGenerationConfig": {
          "description": "InsightTypeGenerationConfig which configures the generation of insights for this insight type.",
          "$ref": "GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig"
        },
        "revisionId": {
          "description": "Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "A user-settable field to provide a human-readable name to be used in user interfaces."
        },
        "name": {
          "description": "Name of insight type config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config",
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "updateTime": {
          "description": "Last time when the config was updated.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Configuration for an InsightType."
    },
    "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest": {
      "type": "object",
      "properties": {
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.",
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking."
        }
      },
      "id": "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest",
      "description": "Request for the `MarkRecommendationSucceeded` Method."
    },
    "GoogleCloudRecommenderV1beta1Recommendation": {
      "description": "A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc",
      "properties": {
        "stateInfo": {
          "description": "Information for state. Contains state and metadata.",
          "$ref": "GoogleCloudRecommenderV1beta1RecommendationStateInfo"
        },
        "primaryImpact": {
          "description": "The primary impact that this recommendation can have while trying to optimize for one category.",
          "$ref": "GoogleCloudRecommenderV1beta1Impact"
        },
        "priority": {
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "P4",
            "P3",
            "P2",
            "P1"
          ],
          "enumDescriptions": [
            "Recommendation has unspecified priority.",
            "Recommendation has P4 priority (lowest priority).",
            "Recommendation has P3 priority (second lowest priority).",
            "Recommendation has P2 priority (second highest priority).",
            "Recommendation has P1 priority (highest priority)."
          ],
          "type": "string",
          "description": "Recommendation's priority."
        },
        "recommenderSubtype": {
          "description": "Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = \"google.iam.policy.Recommender\", recommender_subtype can be one of \"REMOVE_ROLE\"/\"REPLACE_ROLE\"",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-form human readable summary in English. The maximum length is 500 characters."
        },
        "xorGroupId": {
          "description": "Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied.",
          "type": "string"
        },
        "additionalImpact": {
          "description": "Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.",
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1Impact"
          },
          "type": "array"
        },
        "lastRefreshTime": {
          "format": "google-datetime",
          "description": "Last time this recommendation was refreshed by the system that created it in the first place.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Fingerprint of the Recommendation. Provides optimistic locking when updating states."
        },
        "content": {
          "description": "Content of the recommendation describing recommended changes to resources.",
          "$ref": "GoogleCloudRecommenderV1beta1RecommendationContent"
        },
        "associatedInsights": {
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1RecommendationInsightReference"
          },
          "description": "Insights that led to this recommendation.",
          "type": "array"
        },
        "name": {
          "description": "Name of recommendation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRecommenderV1beta1Recommendation"
    },
    "GoogleCloudRecommenderV1beta1Impact": {
      "description": "Contains the impact a recommendation can have for a given category.",
      "type": "object",
      "properties": {
        "securityProjection": {
          "$ref": "GoogleCloudRecommenderV1beta1SecurityProjection",
          "description": "Use with CategoryType.SECURITY"
        },
        "sustainabilityProjection": {
          "description": "Use with CategoryType.SUSTAINABILITY",
          "$ref": "GoogleCloudRecommenderV1beta1SustainabilityProjection"
        },
        "category": {
          "enumDescriptions": [
            "Default unspecified category. Don't use directly.",
            "Indicates a potential increase or decrease in cost.",
            "Indicates a potential increase or decrease in security.",
            "Indicates a potential increase or decrease in performance.",
            "Indicates a potential increase or decrease in manageability.",
            "Indicates a potential increase or decrease in sustainability."
          ],
          "type": "string",
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "COST",
            "SECURITY",
            "PERFORMANCE",
            "MANAGEABILITY",
            "SUSTAINABILITY"
          ],
          "description": "Category that is being targeted."
        },
        "costProjection": {
          "description": "Use with CategoryType.COST",
          "$ref": "GoogleCloudRecommenderV1beta1CostProjection"
        }
      },
      "id": "GoogleCloudRecommenderV1beta1Impact"
    },
    "GoogleCloudRecommenderV1beta1ListRecommendationsResponse": {
      "type": "object",
      "description": "Response to the `ListRecommendations` method.",
      "id": "GoogleCloudRecommenderV1beta1ListRecommendationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be used to request the next page of results. This field is empty if there are no additional results."
        },
        "recommendations": {
          "description": "The set of recommendations for the `parent` resource.",
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1Recommendation"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRecommenderV1beta1RecommendationContent": {
      "id": "GoogleCloudRecommenderV1beta1RecommendationContent",
      "description": "Contains what resources are changing and how they are changing.",
      "type": "object",
      "properties": {
        "operationGroups": {
          "description": "Operations to one or more Google Cloud resources grouped in such a way that, all operations within one group are expected to be performed atomically and in an order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1OperationGroup"
          }
        },
        "overview": {
          "description": "Condensed overview information about the recommendation.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest": {
      "id": "GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking."
        },
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`."
        }
      },
      "description": "Request for the `MarkRecommendationFailed` Method.",
      "type": "object"
    },
    "GoogleCloudRecommenderV1beta1SustainabilityProjection": {
      "properties": {
        "kgCO2e": {
          "format": "double",
          "description": "Carbon Footprint generated in kg of CO2 equivalent. Chose kg_c_o2e so that the name renders correctly in camelCase (kgCO2e).",
          "type": "number"
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Duration for which this sustanability applies."
        }
      },
      "description": "Contains metadata about how much sustainability a recommendation can save or incur.",
      "id": "GoogleCloudRecommenderV1beta1SustainabilityProjection",
      "type": "object"
    },
    "GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig": {
      "properties": {
        "params": {
          "type": "object",
          "description": "Parameters for this InsightTypeGenerationConfig. These configs can be used by or are applied to all subtypes.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRecommenderV1beta1InsightTypeGenerationConfig",
      "description": "A configuration to customize the generation of insights. Eg, customizing the lookback period considered when generating a insight."
    },
    "GoogleCloudRecommenderV1beta1InsightStateInfo": {
      "id": "GoogleCloudRecommenderV1beta1InsightStateInfo",
      "description": "Information related to insight state.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Insight state.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Insight is active. Content for ACTIVE insights can be updated by Google. ACTIVE insights can be marked DISMISSED OR ACCEPTED.",
            "Some action has been taken based on this insight. Insights become accepted when a recommendation derived from the insight has been marked CLAIMED, SUCCEEDED, or FAILED. ACTIVE insights can also be marked ACCEPTED explicitly. Content for ACCEPTED insights is immutable. ACCEPTED insights can only be marked ACCEPTED (which may update state metadata).",
            "Insight is dismissed. Content for DISMISSED insights can be updated by Google. DISMISSED insights can be marked as ACTIVE."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "ACCEPTED",
            "DISMISSED"
          ]
        },
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of metadata for the state, provided by user or automations systems.",
          "type": "object"
        }
      }
    },
    "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest": {
      "properties": {
        "stateMetadata": {
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request for the `MarkRecommendationClaimed` Method.",
      "id": "GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest"
    },
    "GoogleCloudRecommenderV1beta1ListInsightsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token that can be used to request the next page of results. This field is empty if there are no additional results.",
          "type": "string"
        },
        "insights": {
          "type": "array",
          "description": "The set of insights for the `parent` resource.",
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1Insight"
          }
        }
      },
      "id": "GoogleCloudRecommenderV1beta1ListInsightsResponse",
      "type": "object",
      "description": "Response to the `ListInsights` method."
    },
    "GoogleTypeMoney": {
      "type": "object",
      "properties": {
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64",
          "type": "string"
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32"
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "id": "GoogleTypeMoney"
    },
    "GoogleCloudRecommenderV1beta1InsightRecommendationReference": {
      "description": "Reference to an associated recommendation.",
      "id": "GoogleCloudRecommenderV1beta1InsightRecommendationReference",
      "properties": {
        "recommendation": {
          "description": "Recommendation resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest": {
      "id": "GoogleCloudRecommenderV1beta1MarkInsightAcceptedRequest",
      "description": "Request for the `MarkInsightAccepted` method.",
      "type": "object",
      "properties": {
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. State properties user wish to include with this state. Full replace of the current state_metadata."
        },
        "etag": {
          "description": "Required. Fingerprint of the Insight. Provides optimistic locking.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1beta1RecommenderConfig": {
      "type": "object",
      "description": "Configuration for a Recommender.",
      "properties": {
        "displayName": {
          "description": "A user-settable field to provide a human-readable name to be used in user interfaces.",
          "type": "string"
        },
        "etag": {
          "description": "Fingerprint of the RecommenderConfig. Provides optimistic locking when updating.",
          "type": "string"
        },
        "recommenderGenerationConfig": {
          "$ref": "GoogleCloudRecommenderV1beta1RecommenderGenerationConfig",
          "description": "RecommenderGenerationConfig which configures the Generation of recommendations for this recommender."
        },
        "annotations": {
          "description": "Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config"
        },
        "revisionId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string."
        },
        "updateTime": {
          "type": "string",
          "description": "Last time when the config was updated.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudRecommenderV1beta1RecommenderConfig"
    },
    "GoogleCloudRecommenderV1beta1Insight": {
      "type": "object",
      "description": "An insight along with the information used to derive the insight. The insight may have associated recomendations as well.",
      "id": "GoogleCloudRecommenderV1beta1Insight",
      "properties": {
        "etag": {
          "description": "Fingerprint of the Insight. Provides optimistic locking when updating states.",
          "type": "string"
        },
        "stateInfo": {
          "$ref": "GoogleCloudRecommenderV1beta1InsightStateInfo",
          "description": "Information state and metadata."
        },
        "description": {
          "description": "Free-form human readable summary in English. The maximum length is 500 characters.",
          "type": "string"
        },
        "lastRefreshTime": {
          "description": "Timestamp of the latest data used to generate the insight.",
          "format": "google-datetime",
          "type": "string"
        },
        "observationPeriod": {
          "format": "google-duration",
          "type": "string",
          "description": "Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period)."
        },
        "content": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\""
        },
        "name": {
          "description": "Name of the insight.",
          "type": "string"
        },
        "associatedRecommendations": {
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1InsightRecommendationReference"
          },
          "description": "Recommendations derived from this insight.",
          "type": "array"
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Insight has unspecified severity.",
            "Insight has low severity.",
            "Insight has medium severity.",
            "Insight has high severity.",
            "Insight has critical severity."
          ],
          "description": "Insight's severity."
        },
        "targetResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fully qualified resource names that this insight is targeting."
        },
        "insightSubtype": {
          "type": "string",
          "description": "Insight subtype. Insight content schema will be stable for a given subtype."
        },
        "category": {
          "enumDescriptions": [
            "Unspecified category.",
            "The insight is related to cost.",
            "The insight is related to security.",
            "The insight is related to performance.",
            "This insight is related to manageability."
          ],
          "description": "Category being targeted by the insight.",
          "type": "string",
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "COST",
            "SECURITY",
            "PERFORMANCE",
            "MANAGEABILITY"
          ]
        }
      }
    },
    "GoogleCloudRecommenderV1beta1ValueMatcher": {
      "description": "Contains various matching options for values for a GCP resource field.",
      "id": "GoogleCloudRecommenderV1beta1ValueMatcher",
      "properties": {
        "matchesPattern": {
          "type": "string",
          "description": "To be used for full regex matching. The regular expression is using the Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be used with RE2::FullMatch"
        }
      },
      "type": "object"
    },
    "GoogleCloudRecommenderV1beta1RecommendationStateInfo": {
      "type": "object",
      "id": "GoogleCloudRecommenderV1beta1RecommendationStateInfo",
      "description": "Information for state. Contains state and metadata.",
      "properties": {
        "stateMetadata": {
          "description": "A map of metadata for the state, provided by user or automations systems.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CLAIMED",
            "SUCCEEDED",
            "FAILED",
            "DISMISSED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default state. Don't use directly.",
            "Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in dismissed state. Recommendation content can be updated by Google. DISMISSED recommendations can be marked as ACTIVE."
          ],
          "description": "The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED."
        }
      }
    },
    "GoogleCloudRecommenderV1beta1Operation": {
      "description": "Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC.",
      "id": "GoogleCloudRecommenderV1beta1Operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for the `path` field. Will be set for actions:'add'/'replace'. Maybe set for action: 'test'. Either this or `value_matcher` will be set for 'test' operation. An exact match must be performed.",
          "type": "any"
        },
        "resourceType": {
          "description": "Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance",
          "type": "string"
        },
        "sourcePath": {
          "description": "Can be set with action 'copy' or 'move' to indicate the source field within resource or source_resource, ignored if provided for other operation types.",
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo."
        },
        "path": {
          "description": "Path to the target field being operated on. If the operation is at the resource level, then path should be \"/\". This field is always populated.",
          "type": "string"
        },
        "valueMatcher": {
          "$ref": "GoogleCloudRecommenderV1beta1ValueMatcher",
          "description": "Can be set for action 'test' for advanced matching for the value of 'path' field. Either this or `value` will be set for 'test' operation."
        },
        "sourceResource": {
          "type": "string",
          "description": "Can be set with action 'copy' to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action = 'copy', path = \"/\", from = \"/\", source_resource = and resource_name = . This field is empty for all other values of `action`."
        },
        "pathFilters": {
          "type": "object",
          "description": "Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: ``` { \"/versions/*/name\" : \"it-123\" \"/versions/*/targetSize/percent\": 20 } ``` * Example: ``` { \"/bindings/*/role\": \"roles/owner\" \"/bindings/*/condition\" : null } ``` * Example: ``` { \"/bindings/*/role\": \"roles/owner\" \"/bindings/*/members/*\" : [\"x@example.com\", \"y@example.com\"] } ``` When both path_filters and path_value_matchers are set, an implicit AND must be performed.",
          "additionalProperties": {
            "type": "any"
          }
        },
        "action": {
          "description": "Type of this operation. Contains one of 'add', 'remove', 'replace', 'move', 'copy', 'test' and 'custom' operations. This field is case-insensitive and always populated.",
          "type": "string"
        },
        "pathValueMatchers": {
          "description": "Similar to path_filters, this contains set of filters to apply if `path` field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudRecommenderV1beta1ValueMatcher"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1beta1CostProjection": {
      "type": "object",
      "id": "GoogleCloudRecommenderV1beta1CostProjection",
      "description": "Contains metadata about how much money a recommendation can save or incur.",
      "properties": {
        "cost": {
          "description": "An approximate projection on amount saved or amount incurred. Negative cost units indicate cost savings and positive cost units indicate increase. See google.type.Money documentation for positive/negative units. A user's permissions may affect whether the cost is computed using list prices or custom contract prices.",
          "$ref": "GoogleTypeMoney"
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "Duration for which this cost applies."
        }
      }
    },
    "GoogleCloudRecommenderV1beta1OperationGroup": {
      "description": "Group of operations that need to be performed atomically.",
      "id": "GoogleCloudRecommenderV1beta1OperationGroup",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "description": "List of operations across one or more resources that belong to this group. Loosely based on RFC6902 and should be performed in the order they appear.",
          "items": {
            "$ref": "GoogleCloudRecommenderV1beta1Operation"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1beta1RecommendationInsightReference": {
      "id": "GoogleCloudRecommenderV1beta1RecommendationInsightReference",
      "description": "Reference to an associated insight.",
      "type": "object",
      "properties": {
        "insight": {
          "type": "string",
          "description": "Insight resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/insights/[INSIGHT_ID]"
        }
      }
    },
    "GoogleCloudRecommenderV1beta1RecommenderGenerationConfig": {
      "properties": {
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Parameters for this RecommenderGenerationConfig. These configs can be used by or are applied to all subtypes."
        }
      },
      "id": "GoogleCloudRecommenderV1beta1RecommenderGenerationConfig",
      "type": "object",
      "description": "A Configuration to customize the generation of recommendations. Eg, customizing the lookback period considered when generating a recommendation."
    },
    "GoogleCloudRecommenderV1beta1SecurityProjection": {
      "description": "Contains various ways of describing the impact on Security.",
      "id": "GoogleCloudRecommenderV1beta1SecurityProjection",
      "properties": {
        "details": {
          "description": "This field can be used by the recommender to define details specific to security impact.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object"
    }
  },
  "version": "v1beta1",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "revision": "20220207",
  "canonicalName": "Recommender",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://recommender.googleapis.com/",
  "batchPath": "batch",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "ownerName": "Google"
}

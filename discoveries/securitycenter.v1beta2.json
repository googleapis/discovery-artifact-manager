{
  "title": "Security Command Center API",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "canonicalName": "Security Command Center",
  "description": "Security Command Center API provides access to temporal views of assets and findings within an organization.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "version": "v1beta2",
  "version_module": true,
  "id": "securitycenter:v1beta2",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://securitycenter.mtls.googleapis.com/",
  "baseUrl": "https://securitycenter.googleapis.com/",
  "rootUrl": "https://securitycenter.googleapis.com/",
  "parameters": {
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "type": "string",
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "schemas": {
    "Config": {
      "id": "Config",
      "properties": {
        "value": {
          "description": "The configuration value for the module. The absence of this field implies its inheritance from the parent.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "moduleEnablementState": {
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the module at its level of the resource hierarchy.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configuration of a module."
    },
    "GoogleCloudSecuritycenterV1MuteConfig": {
      "description": "A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings.",
      "id": "GoogleCloudSecuritycenterV1MuteConfig",
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human readable name to be displayed for the mute config."
        },
        "description": {
          "type": "string",
          "description": "A description of the mute config."
        },
        "name": {
          "type": "string",
          "description": "This field will be ignored if provided on config creation. Format \"organizations/{organization}/muteConfigs/{mute_config}\" \"folders/{folder}/muteConfigs/{mute_config}\" \"projects/{project}/muteConfigs/{mute_config}\""
        },
        "mostRecentEditor": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update."
        },
        "filter": {
          "description": "Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`",
          "type": "string"
        }
      }
    },
    "SecurityMarks": {
      "type": "object",
      "id": "SecurityMarks",
      "description": "User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
      "properties": {
        "marks": {
          "type": "object",
          "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\"."
        },
        "canonicalName": {
          "description": "The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
          "type": "string"
        }
      }
    },
    "GoogleCloudSecuritycenterV1p1beta1NotificationMessage": {
      "description": "Security Command Center's Notification",
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1p1beta1NotificationMessage",
      "properties": {
        "resource": {
          "$ref": "GoogleCloudSecuritycenterV1p1beta1Resource",
          "description": "The Cloud resource tied to the notification."
        },
        "notificationConfigName": {
          "type": "string",
          "description": "Name of the notification config that generated current notification."
        },
        "finding": {
          "$ref": "GoogleCloudSecuritycenterV1p1beta1Finding",
          "description": "If it's a Finding based notification config, this field will be populated."
        }
      }
    },
    "Indicator": {
      "description": "Represents what's commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise",
      "type": "object",
      "properties": {
        "ipAddresses": {
          "description": "List of ip addresses associated to the Finding.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "domains": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of domains associated to the Finding."
        }
      },
      "id": "Indicator"
    },
    "GoogleCloudSecuritycenterV1p1beta1Folder": {
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1p1beta1Folder",
      "properties": {
        "resourceFolderDisplayName": {
          "description": "The user defined display name for this folder.",
          "type": "string"
        },
        "resourceFolder": {
          "description": "Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name",
          "type": "string"
        }
      },
      "description": "Message that contains the resource name and display name of a folder resource."
    },
    "Geolocation": {
      "id": "Geolocation",
      "type": "object",
      "description": "Represents a geographical location for a given access.",
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "A CLDR."
        }
      }
    },
    "Access": {
      "description": "Represents an access event.",
      "id": "Access",
      "properties": {
        "callerIp": {
          "type": "string",
          "description": "Caller's IP address, such as \"1.1.1.1\"."
        },
        "callerIpGeo": {
          "$ref": "Geolocation",
          "description": "The caller IP's geolocation, which identifies where the call came from."
        },
        "userAgentFamily": {
          "type": "string",
          "description": "What kind of user agent is associated, e.g. operating system shells, embedded or stand-alone applications, etc."
        },
        "methodName": {
          "description": "The method that the service account called, e.g. \"SetIamPolicy\".",
          "type": "string"
        },
        "principalEmail": {
          "type": "string",
          "description": "Associated email, such as \"foo@google.com\"."
        },
        "serviceName": {
          "description": "This is the API service that the service account made a call to, e.g. \"iam.googleapis.com\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebSecurityScannerSettings": {
      "properties": {
        "name": {
          "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
          "type": "string"
        },
        "serviceEnablementState": {
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "type": "string",
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ]
        },
        "modules": {
          "additionalProperties": {
            "$ref": "Config"
          },
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true
        }
      },
      "description": "Resource capturing the settings for the Web Security Scanner service.",
      "id": "WebSecurityScannerSettings",
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1p1beta1SecurityMarks": {
      "id": "GoogleCloudSecuritycenterV1p1beta1SecurityMarks",
      "properties": {
        "name": {
          "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\".",
          "type": "string"
        },
        "canonicalName": {
          "description": "The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
          "type": "string"
        },
        "marks": {
          "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization."
    },
    "GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "type": "string",
          "description": "The state of an asset discovery run."
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "The duration between asset discovery run start and end"
        }
      },
      "description": "Response of asset discovery run",
      "id": "GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse",
      "type": "object"
    },
    "ContainerThreatDetectionSettings": {
      "id": "ContainerThreatDetectionSettings",
      "description": "Resource capturing the settings for the Container Threat Detection service.",
      "properties": {
        "serviceAccount": {
          "description": "Output only. The service account used by Container Threat Detection for scanning. Service accounts are scoped at the project level meaning this field will be empty at any level above a project.",
          "type": "string",
          "readOnly": true
        },
        "modules": {
          "additionalProperties": {
            "$ref": "Config"
          },
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's."
        },
        "serviceEnablementState": {
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "type": "string"
        },
        "name": {
          "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The time the settings were last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse": {
      "id": "GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse",
      "type": "object",
      "description": "Response of asset discovery run",
      "properties": {
        "duration": {
          "type": "string",
          "description": "The duration between asset discovery run start and end",
          "format": "google-duration"
        },
        "state": {
          "description": "The state of an asset discovery run.",
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudSecuritycenterV1ExternalSystem": {
      "type": "object",
      "description": "Representation of third party SIEM/SOAR fields within SCC.",
      "properties": {
        "externalUid": {
          "description": "Identifier that's used to track the given finding in the external system.",
          "type": "string"
        },
        "externalSystemUpdateTime": {
          "description": "The most recent time when the corresponding finding's ticket/tracker was updated in the external system.",
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Most recent status of the corresponding finding's ticket/tracker in the external system."
        },
        "assignees": {
          "description": "References primary/secondary etc assignees in the external system.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "External System Name e.g. jira, demisto, etc. e.g.: organizations/1234/sources/5678/findings/123456/externalSystems/jira folders/1234/sources/5678/findings/123456/externalSystems/jira projects/1234/sources/5678/findings/123456/externalSystems/jira",
          "type": "string"
        }
      },
      "id": "GoogleCloudSecuritycenterV1ExternalSystem"
    },
    "VirtualMachineThreatDetectionSettings": {
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time the settings were last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "serviceEnablementState": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED."
        },
        "name": {
          "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The service account used by Virtual Machine Threat Detection detectors."
        },
        "modules": {
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Config"
          }
        }
      },
      "type": "object",
      "id": "VirtualMachineThreatDetectionSettings",
      "description": "Resource capturing the settings for the Virtual Machine Threat Detection service."
    },
    "Subscription": {
      "type": "object",
      "id": "Subscription",
      "properties": {
        "name": {
          "description": "The resource name of the subscription. Format: organizations/{organization}/subscription",
          "type": "string"
        },
        "tier": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The standard tier.",
            "The premium tier."
          ],
          "description": "The tier of SCC features this organization currently has access to.",
          "type": "string",
          "enum": [
            "TIER_UNSPECIFIED",
            "STANDARD",
            "PREMIUM"
          ]
        },
        "details": {
          "description": "The details of the most recent active subscription. If there has never been a subscription this will be empty.",
          "$ref": "Details"
        }
      },
      "description": "Resource capturing the state of an organization's subscription."
    },
    "Vulnerability": {
      "id": "Vulnerability",
      "type": "object",
      "properties": {
        "cve": {
          "description": "CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)",
          "$ref": "Cve"
        }
      },
      "description": "Refers to common vulnerability fields e.g. cve, cvss, cwe etc."
    },
    "GoogleCloudSecuritycenterV1BulkMuteFindingsResponse": {
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1BulkMuteFindingsResponse",
      "properties": {},
      "description": "The response to a BulkMute request. Contains the LRO information."
    },
    "SecurityHealthAnalyticsSettings": {
      "description": "Resource capturing the settings for the Security Health Analytics service.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "modules": {
          "additionalProperties": {
            "$ref": "Config"
          },
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's."
        },
        "serviceEnablementState": {
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "type": "string",
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED."
        },
        "serviceAccount": {
          "readOnly": true,
          "description": "Output only. The service account used by Security Health Analytics detectors.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
          "type": "string"
        }
      },
      "id": "SecurityHealthAnalyticsSettings",
      "type": "object"
    },
    "SecurityCenterSettings": {
      "id": "SecurityCenterSettings",
      "description": "Resource capturing the settings for Security Center.",
      "properties": {
        "orgServiceAccount": {
          "type": "string",
          "description": "The organization level service account to be used for security center components."
        },
        "logSinkProject": {
          "description": "The resource name of the project to send logs to. This project must be part of the organization this resource resides in. The format is `projects/{project_id}`. An empty value disables logging. This value is only referenced by services that support log sink. Please refer to the documentation for an updated list of compatible services.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the SecurityCenterSettings. Format: organizations/{organization}/securityCenterSettings"
        }
      },
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1p1beta1Resource": {
      "type": "object",
      "properties": {
        "parentDisplayName": {
          "type": "string",
          "description": "The human readable name of resource's parent."
        },
        "parent": {
          "description": "The full resource name of resource's parent.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name"
        },
        "folders": {
          "readOnly": true,
          "description": "Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudSecuritycenterV1p1beta1Folder"
          }
        },
        "project": {
          "type": "string",
          "description": "The full resource name of project that the resource belongs to."
        },
        "projectDisplayName": {
          "type": "string",
          "description": "The human readable name of project that the resource belongs to."
        }
      },
      "description": "Information related to the Google Cloud resource.",
      "id": "GoogleCloudSecuritycenterV1p1beta1Resource"
    },
    "GoogleCloudSecuritycenterV1NotificationMessage": {
      "properties": {
        "resource": {
          "$ref": "GoogleCloudSecuritycenterV1Resource",
          "description": "The Cloud resource tied to this notification's Finding."
        },
        "finding": {
          "description": "If it's a Finding based notification config, this field will be populated.",
          "$ref": "Finding"
        },
        "notificationConfigName": {
          "type": "string",
          "description": "Name of the notification config that generated current notification."
        }
      },
      "id": "GoogleCloudSecuritycenterV1NotificationMessage",
      "description": "Cloud SCC's Notification",
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1p1beta1Finding": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\""
        },
        "externalUri": {
          "type": "string",
          "description": "The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The finding requires attention and has not been addressed yet.",
            "The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active."
          ],
          "description": "The state of the finding."
        },
        "resourceName": {
          "description": "For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
          "type": "string"
        },
        "category": {
          "type": "string",
          "description": "The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\""
        },
        "parent": {
          "type": "string",
          "description": "The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\""
        },
        "eventTime": {
          "type": "string",
          "description": "The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.",
          "format": "google-datetime"
        },
        "sourceProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "any"
          },
          "description": "Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only."
        },
        "securityMarks": {
          "readOnly": true,
          "$ref": "GoogleCloudSecuritycenterV1p1beta1SecurityMarks",
          "description": "Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding."
        },
        "createTime": {
          "description": "The time at which the finding was created in Security Command Center.",
          "type": "string",
          "format": "google-datetime"
        },
        "canonicalName": {
          "description": "The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding.",
          "type": "string"
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "type": "string",
          "description": "The severity of the finding. This field is managed by the source that writes the finding.",
          "enumDescriptions": [
            "No severity specified. The default value.",
            "Critical severity.",
            "High severity.",
            "Medium severity.",
            "Low severity."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1p1beta1Finding",
      "description": "Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding."
    },
    "MitreAttack": {
      "type": "object",
      "id": "MitreAttack",
      "properties": {
        "additionalTechniques": {
          "type": "array",
          "description": "Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.",
          "items": {
            "type": "string",
            "enum": [
              "TECHNIQUE_UNSPECIFIED",
              "ACTIVE_SCANNING",
              "SCANNING_IP_BLOCKS",
              "INGRESS_TOOL_TRANSFER",
              "NATIVE_API",
              "SHARED_MODULES",
              "COMMAND_AND_SCRIPTING_INTERPRETER",
              "UNIX_SHELL",
              "RESOURCE_HIJACKING",
              "PROXY",
              "EXTERNAL_PROXY",
              "MULTI_HOP_PROXY",
              "DYNAMIC_RESOLUTION",
              "UNSECURED_CREDENTIALS",
              "VALID_ACCOUNTS",
              "LOCAL_ACCOUNTS",
              "CLOUD_ACCOUNTS",
              "NETWORK_DENIAL_OF_SERVICE",
              "PERMISSION_GROUPS_DISCOVERY",
              "CLOUD_GROUPS",
              "EXFILTRATION_OVER_WEB_SERVICE",
              "EXFILTRATION_TO_CLOUD_STORAGE",
              "ACCOUNT_MANIPULATION",
              "SSH_AUTHORIZED_KEYS",
              "CREATE_OR_MODIFY_SYSTEM_PROCESS",
              "STEAL_WEB_SESSION_COOKIE",
              "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE"
            ],
            "enumDescriptions": [
              "Unspecified value.",
              "T1595",
              "T1595.001",
              "T1105",
              "T1106",
              "T1129",
              "T1059",
              "T1059.004",
              "T1496",
              "T1090",
              "T1090.002",
              "T1090.003",
              "T1568",
              "T1552",
              "T1078",
              "T1078.003",
              "T1078.004",
              "T1498",
              "T1069",
              "T1069.003",
              "T1567",
              "T1567.002",
              "T1098",
              "T1098.004",
              "T1543",
              "T1539",
              "T1578"
            ]
          }
        },
        "additionalTactics": {
          "items": {
            "type": "string",
            "enum": [
              "TACTIC_UNSPECIFIED",
              "RECONNAISSANCE",
              "RESOURCE_DEVELOPMENT",
              "INITIAL_ACCESS",
              "EXECUTION",
              "PERSISTENCE",
              "PRIVILEGE_ESCALATION",
              "DEFENSE_EVASION",
              "CREDENTIAL_ACCESS",
              "DISCOVERY",
              "LATERAL_MOVEMENT",
              "COLLECTION",
              "COMMAND_AND_CONTROL",
              "EXFILTRATION",
              "IMPACT"
            ],
            "enumDescriptions": [
              "Unspecified value.",
              "TA0043",
              "TA0042",
              "TA0001",
              "TA0002",
              "TA0003",
              "TA0004",
              "TA0005",
              "TA0006",
              "TA0007",
              "TA0008",
              "TA0009",
              "TA0011",
              "TA0010",
              "TA0040"
            ]
          },
          "description": "Additional MITRE ATT&CK tactics related to this finding, if any.",
          "type": "array"
        },
        "primaryTechniques": {
          "description": "The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. SCANNING_IP_BLOCKS), both the sub-technique and its parent technique(s) will be listed (e.g. SCANNING_IP_BLOCKS, ACTIVE_SCANNING).",
          "items": {
            "enum": [
              "TECHNIQUE_UNSPECIFIED",
              "ACTIVE_SCANNING",
              "SCANNING_IP_BLOCKS",
              "INGRESS_TOOL_TRANSFER",
              "NATIVE_API",
              "SHARED_MODULES",
              "COMMAND_AND_SCRIPTING_INTERPRETER",
              "UNIX_SHELL",
              "RESOURCE_HIJACKING",
              "PROXY",
              "EXTERNAL_PROXY",
              "MULTI_HOP_PROXY",
              "DYNAMIC_RESOLUTION",
              "UNSECURED_CREDENTIALS",
              "VALID_ACCOUNTS",
              "LOCAL_ACCOUNTS",
              "CLOUD_ACCOUNTS",
              "NETWORK_DENIAL_OF_SERVICE",
              "PERMISSION_GROUPS_DISCOVERY",
              "CLOUD_GROUPS",
              "EXFILTRATION_OVER_WEB_SERVICE",
              "EXFILTRATION_TO_CLOUD_STORAGE",
              "ACCOUNT_MANIPULATION",
              "SSH_AUTHORIZED_KEYS",
              "CREATE_OR_MODIFY_SYSTEM_PROCESS",
              "STEAL_WEB_SESSION_COOKIE",
              "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE"
            ],
            "enumDescriptions": [
              "Unspecified value.",
              "T1595",
              "T1595.001",
              "T1105",
              "T1106",
              "T1129",
              "T1059",
              "T1059.004",
              "T1496",
              "T1090",
              "T1090.002",
              "T1090.003",
              "T1568",
              "T1552",
              "T1078",
              "T1078.003",
              "T1078.004",
              "T1498",
              "T1069",
              "T1069.003",
              "T1567",
              "T1567.002",
              "T1098",
              "T1098.004",
              "T1543",
              "T1539",
              "T1578"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "primaryTactic": {
          "enum": [
            "TACTIC_UNSPECIFIED",
            "RECONNAISSANCE",
            "RESOURCE_DEVELOPMENT",
            "INITIAL_ACCESS",
            "EXECUTION",
            "PERSISTENCE",
            "PRIVILEGE_ESCALATION",
            "DEFENSE_EVASION",
            "CREDENTIAL_ACCESS",
            "DISCOVERY",
            "LATERAL_MOVEMENT",
            "COLLECTION",
            "COMMAND_AND_CONTROL",
            "EXFILTRATION",
            "IMPACT"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "TA0043",
            "TA0042",
            "TA0001",
            "TA0002",
            "TA0003",
            "TA0004",
            "TA0005",
            "TA0006",
            "TA0007",
            "TA0008",
            "TA0009",
            "TA0011",
            "TA0010",
            "TA0040"
          ],
          "type": "string",
          "description": "The MITRE ATT&CK tactic most closely represented by this finding, if any."
        },
        "version": {
          "type": "string",
          "description": "The MITRE ATT&CK version referenced by the above fields. E.g. \"8\"."
        }
      },
      "description": "MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org"
    },
    "Details": {
      "description": "Details of a subscription.",
      "id": "Details",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the subscription has or will start."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "STANDARD",
            "TRIAL",
            "ALPHA",
            "DEMO"
          ],
          "description": "The type of subscription",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The standard subscription.",
            "The trial subscription.",
            "The alpha subscription.",
            "The demo subscription for channel partners."
          ],
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the subscription has or will end."
        }
      }
    },
    "Cve": {
      "properties": {
        "cvssv3": {
          "$ref": "Cvssv3",
          "description": "Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document"
        },
        "references": {
          "type": "array",
          "description": "Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527",
          "items": {
            "$ref": "Reference"
          }
        },
        "id": {
          "type": "string",
          "description": "The unique identifier for the vulnerability. e.g. CVE-2021-34527"
        }
      },
      "id": "Cve",
      "description": "CVE stands for Common Vulnerabilities and Exposures. More information: https://cve.mitre.org",
      "type": "object"
    },
    "Cvssv3": {
      "type": "object",
      "properties": {
        "attackVector": {
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.",
            "The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.",
            "The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.",
            "The attack requires the attacker to physically touch or manipulate the vulnerable component."
          ],
          "type": "string",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ],
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible."
        },
        "scope": {
          "description": "The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "An exploited vulnerability can only affect resources managed by the same security authority.",
            "An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component."
          ],
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "privilegesRequired": {
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.",
            "The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.",
            "The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files."
          ],
          "type": "string",
          "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability."
        },
        "baseScore": {
          "type": "number",
          "format": "double",
          "description": "The base score is a function of the base metric scores."
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string",
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ]
        },
        "confidentialityImpact": {
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability."
        },
        "attackComplexity": {
          "enumDescriptions": [
            "Invalid value.",
            "Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.",
            "A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected."
          ],
          "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
          "type": "string",
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ]
        },
        "userInteraction": {
          "description": "This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.",
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable system can be exploited without interaction from any user.",
            "Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited."
          ],
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "availabilityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "type": "string"
        }
      },
      "description": "Common Vulnerability Scoring System version 3.",
      "id": "Cvssv3"
    },
    "Folder": {
      "description": "Message that contains the resource name and display name of a folder resource.",
      "id": "Folder",
      "properties": {
        "resourceFolderDisplayName": {
          "description": "The user defined display name for this folder.",
          "type": "string"
        },
        "resourceFolder": {
          "type": "string",
          "description": "Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name"
        }
      },
      "type": "object"
    },
    "Reference": {
      "description": "Additional Links",
      "id": "Reference",
      "properties": {
        "source": {
          "description": "Source of the reference e.g. NVD",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527."
        }
      },
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse": {
      "id": "GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse",
      "properties": {
        "duration": {
          "format": "google-duration",
          "description": "The duration between asset discovery run start and end",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "description": "The state of an asset discovery run.",
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response of asset discovery run"
    },
    "Finding": {
      "description": "Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.",
      "id": "Finding",
      "properties": {
        "access": {
          "description": "Access details associated to the Finding, such as more information on the caller, which method was accessed, from where, etc.",
          "$ref": "Access"
        },
        "severity": {
          "description": "The severity of the finding. This field is managed by the source that writes the finding.",
          "enumDescriptions": [
            "This value is used for findings when a source doesn't write a severity value.",
            "Vulnerability: A critical vulnerability is easily discoverable by an external actor, exploitable, and results in the direct ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. Examples include publicly accessible unprotected user data, public SSH access with weak or no passwords, etc. Threat: Indicates a threat that is able to access, modify, or delete data or execute unauthorized code within existing resources.",
            "Vulnerability: A high risk vulnerability can be easily discovered and exploited in combination with other vulnerabilities in order to gain direct access and the ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. An example is a database with weak or no passwords that is only accessible internally. This database could easily be compromised by an actor that had access to the internal network. Threat: Indicates a threat that is able to create new computational resources in an environment but not able to access data or execute code in existing resources.",
            "Vulnerability: A medium risk vulnerability could be used by an actor to gain access to resources or privileges that enable them to eventually (through multiple steps or a complex exploit) gain access and the ability to execute arbitrary code or exfiltrate data. An example is a service account with access to more projects than it should have. If an actor gains access to the service account, they could potentially use that access to manipulate a project the service account was not intended to. Threat: Indicates a threat that is able to cause operational impact but may not access data or execute unauthorized code.",
            "Vulnerability: A low risk vulnerability hampers a security organization’s ability to detect vulnerabilities or active threats in their deployment, or prevents the root cause investigation of security issues. An example is monitoring and logs being disabled for resource configurations and access. Threat: Indicates a threat that has obtained minimal access to an environment but is not able to access data, execute code, or create resources."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "type": "string"
        },
        "muteInitiator": {
          "type": "string",
          "description": "First known as mute_annotation. Records additional information about the mute operation e.g. mute config that muted the finding, user who muted the finding, etc."
        },
        "category": {
          "description": "The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\"",
          "type": "string"
        },
        "externalSystems": {
          "additionalProperties": {
            "$ref": "GoogleCloudSecuritycenterV1ExternalSystem"
          },
          "description": "Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.",
          "type": "object",
          "readOnly": true
        },
        "canonicalName": {
          "type": "string",
          "description": "The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding."
        },
        "parent": {
          "description": "The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\"",
          "type": "string"
        },
        "indicator": {
          "description": "Represents what's commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise",
          "$ref": "Indicator"
        },
        "resourceName": {
          "description": "For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
          "type": "string"
        },
        "eventTime": {
          "description": "The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "mitreAttack": {
          "description": "MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org",
          "$ref": "MitreAttack"
        },
        "muteUpdateTime": {
          "description": "Output only. The most recent time this finding was muted or unmuted.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "mute": {
          "enum": [
            "MUTE_UNSPECIFIED",
            "MUTED",
            "UNMUTED",
            "UNDEFINED"
          ],
          "description": "Indicates the mute state of a finding (either unspecified, muted, unmuted or undefined).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Finding has been muted.",
            "Finding has been unmuted.",
            "Finding has never been muted/unmuted."
          ]
        },
        "sourceProperties": {
          "additionalProperties": {
            "type": "any"
          },
          "description": "Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.",
          "type": "object"
        },
        "securityMarks": {
          "$ref": "SecurityMarks",
          "readOnly": true,
          "description": "Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding."
        },
        "findingClass": {
          "type": "string",
          "enum": [
            "FINDING_CLASS_UNSPECIFIED",
            "THREAT",
            "VULNERABILITY",
            "MISCONFIGURATION",
            "OBSERVATION",
            "SCC_ERROR"
          ],
          "enumDescriptions": [
            "Unspecified finding class.",
            "Describes unwanted or malicious activity.",
            "Describes a potential weakness in software that increases risk to Confidentiality & Integrity & Availability.",
            "Describes a potential weakness in cloud resource/asset configuration that increases risk.",
            "Describes a security observation that is for informational purposes.",
            "Describes an error that prevents some SCC functionality."
          ],
          "description": "The class of the finding."
        },
        "name": {
          "description": "The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\"",
          "type": "string"
        },
        "externalUri": {
          "type": "string",
          "description": "The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL."
        },
        "createTime": {
          "description": "The time at which the finding was created in Security Command Center.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "The state of the finding.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The finding requires attention and has not been addressed yet.",
            "The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active."
          ]
        },
        "vulnerability": {
          "$ref": "Vulnerability",
          "description": "Represents vulnerability specific fields like cve, cvss scores etc. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)"
        }
      },
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1Resource": {
      "id": "GoogleCloudSecuritycenterV1Resource",
      "description": "Information related to the Google Cloud resource.",
      "type": "object",
      "properties": {
        "parentDisplayName": {
          "description": "The human readable name of resource's parent.",
          "type": "string"
        },
        "displayName": {
          "description": "The human readable name of the resource.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "The full resource name of resource's parent."
        },
        "projectDisplayName": {
          "description": "The human readable name of project that the resource belongs to.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The full resource type of the resource."
        },
        "project": {
          "description": "The full resource name of project that the resource belongs to.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name"
        },
        "folders": {
          "type": "array",
          "items": {
            "$ref": "Folder"
          },
          "description": "Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.",
          "readOnly": true
        }
      }
    },
    "EventThreatDetectionSettings": {
      "id": "EventThreatDetectionSettings",
      "properties": {
        "serviceEnablementState": {
          "type": "string",
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ]
        },
        "modules": {
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "additionalProperties": {
            "$ref": "Config"
          }
        },
        "name": {
          "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The time the settings were last updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Resource capturing the settings for the Event Threat Detection service.",
      "type": "object"
    }
  },
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "name": "securitycenter",
  "revision": "20211213",
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://cloud.google.com/security-command-center",
  "ownerName": "Google",
  "resources": {
    "folders": {
      "methods": {
        "getVirtualMachineThreatDetectionSettings": {
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "id": "securitycenter.folders.getVirtualMachineThreatDetectionSettings",
          "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "updateVirtualMachineThreatDetectionSettings": {
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings",
          "description": "Update the VirtualMachineThreatDetectionSettings resource.",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "type": "string"
            },
            "name": {
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.folders.updateVirtualMachineThreatDetectionSettings"
        },
        "updateEventThreatDetectionSettings": {
          "httpMethod": "PATCH",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "request": {
            "$ref": "EventThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            },
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "pattern": "^folders/[^/]+/eventThreatDetectionSettings$"
            }
          },
          "path": "v1beta2/{+name}",
          "description": "Update the EventThreatDetectionSettings resource.",
          "id": "securitycenter.folders.updateEventThreatDetectionSettings",
          "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings",
          "parameterOrder": [
            "name"
          ]
        },
        "updateSecurityHealthAnalyticsSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "location": "query",
              "description": "The list of fields to be updated."
            },
            "name": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$"
            }
          },
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.folders.updateSecurityHealthAnalyticsSettings",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings",
          "description": "Update the SecurityHealthAnalyticsSettings resource."
        },
        "getEventThreatDetectionSettings": {
          "description": "Get the EventThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^folders/[^/]+/eventThreatDetectionSettings$",
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
            }
          },
          "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings",
          "path": "v1beta2/{+name}",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "id": "securitycenter.folders.getEventThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "updateWebSecurityScannerSettings": {
          "id": "securitycenter.folders.updateWebSecurityScannerSettings",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "pattern": "^folders/[^/]+/webSecurityScannerSettings$"
            },
            "updateMask": {
              "description": "The list of fields to be updated.",
              "type": "string",
              "format": "google-fieldmask",
              "location": "query"
            }
          },
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings",
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "description": "Update the WebSecurityScannerSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "updateContainerThreatDetectionSettings": {
          "parameters": {
            "updateMask": {
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "type": "string",
              "location": "query"
            },
            "name": {
              "type": "string",
              "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "httpMethod": "PATCH",
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "id": "securitycenter.folders.updateContainerThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings",
          "path": "v1beta2/{+name}"
        },
        "getWebSecurityScannerSettings": {
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.folders.getWebSecurityScannerSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "description": "Get the WebSecurityScannerSettings resource.",
          "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "pattern": "^folders/[^/]+/webSecurityScannerSettings$",
              "type": "string"
            }
          }
        },
        "getContainerThreatDetectionSettings": {
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "type": "string"
            }
          },
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.folders.getContainerThreatDetectionSettings",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings"
        },
        "getSecurityHealthAnalyticsSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings",
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.folders.getSecurityHealthAnalyticsSettings",
          "path": "v1beta2/{+name}",
          "parameters": {
            "name": {
              "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings"
            }
          },
          "httpMethod": "GET",
          "description": "Get the SecurityHealthAnalyticsSettings resource."
        }
      },
      "resources": {
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "path": "v1beta2/{+name}:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^folders/[^/]+/webSecurityScannerSettings$",
                  "location": "path",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "WebSecurityScannerSettings"
              },
              "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings:calculate",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.folders.webSecurityScannerSettings.calculate",
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings."
            }
          }
        },
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "id": "securitycenter.folders.containerThreatDetectionSettings.calculate",
              "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings:calculate",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
                }
              },
              "path": "v1beta2/{+name}:calculate"
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "httpMethod": "GET",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta2/{+name}:calculate",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "required": true,
                  "location": "path",
                  "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$"
                }
              },
              "id": "securitycenter.folders.securityHealthAnalyticsSettings.calculate",
              "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings:calculate",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "path": "v1beta2/{+name}:calculate",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings"
                }
              },
              "id": "securitycenter.folders.virtualMachineThreatDetectionSettings.calculate",
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings:calculate"
            }
          }
        },
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "httpMethod": "GET",
              "id": "securitycenter.folders.eventThreatDetectionSettings.calculate",
              "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings:calculate",
              "response": {
                "$ref": "EventThreatDetectionSettings"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^folders/[^/]+/eventThreatDetectionSettings$",
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    },
    "projects": {
      "methods": {
        "updateWebSecurityScannerSettings": {
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}",
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "httpMethod": "PATCH",
          "id": "securitycenter.projects.updateWebSecurityScannerSettings",
          "description": "Update the WebSecurityScannerSettings resource.",
          "parameters": {
            "updateMask": {
              "type": "string",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "location": "query"
            },
            "name": {
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^projects/[^/]+/webSecurityScannerSettings$"
            }
          }
        },
        "getEventThreatDetectionSettings": {
          "path": "v1beta2/{+name}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "location": "path",
              "pattern": "^projects/[^/]+/eventThreatDetectionSettings$"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "description": "Get the EventThreatDetectionSettings resource.",
          "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.projects.getEventThreatDetectionSettings"
        },
        "getContainerThreatDetectionSettings": {
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "pattern": "^projects/[^/]+/containerThreatDetectionSettings$"
            }
          },
          "id": "securitycenter.projects.getContainerThreatDetectionSettings",
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings"
        },
        "updateVirtualMachineThreatDetectionSettings": {
          "httpMethod": "PATCH",
          "description": "Update the VirtualMachineThreatDetectionSettings resource.",
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$",
              "type": "string",
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "location": "path",
              "required": true
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask"
            }
          },
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.projects.updateVirtualMachineThreatDetectionSettings",
          "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings",
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          }
        },
        "updateSecurityHealthAnalyticsSettings": {
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "description": "Update the SecurityHealthAnalyticsSettings resource.",
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "location": "query",
              "description": "The list of fields to be updated.",
              "type": "string"
            },
            "name": {
              "location": "path",
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings",
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.projects.updateSecurityHealthAnalyticsSettings",
          "httpMethod": "PATCH"
        },
        "getWebSecurityScannerSettings": {
          "path": "v1beta2/{+name}",
          "description": "Get the WebSecurityScannerSettings resource.",
          "parameters": {
            "name": {
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "required": true,
              "pattern": "^projects/[^/]+/webSecurityScannerSettings$",
              "type": "string",
              "location": "path"
            }
          },
          "id": "securitycenter.projects.getWebSecurityScannerSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          }
        },
        "updateContainerThreatDetectionSettings": {
          "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.projects.updateContainerThreatDetectionSettings",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^projects/[^/]+/containerThreatDetectionSettings$",
              "required": true,
              "type": "string",
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          }
        },
        "getSecurityHealthAnalyticsSettings": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "httpMethod": "GET",
          "id": "securitycenter.projects.getSecurityHealthAnalyticsSettings",
          "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings",
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "description": "Get the SecurityHealthAnalyticsSettings resource."
        },
        "updateEventThreatDetectionSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings",
          "description": "Update the EventThreatDetectionSettings resource.",
          "id": "securitycenter.projects.updateEventThreatDetectionSettings",
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "description": "The list of fields to be updated.",
              "location": "query"
            },
            "name": {
              "pattern": "^projects/[^/]+/eventThreatDetectionSettings$",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
            }
          },
          "httpMethod": "PATCH",
          "request": {
            "$ref": "EventThreatDetectionSettings"
          },
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "getVirtualMachineThreatDetectionSettings": {
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "httpMethod": "GET",
          "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings",
          "id": "securitycenter.projects.getVirtualMachineThreatDetectionSettings",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "location": "path",
              "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$"
            }
          },
          "path": "v1beta2/{+name}"
        }
      },
      "resources": {
        "locations": {
          "resources": {
            "clusters": {
              "methods": {
                "updateContainerThreatDetectionSettings": {
                  "httpMethod": "PATCH",
                  "id": "securitycenter.projects.locations.clusters.updateContainerThreatDetectionSettings",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings",
                  "description": "Update the ContainerThreatDetectionSettings resource.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to be updated."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$",
                      "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta2/{+name}",
                  "request": {
                    "$ref": "ContainerThreatDetectionSettings"
                  },
                  "response": {
                    "$ref": "ContainerThreatDetectionSettings"
                  }
                },
                "getContainerThreatDetectionSettings": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get the ContainerThreatDetectionSettings resource.",
                  "path": "v1beta2/{+name}",
                  "id": "securitycenter.projects.locations.clusters.getContainerThreatDetectionSettings",
                  "response": {
                    "$ref": "ContainerThreatDetectionSettings"
                  }
                }
              },
              "resources": {
                "containerThreatDetectionSettings": {
                  "methods": {
                    "calculate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta2/{+name}:calculate",
                      "httpMethod": "GET",
                      "id": "securitycenter.projects.locations.clusters.containerThreatDetectionSettings.calculate",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings:calculate",
                      "response": {
                        "$ref": "ContainerThreatDetectionSettings"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$"
                        }
                      },
                      "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings.",
              "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings:calculate",
              "httpMethod": "GET",
              "id": "securitycenter.projects.webSecurityScannerSettings.calculate",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/webSecurityScannerSettings$",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "WebSecurityScannerSettings"
              }
            }
          }
        },
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings:calculate",
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
                  "location": "path",
                  "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$"
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "id": "securitycenter.projects.virtualMachineThreatDetectionSettings.calculate"
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$"
                }
              },
              "httpMethod": "GET",
              "id": "securitycenter.projects.securityHealthAnalyticsSettings.calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings:calculate"
            }
          }
        },
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              },
              "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings:calculate",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "id": "securitycenter.projects.containerThreatDetectionSettings.calculate",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                  "pattern": "^projects/[^/]+/containerThreatDetectionSettings$",
                  "location": "path",
                  "type": "string"
                }
              }
            }
          }
        },
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "response": {
                "$ref": "EventThreatDetectionSettings"
              },
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings:calculate",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/eventThreatDetectionSettings$",
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}:calculate",
              "id": "securitycenter.projects.eventThreatDetectionSettings.calculate"
            }
          }
        }
      }
    },
    "organizations": {
      "methods": {
        "updateContainerThreatDetectionSettings": {
          "httpMethod": "PATCH",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings",
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "id": "securitycenter.organizations.updateContainerThreatDetectionSettings",
          "parameters": {
            "name": {
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "required": true,
              "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
              "location": "path",
              "type": "string"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ]
        },
        "updateSecurityHealthAnalyticsSettings": {
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "type": "string",
              "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
              "required": true,
              "location": "path"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "httpMethod": "PATCH",
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "description": "Update the SecurityHealthAnalyticsSettings resource.",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.updateSecurityHealthAnalyticsSettings",
          "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings"
        },
        "getSubscription": {
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1beta2/organizations/{organizationsId}/subscription",
          "id": "securitycenter.organizations.getSubscription",
          "description": "Get the Subscription resource.",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^organizations/[^/]+/subscription$",
              "description": "Required. The name of the subscription to retrieve. Format: organizations/{organization}/subscription"
            }
          },
          "response": {
            "$ref": "Subscription"
          },
          "path": "v1beta2/{+name}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getVirtualMachineThreatDetectionSettings": {
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "parameters": {
            "name": {
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$"
            }
          },
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings",
          "id": "securitycenter.organizations.getVirtualMachineThreatDetectionSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getEventThreatDetectionSettings": {
          "description": "Get the EventThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "id": "securitycenter.organizations.getEventThreatDetectionSettings",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$",
              "type": "string",
              "required": true,
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "location": "path"
            }
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings",
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ]
        },
        "updateVirtualMachineThreatDetectionSettings": {
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update the VirtualMachineThreatDetectionSettings resource.",
          "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.organizations.updateVirtualMachineThreatDetectionSettings",
          "parameters": {
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "type": "string",
              "description": "The list of fields to be updated."
            },
            "name": {
              "required": true,
              "location": "path",
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "type": "string",
              "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$"
            }
          }
        },
        "getSecurityCenterSettings": {
          "flatPath": "v1beta2/organizations/{organizationsId}/securityCenterSettings",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.getSecurityCenterSettings",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^organizations/[^/]+/securityCenterSettings$",
              "description": "Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings"
            }
          },
          "response": {
            "$ref": "SecurityCenterSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Get the SecurityCenterSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "updateEventThreatDetectionSettings": {
          "parameters": {
            "name": {
              "required": true,
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "location": "path",
              "type": "string",
              "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$"
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query"
            }
          },
          "description": "Update the EventThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings",
          "id": "securitycenter.organizations.updateEventThreatDetectionSettings",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "httpMethod": "PATCH",
          "request": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "getContainerThreatDetectionSettings": {
          "httpMethod": "GET",
          "id": "securitycenter.organizations.getContainerThreatDetectionSettings",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings",
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "required": true,
              "type": "string",
              "location": "path"
            }
          }
        },
        "updateWebSecurityScannerSettings": {
          "id": "securitycenter.organizations.updateWebSecurityScannerSettings",
          "path": "v1beta2/{+name}",
          "description": "Update the WebSecurityScannerSettings resource.",
          "parameters": {
            "name": {
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
              "location": "path",
              "type": "string",
              "required": true
            },
            "updateMask": {
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings",
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getWebSecurityScannerSettings": {
          "description": "Get the WebSecurityScannerSettings resource.",
          "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
              "location": "path"
            }
          },
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.getWebSecurityScannerSettings"
        },
        "getSecurityHealthAnalyticsSettings": {
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings",
          "httpMethod": "GET",
          "description": "Get the SecurityHealthAnalyticsSettings resource.",
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "id": "securitycenter.organizations.getSecurityHealthAnalyticsSettings"
        }
      },
      "resources": {
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "path": "v1beta2/{+name}:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "WebSecurityScannerSettings"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
                  "required": true,
                  "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings:calculate",
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings.",
              "id": "securitycenter.organizations.webSecurityScannerSettings.calculate"
            }
          }
        },
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$"
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "securitycenter.organizations.eventThreatDetectionSettings.calculate",
              "response": {
                "$ref": "EventThreatDetectionSettings"
              },
              "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings:calculate",
              "httpMethod": "GET",
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings."
            }
          }
        },
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$",
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
                  "location": "path"
                }
              },
              "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings:calculate",
              "id": "securitycenter.organizations.virtualMachineThreatDetectionSettings.calculate"
            }
          }
        },
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta2/{+name}:calculate",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
                }
              },
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "id": "securitycenter.organizations.containerThreatDetectionSettings.calculate",
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              }
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "securitycenter.organizations.securityHealthAnalyticsSettings.calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings:calculate",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com"
}

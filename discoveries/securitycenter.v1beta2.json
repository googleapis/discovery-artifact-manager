{
  "discoveryVersion": "v1",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "organizations": {
      "resources": {
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.organizations.containerThreatDetectionSettings.calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings:calculate",
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              },
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                  "type": "string"
                }
              }
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.organizations.securityHealthAnalyticsSettings.calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings:calculate",
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "httpMethod": "GET"
            }
          }
        },
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings.",
              "response": {
                "$ref": "WebSecurityScannerSettings"
              },
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
                  "required": true
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings:calculate",
              "id": "securitycenter.organizations.webSecurityScannerSettings.calculate",
              "httpMethod": "GET"
            }
          }
        },
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.organizations.eventThreatDetectionSettings.calculate",
              "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings:calculate",
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "path": "v1beta2/{+name}:calculate",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$",
                  "required": true,
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "EventThreatDetectionSettings"
              }
            }
          }
        },
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings:calculate",
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "parameters": {
                "name": {
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.organizations.virtualMachineThreatDetectionSettings.calculate"
            }
          }
        },
        "rapidVulnerabilityDetectionSettings": {
          "methods": {
            "calculate": {
              "flatPath": "v1beta2/organizations/{organizationsId}/rapidVulnerabilityDetectionSettings:calculate",
              "id": "securitycenter.organizations.rapidVulnerabilityDetectionSettings.calculate",
              "response": {
                "$ref": "RapidVulnerabilityDetectionSettings"
              },
              "description": "Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/rapidVulnerabilityDetectionSettings$",
                  "description": "Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}:calculate"
            }
          }
        }
      },
      "methods": {
        "updateEventThreatDetectionSettings": {
          "path": "v1beta2/{+name}",
          "request": {
            "$ref": "EventThreatDetectionSettings"
          },
          "description": "Update the EventThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "id": "securitycenter.organizations.updateEventThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "description": "The list of fields to be updated.",
              "location": "query"
            },
            "name": {
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$",
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
            }
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings",
          "httpMethod": "PATCH"
        },
        "getEventThreatDetectionSettings": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "httpMethod": "GET",
          "flatPath": "v1beta2/organizations/{organizationsId}/eventThreatDetectionSettings",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "pattern": "^organizations/[^/]+/eventThreatDetectionSettings$",
              "location": "path",
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
            }
          },
          "id": "securitycenter.organizations.getEventThreatDetectionSettings",
          "description": "Get the EventThreatDetectionSettings resource.",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "updateVirtualMachineThreatDetectionSettings": {
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$",
              "type": "string",
              "location": "path",
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "required": true
            },
            "updateMask": {
              "location": "query",
              "description": "The list of fields to be updated.",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "id": "securitycenter.organizations.updateVirtualMachineThreatDetectionSettings",
          "description": "Update the VirtualMachineThreatDetectionSettings resource.",
          "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings",
          "httpMethod": "PATCH"
        },
        "updateContainerThreatDetectionSettings": {
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "httpMethod": "PATCH",
          "id": "securitycenter.organizations.updateContainerThreatDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings",
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "required": true,
              "location": "path"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "description": "The list of fields to be updated.",
              "location": "query"
            }
          }
        },
        "updateRapidVulnerabilityDetectionSettings": {
          "id": "securitycenter.organizations.updateRapidVulnerabilityDetectionSettings",
          "flatPath": "v1beta2/organizations/{organizationsId}/rapidVulnerabilityDetectionSettings",
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^organizations/[^/]+/rapidVulnerabilityDetectionSettings$",
              "description": "The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings"
            },
            "updateMask": {
              "location": "query",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "description": "Update the RapidVulnerabilityDetectionSettings resource."
        },
        "getSubscription": {
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. The name of the subscription to retrieve. Format: organizations/{organization}/subscription",
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^organizations/[^/]+/subscription$"
            }
          },
          "id": "securitycenter.organizations.getSubscription",
          "flatPath": "v1beta2/organizations/{organizationsId}/subscription",
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Subscription"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get the Subscription resource."
        },
        "getWebSecurityScannerSettings": {
          "path": "v1beta2/{+name}",
          "description": "Get the WebSecurityScannerSettings resource.",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "required": true,
              "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
              "type": "string"
            }
          },
          "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings",
          "id": "securitycenter.organizations.getWebSecurityScannerSettings"
        },
        "updateSecurityHealthAnalyticsSettings": {
          "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings",
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "parameters": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query"
            },
            "name": {
              "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.updateSecurityHealthAnalyticsSettings",
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update the SecurityHealthAnalyticsSettings resource."
        },
        "getSecurityHealthAnalyticsSettings": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/securityHealthAnalyticsSettings$",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings"
            }
          },
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "description": "Get the SecurityHealthAnalyticsSettings resource.",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/organizations/{organizationsId}/securityHealthAnalyticsSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.organizations.getSecurityHealthAnalyticsSettings"
        },
        "getOnboardingState": {
          "response": {
            "$ref": "OnboardingState"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState * projects/{project}/onboardingState",
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^organizations/[^/]+/onboardingState$"
            }
          },
          "description": "Retrieve the OnboardingState of a resource.",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.getOnboardingState",
          "flatPath": "v1beta2/organizations/{organizationsId}/onboardingState"
        },
        "getVirtualMachineThreatDetectionSettings": {
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "path": "v1beta2/{+name}",
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/virtualMachineThreatDetectionSettings$",
              "location": "path",
              "required": true,
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "type": "string"
            }
          },
          "id": "securitycenter.organizations.getVirtualMachineThreatDetectionSettings",
          "flatPath": "v1beta2/organizations/{organizationsId}/virtualMachineThreatDetectionSettings"
        },
        "getSecurityCenterSettings": {
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^organizations/[^/]+/securityCenterSettings$",
              "description": "Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format: projects/{project}/securityCenterSettings",
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "SecurityCenterSettings"
          },
          "description": "Get the SecurityCenterSettings resource.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.organizations.getSecurityCenterSettings",
          "flatPath": "v1beta2/organizations/{organizationsId}/securityCenterSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}"
        },
        "getContainerThreatDetectionSettings": {
          "id": "securitycenter.organizations.getContainerThreatDetectionSettings",
          "flatPath": "v1beta2/organizations/{organizationsId}/containerThreatDetectionSettings",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "path": "v1beta2/{+name}",
          "parameters": {
            "name": {
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "type": "string",
              "location": "path",
              "pattern": "^organizations/[^/]+/containerThreatDetectionSettings$",
              "required": true
            }
          }
        },
        "updateWebSecurityScannerSettings": {
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.organizations.updateWebSecurityScannerSettings",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/webSecurityScannerSettings$",
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "updateMask": {
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Update the WebSecurityScannerSettings resource.",
          "flatPath": "v1beta2/organizations/{organizationsId}/webSecurityScannerSettings",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          }
        },
        "getRapidVulnerabilityDetectionSettings": {
          "flatPath": "v1beta2/organizations/{organizationsId}/rapidVulnerabilityDetectionSettings",
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
              "pattern": "^organizations/[^/]+/rapidVulnerabilityDetectionSettings$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "description": "Get the RapidVulnerabilityDetectionSettings resource.",
          "id": "securitycenter.organizations.getRapidVulnerabilityDetectionSettings"
        }
      }
    },
    "folders": {
      "methods": {
        "updateVirtualMachineThreatDetectionSettings": {
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "The list of fields to be updated.",
              "type": "string",
              "format": "google-fieldmask"
            },
            "name": {
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "type": "string",
              "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings",
          "description": "Update the VirtualMachineThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.folders.updateVirtualMachineThreatDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          }
        },
        "updateWebSecurityScannerSettings": {
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask"
            },
            "name": {
              "pattern": "^folders/[^/]+/webSecurityScannerSettings$",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings"
            }
          },
          "id": "securitycenter.folders.updateWebSecurityScannerSettings",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "description": "Update the WebSecurityScannerSettings resource."
        },
        "updateEventThreatDetectionSettings": {
          "parameterOrder": [
            "name"
          ],
          "description": "Update the EventThreatDetectionSettings resource.",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameters": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query"
            },
            "name": {
              "required": true,
              "pattern": "^folders/[^/]+/eventThreatDetectionSettings$",
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "type": "string",
              "location": "path"
            }
          },
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.folders.updateEventThreatDetectionSettings",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "EventThreatDetectionSettings"
          }
        },
        "getContainerThreatDetectionSettings": {
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "httpMethod": "GET",
          "id": "securitycenter.folders.getContainerThreatDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "required": true
            }
          },
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings"
        },
        "getSecurityCenterSettings": {
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^folders/[^/]+/securityCenterSettings$",
              "location": "path",
              "description": "Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format: projects/{project}/securityCenterSettings",
              "type": "string"
            }
          },
          "id": "securitycenter.folders.getSecurityCenterSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get the SecurityCenterSettings resource.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SecurityCenterSettings"
          },
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/folders/{foldersId}/securityCenterSettings"
        },
        "getWebSecurityScannerSettings": {
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^folders/[^/]+/webSecurityScannerSettings$",
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "required": true
            }
          },
          "id": "securitycenter.folders.getWebSecurityScannerSettings",
          "httpMethod": "GET",
          "description": "Get the WebSecurityScannerSettings resource.",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings",
          "path": "v1beta2/{+name}"
        },
        "updateContainerThreatDetectionSettings": {
          "parameters": {
            "name": {
              "required": true,
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
              "location": "path",
              "type": "string"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings",
          "httpMethod": "PATCH",
          "id": "securitycenter.folders.updateContainerThreatDetectionSettings",
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "path": "v1beta2/{+name}",
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ]
        },
        "getSecurityHealthAnalyticsSettings": {
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$",
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings",
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "httpMethod": "GET",
          "description": "Get the SecurityHealthAnalyticsSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.folders.getSecurityHealthAnalyticsSettings"
        },
        "updateRapidVulnerabilityDetectionSettings": {
          "description": "Update the RapidVulnerabilityDetectionSettings resource.",
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/rapidVulnerabilityDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "id": "securitycenter.folders.updateRapidVulnerabilityDetectionSettings",
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query",
              "type": "string"
            },
            "name": {
              "description": "The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
              "location": "path",
              "pattern": "^folders/[^/]+/rapidVulnerabilityDetectionSettings$",
              "required": true,
              "type": "string"
            }
          }
        },
        "getEventThreatDetectionSettings": {
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "pattern": "^folders/[^/]+/eventThreatDetectionSettings$",
              "location": "path"
            }
          },
          "description": "Get the EventThreatDetectionSettings resource.",
          "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "id": "securitycenter.folders.getEventThreatDetectionSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "getOnboardingState": {
          "id": "securitycenter.folders.getOnboardingState",
          "response": {
            "$ref": "OnboardingState"
          },
          "parameters": {
            "name": {
              "pattern": "^folders/[^/]+/onboardingState$",
              "location": "path",
              "description": "Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState * projects/{project}/onboardingState",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1beta2/folders/{foldersId}/onboardingState",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "description": "Retrieve the OnboardingState of a resource."
        },
        "updateSecurityHealthAnalyticsSettings": {
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$",
              "type": "string"
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated.",
              "location": "query"
            }
          },
          "id": "securitycenter.folders.updateSecurityHealthAnalyticsSettings",
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "httpMethod": "PATCH",
          "path": "v1beta2/{+name}",
          "description": "Update the SecurityHealthAnalyticsSettings resource."
        },
        "getRapidVulnerabilityDetectionSettings": {
          "id": "securitycenter.folders.getRapidVulnerabilityDetectionSettings",
          "description": "Get the RapidVulnerabilityDetectionSettings resource.",
          "flatPath": "v1beta2/folders/{foldersId}/rapidVulnerabilityDetectionSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "parameters": {
            "name": {
              "description": "Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^folders/[^/]+/rapidVulnerabilityDetectionSettings$"
            }
          },
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ]
        },
        "getVirtualMachineThreatDetectionSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "location": "path",
              "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$"
            }
          },
          "httpMethod": "GET",
          "id": "securitycenter.folders.getVirtualMachineThreatDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings"
        }
      },
      "resources": {
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta2/folders/{foldersId}/eventThreatDetectionSettings:calculate",
              "parameters": {
                "name": {
                  "pattern": "^folders/[^/]+/eventThreatDetectionSettings$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
                }
              },
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "id": "securitycenter.folders.eventThreatDetectionSettings.calculate",
              "response": {
                "$ref": "EventThreatDetectionSettings"
              },
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "securitycenter.folders.virtualMachineThreatDetectionSettings.calculate",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "path": "v1beta2/{+name}:calculate",
              "flatPath": "v1beta2/folders/{foldersId}/virtualMachineThreatDetectionSettings:calculate",
              "parameters": {
                "name": {
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
                  "type": "string",
                  "required": true,
                  "pattern": "^folders/[^/]+/virtualMachineThreatDetectionSettings$",
                  "location": "path"
                }
              },
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "httpMethod": "GET"
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "id": "securitycenter.folders.securityHealthAnalyticsSettings.calculate",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "flatPath": "v1beta2/folders/{foldersId}/securityHealthAnalyticsSettings:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^folders/[^/]+/securityHealthAnalyticsSettings$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "type": "string"
                }
              }
            }
          }
        },
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "securitycenter.folders.containerThreatDetectionSettings.calculate",
              "path": "v1beta2/{+name}:calculate",
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              },
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta2/folders/{foldersId}/containerThreatDetectionSettings:calculate",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^folders/[^/]+/containerThreatDetectionSettings$",
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                  "location": "path"
                }
              }
            }
          }
        },
        "rapidVulnerabilityDetectionSettings": {
          "methods": {
            "calculate": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
                  "location": "path",
                  "type": "string",
                  "pattern": "^folders/[^/]+/rapidVulnerabilityDetectionSettings$",
                  "required": true
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "response": {
                "$ref": "RapidVulnerabilityDetectionSettings"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "securitycenter.folders.rapidVulnerabilityDetectionSettings.calculate",
              "httpMethod": "GET",
              "flatPath": "v1beta2/folders/{foldersId}/rapidVulnerabilityDetectionSettings:calculate"
            }
          }
        },
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^folders/[^/]+/webSecurityScannerSettings$",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings"
                }
              },
              "response": {
                "$ref": "WebSecurityScannerSettings"
              },
              "id": "securitycenter.folders.webSecurityScannerSettings.calculate",
              "httpMethod": "GET",
              "flatPath": "v1beta2/folders/{foldersId}/webSecurityScannerSettings:calculate",
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings."
            }
          }
        }
      }
    },
    "projects": {
      "methods": {
        "updateRapidVulnerabilityDetectionSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update the RapidVulnerabilityDetectionSettings resource.",
          "path": "v1beta2/{+name}",
          "id": "securitycenter.projects.updateRapidVulnerabilityDetectionSettings",
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "flatPath": "v1beta2/projects/{projectsId}/rapidVulnerabilityDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^projects/[^/]+/rapidVulnerabilityDetectionSettings$",
              "required": true,
              "description": "The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
              "type": "string"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "location": "query",
              "type": "string",
              "description": "The list of fields to be updated."
            }
          },
          "request": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "httpMethod": "PATCH"
        },
        "getSecurityCenterSettings": {
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/securityCenterSettings$",
              "type": "string",
              "required": true,
              "description": "Required. The name of the SecurityCenterSettings to retrieve. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format: projects/{project}/securityCenterSettings",
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "path": "v1beta2/{+name}",
          "description": "Get the SecurityCenterSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.projects.getSecurityCenterSettings",
          "flatPath": "v1beta2/projects/{projectsId}/securityCenterSettings",
          "response": {
            "$ref": "SecurityCenterSettings"
          }
        },
        "updateEventThreatDetectionSettings": {
          "request": {
            "$ref": "EventThreatDetectionSettings"
          },
          "httpMethod": "PATCH",
          "description": "Update the EventThreatDetectionSettings resource.",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings",
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "type": "string",
              "location": "query",
              "format": "google-fieldmask",
              "description": "The list of fields to be updated."
            },
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^projects/[^/]+/eventThreatDetectionSettings$",
              "required": true,
              "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.projects.updateEventThreatDetectionSettings"
        },
        "getRapidVulnerabilityDetectionSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^projects/[^/]+/rapidVulnerabilityDetectionSettings$",
              "required": true,
              "type": "string",
              "description": "Required. The name of the RapidVulnerabilityDetectionSettings to retrieve. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings"
            }
          },
          "id": "securitycenter.projects.getRapidVulnerabilityDetectionSettings",
          "parameterOrder": [
            "name"
          ],
          "description": "Get the RapidVulnerabilityDetectionSettings resource.",
          "path": "v1beta2/{+name}",
          "response": {
            "$ref": "RapidVulnerabilityDetectionSettings"
          },
          "httpMethod": "GET",
          "flatPath": "v1beta2/projects/{projectsId}/rapidVulnerabilityDetectionSettings"
        },
        "getSecurityHealthAnalyticsSettings": {
          "description": "Get the SecurityHealthAnalyticsSettings resource.",
          "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings",
          "path": "v1beta2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$",
              "description": "Required. The name of the SecurityHealthAnalyticsSettings to retrieve. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "id": "securitycenter.projects.getSecurityHealthAnalyticsSettings",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "updateWebSecurityScannerSettings": {
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "location": "query",
              "description": "The list of fields to be updated."
            },
            "name": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "pattern": "^projects/[^/]+/webSecurityScannerSettings$"
            }
          },
          "request": {
            "$ref": "WebSecurityScannerSettings"
          },
          "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings",
          "path": "v1beta2/{+name}",
          "description": "Update the WebSecurityScannerSettings resource.",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "id": "securitycenter.projects.updateWebSecurityScannerSettings"
        },
        "getEventThreatDetectionSettings": {
          "httpMethod": "GET",
          "description": "Get the EventThreatDetectionSettings resource.",
          "id": "securitycenter.projects.getEventThreatDetectionSettings",
          "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the EventThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
              "pattern": "^projects/[^/]+/eventThreatDetectionSettings$",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "EventThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1beta2/{+name}"
        },
        "getOnboardingState": {
          "response": {
            "$ref": "OnboardingState"
          },
          "flatPath": "v1beta2/projects/{projectsId}/onboardingState",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^projects/[^/]+/onboardingState$",
              "type": "string",
              "description": "Required. The name of the OnboardingState to retrieve. Formats: * organizations/{organization}/onboardingState * folders/{folder}/onboardingState * projects/{project}/onboardingState",
              "required": true
            }
          },
          "description": "Retrieve the OnboardingState of a resource.",
          "path": "v1beta2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.projects.getOnboardingState"
        },
        "getWebSecurityScannerSettings": {
          "parameterOrder": [
            "name"
          ],
          "description": "Get the WebSecurityScannerSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.projects.getWebSecurityScannerSettings",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "pattern": "^projects/[^/]+/webSecurityScannerSettings$",
              "description": "Required. The name of the WebSecurityScannerSettings to retrieve. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
              "location": "path"
            }
          },
          "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings",
          "path": "v1beta2/{+name}",
          "response": {
            "$ref": "WebSecurityScannerSettings"
          },
          "httpMethod": "GET"
        },
        "updateContainerThreatDetectionSettings": {
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "description": "Update the ContainerThreatDetectionSettings resource.",
          "path": "v1beta2/{+name}",
          "httpMethod": "PATCH",
          "id": "securitycenter.projects.updateContainerThreatDetectionSettings",
          "parameters": {
            "name": {
              "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "pattern": "^projects/[^/]+/containerThreatDetectionSettings$",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "updateMask": {
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings"
        },
        "getContainerThreatDetectionSettings": {
          "response": {
            "$ref": "ContainerThreatDetectionSettings"
          },
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
              "location": "path",
              "required": true,
              "pattern": "^projects/[^/]+/containerThreatDetectionSettings$"
            }
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.projects.getContainerThreatDetectionSettings",
          "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings",
          "description": "Get the ContainerThreatDetectionSettings resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET"
        },
        "getVirtualMachineThreatDetectionSettings": {
          "httpMethod": "GET",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "description": "Get the VirtualMachineThreatDetectionSettings resource.",
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$",
              "type": "string",
              "description": "Required. The name of the VirtualMachineThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "securitycenter.projects.getVirtualMachineThreatDetectionSettings",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings"
        },
        "updateSecurityHealthAnalyticsSettings": {
          "request": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "The list of fields to be updated.",
              "format": "google-fieldmask",
              "type": "string"
            },
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$",
              "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings"
            }
          },
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "id": "securitycenter.projects.updateSecurityHealthAnalyticsSettings",
          "response": {
            "$ref": "SecurityHealthAnalyticsSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update the SecurityHealthAnalyticsSettings resource."
        },
        "updateVirtualMachineThreatDetectionSettings": {
          "request": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "path": "v1beta2/{+name}",
          "id": "securitycenter.projects.updateVirtualMachineThreatDetectionSettings",
          "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "VirtualMachineThreatDetectionSettings"
          },
          "parameters": {
            "updateMask": {
              "description": "The list of fields to be updated.",
              "type": "string",
              "location": "query",
              "format": "google-fieldmask"
            },
            "name": {
              "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
              "location": "path",
              "required": true,
              "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Update the VirtualMachineThreatDetectionSettings resource."
        }
      },
      "resources": {
        "virtualMachineThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "flatPath": "v1beta2/projects/{projectsId}/virtualMachineThreatDetectionSettings:calculate",
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.projects.virtualMachineThreatDetectionSettings.calculate",
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Calculates the effective VirtualMachineThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "response": {
                "$ref": "VirtualMachineThreatDetectionSettings"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the VirtualMachineThreatDetectionSettings to calculate. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings",
                  "location": "path",
                  "pattern": "^projects/[^/]+/virtualMachineThreatDetectionSettings$",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        },
        "eventThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/eventThreatDetectionSettings$",
                  "type": "string",
                  "description": "Required. The name of the EventThreatDetectionSettings to calculate. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "securitycenter.projects.eventThreatDetectionSettings.calculate",
              "response": {
                "$ref": "EventThreatDetectionSettings"
              },
              "flatPath": "v1beta2/projects/{projectsId}/eventThreatDetectionSettings:calculate",
              "httpMethod": "GET",
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective EventThreatDetectionSettings based on its level in the resource hierarchy and its settings."
            }
          }
        },
        "rapidVulnerabilityDetectionSettings": {
          "methods": {
            "calculate": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta2/{+name}:calculate",
              "id": "securitycenter.projects.rapidVulnerabilityDetectionSettings.calculate",
              "response": {
                "$ref": "RapidVulnerabilityDetectionSettings"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the RapidVulnerabilityDetectionSettings to calculate. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
                  "required": true,
                  "pattern": "^projects/[^/]+/rapidVulnerabilityDetectionSettings$",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1beta2/projects/{projectsId}/rapidVulnerabilityDetectionSettings:calculate",
              "description": "Calculates the effective RapidVulnerabilityDetectionSettings based on its level in the resource hierarchy and its settings."
            }
          }
        },
        "webSecurityScannerSettings": {
          "methods": {
            "calculate": {
              "response": {
                "$ref": "WebSecurityScannerSettings"
              },
              "flatPath": "v1beta2/projects/{projectsId}/webSecurityScannerSettings:calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/webSecurityScannerSettings$",
                  "description": "Required. The name of the WebSecurityScannerSettings to calculate. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Calculates the effective WebSecurityScannerSettings based on its level in the resource hierarchy and its settings.",
              "path": "v1beta2/{+name}:calculate",
              "httpMethod": "GET",
              "id": "securitycenter.projects.webSecurityScannerSettings.calculate",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "containerThreatDetectionSettings": {
          "methods": {
            "calculate": {
              "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
              "id": "securitycenter.projects.containerThreatDetectionSettings.calculate",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                  "pattern": "^projects/[^/]+/containerThreatDetectionSettings$"
                }
              },
              "path": "v1beta2/{+name}:calculate",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ContainerThreatDetectionSettings"
              },
              "httpMethod": "GET",
              "flatPath": "v1beta2/projects/{projectsId}/containerThreatDetectionSettings:calculate"
            }
          }
        },
        "securityHealthAnalyticsSettings": {
          "methods": {
            "calculate": {
              "httpMethod": "GET",
              "response": {
                "$ref": "SecurityHealthAnalyticsSettings"
              },
              "path": "v1beta2/{+name}:calculate",
              "description": "Calculates the effective SecurityHealthAnalyticsSettings based on its level in the resource hierarchy and its settings.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the SecurityHealthAnalyticsSettings to calculate. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/securityHealthAnalyticsSettings$",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "securitycenter.projects.securityHealthAnalyticsSettings.calculate",
              "flatPath": "v1beta2/projects/{projectsId}/securityHealthAnalyticsSettings:calculate"
            }
          }
        },
        "locations": {
          "resources": {
            "clusters": {
              "methods": {
                "updateContainerThreatDetectionSettings": {
                  "request": {
                    "$ref": "ContainerThreatDetectionSettings"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1beta2/{+name}",
                  "description": "Update the ContainerThreatDetectionSettings resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to be updated."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$",
                      "location": "path",
                      "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ContainerThreatDetectionSettings"
                  },
                  "id": "securitycenter.projects.locations.clusters.updateContainerThreatDetectionSettings",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings"
                },
                "getContainerThreatDetectionSettings": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the ContainerThreatDetectionSettings to retrieve. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings",
                  "httpMethod": "GET",
                  "description": "Get the ContainerThreatDetectionSettings resource.",
                  "id": "securitycenter.projects.locations.clusters.getContainerThreatDetectionSettings",
                  "response": {
                    "$ref": "ContainerThreatDetectionSettings"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta2/{+name}"
                }
              },
              "resources": {
                "containerThreatDetectionSettings": {
                  "methods": {
                    "calculate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta2/{+name}:calculate",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/containerThreatDetectionSettings:calculate",
                      "id": "securitycenter.projects.locations.clusters.containerThreatDetectionSettings.calculate",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/containerThreatDetectionSettings$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the ContainerThreatDetectionSettings to calculate. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Calculates the effective ContainerThreatDetectionSettings based on its level in the resource hierarchy and its settings.",
                      "response": {
                        "$ref": "ContainerThreatDetectionSettings"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "title": "Security Command Center API",
  "documentationLink": "https://cloud.google.com/security-command-center",
  "name": "securitycenter",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://securitycenter.googleapis.com/",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://securitycenter.mtls.googleapis.com/",
  "batchPath": "batch",
  "id": "securitycenter:v1beta2",
  "protocol": "rest",
  "basePath": "",
  "rootUrl": "https://securitycenter.googleapis.com/",
  "version_module": true,
  "schemas": {
    "Process": {
      "description": "Represents an operating system process.",
      "type": "object",
      "properties": {
        "envVariables": {
          "description": "Process environment variables.",
          "items": {
            "$ref": "EnvironmentVariable"
          },
          "type": "array"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "Process arguments as JSON encoded strings.",
          "type": "array"
        },
        "argumentsTruncated": {
          "description": "True if `args` is incomplete.",
          "type": "boolean"
        },
        "envVariablesTruncated": {
          "description": "True if `env_variables` is incomplete.",
          "type": "boolean"
        },
        "binary": {
          "$ref": "File",
          "description": "File information for the process executable."
        },
        "script": {
          "$ref": "File",
          "description": "When the process represents the invocation of a script, `binary` provides information about the interpreter while `script` provides information about the script file provided to the interpreter."
        },
        "name": {
          "type": "string",
          "description": "The process name visible in utilities like `top` and `ps`; it can be accessed via `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`."
        },
        "libraries": {
          "description": "File information for libraries loaded by the process.",
          "type": "array",
          "items": {
            "$ref": "File"
          }
        },
        "parentPid": {
          "format": "int64",
          "type": "string",
          "description": "The parent process id."
        },
        "pid": {
          "format": "int64",
          "description": "The process id.",
          "type": "string"
        }
      },
      "id": "Process"
    },
    "GoogleCloudSecuritycenterV1BulkMuteFindingsResponse": {
      "properties": {},
      "id": "GoogleCloudSecuritycenterV1BulkMuteFindingsResponse",
      "description": "The response to a BulkMute request. Contains the LRO information.",
      "type": "object"
    },
    "SecurityHealthAnalyticsSettings": {
      "description": "Resource capturing the settings for the Security Health Analytics service.",
      "id": "SecurityHealthAnalyticsSettings",
      "properties": {
        "serviceEnablementState": {
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ]
        },
        "modules": {
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "additionalProperties": {
            "$ref": "Config"
          }
        },
        "name": {
          "description": "The resource name of the SecurityHealthAnalyticsSettings. Formats: * organizations/{organization}/securityHealthAnalyticsSettings * folders/{folder}/securityHealthAnalyticsSettings * projects/{project}/securityHealthAnalyticsSettings",
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Output only. The service account used by Security Health Analytics detectors.",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "VirtualMachineThreatDetectionSettings": {
      "properties": {
        "serviceEnablementState": {
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Output only. The service account used by Virtual Machine Threat Detection detectors.",
          "readOnly": true
        },
        "modules": {
          "additionalProperties": {
            "$ref": "Config"
          },
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the VirtualMachineThreatDetectionSettings. Formats: * organizations/{organization}/virtualMachineThreatDetectionSettings * folders/{folder}/virtualMachineThreatDetectionSettings * projects/{project}/virtualMachineThreatDetectionSettings"
        }
      },
      "id": "VirtualMachineThreatDetectionSettings",
      "description": "Resource capturing the settings for the Virtual Machine Threat Detection service.",
      "type": "object"
    },
    "WebSecurityScannerSettings": {
      "id": "WebSecurityScannerSettings",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "serviceEnablementState": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "type": "string",
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED."
        },
        "name": {
          "description": "The resource name of the WebSecurityScannerSettings. Formats: * organizations/{organization}/webSecurityScannerSettings * folders/{folder}/webSecurityScannerSettings * projects/{project}/webSecurityScannerSettings",
          "type": "string"
        },
        "modules": {
          "additionalProperties": {
            "$ref": "Config"
          },
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "type": "object"
        }
      },
      "description": "Resource capturing the settings for the Web Security Scanner service.",
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1MuteConfig": {
      "properties": {
        "mostRecentEditor": {
          "description": "Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.",
          "format": "google-datetime",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The human readable name to be displayed for the mute config."
        },
        "filter": {
          "description": "Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`",
          "type": "string"
        },
        "name": {
          "description": "This field will be ignored if provided on config creation. Format \"organizations/{organization}/muteConfigs/{mute_config}\" \"folders/{folder}/muteConfigs/{mute_config}\" \"projects/{project}/muteConfigs/{mute_config}\"",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "A description of the mute config.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1MuteConfig",
      "description": "A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings."
    },
    "RapidVulnerabilityDetectionSettings": {
      "properties": {
        "name": {
          "description": "The resource name of the RapidVulnerabilityDetectionSettings. Formats: * organizations/{organization}/rapidVulnerabilityDetectionSettings * folders/{folder}/rapidVulnerabilityDetectionSettings * projects/{project}/rapidVulnerabilityDetectionSettings",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the settings were last updated."
        },
        "serviceEnablementState": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED."
        },
        "modules": {
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "additionalProperties": {
            "$ref": "Config"
          }
        }
      },
      "id": "RapidVulnerabilityDetectionSettings",
      "description": "Resource capturing the settings for the Rapid Vulnerability Detection service.",
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse": {
      "id": "GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse",
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "description": "The state of an asset discovery run.",
          "type": "string"
        },
        "duration": {
          "description": "The duration between asset discovery run start and end",
          "format": "google-duration",
          "type": "string"
        }
      },
      "description": "Response of asset discovery run"
    },
    "GoogleCloudSecuritycenterV1Resource": {
      "id": "GoogleCloudSecuritycenterV1Resource",
      "description": "Information related to the Google Cloud resource.",
      "properties": {
        "projectDisplayName": {
          "type": "string",
          "description": "The project ID that the resource belongs to."
        },
        "parent": {
          "description": "The full resource name of resource's parent.",
          "type": "string"
        },
        "project": {
          "description": "The full resource name of project that the resource belongs to.",
          "type": "string"
        },
        "folders": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Folder"
          },
          "description": "Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization."
        },
        "name": {
          "type": "string",
          "description": "The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name"
        },
        "type": {
          "type": "string",
          "description": "The full resource type of the resource."
        },
        "parentDisplayName": {
          "type": "string",
          "description": "The human readable name of resource's parent."
        },
        "displayName": {
          "type": "string",
          "description": "The human readable name of the resource."
        }
      },
      "type": "object"
    },
    "Cvssv3": {
      "type": "object",
      "description": "Common Vulnerability Scoring System version 3.",
      "properties": {
        "scope": {
          "description": "The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "An exploited vulnerability can only affect resources managed by the same security authority.",
            "An exploited vulnerability can affect resources beyond the security scope managed by the security authority of the vulnerable component."
          ],
          "type": "string"
        },
        "baseScore": {
          "format": "double",
          "description": "The base score is a function of the base metric scores.",
          "type": "number"
        },
        "privilegesRequired": {
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "type": "string",
          "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "The attacker is unauthorized prior to attack, and therefore does not require any access to settings or files of the vulnerable system to carry out an attack.",
            "The attacker requires privileges that provide basic user capabilities that could normally affect only settings and files owned by a user. Alternatively, an attacker with Low privileges has the ability to access only non-sensitive resources.",
            "The attacker requires privileges that provide significant (e.g., administrative) control over the vulnerable component allowing access to component-wide settings and files."
          ]
        },
        "attackComplexity": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "Specialized access conditions or extenuating circumstances do not exist. An attacker can expect repeatable success when attacking the vulnerable component.",
            "A successful attack depends on conditions beyond the attacker's control. That is, a successful attack cannot be accomplished at will, but requires the attacker to invest in some measurable amount of effort in preparation or execution against the vulnerable component before a successful attack can be expected."
          ],
          "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ]
        },
        "confidentialityImpact": {
          "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "userInteraction": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable system can be exploited without interaction from any user.",
            "Successful exploitation of this vulnerability requires a user to take some action before the vulnerability can be exploited."
          ],
          "description": "This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.",
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "availabilityImpact": {
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability."
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "High impact.",
            "Low impact.",
            "No impact."
          ],
          "description": "This metric measures the impact to integrity of a successfully exploited vulnerability.",
          "type": "string"
        },
        "attackVector": {
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ],
          "enumDescriptions": [
            "Invalid value.",
            "The vulnerable component is bound to the network stack and the set of possible attackers extends beyond the other options listed below, up to and including the entire Internet.",
            "The vulnerable component is bound to the network stack, but the attack is limited at the protocol level to a logically adjacent topology.",
            "The vulnerable component is not bound to the network stack and the attacker's path is via read/write/execute capabilities.",
            "The attack requires the attacker to physically touch or manipulate the vulnerable component."
          ],
          "type": "string",
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible."
        }
      },
      "id": "Cvssv3"
    },
    "Geolocation": {
      "id": "Geolocation",
      "description": "Represents a geographical location for a given access.",
      "type": "object",
      "properties": {
        "regionCode": {
          "description": "A CLDR.",
          "type": "string"
        }
      }
    },
    "GoogleCloudSecuritycenterV1NotificationMessage": {
      "id": "GoogleCloudSecuritycenterV1NotificationMessage",
      "description": "Cloud SCC's Notification",
      "properties": {
        "resource": {
          "$ref": "GoogleCloudSecuritycenterV1Resource",
          "description": "The Cloud resource tied to this notification's Finding."
        },
        "notificationConfigName": {
          "type": "string",
          "description": "Name of the notification config that generated current notification."
        },
        "finding": {
          "description": "If it's a Finding based notification config, this field will be populated.",
          "$ref": "Finding"
        }
      },
      "type": "object"
    },
    "SecurityMarks": {
      "description": "User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
      "properties": {
        "canonicalName": {
          "description": "The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
          "type": "string"
        },
        "marks": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)"
        },
        "name": {
          "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SecurityMarks"
    },
    "GoogleCloudSecuritycenterV1p1beta1NotificationMessage": {
      "properties": {
        "notificationConfigName": {
          "description": "Name of the notification config that generated current notification.",
          "type": "string"
        },
        "finding": {
          "description": "If it's a Finding based notification config, this field will be populated.",
          "$ref": "GoogleCloudSecuritycenterV1p1beta1Finding"
        },
        "resource": {
          "$ref": "GoogleCloudSecuritycenterV1p1beta1Resource",
          "description": "The Cloud resource tied to the notification."
        }
      },
      "description": "Security Command Center's Notification",
      "id": "GoogleCloudSecuritycenterV1p1beta1NotificationMessage",
      "type": "object"
    },
    "ProcessSignature": {
      "properties": {
        "memoryHashSignature": {
          "$ref": "MemoryHashSignature",
          "description": "Signature indicating that a binary family was matched."
        },
        "yaraRuleSignature": {
          "description": "Signature indicating that a YARA rule was matched.",
          "$ref": "YaraRuleSignature"
        }
      },
      "type": "object",
      "description": "Indicates what signature matched this process.",
      "id": "ProcessSignature"
    },
    "Folder": {
      "id": "Folder",
      "type": "object",
      "description": "Message that contains the resource name and display name of a folder resource.",
      "properties": {
        "resourceFolder": {
          "description": "Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name",
          "type": "string"
        },
        "resourceFolderDisplayName": {
          "type": "string",
          "description": "The user defined display name for this folder."
        }
      }
    },
    "IamBinding": {
      "description": "Represents a particular IAM binding, which captures a member's role addition, removal, or state.",
      "type": "object",
      "id": "IamBinding",
      "properties": {
        "member": {
          "type": "string",
          "description": "A single identity requesting access for a Cloud Platform resource, e.g. \"foo@google.com\"."
        },
        "action": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Addition of a Binding.",
            "Removal of a Binding."
          ],
          "description": "The action that was performed on a Binding.",
          "enum": [
            "ACTION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ]
        },
        "role": {
          "description": "Role that is assigned to \"members\". For example, \"roles/viewer\", \"roles/editor\", or \"roles/owner\".",
          "type": "string"
        }
      }
    },
    "Indicator": {
      "id": "Indicator",
      "properties": {
        "domains": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of domains associated to the Finding."
        },
        "signatures": {
          "items": {
            "$ref": "ProcessSignature"
          },
          "description": "The list of matched signatures indicating that the given process is present in the environment.",
          "type": "array"
        },
        "ipAddresses": {
          "description": "List of ip addresses associated to the Finding.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Represents what's commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise"
    },
    "Finding": {
      "type": "object",
      "properties": {
        "externalSystems": {
          "description": "Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "GoogleCloudSecuritycenterV1ExternalSystem"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\""
        },
        "resourceName": {
          "description": "For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
          "type": "string"
        },
        "vulnerability": {
          "description": "Represents vulnerability specific fields like cve, cvss scores etc. CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)",
          "$ref": "Vulnerability"
        },
        "indicator": {
          "description": "Represents what's commonly known as an Indicator of compromise (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise",
          "$ref": "Indicator"
        },
        "muteUpdateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The most recent time this finding was muted or unmuted."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "The finding requires attention and has not been addressed yet.",
            "The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active."
          ],
          "description": "The state of the finding."
        },
        "canonicalName": {
          "type": "string",
          "description": "The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding."
        },
        "mute": {
          "enum": [
            "MUTE_UNSPECIFIED",
            "MUTED",
            "UNMUTED",
            "UNDEFINED"
          ],
          "type": "string",
          "description": "Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.",
          "enumDescriptions": [
            "Unspecified.",
            "Finding has been muted.",
            "Finding has been unmuted.",
            "Finding has never been muted/unmuted."
          ]
        },
        "securityMarks": {
          "$ref": "SecurityMarks",
          "readOnly": true,
          "description": "Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding."
        },
        "mitreAttack": {
          "description": "MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org",
          "$ref": "MitreAttack"
        },
        "exfiltration": {
          "$ref": "Exfiltration",
          "description": "Represents exfiltration associated with the Finding."
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "enumDescriptions": [
            "This value is used for findings when a source doesn't write a severity value.",
            "Vulnerability: A critical vulnerability is easily discoverable by an external actor, exploitable, and results in the direct ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. Examples include publicly accessible unprotected user data, public SSH access with weak or no passwords, etc. Threat: Indicates a threat that is able to access, modify, or delete data or execute unauthorized code within existing resources.",
            "Vulnerability: A high risk vulnerability can be easily discovered and exploited in combination with other vulnerabilities in order to gain direct access and the ability to execute arbitrary code, exfiltrate data, and otherwise gain additional access and privileges to cloud resources and workloads. An example is a database with weak or no passwords that is only accessible internally. This database could easily be compromised by an actor that had access to the internal network. Threat: Indicates a threat that is able to create new computational resources in an environment but not able to access data or execute code in existing resources.",
            "Vulnerability: A medium risk vulnerability could be used by an actor to gain access to resources or privileges that enable them to eventually (through multiple steps or a complex exploit) gain access and the ability to execute arbitrary code or exfiltrate data. An example is a service account with access to more projects than it should have. If an actor gains access to the service account, they could potentially use that access to manipulate a project the service account was not intended to. Threat: Indicates a threat that is able to cause operational impact but may not access data or execute unauthorized code.",
            "Vulnerability: A low risk vulnerability hampers a security organization's ability to detect vulnerabilities or active threats in their deployment, or prevents the root cause investigation of security issues. An example is monitoring and logs being disabled for resource configurations and access. Threat: Indicates a threat that has obtained minimal access to an environment but is not able to access data, execute code, or create resources."
          ],
          "type": "string",
          "description": "The severity of the finding. This field is managed by the source that writes the finding."
        },
        "sourceProperties": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only."
        },
        "iamBindings": {
          "type": "array",
          "items": {
            "$ref": "IamBinding"
          },
          "description": "Represents IAM bindings associated with the Finding."
        },
        "description": {
          "type": "string",
          "description": "Contains more detail about the finding."
        },
        "connections": {
          "type": "array",
          "description": "Contains information about the IP connection associated with the finding.",
          "items": {
            "$ref": "Connection"
          }
        },
        "muteInitiator": {
          "type": "string",
          "description": "First known as mute_annotation. Records additional information about the mute operation e.g. mute config that muted the finding, user who muted the finding, etc. Unlike other attributes of a finding, a finding provider shouldn't set the value of mute."
        },
        "externalUri": {
          "type": "string",
          "description": "The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL."
        },
        "processes": {
          "items": {
            "$ref": "Process"
          },
          "description": "Represents operating system processes associated with the Finding.",
          "type": "array"
        },
        "access": {
          "description": "Access details associated to the Finding, such as more information on the caller, which method was accessed, from where, etc.",
          "$ref": "Access"
        },
        "compliances": {
          "type": "array",
          "description": "Contains compliance information for security standards associated to the finding.",
          "items": {
            "$ref": "Compliance"
          }
        },
        "category": {
          "description": "The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\"",
          "type": "string"
        },
        "contacts": {
          "additionalProperties": {
            "$ref": "ContactDetails"
          },
          "readOnly": true,
          "description": "Output only. Map containing the point of contacts for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { \"security\":[ { \"contact\":{ \"email\":\"person1@company.com\" } }, { \"contact\":{ \"email\":“person2@company.com” } } ] }",
          "type": "object"
        },
        "eventTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp."
        },
        "parent": {
          "type": "string",
          "description": "The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\""
        },
        "findingClass": {
          "description": "The class of the finding.",
          "enum": [
            "FINDING_CLASS_UNSPECIFIED",
            "THREAT",
            "VULNERABILITY",
            "MISCONFIGURATION",
            "OBSERVATION",
            "SCC_ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified finding class.",
            "Describes unwanted or malicious activity.",
            "Describes a potential weakness in software that increases risk to Confidentiality & Integrity & Availability.",
            "Describes a potential weakness in cloud resource/asset configuration that increases risk.",
            "Describes a security observation that is for informational purposes.",
            "Describes an error that prevents some SCC functionality."
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which the finding was created in Security Command Center.",
          "type": "string"
        },
        "nextSteps": {
          "type": "string",
          "description": "Next steps associate to the finding."
        }
      },
      "description": "Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.",
      "id": "Finding"
    },
    "GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse": {
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse",
      "description": "Response of asset discovery run",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "description": "The state of an asset discovery run."
        },
        "duration": {
          "format": "google-duration",
          "type": "string",
          "description": "The duration between asset discovery run start and end"
        }
      }
    },
    "GoogleCloudSecuritycenterV1ExternalSystem": {
      "id": "GoogleCloudSecuritycenterV1ExternalSystem",
      "properties": {
        "name": {
          "type": "string",
          "description": "External System Name e.g. jira, demisto, etc. e.g.: `organizations/1234/sources/5678/findings/123456/externalSystems/jira` `folders/1234/sources/5678/findings/123456/externalSystems/jira` `projects/1234/sources/5678/findings/123456/externalSystems/jira`"
        },
        "assignees": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "References primary/secondary etc assignees in the external system."
        },
        "externalUid": {
          "type": "string",
          "description": "Identifier that's used to track the given finding in the external system."
        },
        "status": {
          "description": "Most recent status of the corresponding finding's ticket/tracker in the external system.",
          "type": "string"
        },
        "externalSystemUpdateTime": {
          "format": "google-datetime",
          "description": "The most recent time when the corresponding finding's ticket/tracker was updated in the external system.",
          "type": "string"
        }
      },
      "description": "Representation of third party SIEM/SOAR fields within SCC.",
      "type": "object"
    },
    "ContainerThreatDetectionSettings": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the ContainerThreatDetectionSettings. Formats: * organizations/{organization}/containerThreatDetectionSettings * folders/{folder}/containerThreatDetectionSettings * projects/{project}/containerThreatDetectionSettings * projects/{project}/locations/{location}/clusters/{cluster}/containerThreatDetectionSettings"
        },
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "Config"
          },
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's."
        },
        "serviceAccount": {
          "readOnly": true,
          "description": "Output only. The service account used by Container Threat Detection for scanning. Service accounts are scoped at the project level meaning this field will be empty at any level above a project.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time the settings were last updated.",
          "type": "string",
          "readOnly": true
        },
        "serviceEnablementState": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED.",
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ]
        }
      },
      "id": "ContainerThreatDetectionSettings",
      "description": "Resource capturing the settings for the Container Threat Detection service."
    },
    "OnboardingState": {
      "id": "OnboardingState",
      "type": "object",
      "description": "Resource capturing onboarding information for a given CRM resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the OnboardingState. Format: organizations/{organization}/onboardingState Format: folders/{folder}/onboardingState Format: projects/{project}/onboardingState"
        },
        "onboardingLevel": {
          "type": "string",
          "enum": [
            "ONBOARDING_LEVEL_UNSPECIFIED",
            "ONBOARDING_LEVEL_PROJECT",
            "ONBOARDING_LEVEL_ORGANIZATION"
          ],
          "description": "Describes the level a given organization, folder, or project is onboarded with SCC. If the resource wasn't onboarded, NOT_FOUND would have been thrown.",
          "enumDescriptions": [
            "Unused.",
            "This resource is onboarded at the project level. Only possible for projects.",
            "This resource is onboarded at the organization level. Possible for organizations, folders, and projects."
          ]
        }
      }
    },
    "ContactDetails": {
      "type": "object",
      "properties": {
        "contacts": {
          "description": "A list of contacts",
          "type": "array",
          "items": {
            "$ref": "Contact"
          }
        }
      },
      "description": "The details pertaining to specific contacts",
      "id": "ContactDetails"
    },
    "GoogleCloudSecuritycenterV1p1beta1Finding": {
      "type": "object",
      "description": "Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding.",
      "id": "GoogleCloudSecuritycenterV1p1beta1Finding",
      "properties": {
        "externalUri": {
          "type": "string",
          "description": "The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL."
        },
        "canonicalName": {
          "description": "The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding.",
          "type": "string"
        },
        "sourceProperties": {
          "description": "Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "securityMarks": {
          "$ref": "GoogleCloudSecuritycenterV1p1beta1SecurityMarks",
          "readOnly": true,
          "description": "Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding."
        },
        "name": {
          "type": "string",
          "description": "The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\""
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the finding was created in Security Command Center."
        },
        "parent": {
          "type": "string",
          "description": "The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\""
        },
        "eventTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp."
        },
        "category": {
          "type": "string",
          "description": "The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\""
        },
        "resourceName": {
          "type": "string",
          "description": "For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time."
        },
        "severity": {
          "enumDescriptions": [
            "No severity specified. The default value.",
            "Critical severity.",
            "High severity.",
            "Medium severity.",
            "Low severity."
          ],
          "description": "The severity of the finding. This field is managed by the source that writes the finding.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "description": "The state of the finding.",
          "enumDescriptions": [
            "Unspecified state.",
            "The finding requires attention and has not been addressed yet.",
            "The finding has been fixed, triaged as a non-issue or otherwise addressed and is no longer active."
          ]
        }
      }
    },
    "Reference": {
      "id": "Reference",
      "description": "Additional Links",
      "properties": {
        "source": {
          "type": "string",
          "description": "Source of the reference e.g. NVD"
        },
        "uri": {
          "description": "Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventThreatDetectionSettings": {
      "id": "EventThreatDetectionSettings",
      "properties": {
        "name": {
          "description": "The resource name of the EventThreatDetectionSettings. Formats: * organizations/{organization}/eventThreatDetectionSettings * folders/{folder}/eventThreatDetectionSettings * projects/{project}/eventThreatDetectionSettings",
          "type": "string"
        },
        "serviceEnablementState": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "type": "string",
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ],
          "description": "The state of enablement for the service at its level of the resource hierarchy. A DISABLED state will override all module enablement_states to DISABLED."
        },
        "modules": {
          "type": "object",
          "description": "The configurations including the state of enablement for the service's different modules. The absence of a module in the map implies its configuration is inherited from its parent's.",
          "additionalProperties": {
            "$ref": "Config"
          }
        },
        "updateTime": {
          "description": "Output only. The time the settings were last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Resource capturing the settings for the Event Threat Detection service.",
      "type": "object"
    },
    "SecurityCenterSettings": {
      "id": "SecurityCenterSettings",
      "type": "object",
      "description": "Resource capturing the settings for Security Center.",
      "properties": {
        "name": {
          "description": "The resource name of the SecurityCenterSettings. Format: organizations/{organization}/securityCenterSettings Format: folders/{folder}/securityCenterSettings Format: projects/{project}/securityCenterSettings",
          "type": "string"
        },
        "onboardingTime": {
          "description": "Timestamp of when the customer organization was onboarded to SCC.",
          "format": "google-datetime",
          "type": "string"
        },
        "orgServiceAccount": {
          "type": "string",
          "description": "The organization level service account to be used for security center components."
        },
        "logSinkProject": {
          "description": "The resource name of the project to send logs to. This project must be part of the organization this resource resides in. The format is `projects/{project_id}`. An empty value disables logging. This value is only referenced by services that support log sink. Please refer to the documentation for an updated list of compatible services.",
          "type": "string"
        }
      }
    },
    "EnvironmentVariable": {
      "id": "EnvironmentVariable",
      "properties": {
        "val": {
          "type": "string",
          "description": "Environment variable value as a JSON encoded string."
        },
        "name": {
          "type": "string",
          "description": "Environment variable name as a JSON encoded string."
        }
      },
      "type": "object",
      "description": "EnvironmentVariable is a name-value pair to store environment variables for Process."
    },
    "Subscription": {
      "properties": {
        "tier": {
          "type": "string",
          "description": "The tier of SCC features this organization currently has access to.",
          "enum": [
            "TIER_UNSPECIFIED",
            "STANDARD",
            "PREMIUM"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The standard tier.",
            "The premium tier."
          ]
        },
        "name": {
          "type": "string",
          "description": "The resource name of the subscription. Format: organizations/{organization}/subscription"
        },
        "details": {
          "$ref": "Details",
          "description": "The details of the most recent active subscription. If there has never been a subscription this will be empty."
        }
      },
      "description": "Resource capturing the state of an organization's subscription.",
      "id": "Subscription",
      "type": "object"
    },
    "Cve": {
      "description": "CVE stands for Common Vulnerabilities and Exposures. More information: https://cve.mitre.org",
      "type": "object",
      "id": "Cve",
      "properties": {
        "id": {
          "description": "The unique identifier for the vulnerability. e.g. CVE-2021-34527",
          "type": "string"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "Reference"
          },
          "description": "Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527"
        },
        "upstreamFixAvailable": {
          "description": "Whether upstream fix is available for the CVE.",
          "type": "boolean"
        },
        "cvssv3": {
          "description": "Describe Common Vulnerability Scoring System specified at https://www.first.org/cvss/v3.1/specification-document",
          "$ref": "Cvssv3"
        }
      }
    },
    "Detection": {
      "description": "Memory hash detection contributing to the binary family match.",
      "id": "Detection",
      "type": "object",
      "properties": {
        "percentPagesMatched": {
          "format": "double",
          "type": "number",
          "description": "The percentage of memory page hashes in the signature that were matched."
        },
        "binary": {
          "description": "The name of the binary associated with the memory hash signature detection.",
          "type": "string"
        }
      }
    },
    "GoogleCloudSecuritycenterV1p1beta1Folder": {
      "id": "GoogleCloudSecuritycenterV1p1beta1Folder",
      "type": "object",
      "properties": {
        "resourceFolderDisplayName": {
          "type": "string",
          "description": "The user defined display name for this folder."
        },
        "resourceFolder": {
          "description": "Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name",
          "type": "string"
        }
      },
      "description": "Message that contains the resource name and display name of a folder resource."
    },
    "Connection": {
      "id": "Connection",
      "description": "Contains information about the IP connection associated with the finding.",
      "properties": {
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "ICMP",
            "TCP",
            "UDP",
            "GRE",
            "ESP"
          ],
          "type": "string",
          "description": "IANA Internet Protocol Number such as TCP(6) and UDP(17).",
          "enumDescriptions": [
            "Unspecified protocol (not HOPOPT).",
            "Internet Control Message Protocol.",
            "Transmission Control Protocol.",
            "User Datagram Protocol.",
            "Generic Routing Encapsulation.",
            "Encap Security Payload."
          ]
        },
        "sourceIp": {
          "type": "string",
          "description": "Source IP address."
        },
        "sourcePort": {
          "format": "int32",
          "type": "integer",
          "description": "Source port."
        },
        "destinationPort": {
          "description": "Destination port. Not present for sockets that are listening and not connected.",
          "type": "integer",
          "format": "int32"
        },
        "destinationIp": {
          "type": "string",
          "description": "Destination IP address. Not present for sockets that are listening and not connected."
        }
      },
      "type": "object"
    },
    "Contact": {
      "type": "object",
      "description": "Representa a single contact's email address",
      "properties": {
        "email": {
          "description": "An email address e.g. \"person123@company.com\"",
          "type": "string"
        }
      },
      "id": "Contact"
    },
    "GoogleCloudSecuritycenterV1BigQueryExport": {
      "description": "Configures how to deliver Findings to BigQuery Instance.",
      "id": "GoogleCloudSecuritycenterV1BigQueryExport",
      "properties": {
        "description": {
          "description": "The description of the export (max of 1024 characters).",
          "type": "string"
        },
        "principal": {
          "description": "Output only. The service account that needs permission to create table, upload data to the big query dataset.",
          "readOnly": true,
          "type": "string"
        },
        "mostRecentEditor": {
          "type": "string",
          "description": "Output only. Email address of the user who last edited the big query export. This field is set by the server and will be ignored if provided on export creation or update.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: \"organizations/{organization_id}/bigQueryExports/{export_id}\" Example format: \"folders/{folder_id}/bigQueryExports/{export_id}\" Example format: \"projects/{project_id}/bigQueryExports/{export_id}\" This field is provided in responses, and is ignored when provided in create requests."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The most recent time at which the big export was updated. This field is set by the server and will be ignored if provided on export creation or update.",
          "readOnly": true,
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `\u003e`, `\u003c`, `\u003e=`, `\u003c=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes."
        },
        "dataset": {
          "type": "string",
          "description": "The dataset to write findings' updates to. Its format is \"projects/[project_id]/datasets/[bigquery_dataset_id]\". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_)."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which the big query export was created. This field is set by the server and will be ignored if provided on export on creation."
        }
      },
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1p1beta1SecurityMarks": {
      "properties": {
        "name": {
          "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\".",
          "type": "string"
        },
        "canonicalName": {
          "type": "string",
          "description": "The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\""
        },
        "marks": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)"
        }
      },
      "description": "User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
      "type": "object",
      "id": "GoogleCloudSecuritycenterV1p1beta1SecurityMarks"
    },
    "YaraRuleSignature": {
      "properties": {
        "yaraRule": {
          "type": "string",
          "description": "The name of the YARA rule."
        }
      },
      "type": "object",
      "description": "A signature corresponding to a YARA rule.",
      "id": "YaraRuleSignature"
    },
    "Compliance": {
      "type": "object",
      "id": "Compliance",
      "description": "Contains compliance information about a security standard indicating unmet recommendations.",
      "properties": {
        "ids": {
          "description": "Policies within the standard/benchmark e.g. A.12.4.1",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "standard": {
          "type": "string",
          "description": "Refers to industry wide standards or benchmarks e.g. \"cis\", \"pci\", \"owasp\", etc."
        },
        "version": {
          "type": "string",
          "description": "Version of the standard/benchmark e.g. 1.1"
        }
      }
    },
    "MemoryHashSignature": {
      "type": "object",
      "properties": {
        "binaryFamily": {
          "type": "string",
          "description": "The binary family."
        },
        "detections": {
          "description": "The list of memory hash detections contributing to the binary family match.",
          "type": "array",
          "items": {
            "$ref": "Detection"
          }
        }
      },
      "description": "A signature corresponding to memory page hashes.",
      "id": "MemoryHashSignature"
    },
    "Vulnerability": {
      "id": "Vulnerability",
      "description": "Refers to common vulnerability fields e.g. cve, cvss, cwe etc.",
      "properties": {
        "cve": {
          "description": "CVE stands for Common Vulnerabilities and Exposures (https://cve.mitre.org/about/)",
          "$ref": "Cve"
        }
      },
      "type": "object"
    },
    "File": {
      "id": "File",
      "properties": {
        "contents": {
          "description": "Prefix of the file contents as a JSON encoded string. (Currently only populated for Malicious Script Executed findings.)",
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "string",
          "description": "Size of the file in bytes."
        },
        "sha256": {
          "description": "SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file.",
          "type": "string"
        },
        "path": {
          "description": "Absolute path of the file as a JSON encoded string.",
          "type": "string"
        },
        "hashedSize": {
          "type": "string",
          "description": "The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file.",
          "format": "int64"
        },
        "partiallyHashed": {
          "type": "boolean",
          "description": "True when the hash covers only a prefix of the file."
        }
      },
      "description": "File information about the related binary/library used by an executable, or the script used by a script interpreter",
      "type": "object"
    },
    "Access": {
      "description": "Represents an access event.",
      "type": "object",
      "id": "Access",
      "properties": {
        "callerIp": {
          "description": "Caller's IP address, such as \"1.1.1.1\".",
          "type": "string"
        },
        "serviceName": {
          "description": "This is the API service that the service account made a call to, e.g. \"iam.googleapis.com\"",
          "type": "string"
        },
        "userAgentFamily": {
          "description": "What kind of user agent is associated, e.g. operating system shells, embedded or stand-alone applications, etc.",
          "type": "string"
        },
        "principalEmail": {
          "description": "Associated email, such as \"foo@google.com\".",
          "type": "string"
        },
        "methodName": {
          "description": "The method that the service account called, e.g. \"SetIamPolicy\".",
          "type": "string"
        },
        "callerIpGeo": {
          "description": "The caller IP's geolocation, which identifies where the call came from.",
          "$ref": "Geolocation"
        }
      }
    },
    "Details": {
      "id": "Details",
      "description": "Details of a subscription.",
      "properties": {
        "startTime": {
          "description": "The time the subscription has or will start.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the subscription has or will end.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The standard subscription.",
            "The trial subscription.",
            "The alpha subscription.",
            "The demo subscription for channel partners."
          ],
          "description": "The type of subscription",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STANDARD",
            "TRIAL",
            "ALPHA",
            "DEMO"
          ]
        }
      },
      "type": "object"
    },
    "ExfilResource": {
      "type": "object",
      "description": "Resource that has been exfiltrated or exfiltrated_to.",
      "id": "ExfilResource",
      "properties": {
        "components": {
          "type": "array",
          "description": "Subcomponents of the asset that is exfiltrated - these could be URIs used during exfiltration, table names, databases, filenames, etc. For example, multiple tables may be exfiltrated from the same CloudSQL instance, or multiple files from the same Cloud Storage bucket.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Resource's URI (https://google.aip.dev/122#full-resource-names)",
          "type": "string"
        }
      }
    },
    "MitreAttack": {
      "type": "object",
      "properties": {
        "additionalTechniques": {
          "description": "Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.",
          "type": "array",
          "items": {
            "enum": [
              "TECHNIQUE_UNSPECIFIED",
              "ACTIVE_SCANNING",
              "SCANNING_IP_BLOCKS",
              "INGRESS_TOOL_TRANSFER",
              "NATIVE_API",
              "SHARED_MODULES",
              "COMMAND_AND_SCRIPTING_INTERPRETER",
              "UNIX_SHELL",
              "RESOURCE_HIJACKING",
              "PROXY",
              "EXTERNAL_PROXY",
              "MULTI_HOP_PROXY",
              "DYNAMIC_RESOLUTION",
              "UNSECURED_CREDENTIALS",
              "VALID_ACCOUNTS",
              "LOCAL_ACCOUNTS",
              "CLOUD_ACCOUNTS",
              "NETWORK_DENIAL_OF_SERVICE",
              "PERMISSION_GROUPS_DISCOVERY",
              "CLOUD_GROUPS",
              "EXFILTRATION_OVER_WEB_SERVICE",
              "EXFILTRATION_TO_CLOUD_STORAGE",
              "ACCOUNT_MANIPULATION",
              "SSH_AUTHORIZED_KEYS",
              "CREATE_OR_MODIFY_SYSTEM_PROCESS",
              "STEAL_WEB_SESSION_COOKIE",
              "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE",
              "EXPLOIT_PUBLIC_FACING_APPLICATION",
              "MODIFY_AUTHENTICATION_PROCESS",
              "DATA_DESTRUCTION",
              "DOMAIN_POLICY_MODIFICATION",
              "IMPAIR_DEFENSES"
            ],
            "enumDescriptions": [
              "Unspecified value.",
              "T1595",
              "T1595.001",
              "T1105",
              "T1106",
              "T1129",
              "T1059",
              "T1059.004",
              "T1496",
              "T1090",
              "T1090.002",
              "T1090.003",
              "T1568",
              "T1552",
              "T1078",
              "T1078.003",
              "T1078.004",
              "T1498",
              "T1069",
              "T1069.003",
              "T1567",
              "T1567.002",
              "T1098",
              "T1098.004",
              "T1543",
              "T1539",
              "T1578",
              "T1190",
              "T1556",
              "T1485",
              "T1484",
              "T1562"
            ],
            "type": "string"
          }
        },
        "version": {
          "description": "The MITRE ATT&CK version referenced by the above fields. E.g. \"8\".",
          "type": "string"
        },
        "primaryTactic": {
          "description": "The MITRE ATT&CK tactic most closely represented by this finding, if any.",
          "enumDescriptions": [
            "Unspecified value.",
            "TA0043",
            "TA0042",
            "TA0001",
            "TA0002",
            "TA0003",
            "TA0004",
            "TA0005",
            "TA0006",
            "TA0007",
            "TA0008",
            "TA0009",
            "TA0011",
            "TA0010",
            "TA0040"
          ],
          "enum": [
            "TACTIC_UNSPECIFIED",
            "RECONNAISSANCE",
            "RESOURCE_DEVELOPMENT",
            "INITIAL_ACCESS",
            "EXECUTION",
            "PERSISTENCE",
            "PRIVILEGE_ESCALATION",
            "DEFENSE_EVASION",
            "CREDENTIAL_ACCESS",
            "DISCOVERY",
            "LATERAL_MOVEMENT",
            "COLLECTION",
            "COMMAND_AND_CONTROL",
            "EXFILTRATION",
            "IMPACT"
          ],
          "type": "string"
        },
        "primaryTechniques": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified value.",
              "T1595",
              "T1595.001",
              "T1105",
              "T1106",
              "T1129",
              "T1059",
              "T1059.004",
              "T1496",
              "T1090",
              "T1090.002",
              "T1090.003",
              "T1568",
              "T1552",
              "T1078",
              "T1078.003",
              "T1078.004",
              "T1498",
              "T1069",
              "T1069.003",
              "T1567",
              "T1567.002",
              "T1098",
              "T1098.004",
              "T1543",
              "T1539",
              "T1578",
              "T1190",
              "T1556",
              "T1485",
              "T1484",
              "T1562"
            ],
            "enum": [
              "TECHNIQUE_UNSPECIFIED",
              "ACTIVE_SCANNING",
              "SCANNING_IP_BLOCKS",
              "INGRESS_TOOL_TRANSFER",
              "NATIVE_API",
              "SHARED_MODULES",
              "COMMAND_AND_SCRIPTING_INTERPRETER",
              "UNIX_SHELL",
              "RESOURCE_HIJACKING",
              "PROXY",
              "EXTERNAL_PROXY",
              "MULTI_HOP_PROXY",
              "DYNAMIC_RESOLUTION",
              "UNSECURED_CREDENTIALS",
              "VALID_ACCOUNTS",
              "LOCAL_ACCOUNTS",
              "CLOUD_ACCOUNTS",
              "NETWORK_DENIAL_OF_SERVICE",
              "PERMISSION_GROUPS_DISCOVERY",
              "CLOUD_GROUPS",
              "EXFILTRATION_OVER_WEB_SERVICE",
              "EXFILTRATION_TO_CLOUD_STORAGE",
              "ACCOUNT_MANIPULATION",
              "SSH_AUTHORIZED_KEYS",
              "CREATE_OR_MODIFY_SYSTEM_PROCESS",
              "STEAL_WEB_SESSION_COOKIE",
              "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE",
              "EXPLOIT_PUBLIC_FACING_APPLICATION",
              "MODIFY_AUTHENTICATION_PROCESS",
              "DATA_DESTRUCTION",
              "DOMAIN_POLICY_MODIFICATION",
              "IMPAIR_DEFENSES"
            ]
          },
          "type": "array",
          "description": "The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`)."
        },
        "additionalTactics": {
          "items": {
            "enumDescriptions": [
              "Unspecified value.",
              "TA0043",
              "TA0042",
              "TA0001",
              "TA0002",
              "TA0003",
              "TA0004",
              "TA0005",
              "TA0006",
              "TA0007",
              "TA0008",
              "TA0009",
              "TA0011",
              "TA0010",
              "TA0040"
            ],
            "type": "string",
            "enum": [
              "TACTIC_UNSPECIFIED",
              "RECONNAISSANCE",
              "RESOURCE_DEVELOPMENT",
              "INITIAL_ACCESS",
              "EXECUTION",
              "PERSISTENCE",
              "PRIVILEGE_ESCALATION",
              "DEFENSE_EVASION",
              "CREDENTIAL_ACCESS",
              "DISCOVERY",
              "LATERAL_MOVEMENT",
              "COLLECTION",
              "COMMAND_AND_CONTROL",
              "EXFILTRATION",
              "IMPACT"
            ]
          },
          "description": "Additional MITRE ATT&CK tactics related to this finding, if any.",
          "type": "array"
        }
      },
      "id": "MitreAttack",
      "description": "MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org"
    },
    "Exfiltration": {
      "description": "Exfiltration represents a data exfiltration attempt of one or more sources to one or more targets. Sources represent the source of data that is exfiltrated, and Targets represents the destination the data was copied to.",
      "id": "Exfiltration",
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "description": "If there are multiple targets, each target would get a complete copy of the \"joined\" source data.",
          "items": {
            "$ref": "ExfilResource"
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "ExfilResource"
          },
          "description": "If there are multiple sources, then the data is considered \"joined\" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source."
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "moduleEnablementState": {
          "type": "string",
          "description": "The state of enablement for the module at its level of the resource hierarchy.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "State is inherited from the parent resource.",
            "State is enabled.",
            "State is disabled."
          ],
          "enum": [
            "ENABLEMENT_STATE_UNSPECIFIED",
            "INHERITED",
            "ENABLED",
            "DISABLED"
          ]
        },
        "value": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "The configuration value for the module. The absence of this field implies its inheritance from the parent."
        }
      },
      "id": "Config",
      "description": "Configuration of a module."
    },
    "GoogleCloudSecuritycenterV1p1beta1Resource": {
      "properties": {
        "parentDisplayName": {
          "type": "string",
          "description": "The human readable name of resource's parent."
        },
        "project": {
          "description": "The full resource name of project that the resource belongs to.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "The full resource name of resource's parent."
        },
        "projectDisplayName": {
          "type": "string",
          "description": "The project id that the resource belongs to."
        },
        "folders": {
          "description": "Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudSecuritycenterV1p1beta1Folder"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name"
        }
      },
      "id": "GoogleCloudSecuritycenterV1p1beta1Resource",
      "description": "Information related to the Google Cloud resource.",
      "type": "object"
    },
    "GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse": {
      "description": "Response of asset discovery run",
      "properties": {
        "duration": {
          "description": "The duration between asset discovery run start and end",
          "type": "string",
          "format": "google-duration"
        },
        "state": {
          "enumDescriptions": [
            "Asset discovery run state was unspecified.",
            "Asset discovery run completed successfully.",
            "Asset discovery run was cancelled with tasks still pending, as another run for the same organization was started with a higher priority.",
            "Asset discovery run was killed and terminated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "COMPLETED",
            "SUPERSEDED",
            "TERMINATED"
          ],
          "type": "string",
          "description": "The state of an asset discovery run."
        }
      },
      "id": "GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse",
      "type": "object"
    }
  },
  "description": "Security Command Center API provides access to temporal views of assets and findings within an organization.",
  "ownerName": "Google",
  "version": "v1beta2",
  "revision": "20220707",
  "canonicalName": "Security Command Center"
}

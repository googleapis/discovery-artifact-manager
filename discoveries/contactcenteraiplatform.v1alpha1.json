{
  "mtlsRootUrl": "https://contactcenteraiplatform.mtls.googleapis.com/",
  "version_module": true,
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://contactcenteraiplatform.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://cloud.google.com/solutions/contact-center-ai-platform",
  "revision": "20230103",
  "servicePath": "",
  "version": "v1alpha1",
  "schemas": {
    "ContactCenterQuota": {
      "description": "Represents a quota for contact centers.",
      "type": "object",
      "id": "ContactCenterQuota",
      "properties": {
        "contactCenterCountLimit": {
          "format": "int32",
          "description": "Reflects the count limit of contact centers on a billing account.",
          "type": "integer"
        },
        "contactCenterCountSum": {
          "format": "int32",
          "description": "Reflects the count sum of contact centers on a billing account.",
          "type": "integer"
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "InstanceConfig": {
      "type": "object",
      "description": "Message storing the instance configuration.",
      "properties": {
        "instanceSize": {
          "description": "The instance size of this the instance configuration.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Instance Size STANDARD_SMALL.",
            "Instance Size STANDARD_MEDIUM.",
            "Instance Size STANDARD_LARGE."
          ],
          "type": "string",
          "enum": [
            "INSTANCE_SIZE_UNSPECIFIED",
            "STANDARD_SMALL",
            "STANDARD_MEDIUM",
            "STANDARD_LARGE"
          ]
        }
      },
      "id": "InstanceConfig"
    },
    "OperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "contactCenter": {
          "$ref": "ContactCenter",
          "description": "Contact center information for this request"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "OperationMetadata"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "URIs": {
      "description": "Message storing the URIs of the ContactCenter.",
      "properties": {
        "rootUri": {
          "type": "string",
          "description": "Root Uri of the ContactCenter."
        },
        "chatBotUri": {
          "description": "Chat Bot Uri of the ContactCenter",
          "type": "string"
        },
        "virtualAgentStreamingServiceUri": {
          "description": "Virtual Agent Streaming Service Uri of the ContactCenter.",
          "type": "string"
        },
        "mediaUri": {
          "description": "Media Uri of the ContactCenter.",
          "type": "string"
        }
      },
      "id": "URIs",
      "type": "object"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      }
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "SAMLParams": {
      "properties": {
        "entityId": {
          "description": "Entity id URL",
          "type": "string"
        },
        "certificate": {
          "description": "SAML certificate",
          "type": "string"
        },
        "ssoUri": {
          "description": "Single sign-on URL",
          "type": "string"
        },
        "userEmail": {
          "type": "string",
          "description": "Email address of the first admin users."
        }
      },
      "description": "Message storing SAML params to enable Google as IDP.",
      "type": "object",
      "id": "SAMLParams"
    },
    "ContactCenter": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. [Output only] Update time stamp"
        },
        "instanceConfig": {
          "description": "The configuration of this instance, it is currently immutable once created.",
          "$ref": "InstanceConfig"
        },
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. [Output only] Create time stamp"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "samlParams": {
          "$ref": "SAMLParams",
          "description": "Optional. Params that sets up Google as IdP."
        },
        "userEmail": {
          "description": "Optional. Email address of the first admin users.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Output only. The state of this contact center.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "State DEPLOYING",
            "State DEPLOYED",
            "State TERMINATING",
            "State FAILED",
            "State TERMINATING_FAILED",
            "State TERMINATED"
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STATE_DEPLOYING",
            "STATE_DEPLOYED",
            "STATE_TERMINATING",
            "STATE_FAILED",
            "STATE_TERMINATING_FAILED",
            "STATE_TERMINATED"
          ],
          "readOnly": true
        },
        "uris": {
          "readOnly": true,
          "description": "Output only. URIs to access the deployed ContactCenters.",
          "$ref": "URIs"
        },
        "displayName": {
          "description": "Required. A user friendly name for the ContactCenter.",
          "type": "string"
        },
        "ccaipManagedUsers": {
          "type": "boolean",
          "description": "Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity"
        },
        "customerDomainPrefix": {
          "type": "string",
          "description": "Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt)."
        }
      },
      "description": "Message describing ContactCenter object",
      "type": "object",
      "id": "ContactCenter"
    },
    "ListContactCentersResponse": {
      "properties": {
        "contactCenters": {
          "description": "The list of ContactCenter",
          "type": "array",
          "items": {
            "$ref": "ContactCenter"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "id": "ListContactCentersResponse",
      "description": "Message for response to listing ContactCenters",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListOperationsResponse"
    }
  },
  "ownerDomain": "google.com",
  "rootUrl": "https://contactcenteraiplatform.googleapis.com/",
  "basePath": "",
  "title": "Contact Center AI Platform API",
  "ownerName": "Google",
  "id": "contactcenteraiplatform:v1alpha1",
  "canonicalName": "CCAI Platform",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "resources": {
    "projects": {
      "methods": {
        "queryContactCenterQuota": {
          "path": "v1alpha1/{+parent}:queryContactCenterQuota",
          "description": "Queries the contact center quota, an aggregation over all the projects, that belongs to the billing account, which the input project belongs to.",
          "response": {
            "$ref": "ContactCenterQuota"
          },
          "id": "contactcenteraiplatform.projects.queryContactCenterQuota",
          "flatPath": "v1alpha1/projects/{projectsId}:queryContactCenterQuota",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "parent": {
              "required": true,
              "pattern": "^projects/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. Parent project resource id."
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "parent"
          ]
        }
      },
      "resources": {
        "locations": {
          "resources": {
            "contactCenters": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListContactCentersRequest"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/contactCenters",
                  "id": "contactcenteraiplatform.projects.locations.contactCenters.list",
                  "description": "Lists ContactCenters in a given project and location.",
                  "response": {
                    "$ref": "ListContactCentersResponse"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}",
                  "path": "v1alpha1/{+name}",
                  "id": "contactcenteraiplatform.projects.locations.contactCenters.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a single ContactCenter.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/contactCenters/[^/]+$",
                      "description": "Required. Name of the resource"
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ContactCenter"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters",
                  "id": "contactcenteraiplatform.projects.locations.contactCenters.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/contactCenters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Value for parent.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "contactCenterId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Creates a new ContactCenter in a given project and location."
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}",
                  "httpMethod": "GET",
                  "id": "contactcenteraiplatform.projects.locations.contactCenters.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/contactCenters/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "ContactCenter"
                  },
                  "description": "Gets details of a single ContactCenter."
                },
                "patch": {
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "ContactCenter"
                  },
                  "id": "contactcenteraiplatform.projects.locations.contactCenters.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "name of resource",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/contactCenters/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the ContactCenter resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contactCenters/{contactCentersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single ContactCenter.",
                  "httpMethod": "PATCH"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "contactcenteraiplatform.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}:cancel"
                },
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "contactcenteraiplatform.projects.locations.operations.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "id": "contactcenteraiplatform.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1alpha1/{+name}",
                  "id": "contactcenteraiplatform.projects.locations.operations.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "id": "contactcenteraiplatform.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location."
            },
            "list": {
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "contactcenteraiplatform.projects.locations.list",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "path": "v1alpha1/{+name}/locations",
              "parameterOrder": [
                "name"
              ]
            },
            "queryContactCenterQuota": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent",
                "locationsId"
              ],
              "description": "Queries the contact center quota, an aggregation over all the projects, that belongs to the billing account, which the input project belongs to.",
              "id": "contactcenteraiplatform.projects.locations.queryContactCenterQuota",
              "httpMethod": "GET",
              "response": {
                "$ref": "ContactCenterQuota"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:queryContactCenterQuota",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. Parent project resource id.",
                  "type": "string"
                },
                "locationsId": {
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1alpha1/{+parent}/locations/{locationsId}:queryContactCenterQuota"
            }
          }
        }
      }
    }
  },
  "name": "contactcenteraiplatform",
  "description": ""
}

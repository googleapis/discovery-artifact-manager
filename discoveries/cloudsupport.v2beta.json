{
  "version_module": true,
  "revision": "20240303",
  "version": "v2beta",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "description": "Manages Google Cloud technical support cases for Customer Care support offerings. ",
  "baseUrl": "https://cloudsupport.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "ownerName": "Google",
  "mtlsRootUrl": "https://cloudsupport.mtls.googleapis.com/",
  "batchPath": "batch",
  "resources": {
    "caseClassifications": {
      "methods": {
        "search": {
          "id": "cloudsupport.caseClassifications.search",
          "parameters": {
            "product.productSubline": {
              "location": "query",
              "type": "string",
              "description": "The Product Subline of the Product, such as \"Maps Billing\"."
            },
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of classifications fetched with each request.",
              "location": "query",
              "type": "integer"
            },
            "query": {
              "description": "An expression used to filter case classifications. If it's an empty string, then no filtering happens. Otherwise, case classifications will be returned that match the filter.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved.",
              "location": "query",
              "type": "string"
            },
            "product.productLine": {
              "enum": [
                "PRODUCT_LINE_UNSPECIFIED",
                "GOOGLE_CLOUD",
                "GOOGLE_MAPS"
              ],
              "type": "string",
              "description": "The Product Line of the Product.",
              "location": "query",
              "enumDescriptions": [
                "Unknown product type.",
                "Google Cloud",
                "Google Maps"
              ]
            }
          },
          "flatPath": "v2beta/caseClassifications:search",
          "response": {
            "$ref": "SearchCaseClassificationsResponse"
          },
          "description": "Retrieve valid classifications to use when creating a support case. Classifications are hierarchical. Each classification is a string containing all levels of the hierarchy separated by `\" \u003e \"`. For example, `\"Technical Issue \u003e Compute \u003e Compute Engine\"`. Classification IDs returned by this endpoint are valid for at least six months. When a classification is deactivated, this endpoint immediately stops returning it. After six months, `case.create` requests using the classification will fail. EXAMPLES: cURL: ```shell curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ 'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:\"*Compute%20Engine*\"' ``` Python: ```python import googleapiclient.discovery supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=\"v2\", discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version=v2\", ) request = supportApiService.caseClassifications().search( query='display_name:\"*Compute Engine*\"' ) print(request.execute()) ```",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [],
          "path": "v2beta/caseClassifications:search",
          "httpMethod": "GET"
        }
      }
    },
    "media": {
      "methods": {
        "download": {
          "description": "Download a file attached to a case. Note: HTTP requests must append \"?alt=media\" to the URL. EXAMPLES: cURL: ```shell name=\"projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$name:download?alt=media\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.media().download( name=\"projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR\" ) request.uri = request.uri.split(\"?\")[0] + \"?alt=media\" print(request.execute()) ```",
          "id": "cloudsupport.media.download",
          "httpMethod": "GET",
          "supportsMediaDownload": true,
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^[^/]+/[^/]+/cases/[^/]+/attachments/[^/]+$",
              "required": true,
              "description": "The name of the file attachment to download.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}/attachments/{attachmentsId}:download",
          "response": {
            "$ref": "Media"
          },
          "useMediaDownloadService": true,
          "path": "v2beta/{+name}:download",
          "parameterOrder": [
            "name"
          ]
        },
        "upload": {
          "parameterOrder": [
            "parent"
          ],
          "path": "v2beta/{+parent}/attachments",
          "request": {
            "$ref": "CreateAttachmentRequest"
          },
          "description": "Create a file attachment on a case or Cloud resource. The attachment must have the following fields set: `filename`. EXAMPLES: cURL: ```shell echo \"This text is in a file I'm uploading using CSAPI.\" \\ \u003e \"./example_file.txt\" case=\"projects/some-project/cases/43594844\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --data-binary @\"./example_file.txt\" \\ \"https://cloudsupport.googleapis.com/upload/v2beta/$case/attachments?attachment.filename=uploaded_via_curl.txt\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) file_path = \"./example_file.txt\" with open(file_path, \"w\") as file: file.write( \"This text is inside a file I'm going to upload using the Cloud Support API.\", ) request = supportApiService.media().upload( parent=\"projects/some-project/cases/43595344\", media_body=file_path ) request.uri = request.uri.split(\"?\")[0] + \"?attachment.filename=uploaded_via_python.txt\" print(request.execute()) ```",
          "supportsMediaUpload": true,
          "parameters": {
            "parent": {
              "location": "path",
              "description": "Required. The name of the case or Cloud resource to which the attachment should be attached.",
              "required": true,
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Attachment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}/attachments",
          "httpMethod": "POST",
          "mediaUpload": {
            "protocols": {
              "simple": {
                "path": "/upload/v2beta/{+parent}/attachments",
                "multipart": true
              }
            },
            "accept": [
              "*/*"
            ]
          },
          "id": "cloudsupport.media.upload"
        }
      }
    },
    "cases": {
      "resources": {
        "attachments": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2beta/{+parent}/attachments",
              "description": "List all the attachments associated with a support case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/23598314\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case/attachments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .attachments() .list(parent=\"projects/some-project/cases/43595344\") ) print(request.execute()) ```",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of attachments fetched with each request. If not provided, the default is 10. The maximum page size that will be returned is 100.",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved."
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the case for which attachments should be listed.",
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "ListAttachmentsResponse"
              },
              "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}/attachments",
              "id": "cloudsupport.cases.attachments.list"
            }
          }
        },
        "comments": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "id": "cloudsupport.cases.comments.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListCommentsResponse"
              },
              "path": "v2beta/{+parent}/comments",
              "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}/comments",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying the page of results to return. If unspecified, the first page is returned.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of comments to fetch. Defaults to 10."
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the case for which to list comments.",
                  "required": true,
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$"
                }
              },
              "description": "List all the comments associated with a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case/comments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .comments() .list(parent=\"projects/some-project/cases/43595344\") ) print(request.execute()) ```"
            },
            "create": {
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
                  "description": "Required. The name of the case to which the comment should be added."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v2beta/{+parent}/comments",
              "httpMethod": "POST",
              "response": {
                "$ref": "Comment"
              },
              "id": "cloudsupport.cases.comments.create",
              "request": {
                "$ref": "Comment"
              },
              "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}/comments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Add a new comment to a case. The comment must have the following fields set: `body`. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43591344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header 'Content-Type: application/json' \\ --data '{ \"body\": \"This is a test comment.\" }' \\ \"https://cloudsupport.googleapis.com/v2/$case/comments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .comments() .create( parent=\"projects/some-project/cases/43595344\", body={\"body\": \"This is a test comment.\"}, ) ) print(request.execute()) ```"
            }
          }
        }
      },
      "methods": {
        "search": {
          "response": {
            "$ref": "SearchCasesResponse"
          },
          "flatPath": "v2beta/cases:search",
          "path": "v2beta/cases:search",
          "description": "Search for cases using a query. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases:search\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().search( parent=\"projects/some-project\", query=\"state=OPEN\" ) print(request.execute()) ```",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved."
            },
            "query": {
              "location": "query",
              "description": "An expression used to filter cases. Expressions use the following fields separated by `AND` and specified with `=`: - `organization`: An organization name in the form `organizations/`. - `project`: A project name in the form `projects/`. - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. You must specify either `organization` or `project`. To search across `displayName`, `description`, and comments, use a global restriction with no keyword or operator. For example, `\"my search\"`. To search only cases updated after a certain date, use `update_time` restricted with that particular date, time, and timezone in ISO datetime format. For example, `update_time\u003e\"2020-01-01T00:00:00-05:00\"`. `update_time` only supports the greater than operator (`\u003e`). Examples: - `organization=\"organizations/123456789\"` - `project=\"projects/my-project-id\"` - `project=\"projects/123456789\"` - `organization=\"organizations/123456789\" AND state=CLOSED` - `project=\"projects/my-project-id\" AND creator.email=\"tester@example.com\"` - `project=\"projects/my-project-id\" AND (priority=P0 OR priority=P1)`",
              "type": "string"
            },
            "pageSize": {
              "description": "The maximum number of cases fetched with each request. The default page size is 10.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "parent": {
              "type": "string",
              "description": "The name of the parent resource to search for cases under.",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "cloudsupport.cases.search"
        },
        "list": {
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases",
          "parameters": {
            "filter": {
              "location": "query",
              "description": "An expression used to filter cases. If it's an empty string, then no filtering happens. Otherwise, the endpoint returns the cases that match the filter. Expressions use the following fields separated by `AND` and specified with `=`: - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. EXAMPLES: - `state=CLOSED` - `state=OPEN AND creator.email=\"tester@example.com\"` - `state=OPEN AND (priority=P0 OR priority=P1)`",
              "type": "string"
            },
            "productLine": {
              "type": "string",
              "description": "The product line for which to request cases for. If unspecified, only Google Cloud cases will be returned.",
              "enumDescriptions": [
                "Unknown product type.",
                "Google Cloud",
                "Google Maps"
              ],
              "enum": [
                "PRODUCT_LINE_UNSPECIFIED",
                "GOOGLE_CLOUD",
                "GOOGLE_MAPS"
              ],
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved."
            },
            "parent": {
              "pattern": "^[^/]+/[^/]+$",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Required. The name of a parent to list cases under."
            },
            "pageSize": {
              "location": "query",
              "description": "The maximum number of cases fetched with each request. Defaults to 10.",
              "format": "int32",
              "type": "integer"
            }
          },
          "response": {
            "$ref": "ListCasesResponse"
          },
          "path": "v2beta/{+parent}/cases",
          "description": "Retrieve all cases under a parent, but not its children. For example, listing cases under an organization only returns the cases that are directly parented by that organization. To retrieve cases under an organization and its projects, use `cases.search`. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().list(parent=\"projects/some-project\") print(request.execute()) ```",
          "id": "cloudsupport.cases.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "parent"
          ]
        },
        "escalate": {
          "request": {
            "$ref": "EscalateCaseRequest"
          },
          "response": {
            "$ref": "Case"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v2beta/{+name}:escalate",
          "description": "Escalate a case, starting the Google Cloud Support escalation management process. This operation is only available for some support services. Go to https://cloud.google.com/support and look for 'Technical support escalations' in the feature list to find out which ones let you do that. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header \"Content-Type: application/json\" \\ --data '{ \"escalation\": { \"reason\": \"BUSINESS_IMPACT\", \"justification\": \"This is a test escalation.\" } }' \\ \"https://cloudsupport.googleapis.com/v2/$case:escalate\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().escalate( name=\"projects/some-project/cases/43595344\", body={ \"escalation\": { \"reason\": \"BUSINESS_IMPACT\", \"justification\": \"This is a test escalation.\", }, }, ) print(request.execute()) ```",
          "id": "cloudsupport.cases.escalate",
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. The name of the case to be escalated.",
              "location": "path",
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "required": true
            }
          },
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}:escalate",
          "parameterOrder": [
            "name"
          ]
        },
        "patch": {
          "path": "v2beta/{+name}",
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "A list of attributes of the case that should be updated. Supported values are `priority`, `display_name`, and `subscriber_email_addresses`. If no fields are specified, all supported fields are updated. Be careful - if you do not provide a field mask, then you might accidentally clear some fields. For example, if you leave the field mask empty and do not provide a value for `subscriber_email_addresses`, then `subscriber_email_addresses` is updated to empty."
            },
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "description": "The resource name for the case."
            }
          },
          "id": "cloudsupport.cases.patch",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "Case"
          },
          "description": "Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request PATCH \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header \"Content-Type: application/json\" \\ --data '{ \"priority\": \"P1\" }' \\ \"https://cloudsupport.googleapis.com/v2/$case?updateMask=priority\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().patch( name=\"projects/some-project/cases/43112854\", body={ \"displayName\": \"This is Now a New Title\", \"priority\": \"P2\", }, ) print(request.execute()) ```",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}",
          "request": {
            "$ref": "Case"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "close": {
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "description": "Required. The name of the case to close.",
              "required": true,
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$"
            }
          },
          "id": "cloudsupport.cases.close",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Close a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case:close\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().close( name=\"projects/some-project/cases/43595344\" ) print(request.execute()) ```",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Case"
          },
          "httpMethod": "POST",
          "path": "v2beta/{+name}:close",
          "request": {
            "$ref": "CloseCaseRequest"
          },
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}:close"
        },
        "get": {
          "parameters": {
            "name": {
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Required. The full name of a case to be retrieved."
            }
          },
          "id": "cloudsupport.cases.get",
          "response": {
            "$ref": "Case"
          },
          "path": "v2beta/{+name}",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "description": "Retrieve a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/16033687\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().get( name=\"projects/some-project/cases/43595344\", ) print(request.execute()) ```",
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases/{casesId}"
        },
        "create": {
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The name of the parent under which the case should be created.",
              "pattern": "^[^/]+/[^/]+$"
            }
          },
          "flatPath": "v2beta/{v2betaId}/{v2betaId1}/cases",
          "path": "v2beta/{+parent}/cases",
          "request": {
            "$ref": "Case"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "cloudsupport.cases.create",
          "response": {
            "$ref": "Case"
          },
          "description": "Create a new case and associate it with a parent. It must have the following fields set: `display_name`, `description`, `classification`, and `priority`. If you're just testing the API and don't want to route your case to an agent, set `testCase=true`. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header 'Content-Type: application/json' \\ --data '{ \"display_name\": \"Test case created by me.\", \"description\": \"a random test case, feel free to close\", \"classification\": { \"id\": \"100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8\" }, \"time_zone\": \"-07:00\", \"subscriber_email_addresses\": [ \"foo@domain.com\", \"bar@domain.com\" ], \"testCase\": true, \"priority\": \"P3\" }' \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().create( parent=\"projects/some-project\", body={ \"displayName\": \"A Test Case\", \"description\": \"This is a test case.\", \"testCase\": True, \"priority\": \"P2\", \"classification\": { \"id\": \"100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8\" }, }, ) print(request.execute()) ```"
        }
      }
    }
  },
  "servicePath": "",
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    }
  },
  "discoveryVersion": "v1",
  "schemas": {
    "DiffDownloadResponse": {
      "id": "DiffDownloadResponse",
      "type": "object",
      "properties": {
        "objectLocation": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "CompositeMedia": {
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "md5Hash": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "objectId": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "ObjectId"
        },
        "blobRef": {
          "deprecated": true,
          "format": "byte",
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "cosmoBinaryReference": {
          "format": "byte",
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "crc32cHash": {
          "type": "integer",
          "format": "uint32",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobstore2Info": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "Blobstore2Info"
        },
        "inline": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "sha1Hash": {
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "length": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "int64"
        },
        "referenceType": {
          "enumDescriptions": [
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation"
          ],
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "BIGSTORE_REF",
            "COSMO_BINARY_REFERENCE"
          ],
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "path": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CompositeMedia"
    },
    "Actor": {
      "description": "An Actor represents an entity that performed an action. For example, an actor could be a user who posted a comment on a support case, a user who uploaded an attachment, or a service account that created a support case.",
      "id": "Actor",
      "properties": {
        "googleSupport": {
          "description": "Output only. Whether the actor is a Google support actor.",
          "readOnly": true,
          "type": "boolean"
        },
        "username": {
          "type": "string",
          "description": "Output only. The username of the actor. It may look like an email or other format provided by the identity provider. If not provided, it is inferred from the credentials supplied. When a name is provided, a username must also be provided. If the user is a Google Support agent, this will not be set.",
          "readOnly": true
        },
        "displayName": {
          "description": "The name to display for the actor. If not provided, it is inferred from credentials supplied during case creation. When an email is provided, a display name must also be provided. This will be obfuscated if the user is a Google Support agent.",
          "type": "string"
        },
        "email": {
          "deprecated": true,
          "description": "The email address of the actor. If not provided, it is inferred from the credentials supplied during case creation. When a name is provided, an email must also be provided. If the user is a Google Support agent, this is obfuscated. This field is deprecated. Use **username** field instead.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DownloadParameters": {
      "id": "DownloadParameters",
      "properties": {
        "allowGzipCompression": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "boolean"
        },
        "ignoreRange": {
          "type": "boolean",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation",
      "type": "object"
    },
    "ListCommentsResponse": {
      "description": "The response message for the ListComments endpoint.",
      "type": "object",
      "id": "ListCommentsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.comments.list` requests. If unspecified, there are no more results to retrieve.",
          "type": "string"
        },
        "comments": {
          "items": {
            "$ref": "Comment"
          },
          "type": "array",
          "description": "List of the comments associated with the case."
        }
      }
    },
    "Comment": {
      "type": "object",
      "description": "Case comments are the main way Google Support communicates with a user who has opened a case. When a user responds to Google Support, the user's responses also appear as comments.",
      "properties": {
        "creator": {
          "$ref": "Actor",
          "readOnly": true,
          "description": "Output only. The user or Google Support agent created this comment."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name for the comment."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when this comment was created."
        },
        "plainTextBody": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. DEPRECATED. An automatically generated plain text version of body with all rich text syntax stripped."
        },
        "body": {
          "type": "string",
          "description": "The full comment body. Maximum of 12800 characters. This can contain rich text syntax."
        }
      },
      "id": "Comment"
    },
    "DiffChecksumsResponse": {
      "id": "DiffChecksumsResponse",
      "properties": {
        "objectVersion": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "checksumsLocation": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "CompositeMedia"
        },
        "chunkSizeBytes": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "int64"
        },
        "objectSizeBytes": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "int64",
          "type": "string"
        },
        "objectLocation": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation",
      "type": "object"
    },
    "DiffUploadResponse": {
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation",
      "id": "DiffUploadResponse",
      "properties": {
        "originalObject": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "CompositeMedia"
        },
        "objectVersion": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        }
      }
    },
    "CloseCaseRequest": {
      "description": "The request message for the CloseCase endpoint.",
      "properties": {},
      "id": "CloseCaseRequest",
      "type": "object"
    },
    "Product": {
      "id": "Product",
      "type": "object",
      "properties": {
        "productSubline": {
          "description": "The Product Subline of the Product, such as \"Maps Billing\".",
          "type": "string"
        },
        "productLine": {
          "type": "string",
          "description": "The Product Line of the Product.",
          "enumDescriptions": [
            "Unknown product type.",
            "Google Cloud",
            "Google Maps"
          ],
          "enum": [
            "PRODUCT_LINE_UNSPECIFIED",
            "GOOGLE_CLOUD",
            "GOOGLE_MAPS"
          ]
        }
      },
      "description": "The full product a case may be associated with, including Product Line and Product Subline."
    },
    "SearchCasesResponse": {
      "description": "The response message for the SearchCases endpoint.",
      "id": "SearchCasesResponse",
      "type": "object",
      "properties": {
        "cases": {
          "type": "array",
          "items": {
            "$ref": "Case"
          },
          "description": "The list of cases associated with the parent after any filters have been applied."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.search` requests. If unspecified, there are no more results to retrieve.",
          "type": "string"
        }
      }
    },
    "Media": {
      "type": "object",
      "id": "Media",
      "properties": {
        "downloadParameters": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "DownloadParameters"
        },
        "path": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "diffChecksumsResponse": {
          "$ref": "DiffChecksumsResponse",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "hashVerified": {
          "type": "boolean",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "length": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "int64"
        },
        "compositeMedia": {
          "type": "array",
          "items": {
            "$ref": "CompositeMedia"
          },
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectId": {
          "$ref": "ObjectId",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "cosmoBinaryReference": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "diffDownloadResponse": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "DiffDownloadResponse"
        },
        "algorithm": {
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true,
          "type": "string"
        },
        "diffUploadResponse": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "DiffUploadResponse"
        },
        "token": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "diffUploadRequest": {
          "$ref": "DiffUploadRequest",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "crc32cHash": {
          "format": "uint32",
          "type": "integer",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "hash": {
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true,
          "type": "string"
        },
        "sha1Hash": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "byte"
        },
        "contentTypeInfo": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "ContentTypeInfo"
        },
        "contentType": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "isPotentialRetry": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "boolean"
        },
        "md5Hash": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "filename": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobstore2Info": {
          "$ref": "Blobstore2Info",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "mediaId": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "blobRef": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte",
          "deprecated": true,
          "type": "string"
        },
        "inline": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte",
          "type": "string"
        },
        "sha256Hash": {
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "diffVersionResponse": {
          "$ref": "DiffVersionResponse",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "timestamp": {
          "type": "string",
          "format": "uint64",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "bigstoreObjectRef": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true
        },
        "referenceType": {
          "enumDescriptions": [
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation"
          ],
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "GET_MEDIA",
            "COMPOSITE_MEDIA",
            "BIGSTORE_REF",
            "DIFF_VERSION_RESPONSE",
            "DIFF_CHECKSUMS_RESPONSE",
            "DIFF_DOWNLOAD_RESPONSE",
            "DIFF_UPLOAD_REQUEST",
            "DIFF_UPLOAD_RESPONSE",
            "COSMO_BINARY_REFERENCE",
            "ARBITRARY_BYTES"
          ]
        }
      },
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "Blobstore2Info": {
      "type": "object",
      "properties": {
        "downloadReadHandle": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobGeneration": {
          "format": "int64",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "readToken": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "blobId": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "uploadMetadataContainer": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "Blobstore2Info",
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "ListAttachmentsResponse": {
      "description": "The response message for the ListAttachments endpoint.",
      "id": "ListAttachmentsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.attachments.list` requests. If unspecified, there are no more results to retrieve.",
          "type": "string"
        },
        "attachments": {
          "items": {
            "$ref": "Attachment"
          },
          "description": "The list of attachments associated with a case.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateAttachmentRequest": {
      "type": "object",
      "description": "The request message for the CreateAttachment endpoint.",
      "id": "CreateAttachmentRequest",
      "properties": {
        "attachment": {
          "description": "Required. The attachment to be created.",
          "$ref": "Attachment"
        }
      }
    },
    "ListCasesResponse": {
      "id": "ListCasesResponse",
      "description": "The response message for the ListCases endpoint.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.list` requests. If unspecified, there are no more results to retrieve."
        },
        "cases": {
          "description": "The list of cases associated with the parent after any filters have been applied.",
          "items": {
            "$ref": "Case"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "The filename of the attachment (e.g. `\"graph.jpg\"`)."
        },
        "mimeType": {
          "type": "string",
          "description": "Output only. The MIME type of the attachment (e.g. text/plain).",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time at which the attachment was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "sizeBytes": {
          "description": "Output only. The size of the attachment in bytes.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        },
        "creator": {
          "description": "Output only. The user who uploaded the attachment. Note, the name and email will be obfuscated if the attachment was uploaded by Google support.",
          "readOnly": true,
          "$ref": "Actor"
        },
        "name": {
          "description": "Output only. The resource name of the attachment.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An Attachment contains metadata about a file that was uploaded to a case - it is NOT a file itself. That being said, the name of an Attachment object can be used to download its accompanying file through the `media.download` endpoint. While attachments can be uploaded in the console at the same time as a comment, they're associated on a \"case\" level, not a \"comment\" level.",
      "id": "Attachment"
    },
    "WorkflowOperationMetadata": {
      "properties": {
        "workflowOperationType": {
          "type": "string",
          "enum": [
            "UNKNOWN_OPERATION_TYPE",
            "WORKFLOWS_V1",
            "WORKFLOWS_V2"
          ],
          "enumDescriptions": [
            "Unknown version.",
            "Version 1.",
            "Version 2."
          ],
          "description": "Which version of the workflow service this operation came from."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace that the job was scheduled in. Must be included in the workflow metadata so the workflow status can be retrieved."
        },
        "operationAction": {
          "enumDescriptions": [
            "Operation action is not specified.",
            "Operation pertains to the creation of a new support account.",
            "Operation pertains to the updating of an existing support account.",
            "Operation pertains to the purchasing of a support plan that may either create or update a support account."
          ],
          "description": "The type of action the operation is classified as.",
          "enum": [
            "OPERATION_ACTION_UNSPECIFIED",
            "CREATE_SUPPORT_ACCOUNT",
            "UPDATE_SUPPORT_ACCOUNT",
            "PURCHASE_SUPPORT_ACCOUNT"
          ],
          "type": "string"
        }
      },
      "description": "Metadata about the operation. Used to lookup the current status.",
      "type": "object",
      "id": "WorkflowOperationMetadata"
    },
    "CaseClassification": {
      "description": "A Case Classification represents the topic that a case is about. It's very important to use accurate classifications, because they're used to route your cases to specialists who can help you. A classification always has an ID that is its unique identifier. A valid ID is required when creating a case.",
      "type": "object",
      "id": "CaseClassification",
      "properties": {
        "product": {
          "$ref": "Product",
          "description": "The full product the classification corresponds to."
        },
        "displayName": {
          "type": "string",
          "description": "A display name for the classification. The display name is not static and can change. To uniquely and consistently identify classifications, use the `CaseClassification.id` field."
        },
        "id": {
          "type": "string",
          "description": "The unique ID for a classification. Must be specified for case creation. To retrieve valid classification IDs for case creation, use `caseClassifications.search`. Classification IDs returned by `caseClassifications.search` are guaranteed to be valid for at least 6 months. If a given classification is deactiveated, it will immediately stop being returned. After 6 months, `case.create` requests using the classification ID will fail."
        }
      }
    },
    "SearchCaseClassificationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `caseClassifications.list` requests. If unspecified, there are no more results to retrieve."
        },
        "caseClassifications": {
          "type": "array",
          "items": {
            "$ref": "CaseClassification"
          },
          "description": "The classifications retrieved."
        }
      },
      "id": "SearchCaseClassificationsResponse",
      "description": "The response message for SearchCaseClassifications endpoint.",
      "type": "object"
    },
    "Case": {
      "description": "A Case is an object that contains the details of a support case. It contains fields for the time it was created, its priority, its classification, and more. Cases can also have comments and attachments that get added over time. A case is parented by a Google Cloud organization or project. Organizations are identified by a number, so the name of a case parented by an organization would look like this: ``` organizations/123/cases/456 ``` Projects have two unique identifiers, an ID and a number, and they look like this: ``` projects/abc/cases/456 ``` ``` projects/123/cases/456 ``` You can use either of them when calling the API. To learn more about project identifiers, see [AIP-2510](https://google.aip.dev/cloud/2510).",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name for the case."
        },
        "subscriberEmailAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The email addresses to receive updates on this case."
        },
        "classification": {
          "description": "The issue classification applicable to this case.",
          "$ref": "CaseClassification"
        },
        "contactEmail": {
          "description": "A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The short summary of the issue reported in this case."
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current status of the support case.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "IN_PROGRESS_GOOGLE_SUPPORT",
            "ACTION_REQUIRED",
            "SOLUTION_PROVIDED",
            "CLOSED"
          ],
          "enumDescriptions": [
            "Case is in an unknown state.",
            "The case has been created but no one is assigned to work on it yet.",
            "The case is currently being handled by Google support.",
            "Google is waiting for a response.",
            "A solution has been offered for the case, but it isn't yet closed.",
            "The case has been resolved."
          ],
          "type": "string"
        },
        "timeZone": {
          "description": "The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A broad description of the issue."
        },
        "createTime": {
          "description": "Output only. The time this case was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "creator": {
          "description": "The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.",
          "$ref": "Actor"
        },
        "escalated": {
          "type": "boolean",
          "description": "Whether the case is currently escalated."
        },
        "testCase": {
          "description": "Whether this case was created for internal API testing and should not be acted on by the support team.",
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time this case was last updated."
        },
        "priority": {
          "type": "string",
          "description": "The priority of this case.",
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "P0",
            "P1",
            "P2",
            "P3",
            "P4"
          ],
          "enumDescriptions": [
            "Priority is undefined or has not been set yet.",
            "Extreme impact on a production service. Service is hard down.",
            "Critical impact on a production service. Service is currently unusable.",
            "Severe impact on a production service. Service is usable but greatly impaired.",
            "Medium impact on a production service. Service is available, but moderately impaired.",
            "General questions or minor issues. Production service is fully available."
          ]
        },
        "severity": {
          "enumDescriptions": [
            "Severity is undefined or has not been set yet.",
            "Extreme impact on a production service. Service is hard down.",
            "Critical impact on a production service. Service is currently unusable.",
            "Severe impact on a production service. Service is usable but greatly impaired.",
            "Medium impact on a production service. Service is available, but moderately impaired.",
            "General questions or minor issues. Production service is fully available."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "S0",
            "S1",
            "S2",
            "S3",
            "S4"
          ],
          "description": "REMOVED. The severity of this case. Use priority instead.",
          "type": "string"
        },
        "languageCode": {
          "description": "The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `\"en\"`, `\"zh-CN\"`, `\"zh-TW\"`, `\"ja\"`, `\"ko\"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours",
          "type": "string"
        }
      },
      "id": "Case",
      "type": "object"
    },
    "DiffUploadRequest": {
      "id": "DiffUploadRequest",
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "objectInfo": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectVersion": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "checksumsInfo": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "CompositeMedia"
        }
      },
      "type": "object"
    },
    "DiffVersionResponse": {
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "objectSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectVersion": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "id": "DiffVersionResponse"
    },
    "ContentTypeInfo": {
      "id": "ContentTypeInfo",
      "type": "object",
      "properties": {
        "bestGuess": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "fromBytes": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "fromFileName": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "fromUrlPath": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "fromHeader": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "ObjectId": {
      "type": "object",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "bucketName": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "generation": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ObjectId",
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "EscalateCaseRequest": {
      "properties": {
        "escalation": {
          "$ref": "Escalation",
          "description": "The escalation information to be sent with the escalation request."
        }
      },
      "id": "EscalateCaseRequest",
      "type": "object",
      "description": "The request message for the EscalateCase endpoint."
    },
    "Escalation": {
      "properties": {
        "reason": {
          "enumDescriptions": [
            "The escalation reason is in an unknown state or has not been specified.",
            "The case is taking too long to resolve.",
            "The support agent does not have the expertise required to successfully resolve the issue.",
            "The issue is having a significant business impact."
          ],
          "type": "string",
          "enum": [
            "REASON_UNSPECIFIED",
            "RESOLUTION_TIME",
            "TECHNICAL_EXPERTISE",
            "BUSINESS_IMPACT"
          ],
          "description": "Required. The reason why the Case is being escalated."
        },
        "justification": {
          "description": "Required. A free text description to accompany the `reason` field above. Provides additional context on why the case is being escalated.",
          "type": "string"
        }
      },
      "description": "An escalation of a support case.",
      "type": "object",
      "id": "Escalation"
    }
  },
  "title": "Google Cloud Support API",
  "documentationLink": "https://cloud.google.com/support/docs/apis",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://cloudsupport.googleapis.com/",
  "canonicalName": "Cloud Support",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "cloudsupport:v2beta",
  "name": "cloudsupport",
  "basePath": ""
}

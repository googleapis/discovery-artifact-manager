{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/access-context-manager/docs/reference/rest/",
  "resources": {
    "accessPolicies": {
      "methods": {
        "patch": {
          "request": {
            "$ref": "AccessPolicy"
          },
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{access_policy}`",
              "pattern": "^accessPolicies/[^/]+$",
              "location": "path"
            },
            "updateMask": {
              "description": "Required. Mask to control which fields get updated. Must be non-empty.",
              "format": "google-fieldmask",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "id": "accesscontextmanager.accessPolicies.patch",
          "description": "Update an AccessPolicy. The longrunning Operation from this RPC will have a successful status once the changes to the AccessPolicy have propagated to long-lasting storage. Syntactic and basic semantic errors will be returned in `metadata` as a BadRequest proto.",
          "flatPath": "v1/accessPolicies/{accessPoliciesId}"
        },
        "delete": {
          "description": "Delete an AccessPolicy by resource name. The longrunning Operation will have a successful status once the AccessPolicy has been removed from long-lasting storage.",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "accesscontextmanager.accessPolicies.delete",
          "flatPath": "v1/accessPolicies/{accessPoliciesId}",
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. Resource name for the access policy to delete. Format `accessPolicies/{policy_id}`",
              "pattern": "^accessPolicies/[^/]+$"
            }
          },
          "httpMethod": "DELETE",
          "path": "v1/{+name}",
          "response": {
            "$ref": "Operation"
          }
        },
        "create": {
          "httpMethod": "POST",
          "path": "v1/accessPolicies",
          "request": {
            "$ref": "AccessPolicy"
          },
          "description": "Create an `AccessPolicy`. Fails if this organization already has a `AccessPolicy`. The longrunning Operation will have a successful status once the `AccessPolicy` has propagated to long-lasting storage. Syntactic and basic semantic errors will be returned in `metadata` as a BadRequest proto.",
          "parameters": {},
          "parameterOrder": [],
          "id": "accesscontextmanager.accessPolicies.create",
          "flatPath": "v1/accessPolicies",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "description": "Get an AccessPolicy by name.",
          "id": "accesscontextmanager.accessPolicies.get",
          "path": "v1/{+name}",
          "response": {
            "$ref": "AccessPolicy"
          },
          "flatPath": "v1/accessPolicies/{accessPoliciesId}",
          "parameters": {
            "name": {
              "pattern": "^accessPolicies/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. Resource name for the access policy to get. Format `accessPolicies/{policy_id}`",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "list": {
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "List all AccessPolicies under a container.",
          "id": "accesscontextmanager.accessPolicies.list",
          "parameters": {
            "pageSize": {
              "description": "Number of AccessPolicy instances to include in the list. Default 100.",
              "type": "integer",
              "format": "int32",
              "location": "query"
            },
            "pageToken": {
              "description": "Next page token for the next batch of AccessPolicy instances. Defaults to the first page of results.",
              "type": "string",
              "location": "query"
            },
            "parent": {
              "location": "query",
              "description": "Required. Resource name for the container to list AccessPolicy instances from. Format: `organizations/{org_id}`",
              "type": "string"
            }
          },
          "flatPath": "v1/accessPolicies",
          "httpMethod": "GET",
          "response": {
            "$ref": "ListAccessPoliciesResponse"
          },
          "path": "v1/accessPolicies"
        }
      },
      "resources": {
        "servicePerimeters": {
          "methods": {
            "patch": {
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^accessPolicies/[^/]+/servicePerimeters/[^/]+$",
                  "description": "Required. Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. Mask to control which fields get updated. Must be non-empty."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "request": {
                "$ref": "ServicePerimeter"
              },
              "description": "Update a Service Perimeter. The longrunning operation from this RPC will have a successful status once the changes to the Service Perimeter have propagated to long-lasting storage. Service Perimeter containing errors will result in an error response for the first error encountered.",
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.patch"
            },
            "replaceAll": {
              "request": {
                "$ref": "ReplaceServicePerimetersRequest"
              },
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.replaceAll",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "parent": {
                  "pattern": "^accessPolicies/[^/]+$",
                  "location": "path",
                  "description": "Required. Resource name for the access policy which owns these Service Perimeters. Format: `accessPolicies/{policy_id}`",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Replace all existing Service Perimeters in an Access Policy with the Service Perimeters provided. This is done atomically. The longrunning operation from this RPC will have a successful status once all replacements have propagated to long-lasting storage. Replacements containing errors will result in an error response for the first error encountered. Replacement will be cancelled on error, existing Service Perimeters will not be affected. Operation.response field will contain ReplaceServicePerimetersResponse.",
              "path": "v1/{+parent}/servicePerimeters:replaceAll",
              "httpMethod": "POST",
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters:replaceAll",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "path": "v1/{+parent}/servicePerimeters",
              "request": {
                "$ref": "ServicePerimeter"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. Resource name for the access policy which owns this Service Perimeter. Format: `accessPolicies/{policy_id}`",
                  "pattern": "^accessPolicies/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.create",
              "description": "Create a Service Perimeter. The longrunning operation from this RPC will have a successful status once the Service Perimeter has propagated to long-lasting storage. Service Perimeters containing errors will result in an error response for the first error encountered.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a Service Perimeter by resource name.",
              "path": "v1/{+name}",
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^accessPolicies/[^/]+/servicePerimeters/[^/]+$",
                  "description": "Required. Resource name for the Service Perimeter. Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeters_id}`"
                }
              },
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.get",
              "httpMethod": "GET",
              "response": {
                "$ref": "ServicePerimeter"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters",
              "response": {
                "$ref": "ListServicePerimetersResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Number of Service Perimeters to include in the list. Default 100."
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Resource name for the access policy to list Service Perimeters from. Format: `accessPolicies/{policy_id}`",
                  "pattern": "^accessPolicies/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "description": "Next page token for the next batch of Service Perimeter instances. Defaults to the first page of results.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+parent}/servicePerimeters",
              "description": "List all Service Perimeters for an access policy.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.list",
              "httpMethod": "GET"
            },
            "commit": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Commit the dry-run spec for all the Service Perimeters in an Access Policy. A commit operation on a Service Perimeter involves copying its `spec` field to that Service Perimeter's `status` field. Only Service Perimeters with `use_explicit_dry_run_spec` field set to true are affected by a commit operation. The longrunning operation from this RPC will have a successful status once the dry-run specs for all the Service Perimeters have been committed. If a commit fails, it will cause the longrunning operation to return an error response and the entire commit operation will be cancelled. When successful, Operation.response field will contain CommitServicePerimetersResponse. The `dry_run` and the `spec` fields will be cleared after a successful commit operation.",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^accessPolicies/[^/]+$",
                  "description": "Required. Resource name for the parent Access Policy which owns all Service Perimeters in scope for the commit operation. Format: `accessPolicies/{policy_id}`",
                  "location": "path"
                }
              },
              "path": "v1/{+parent}/servicePerimeters:commit",
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.commit",
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters:commit",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CommitServicePerimetersRequest"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}",
              "id": "accesscontextmanager.accessPolicies.servicePerimeters.delete",
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "description": "Delete a Service Perimeter by resource name. The longrunning operation from this RPC will have a successful status once the Service Perimeter has been removed from long-lasting storage.",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Resource name for the Service Perimeter. Format: `accessPolicies/{policy_id}/servicePerimeters/{service_perimeter_id}`",
                  "pattern": "^accessPolicies/[^/]+/servicePerimeters/[^/]+$",
                  "required": true
                }
              }
            }
          }
        },
        "accessLevels": {
          "methods": {
            "patch": {
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Operation"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accesscontextmanager.accessPolicies.accessLevels.patch",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.",
                  "required": true,
                  "type": "string",
                  "pattern": "^accessPolicies/[^/]+/accessLevels/[^/]+$"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Required. Mask to control which fields get updated. Must be non-empty."
                }
              },
              "httpMethod": "PATCH",
              "request": {
                "$ref": "AccessLevel"
              },
              "description": "Update an Access Level. The longrunning operation from this RPC will have a successful status once the changes to the Access Level have propagated to long-lasting storage. Access Levels containing errors will result in an error response for the first error encountered."
            },
            "replaceAll": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/accessLevels:replaceAll",
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns these Access Levels. Format: `accessPolicies/{policy_id}`",
                  "pattern": "^accessPolicies/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Replace all existing Access Levels in an Access Policy with the Access Levels provided. This is done atomically. The longrunning operation from this RPC will have a successful status once all replacements have propagated to long-lasting storage. Replacements containing errors will result in an error response for the first error encountered. Replacement will be cancelled on error, existing Access Levels will not be affected. Operation.response field will contain ReplaceAccessLevelsResponse. Removing Access Levels contained in existing Service Perimeters will result in error.",
              "id": "accesscontextmanager.accessPolicies.accessLevels.replaceAll",
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "ReplaceAccessLevelsRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels:replaceAll"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "AccessLevel"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Resource name for the Access Level. Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`",
                  "type": "string",
                  "pattern": "^accessPolicies/[^/]+/accessLevels/[^/]+$",
                  "location": "path"
                },
                "accessLevelFormat": {
                  "location": "query",
                  "type": "string",
                  "description": "Whether to return `BasicLevels` in the Cloud Common Expression Language rather than as `BasicLevels`. Defaults to AS_DEFINED, where Access Levels are returned as `BasicLevels` or `CustomLevels` based on how they were created. If set to CEL, all Access Levels are returned as `CustomLevels`. In the CEL case, `BasicLevels` are translated to equivalent `CustomLevels`.",
                  "enumDescriptions": [
                    "The format was not specified.",
                    "Uses the format the resource was defined in. BasicLevels are returned as BasicLevels, CustomLevels are returned as CustomLevels.",
                    "Use Cloud Common Expression Language when returning the resource. Both BasicLevels and CustomLevels are returned as CustomLevels."
                  ],
                  "enum": [
                    "LEVEL_FORMAT_UNSPECIFIED",
                    "AS_DEFINED",
                    "CEL"
                  ]
                }
              },
              "description": "Get an Access Level by resource name.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accesscontextmanager.accessPolicies.accessLevels.get",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}"
            },
            "delete": {
              "response": {
                "$ref": "Operation"
              },
              "description": "Delete an Access Level by resource name. The longrunning operation from this RPC will have a successful status once the Access Level has been removed from long-lasting storage.",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. Resource name for the Access Level. Format: `accessPolicies/{policy_id}/accessLevels/{access_level_id}`",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^accessPolicies/[^/]+/accessLevels/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}",
              "id": "accesscontextmanager.accessPolicies.accessLevels.delete",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "description": "List all Access Levels for an access policy.",
              "id": "accesscontextmanager.accessPolicies.accessLevels.list",
              "path": "v1/{+parent}/accessLevels",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListAccessLevelsResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^accessPolicies/[^/]+$",
                  "description": "Required. Resource name for the access policy to list Access Levels from. Format: `accessPolicies/{policy_id}`",
                  "required": true
                },
                "accessLevelFormat": {
                  "description": "Whether to return `BasicLevels` in the Cloud Common Expression language, as `CustomLevels`, rather than as `BasicLevels`. Defaults to returning `AccessLevels` in the format they were defined.",
                  "type": "string",
                  "enum": [
                    "LEVEL_FORMAT_UNSPECIFIED",
                    "AS_DEFINED",
                    "CEL"
                  ],
                  "enumDescriptions": [
                    "The format was not specified.",
                    "Uses the format the resource was defined in. BasicLevels are returned as BasicLevels, CustomLevels are returned as CustomLevels.",
                    "Use Cloud Common Expression Language when returning the resource. Both BasicLevels and CustomLevels are returned as CustomLevels."
                  ],
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "Number of Access Levels to include in the list. Default 100."
                },
                "pageToken": {
                  "location": "query",
                  "description": "Next page token for the next batch of Access Level instances. Defaults to the first page of results.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels"
            },
            "create": {
              "path": "v1/{+parent}/accessLevels",
              "description": "Create an Access Level. The longrunning operation from this RPC will have a successful status once the Access Level has propagated to long-lasting storage. Access Levels containing errors will result in an error response for the first error encountered.",
              "id": "accesscontextmanager.accessPolicies.accessLevels.create",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "AccessLevel"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Resource name for the access policy which owns this Access Level. Format: `accessPolicies/{policy_id}`",
                  "pattern": "^accessPolicies/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1/accessPolicies/{accessPoliciesId}/accessLevels",
              "httpMethod": "POST"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "cancel": {
          "httpMethod": "POST",
          "path": "v1/{+name}:cancel",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^operations/.*$"
            }
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "accesscontextmanager.operations.cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "list": {
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "id": "accesscontextmanager.operations.list",
          "flatPath": "v1/operations",
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "description": "The standard list page size.",
              "type": "integer",
              "location": "query"
            },
            "name": {
              "pattern": "^operations$",
              "location": "path",
              "required": true,
              "description": "The name of the operation's parent resource.",
              "type": "string"
            }
          },
          "path": "v1/{+name}",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "httpMethod": "GET"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "flatPath": "v1/operations/{operationsId}",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "description": "The name of the operation resource.",
              "pattern": "^operations/.*$",
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "id": "accesscontextmanager.operations.get",
          "httpMethod": "GET"
        },
        "delete": {
          "path": "v1/{+name}",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "id": "accesscontextmanager.operations.delete",
          "httpMethod": "DELETE"
        }
      }
    },
    "organizations": {
      "resources": {
        "gcpUserAccessBindings": {
          "methods": {
            "delete": {
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.delete",
              "flatPath": "v1/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "description": "Deletes a GcpUserAccessBinding. Completion of this long-running operation does not necessarily signify that the binding deletion is deployed onto all affected users, which may take more time.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"",
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/gcpUserAccessBindings/[^/]+$",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Operation"
              }
            },
            "create": {
              "flatPath": "v1/organizations/{organizationsId}/gcpUserAccessBindings",
              "description": "Creates a GcpUserAccessBinding. If the client specifies a name, the server will ignore it. Fails if a resource already exists with the same group_key. Completion of this long-running operation does not necessarily signify that the new binding is deployed onto all affected users, which may take more time.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Example: \"organizations/256\"",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GcpUserAccessBinding"
              },
              "httpMethod": "POST",
              "path": "v1/{+parent}/gcpUserAccessBindings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.create"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GcpUserAccessBinding"
              },
              "flatPath": "v1/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.patch",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Required. Only the fields specified in this mask are updated. Because name and group_key cannot be changed, update_mask is required and must always be: update_mask { paths: \"access_levels\" }",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/gcpUserAccessBindings/[^/]+$",
                  "description": "Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\""
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Operation"
              },
              "description": "Updates a GcpUserAccessBinding. Completion of this long-running operation does not necessarily signify that the changed binding is deployed onto all affected users, which may take more time."
            },
            "get": {
              "description": "Gets the GcpUserAccessBinding with the given name.",
              "httpMethod": "GET",
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.get",
              "flatPath": "v1/organizations/{organizationsId}/gcpUserAccessBindings/{gcpUserAccessBindingsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"",
                  "pattern": "^organizations/[^/]+/gcpUserAccessBindings/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GcpUserAccessBinding"
              }
            },
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/gcpUserAccessBindings",
              "description": "Lists all GcpUserAccessBindings for a Google Cloud organization.",
              "httpMethod": "GET",
              "path": "v1/{+parent}/gcpUserAccessBindings",
              "response": {
                "$ref": "ListGcpUserAccessBindingsResponse"
              },
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "Optional. Maximum number of items to return. The server may return fewer items. If left blank, the server may return any number of items.",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "Optional. If left blank, returns the first page. To enumerate all items, use the next_page_token from your previous list operation.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. Example: \"organizations/256\"",
                  "type": "string"
                }
              },
              "id": "accesscontextmanager.organizations.gcpUserAccessBindings.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        }
      }
    }
  },
  "canonicalName": "Access Context Manager",
  "ownerName": "Google",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://accesscontextmanager.googleapis.com/",
  "name": "accesscontextmanager",
  "ownerDomain": "google.com",
  "id": "accesscontextmanager:v1",
  "revision": "20210814",
  "servicePath": "",
  "version": "v1",
  "title": "Access Context Manager API",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "rootUrl": "https://accesscontextmanager.googleapis.com/",
  "basePath": "",
  "schemas": {
    "ReplaceServicePerimetersResponse": {
      "type": "object",
      "properties": {
        "servicePerimeters": {
          "type": "array",
          "description": "List of the Service Perimeter instances.",
          "items": {
            "$ref": "ServicePerimeter"
          }
        }
      },
      "description": "A response to ReplaceServicePerimetersRequest. This will be put inside of Operation.response field.",
      "id": "ReplaceServicePerimetersResponse"
    },
    "ListAccessLevelsResponse": {
      "type": "object",
      "description": "A response to `ListAccessLevelsRequest`.",
      "properties": {
        "accessLevels": {
          "type": "array",
          "items": {
            "$ref": "AccessLevel"
          },
          "description": "List of the Access Level instances."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of results. If the value is empty, no further results remain."
        }
      },
      "id": "ListAccessLevelsResponse"
    },
    "EgressPolicy": {
      "description": "Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.",
      "properties": {
        "egressTo": {
          "$ref": "EgressTo",
          "description": "Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply."
        },
        "egressFrom": {
          "description": "Defines conditions on the source of a request causing this EgressPolicy to apply.",
          "$ref": "EgressFrom"
        }
      },
      "id": "EgressPolicy",
      "type": "object"
    },
    "ReplaceAccessLevelsRequest": {
      "description": "A request to replace all existing Access Levels in an Access Policy with the Access Levels provided. This is done atomically.",
      "type": "object",
      "properties": {
        "accessLevels": {
          "items": {
            "$ref": "AccessLevel"
          },
          "type": "array",
          "description": "Required. The desired Access Levels that should replace all existing Access Levels in the Access Policy."
        },
        "etag": {
          "type": "string",
          "description": "Optional. The etag for the version of the Access Policy that this replace operation is to be performed on. If, at the time of replace, the etag for the Access Policy stored in Access Context Manager is different from the specified etag, then the replace operation will not be performed and the call will fail. This field is not required. If etag is not provided, the operation will be performed as if a valid etag is provided."
        }
      },
      "id": "ReplaceAccessLevelsRequest"
    },
    "IngressTo": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding IngressFrom. If a single `*` is specified, then access to all resources inside the perimeter are allowed."
        },
        "operations": {
          "items": {
            "$ref": "ApiOperation"
          },
          "type": "array",
          "description": "A list of ApiOperations allowed to be performed by the sources specified in corresponding IngressFrom in this ServicePerimeter."
        }
      },
      "id": "IngressTo",
      "description": "Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the target resource of the request. The request must satisfy what is defined in `operations` AND `resources` in order to match.",
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      }
    },
    "BasicLevel": {
      "description": "`BasicLevel` is an `AccessLevel` using a set of recommended features.",
      "type": "object",
      "id": "BasicLevel",
      "properties": {
        "combiningFunction": {
          "enumDescriptions": [
            "All `Conditions` must be true for the `BasicLevel` to be true.",
            "If at least one `Condition` is true, then the `BasicLevel` is true."
          ],
          "description": "How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.",
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        },
        "conditions": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Required. A list of requirements for the `AccessLevel` to be granted.",
          "type": "array"
        }
      }
    },
    "MethodSelector": {
      "description": "An allowed method or permission of a service specified in ApiOperation.",
      "id": "MethodSelector",
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed."
        },
        "permission": {
          "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation.",
          "type": "string"
        }
      }
    },
    "CommitServicePerimetersRequest": {
      "id": "CommitServicePerimetersRequest",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Optional. The etag for the version of the Access Policy that this commit operation is to be performed on. If, at the time of commit, the etag for the Access Policy stored in Access Context Manager is different from the specified etag, then the commit operation will not be performed and the call will fail. This field is not required. If etag is not provided, the operation will be performed as if a valid etag is provided."
        }
      },
      "type": "object",
      "description": "A request to commit dry-run specs in all Service Perimeters belonging to an Access Policy."
    },
    "ListServicePerimetersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of results. If the value is empty, no further results remain."
        },
        "servicePerimeters": {
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          },
          "description": "List of the Service Perimeter instances."
        }
      },
      "description": "A response to `ListServicePerimetersRequest`.",
      "id": "ListServicePerimetersResponse"
    },
    "EgressTo": {
      "description": "Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match `operations` AND `resources` fields in order to be allowed egress out of the perimeter.",
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "type": "string"
          },
          "description": "A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.",
          "type": "array"
        },
        "operations": {
          "description": "A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.",
          "type": "array",
          "items": {
            "$ref": "ApiOperation"
          }
        }
      },
      "id": "EgressTo"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "GcpUserAccessBindingOperationMetadata": {
      "properties": {},
      "id": "GcpUserAccessBindingOperationMetadata",
      "description": "Currently, a completed operation means nothing. In the future, this metadata and a completed operation may indicate that the binding has taken effect and is affecting access decisions for all users.",
      "type": "object"
    },
    "ListGcpUserAccessBindingsResponse": {
      "description": "Response of ListGcpUserAccessBindings.",
      "properties": {
        "nextPageToken": {
          "description": "Token to get the next page of items. If blank, there are no more items.",
          "type": "string"
        },
        "gcpUserAccessBindings": {
          "items": {
            "$ref": "GcpUserAccessBinding"
          },
          "description": "GcpUserAccessBinding",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListGcpUserAccessBindingsResponse"
    },
    "ServicePerimeter": {
      "id": "ServicePerimeter",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the `ServicePerimeter` and its use. Does not affect behavior."
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        },
        "status": {
          "$ref": "ServicePerimeterConfig",
          "description": "Current ServicePerimeter configuration. Specifies sets of resources, restricted services and access levels that determine perimeter content and boundaries."
        },
        "perimeterType": {
          "type": "string",
          "enum": [
            "PERIMETER_TYPE_REGULAR",
            "PERIMETER_TYPE_BRIDGE"
          ],
          "description": "Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.",
          "enumDescriptions": [
            "Regular Perimeter.",
            "Perimeter Bridge."
          ]
        },
        "useExplicitDryRunSpec": {
          "description": "Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration (\"spec\") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config (\"status\") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values.",
          "type": "boolean"
        },
        "spec": {
          "description": "Proposed (or dry run) ServicePerimeter configuration. This configuration allows to specify and test ServicePerimeter configuration without enforcing actual access restrictions. Only allowed to be set when the \"use_explicit_dry_run_spec\" flag is set.",
          "$ref": "ServicePerimeterConfig"
        },
        "name": {
          "description": "Required. Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`",
          "type": "string"
        }
      },
      "description": "`ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges."
    },
    "CustomLevel": {
      "description": "`CustomLevel` is an `AccessLevel` using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec",
      "type": "object",
      "properties": {
        "expr": {
          "$ref": "Expr",
          "description": "Required. A Cloud CEL expression evaluating to a boolean."
        }
      },
      "id": "CustomLevel"
    },
    "EgressFrom": {
      "properties": {
        "identities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only."
        },
        "identityType": {
          "enum": [
            "IDENTITY_TYPE_UNSPECIFIED",
            "ANY_IDENTITY",
            "ANY_USER_ACCOUNT",
            "ANY_SERVICE_ACCOUNT"
          ],
          "enumDescriptions": [
            "No blanket identity group specified.",
            "Authorize access from all identities outside the perimeter.",
            "Authorize access from all human users outside the perimeter.",
            "Authorize access from all service accounts outside the perimeter."
          ],
          "type": "string",
          "description": "Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access."
        }
      },
      "id": "EgressFrom",
      "description": "Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.",
      "type": "object"
    },
    "ApiOperation": {
      "id": "ApiOperation",
      "type": "object",
      "description": "Identification for an API Operation.",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services."
        },
        "methodSelectors": {
          "items": {
            "$ref": "MethodSelector"
          },
          "type": "array",
          "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object"
    },
    "DevicePolicy": {
      "properties": {
        "osConstraints": {
          "type": "array",
          "description": "Allowed OS versions, an empty list allows all types and all versions.",
          "items": {
            "$ref": "OsConstraint"
          }
        },
        "requireCorpOwned": {
          "description": "Whether the device needs to be corp owned.",
          "type": "boolean"
        },
        "requireAdminApproval": {
          "description": "Whether the device needs to be approved by the customer admin.",
          "type": "boolean"
        },
        "allowedDeviceManagementLevels": {
          "items": {
            "enumDescriptions": [
              "The device's management level is not specified or not known.",
              "The device is not managed.",
              "Basic management is enabled, which is generally limited to monitoring and wiping the corporate account.",
              "Complete device management. This includes more thorough monitoring and the ability to directly manage the device (such as remote wiping). This can be enabled through the Android Enterprise Platform."
            ],
            "type": "string",
            "enum": [
              "MANAGEMENT_UNSPECIFIED",
              "NONE",
              "BASIC",
              "COMPLETE"
            ]
          },
          "type": "array",
          "description": "Allowed device management levels, an empty list allows all management levels."
        },
        "requireScreenlock": {
          "description": "Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`.",
          "type": "boolean"
        },
        "allowedEncryptionStatuses": {
          "items": {
            "enumDescriptions": [
              "The encryption status of the device is not specified or not known.",
              "The device does not support encryption.",
              "The device supports encryption, but is currently unencrypted.",
              "The device is encrypted."
            ],
            "enum": [
              "ENCRYPTION_UNSPECIFIED",
              "ENCRYPTION_UNSUPPORTED",
              "UNENCRYPTED",
              "ENCRYPTED"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Allowed encryptions statuses, an empty list allows all statuses."
        }
      },
      "id": "DevicePolicy",
      "type": "object",
      "description": "`DevicePolicy` specifies device specific restrictions necessary to acquire a given access level. A `DevicePolicy` specifies requirements for requests from devices to be granted access levels, it does not do any enforcement on the device. `DevicePolicy` acts as an AND over all specified fields, and each repeated field is an OR over its elements. Any unset fields are ignored. For example, if the proto is { os_type : DESKTOP_WINDOWS, os_type : DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be true for requests originating from encrypted Linux desktops and encrypted Windows desktops."
    },
    "IngressSource": {
      "description": "The source that IngressPolicy authorizes access from.",
      "type": "object",
      "id": "IngressSource",
      "properties": {
        "resource": {
          "type": "string",
          "description": "A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported."
        },
        "accessLevel": {
          "description": "An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.",
          "type": "string"
        }
      }
    },
    "OsConstraint": {
      "properties": {
        "requireVerifiedChromeOs": {
          "type": "boolean",
          "description": "Only allows requests from devices with a verified Chrome OS. Verifications includes requirements that the device is enterprise-managed, conformant to domain policies, and the caller has permission to call the API targeted by the request."
        },
        "minimumVersion": {
          "description": "The minimum allowed OS version. If not set, any version of this OS satisfies the constraint. Format: `\"major.minor.patch\"`. Examples: `\"10.5.301\"`, `\"9.2.1\"`.",
          "type": "string"
        },
        "osType": {
          "enum": [
            "OS_UNSPECIFIED",
            "DESKTOP_MAC",
            "DESKTOP_WINDOWS",
            "DESKTOP_LINUX",
            "DESKTOP_CHROME_OS",
            "ANDROID",
            "IOS"
          ],
          "description": "Required. The allowed OS type.",
          "type": "string",
          "enumDescriptions": [
            "The operating system of the device is not specified or not known.",
            "A desktop Mac operating system.",
            "A desktop Windows operating system.",
            "A desktop Linux operating system.",
            "A desktop ChromeOS operating system.",
            "An Android operating system.",
            "An iOS operating system."
          ]
        }
      },
      "id": "OsConstraint",
      "type": "object",
      "description": "A restriction on the OS type and version of devices making requests."
    },
    "AccessContextManagerOperationMetadata": {
      "id": "AccessContextManagerOperationMetadata",
      "properties": {},
      "description": "Metadata of Access Context Manager's Long Running Operations.",
      "type": "object"
    },
    "IngressPolicy": {
      "properties": {
        "ingressFrom": {
          "description": "Defines the conditions on the source of a request causing this IngressPolicy to apply.",
          "$ref": "IngressFrom"
        },
        "ingressTo": {
          "$ref": "IngressTo",
          "description": "Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply."
        }
      },
      "type": "object",
      "id": "IngressPolicy",
      "description": "Policy for ingress into ServicePerimeter. IngressPolicies match requests based on `ingress_from` and `ingress_to` stanzas. For an ingress policy to match, both the `ingress_from` and `ingress_to` stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the `ingress_to` field."
    },
    "CommitServicePerimetersResponse": {
      "description": "A response to CommitServicePerimetersRequest. This will be put inside of Operation.response field.",
      "properties": {
        "servicePerimeters": {
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          },
          "description": "List of all the Service Perimeter instances in the Access Policy."
        }
      },
      "type": "object",
      "id": "CommitServicePerimetersResponse"
    },
    "ListAccessPoliciesResponse": {
      "id": "ListAccessPoliciesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token to retrieve the next page of results. If the value is empty, no further results remain."
        },
        "accessPolicies": {
          "type": "array",
          "items": {
            "$ref": "AccessPolicy"
          },
          "description": "List of the AccessPolicy instances."
        }
      },
      "description": "A response to `ListAccessPoliciesRequest`."
    },
    "ServicePerimeterConfig": {
      "id": "ServicePerimeterConfig",
      "description": "`ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.",
      "properties": {
        "ingressPolicies": {
          "description": "List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.",
          "items": {
            "$ref": "IngressPolicy"
          },
          "type": "array"
        },
        "vpcAccessibleServices": {
          "description": "Configuration for APIs allowed within Perimeter.",
          "$ref": "VpcAccessibleServices"
        },
        "restrictedServices": {
          "type": "array",
          "description": "Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.",
          "items": {
            "type": "string"
          }
        },
        "accessLevels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`. For Service Perimeter Bridge, must be empty."
        },
        "egressPolicies": {
          "items": {
            "$ref": "EgressPolicy"
          },
          "type": "array",
          "description": "List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge."
        },
        "resources": {
          "type": "array",
          "description": "A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "ReplaceAccessLevelsResponse": {
      "properties": {
        "accessLevels": {
          "type": "array",
          "items": {
            "$ref": "AccessLevel"
          },
          "description": "List of the Access Level instances."
        }
      },
      "id": "ReplaceAccessLevelsResponse",
      "description": "A response to ReplaceAccessLevelsRequest. This will be put inside of Operation.response field.",
      "type": "object"
    },
    "AccessPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{access_policy}`"
        },
        "etag": {
          "type": "string",
          "description": "Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if and only if their etags are identical. Clients should not expect this to be in any specific format."
        },
        "title": {
          "description": "Required. Human readable title. Does not affect behavior.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}`"
        }
      },
      "description": "`AccessPolicy` is a container for `AccessLevels` (which define the necessary attributes to use Google Cloud services) and `ServicePerimeters` (which define regions of services able to freely pass data within a perimeter). An access policy is globally visible within an organization, and the restrictions it specifies apply to all projects within an organization.",
      "type": "object",
      "id": "AccessPolicy"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "GcpUserAccessBinding": {
      "id": "GcpUserAccessBinding",
      "description": "Restricts access to Cloud Console and Google Cloud APIs for a set of users using Context-Aware Access.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: \"organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N\"",
          "type": "string"
        },
        "accessLevels": {
          "type": "array",
          "description": "Required. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: \"accessPolicies/9522/accessLevels/device_trusted\"",
          "items": {
            "type": "string"
          }
        },
        "groupKey": {
          "description": "Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See \"id\" in the [G Suite Directory API's Groups resource] (https://developers.google.com/admin-sdk/directory/v1/reference/groups#resource). If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: \"01d520gv4vjcrht\"",
          "type": "string"
        }
      }
    },
    "IngressFrom": {
      "id": "IngressFrom",
      "properties": {
        "identityType": {
          "enumDescriptions": [
            "No blanket identity group specified.",
            "Authorize access from all identities outside the perimeter.",
            "Authorize access from all human users outside the perimeter.",
            "Authorize access from all service accounts outside the perimeter."
          ],
          "enum": [
            "IDENTITY_TYPE_UNSPECIFIED",
            "ANY_IDENTITY",
            "ANY_USER_ACCOUNT",
            "ANY_SERVICE_ACCOUNT"
          ],
          "type": "string",
          "description": "Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access."
        },
        "identities": {
          "description": "A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "IngressSource"
          },
          "description": "Sources that this IngressPolicy authorizes access from."
        }
      },
      "type": "object",
      "description": "Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the source of the request. The request must satisfy what is defined in `sources` AND identity related fields in order to match."
    },
    "ReplaceServicePerimetersRequest": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Optional. The etag for the version of the Access Policy that this replace operation is to be performed on. If, at the time of replace, the etag for the Access Policy stored in Access Context Manager is different from the specified etag, then the replace operation will not be performed and the call will fail. This field is not required. If etag is not provided, the operation will be performed as if a valid etag is provided."
        },
        "servicePerimeters": {
          "type": "array",
          "items": {
            "$ref": "ServicePerimeter"
          },
          "description": "Required. The desired Service Perimeters that should replace all existing Service Perimeters in the Access Policy."
        }
      },
      "id": "ReplaceServicePerimetersRequest",
      "type": "object",
      "description": "A request to replace all existing Service Perimeters in an Access Policy with the Service Perimeters provided. This is done atomically."
    },
    "VpcAccessibleServices": {
      "type": "object",
      "properties": {
        "allowedServices": {
          "type": "array",
          "description": "The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter.",
          "items": {
            "type": "string"
          }
        },
        "enableRestriction": {
          "type": "boolean",
          "description": "Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'."
        }
      },
      "id": "VpcAccessibleServices",
      "description": "Specifies how APIs are allowed to communicate within the Service Perimeter."
    },
    "Condition": {
      "type": "object",
      "id": "Condition",
      "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an AND over its fields. So a Condition is true if: 1) the request IP is from one of the listed subnetworks AND 2) the originating device complies with the listed device policy AND 3) all listed access levels are granted AND 4) the request was sent at a time allowed by the DateTimeRestriction.",
      "properties": {
        "devicePolicy": {
          "description": "Device specific restrictions, all restrictions must hold for the Condition to be true. If not specified, all devices are allowed.",
          "$ref": "DevicePolicy"
        },
        "requiredAccessLevels": {
          "description": "A list of other access levels defined in the same `Policy`, referenced by resource name. Referencing an `AccessLevel` which does not exist is an error. All access levels listed must be granted for the Condition to be true. Example: \"`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME\"`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The request must be made by one of the provided user or service accounts. Groups are not supported. Syntax: `user:{emailid}` `serviceAccount:{emailid}` If not specified, a request may come from any user."
        },
        "ipSubnetworks": {
          "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host bits must be zero) or the input is considered malformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "negate": {
          "type": "boolean",
          "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields, each field must be false for the Condition overall to be satisfied. Defaults to false."
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The request must originate from one of the provided countries/regions. Must be valid ISO 3166-1 alpha-2 codes."
        }
      }
    },
    "AccessLevel": {
      "type": "object",
      "properties": {
        "basic": {
          "description": "A `BasicLevel` composed of `Conditions`.",
          "$ref": "BasicLevel"
        },
        "description": {
          "description": "Description of the `AccessLevel` and its use. Does not affect behavior.",
          "type": "string"
        },
        "custom": {
          "$ref": "CustomLevel",
          "description": "A `CustomLevel` written in the Common Expression Language."
        },
        "name": {
          "description": "Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{access_policy}/accessLevels/{access_level}`. The maximum length of the `access_level` component is 50 characters.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Human readable title. Must be unique within the Policy."
        }
      },
      "description": "An `AccessLevel` is a label that can be applied to requests to Google Cloud services, along with a list of requirements necessary for the label to be applied.",
      "id": "AccessLevel"
    }
  },
  "description": "An API for setting attribute based access control to requests to GCP services.",
  "mtlsRootUrl": "https://accesscontextmanager.mtls.googleapis.com/"
}

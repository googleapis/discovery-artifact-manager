{
  "version_module": true,
  "version": "v2beta",
  "name": "retail",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "rootUrl": "https://retail.googleapis.com/",
  "description": "Cloud Retail service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "revision": "20220310",
  "ownerName": "Google",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "canonicalName": "Cloud Retail",
  "mtlsRootUrl": "https://retail.mtls.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Retail API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "catalogs": {
              "methods": {
                "setDefaultBranch": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "catalog"
                  ],
                  "path": "v2beta/{+catalog}:setDefaultBranch",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Set a specified branch id as default branch. API methods such as SearchService.Search, ProductService.GetProduct, ProductService.ListProducts will treat requests using \"default_branch\" to the actual branch id set as default. For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as default, setting SearchRequest.branch to `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent to setting SearchRequest.branch to `projects/*/locations/*/catalogs/*/branches/1`. Using multiple branches can be useful when developers would like to have a staging branch to test and verify for future usage. When it becomes ready, developers switch on the staging branch using this API while keeping using `projects/*/locations/*/catalogs/*/branches/default_branch` as SearchRequest.branch to route the traffic to this staging branch. CAUTION: If you have live predict/search traffic, switching the default branch could potentially cause outages if the ID space of the new branch is very different from the old one. More specifically: * PredictionService will only return product IDs from branch {newBranch}. * SearchService will only return product IDs from branch {newBranch} (if branch is not explicitly set). * UserEventService will only join events with products from branch {newBranch}.",
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:setDefaultBranch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "retail.projects.locations.catalogs.setDefaultBranch",
                  "parameters": {
                    "catalog": {
                      "type": "string",
                      "location": "path",
                      "description": "Full resource name of the catalog, such as `projects/*/locations/global/catalogs/default_catalog`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudRetailV2betaSetDefaultBranchRequest"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaCatalog"
                  },
                  "request": {
                    "$ref": "GoogleCloudRetailV2betaCatalog"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Immutable. The fully qualified resource name of the catalog.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Indicates which fields in the provided Catalog to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned.",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the Catalogs.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2beta/{+name}",
                  "id": "retail.projects.locations.catalogs.patch"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaListCatalogsResponse"
                  },
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of Catalogs to return. If unspecified, defaults to 50. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT is returned.",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The account resource name with an associated location. If the caller does not have permission to list Catalogs under this location, regardless of whether or not this location exists, a PERMISSION_DENIED error is returned.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A page token ListCatalogsResponse.next_page_token, received from a previous CatalogService.ListCatalogs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to CatalogService.ListCatalogs must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.",
                      "type": "string"
                    }
                  },
                  "description": "Lists all the Catalogs associated with the project.",
                  "path": "v2beta/{+parent}/catalogs",
                  "id": "retail.projects.locations.catalogs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "getAttributesConfig": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                      "description": "Required. Full AttributesConfig resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v2beta/{+name}",
                  "id": "retail.projects.locations.catalogs.getAttributesConfig",
                  "description": "Gets an AttributesConfig.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig",
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getDefaultBranch": {
                  "parameters": {
                    "catalog": {
                      "location": "path",
                      "description": "The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                    }
                  },
                  "description": "Get which branch is currently default branch set by CatalogService.SetDefaultBranch method under a specified parent catalog.",
                  "parameterOrder": [
                    "catalog"
                  ],
                  "id": "retail.projects.locations.catalogs.getDefaultBranch",
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaGetDefaultBranchResponse"
                  },
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:getDefaultBranch",
                  "path": "v2beta/{+catalog}:getDefaultBranch",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "completeQuery": {
                  "description": "Completes the specified prefix with keyword suggestions. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                  "path": "v2beta/{+catalog}:completeQuery",
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaCompleteQueryResponse"
                  },
                  "id": "retail.projects.locations.catalogs.completeQuery",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "catalog"
                  ],
                  "parameters": {
                    "catalog": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Catalog for which the completion is performed. Full resource name of catalog, such as `projects/*/locations/global/catalogs/default_catalog`."
                    },
                    "deviceType": {
                      "type": "string",
                      "description": "The device type context for completion suggestions. It is useful to apply different suggestions on different device types, e.g. `DESKTOP`, `MOBILE`. If it is empty, the suggestions are across all device types. Supported formats: * `UNKNOWN_DEVICE_TYPE` * `DESKTOP` * `MOBILE` * A customized string starts with `OTHER_`, e.g. `OTHER_IPHONE`.",
                      "location": "query"
                    },
                    "dataset": {
                      "description": "Determines which dataset to use for fetching completion. \"user-data\" will use the imported dataset through CompletionService.ImportCompletionData. \"cloud-retail\" will use the dataset generated by cloud retail based on user events. If leave empty, it will use the \"user-data\". Current supported values: * user-data * cloud-retail This option requires additional allowlisting. Before using cloud-retail, contact Cloud Retail support team first.",
                      "location": "query",
                      "type": "string"
                    },
                    "query": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The query used to generate suggestions. The maximum number of allowed characters is 255."
                    },
                    "visitorId": {
                      "description": "Required field. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "maxSuggestions": {
                      "description": "Completion max suggestions. If left unset or set to 0, then will fallback to the configured value CompletionConfig.max_suggestions. The maximum allowed max suggestions is 20. If it is set higher, it will be capped by 20.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "languageCodes": {
                      "type": "string",
                      "description": "The language filters applied to the output suggestions. If set, it should contain the language of the query. If not set, suggestions are returned without considering language restrictions. This is the BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47). The maximum number of language codes is 3.",
                      "repeated": true,
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:completeQuery"
                },
                "updateAttributesConfig": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the AttributesConfig. The catalog attributes in the request will be updated in the catalog, or inserted if they do not exist. Existing catalog attributes not included in the request will remain unchanged. Attributes that are assigned to products, but do not exist at the catalog level, are always included in the response. The product attribute is assigned default values for missing catalog attribute fields, e.g., searchable and dynamic facetable options.",
                  "request": {
                    "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                  },
                  "id": "retail.projects.locations.catalogs.updateAttributesConfig",
                  "response": {
                    "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                  },
                  "path": "v2beta/{+name}",
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                      "required": true,
                      "description": "Required. Immutable. The fully qualified resource name of the attribute config. Format: \"projects/*/locations/*/catalogs/*/attributesConfig\"",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Indicates which fields in the provided AttributesConfig to update. The following is the only supported field: * AttributesConfig.catalog_attributes If not set, all supported fields are updated."
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "branches": {
                  "resources": {
                    "operations": {
                      "methods": {
                        "get": {
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/operations/{operationsId}",
                          "path": "v2beta/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "retail.projects.locations.catalogs.branches.operations.get",
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "description": "The name of the operation resource.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/operations/[^/]+$"
                            }
                          },
                          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          }
                        }
                      }
                    },
                    "products": {
                      "methods": {
                        "removeFulfillmentPlaces": {
                          "description": "Incrementally removes place IDs from a Product.fulfillment_info.place_ids. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, the removed place IDs are not immediately manifested in the Product queried by GetProduct or ListProducts. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:removeFulfillmentPlaces",
                          "path": "v2beta/{+product}:removeFulfillmentPlaces",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "product"
                          ],
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesRequest"
                          },
                          "parameters": {
                            "product": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned."
                            }
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.removeFulfillmentPlaces"
                        },
                        "patch": {
                          "description": "Updates a Product.",
                          "httpMethod": "PATCH",
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}",
                          "id": "retail.projects.locations.catalogs.branches.products.patch",
                          "response": {
                            "$ref": "GoogleCloudRetailV2betaProduct"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v2beta/{+name}",
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaProduct"
                          },
                          "parameters": {
                            "updateMask": {
                              "type": "string",
                              "location": "query",
                              "description": "Indicates which fields in the provided Product to update. The immutable and output only fields are NOT supported. If not set, all supported fields (the fields that are neither immutable nor output only) are updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned.",
                              "format": "google-fieldmask"
                            },
                            "name": {
                              "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$"
                            },
                            "allowMissing": {
                              "description": "If set to true, and the Product is not found, a new Product will be created. In this situation, `update_mask` is ignored.",
                              "type": "boolean",
                              "location": "query"
                            }
                          }
                        },
                        "addFulfillmentPlaces": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v2beta/{+product}:addFulfillmentPlaces",
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:addFulfillmentPlaces",
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaAddFulfillmentPlacesRequest"
                          },
                          "description": "Incrementally adds place IDs to Product.fulfillment_info.place_ids. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, the added place IDs are not immediately manifested in the Product queried by GetProduct or ListProducts. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                          "parameters": {
                            "product": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.",
                              "location": "path"
                            }
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.addFulfillmentPlaces",
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "product"
                          ]
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "location": "path",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested Product does not exist, a NOT_FOUND error is returned.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "path": "v2beta/{+name}",
                          "httpMethod": "GET",
                          "id": "retail.projects.locations.catalogs.branches.products.get",
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}",
                          "response": {
                            "$ref": "GoogleCloudRetailV2betaProduct"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Gets a Product."
                        },
                        "create": {
                          "path": "v2beta/{+parent}/products",
                          "response": {
                            "$ref": "GoogleCloudRetailV2betaProduct"
                          },
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products",
                          "httpMethod": "POST",
                          "id": "retail.projects.locations.catalogs.branches.products.create",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "parent": {
                              "required": true,
                              "description": "Required. The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$",
                              "type": "string",
                              "location": "path"
                            },
                            "productId": {
                              "type": "string",
                              "description": "Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
                              "location": "query"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaProduct"
                          },
                          "description": "Creates a Product."
                        },
                        "list": {
                          "description": "Gets a list of Products.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "retail.projects.locations.catalogs.branches.products.list",
                          "response": {
                            "$ref": "GoogleCloudRetailV2betaListProductsResponse"
                          },
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products",
                          "path": "v2beta/{+parent}/products",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. The parent branch resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/0`. Use `default_branch` as the branch ID, to list products under the default branch. If the caller does not have permission to list Products under this branch, regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned."
                            },
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of Products to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned.",
                              "location": "query"
                            },
                            "readMask": {
                              "format": "google-fieldmask",
                              "location": "query",
                              "type": "string",
                              "description": "The fields of Product to return in the responses. If not set or empty, the following fields are returned: * Product.name * Product.id * Product.title * Product.uri * Product.images * Product.price_info * Product.brands If \"*\" is provided, all fields are returned. Product.name is always returned no matter what mask is set. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned."
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "A page token ListProductsResponse.next_page_token, received from a previous ProductService.ListProducts call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ProductService.ListProducts must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned."
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. * List Product.Type.VARIANT Products sharing the same Product.Type.PRIMARY Product. For example: `primary_product_id = \"some_product_id\"` * List Products bundled in a Product.Type.COLLECTION Product. For example: `collection_product_id = \"some_product_id\"` * List Products with a partibular type. For example: `type = \"PRIMARY\"` `type = \"VARIANT\"` `type = \"COLLECTION\"` If the field is unrecognizable, an INVALID_ARGUMENT error is returned. If the specified Product.Type.PRIMARY Product or Product.Type.COLLECTION Product does not exist, a NOT_FOUND error is returned."
                            }
                          }
                        },
                        "setInventory": {
                          "id": "retail.projects.locations.catalogs.branches.products.setInventory",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "location": "path"
                            }
                          },
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:setInventory",
                          "path": "v2beta/{+name}:setInventory",
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaSetInventoryRequest"
                          },
                          "httpMethod": "POST",
                          "description": "Updates inventory information for a Product while respecting the last update timestamps of each inventory field. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, updates are not immediately manifested in the Product queried by GetProduct or ListProducts. When inventory is updated with CreateProduct and UpdateProduct, the specified inventory field value(s) will overwrite any existing value(s) while ignoring the last update time for this field. Furthermore, the last update time for the specified inventory fields will be overwritten to the time of the CreateProduct or UpdateProduct request. If no inventory fields are set in CreateProductRequest.product, then any pre-existing inventory information for this product will be used. If no inventory fields are set in SetInventoryRequest.set_mask, then any existing inventory information will be preserved. Pre-existing inventory information can only be updated with SetInventory, AddFulfillmentPlaces, and RemoveFulfillmentPlaces. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to delete the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the Product to delete does not exist, a NOT_FOUND error is returned. The Product to delete can neither be a Product.Type.COLLECTION Product member nor a Product.Type.PRIMARY Product with more than one variants. Otherwise, an INVALID_ARGUMENT error is returned. All inventory information for the named Product will be deleted.",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "description": "Deletes a Product.",
                          "path": "v2beta/{+name}",
                          "id": "retail.projects.locations.catalogs.branches.products.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}"
                        },
                        "import": {
                          "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products:import",
                          "path": "v2beta/{+parent}/products:import",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "GoogleCloudRetailV2betaImportProductsRequest"
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.import",
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "description": "Required. `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch` If no updateMask is specified, requires products.create permission. If updateMask is specified, requires products.update permission.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Bulk import of multiple Products. Request processing may be synchronous. No partial updating is supported. Non-existing items are created. Note that it is possible for a subset of the Products to be successfully updated.",
                          "httpMethod": "POST"
                        }
                      }
                    }
                  }
                },
                "placements": {
                  "methods": {
                    "predict": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaPredictRequest"
                      },
                      "path": "v2beta/{+placement}:predict",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaPredictResponse"
                      },
                      "parameterOrder": [
                        "placement"
                      ],
                      "description": "Makes a recommendation prediction.",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/placements/{placementsId}:predict",
                      "parameters": {
                        "placement": {
                          "description": "Required. Full resource name of the format: {name=projects/*/locations/global/catalogs/default_catalog/placements/*} The ID of the Recommendations AI placement. Before you can request predictions from your model, you must create at least one placement for it. For more information, see [Managing placements](https://cloud.google.com/retail/recommendations-ai/docs/manage-placements). The full list of available placements can be seen at https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$"
                        }
                      },
                      "id": "retail.projects.locations.catalogs.placements.predict"
                    },
                    "search": {
                      "id": "retail.projects.locations.catalogs.placements.search",
                      "description": "Performs a search. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                      "httpMethod": "POST",
                      "parameters": {
                        "placement": {
                          "location": "path",
                          "description": "Required. The resource name of the search engine placement, such as `projects/*/locations/global/catalogs/default_catalog/placements/default_search`. This field is used to identify the serving configuration name and the set of models that will be used to make the search.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$"
                        }
                      },
                      "path": "v2beta/{+placement}:search",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaSearchRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaSearchResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "placement"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/placements/{placementsId}:search"
                    }
                  }
                },
                "completionData": {
                  "methods": {
                    "import": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2beta/{+parent}/completionData:import",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Bulk import of processed completion dataset. Request processing may be synchronous. Partial updating is not supported. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search.",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/completionData:import",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaImportCompletionDataRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "retail.projects.locations.catalogs.completionData.import",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The catalog which the suggestions dataset belongs to. Format: `projects/1234/locations/global/catalogs/default_catalog`."
                        }
                      }
                    }
                  }
                },
                "servingConfigs": {
                  "methods": {
                    "delete": {
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "description": "Deletes a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource name of the ServingConfig to delete. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}",
                          "location": "path"
                        }
                      },
                      "path": "v2beta/{+name}",
                      "id": "retail.projects.locations.catalogs.servingConfigs.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "addControl": {
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "path": "v2beta/{+servingConfig}:addControl",
                      "parameters": {
                        "servingConfig": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "description": "Required. The source ServingConfig resource name . Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}"
                        }
                      },
                      "parameterOrder": [
                        "servingConfig"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaAddControlRequest"
                      },
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:addControl",
                      "description": "Enables a Control on the specified ServingConfig. The control is added in the last position of the list of controls it belongs to (e.g. if it's a facet spec control it will be applied in the last position of servingConfig.facetSpecIds) Returns a ALREADY_EXISTS error if the control has already been applied. Returns a FAILED_PRECONDITION error if the addition could exceed maximum number of control allowed for that type of control.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "retail.projects.locations.catalogs.servingConfigs.addControl"
                    },
                    "patch": {
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates a ServingConfig.",
                      "httpMethod": "PATCH",
                      "path": "v2beta/{+name}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated."
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "type": "string",
                          "description": "Immutable. Fully qualified name projects/*/locations/global/catalogs/*/servingConfig/*",
                          "required": true
                        }
                      },
                      "id": "retail.projects.locations.catalogs.servingConfigs.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "description": "Creates a ServingConfig. A maximum of 100 ServingConfigs are allowed in a Catalog, otherwise a FAILED_PRECONDITION error is returned.",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs",
                      "id": "retail.projects.locations.catalogs.servingConfigs.create",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "servingConfigId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID to use for the ServingConfig, which will become the final component of the ServingConfig's resource name. This value should be 4-63 characters, and valid characters are /a-z-_/."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. Full resource name of parent. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "v2beta/{+parent}/servingConfigs"
                    },
                    "removeControl": {
                      "parameterOrder": [
                        "servingConfig"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:removeControl",
                      "description": "Disables a Control on the specified ServingConfig. The control is removed from the ServingConfig. Returns a NOT_FOUND error if the Control is not enabled for the ServingConfig.",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "id": "retail.projects.locations.catalogs.servingConfigs.removeControl",
                      "path": "v2beta/{+servingConfig}:removeControl",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaRemoveControlRequest"
                      },
                      "parameters": {
                        "servingConfig": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "type": "string",
                          "description": "Required. The source ServingConfig resource name . Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}",
                          "location": "path"
                        }
                      }
                    },
                    "get": {
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "path": "v2beta/{+name}",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaServingConfig"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the ServingConfig to get. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "retail.projects.locations.catalogs.servingConfigs.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "description": "Lists all ServingConfigs linked to this catalog.",
                      "path": "v2beta/{+parent}/servingConfigs",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "required": true,
                          "description": "Required. The catalog resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}",
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "retail.projects.locations.catalogs.servingConfigs.list",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaListServingConfigsResponse"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs"
                    }
                  }
                },
                "userEvents": {
                  "methods": {
                    "write": {
                      "id": "retail.projects.locations.catalogs.userEvents.write",
                      "description": "Writes a single user event.",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:write",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaUserEvent"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent catalog resource name, such as `projects/1234/locations/global/catalogs/default_catalog`.",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaUserEvent"
                      },
                      "path": "v2beta/{+parent}/userEvents:write"
                    },
                    "rejoin": {
                      "description": "Starts a user event rejoin operation with latest product catalog. Events will not be annotated with detailed product information if product is missing from the catalog at the time the user event is ingested, and these events are stored as unjoined events with a limited usage on training and serving. This method can be used to start a join operation on specified events with latest version of product catalog. It can also be used to correct events joined with the wrong product catalog. A rejoin operation can take hours or days to complete.",
                      "id": "retail.projects.locations.catalogs.userEvents.rejoin",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2beta/{+parent}/userEvents:rejoin",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:rejoin",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent catalog resource name, such as `projects/1234/locations/global/catalogs/default_catalog`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaRejoinUserEventsRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "collect": {
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:collect",
                      "description": "Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a 3rd party domain. This method is used only by the Retail API JavaScript pixel and Google Tag Manager. Users should not call this method directly.",
                      "id": "retail.projects.locations.catalogs.userEvents.collect",
                      "path": "v2beta/{+parent}/userEvents:collect",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "ets": {
                          "format": "int64",
                          "type": "string",
                          "description": "The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.",
                          "location": "query"
                        },
                        "userEvent": {
                          "type": "string",
                          "description": "Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. The parent catalog name, such as `projects/1234/locations/global/catalogs/default_catalog`."
                        },
                        "uri": {
                          "location": "query",
                          "type": "string",
                          "description": "The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for 3rd party requests."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      }
                    },
                    "import": {
                      "description": "Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "retail.projects.locations.catalogs.userEvents.import",
                      "path": "v2beta/{+parent}/userEvents:import",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaImportUserEventsRequest"
                      },
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:import",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. `projects/1234/locations/global/catalogs/default_catalog`",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "purge": {
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaPurgeUserEventsRequest"
                      },
                      "description": "Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first.",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:purge",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "retail.projects.locations.catalogs.userEvents.purge",
                      "path": "v2beta/{+parent}/userEvents:purge",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The resource name of the catalog under which the events are created. The format is `projects/${projectId}/locations/global/catalogs/${catalogId}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      }
                    }
                  }
                },
                "controls": {
                  "methods": {
                    "list": {
                      "description": "Lists all Controls linked to this catalog.",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. A page token, received from a previous `ListControls` call. Provide this to retrieve the subsequent page.",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string",
                          "description": "Required. The catalog resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}",
                          "required": true
                        },
                        "filter": {
                          "description": "Optional. A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. * List controls that are used in a single ServingConfig: 'serving_config = \"boosted_home_page_cvr\"'",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "retail.projects.locations.catalogs.controls.list",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaListControlsResponse"
                      },
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls",
                      "path": "v2beta/{+parent}/controls",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaControl"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls",
                      "description": "Creates a Control. If the Control to create already exists, an ALREADY_EXISTS error is returned.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaControl"
                      },
                      "parameters": {
                        "controlId": {
                          "description": "Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value should be 4-63 characters, and valid characters are /a-z-_/.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. Full resource name of parent catalog. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}",
                          "location": "path"
                        }
                      },
                      "path": "v2beta/{+parent}/controls",
                      "id": "retail.projects.locations.catalogs.controls.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}",
                      "id": "retail.projects.locations.catalogs.controls.delete",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the Control to delete. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v2beta/{+name}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The resource name of the Control to delete. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "v2beta/{+name}",
                      "description": "Gets a Control.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaControl"
                      },
                      "httpMethod": "GET",
                      "id": "retail.projects.locations.catalogs.controls.get",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaControl"
                      },
                      "path": "v2beta/{+name}",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}",
                      "description": "Updates a Control. Control cannot be set to a different oneof field, if so an INVALID_ARGUMENT is returned. If the Control to delete does not exist, a NOT_FOUND error is returned.",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name If not set or empty, all supported fields are updated.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Immutable. Fully qualified name projects/*/locations/global/catalogs/*/controls/*",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$"
                        }
                      },
                      "httpMethod": "PATCH",
                      "id": "retail.projects.locations.catalogs.controls.patch",
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaControl"
                      }
                    }
                  }
                },
                "attributesConfig": {
                  "methods": {
                    "removeCatalogAttribute": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "retail.projects.locations.catalogs.attributesConfig.removeCatalogAttribute",
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:removeCatalogAttribute",
                      "description": "Removes the specified CatalogAttribute from the AttributesConfig. If the CatalogAttribute to remove does not exist, a NOT_FOUND error is returned.",
                      "path": "v2beta/{+attributesConfig}:removeCatalogAttribute",
                      "parameters": {
                        "attributesConfig": {
                          "type": "string",
                          "description": "Required. Full AttributesConfig resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaRemoveCatalogAttributeRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                      }
                    },
                    "addCatalogAttribute": {
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                      },
                      "parameters": {
                        "attributesConfig": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "location": "path",
                          "description": "Required. Full AttributesConfig resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "retail.projects.locations.catalogs.attributesConfig.addCatalogAttribute",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:addCatalogAttribute",
                      "description": "Adds the specified CatalogAttribute to the AttributesConfig. If the CatalogAttribute to add already exists, an ALREADY_EXISTS error is returned.",
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaAddCatalogAttributeRequest"
                      },
                      "httpMethod": "POST",
                      "path": "v2beta/{+attributesConfig}:addCatalogAttribute"
                    },
                    "replaceCatalogAttribute": {
                      "request": {
                        "$ref": "GoogleCloudRetailV2betaReplaceCatalogAttributeRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRetailV2betaAttributesConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2beta/{+attributesConfig}:replaceCatalogAttribute",
                      "description": "Replaces the specified CatalogAttribute in the AttributesConfig by updating the catalog attribute with the same CatalogAttribute.key. If the CatalogAttribute to replace does not exist, a NOT_FOUND error is returned.",
                      "httpMethod": "POST",
                      "id": "retail.projects.locations.catalogs.attributesConfig.replaceCatalogAttribute",
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:replaceCatalogAttribute",
                      "parameters": {
                        "attributesConfig": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "description": "Required. Full AttributesConfig resource name. Format: projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      }
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "The name of the operation's parent resource."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list page token."
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "The standard list page size."
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "The standard list filter."
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "id": "retail.projects.locations.catalogs.operations.list",
                      "path": "v2beta/{+name}/operations",
                      "httpMethod": "GET",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                    },
                    "get": {
                      "id": "retail.projects.locations.catalogs.operations.get",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "path": "v2beta/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations/{operationsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "The name of the operation resource.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/operations/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "id": "retail.projects.locations.operations.list",
                  "path": "v2beta/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "flatPath": "v2beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "path": "v2beta/{+name}",
                  "id": "retail.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "id": "retail.projects.operations.list",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "The name of the operation's parent resource.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list page token."
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The standard list filter."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2beta/{+name}/operations",
              "flatPath": "v2beta/projects/{projectsId}/operations",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "httpMethod": "GET"
            },
            "get": {
              "flatPath": "v2beta/projects/{projectsId}/operations/{operationsId}",
              "httpMethod": "GET",
              "path": "v2beta/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "required": true,
                  "description": "The name of the operation resource.",
                  "type": "string"
                }
              },
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "retail.projects.operations.get"
            }
          }
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudRetailV2alphaAddFulfillmentPlacesMetadata": {
      "properties": {},
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2alphaAddFulfillmentPlacesMetadata",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaPurgeProductsMetadata": {
      "id": "GoogleCloudRetailV2alphaPurgeProductsMetadata",
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "type": "string"
        },
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "description": "Operation create time.",
          "type": "string",
          "format": "google-datetime"
        },
        "successCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of entries that were deleted successfully."
        }
      },
      "description": "Metadata related to the progress of the PurgeProducts operation. This will be returned by the google.longrunning.Operation.metadata field."
    },
    "GoogleCloudRetailV2betaRuleReplacementAction": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaRuleReplacementAction",
      "properties": {
        "queryTerms": {
          "type": "array",
          "description": "Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.",
          "items": {
            "type": "string"
          }
        },
        "replacementTerm": {
          "description": "Term that will be used for replacement.",
          "type": "string"
        },
        "term": {
          "type": "string",
          "description": "Will be [deprecated = true] post migration;"
        }
      },
      "description": "Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace \"gShoe\" with \"google shoe\"."
    },
    "GoogleCloudRetailV2betaAddFulfillmentPlacesMetadata": {
      "type": "object",
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2betaAddFulfillmentPlacesMetadata",
      "properties": {}
    },
    "GoogleCloudRetailV2betaUserEventImportSummary": {
      "type": "object",
      "properties": {
        "unjoinedEventsCount": {
          "format": "int64",
          "description": "Count of user events imported, but with catalog information not found in the imported catalog.",
          "type": "string"
        },
        "joinedEventsCount": {
          "type": "string",
          "description": "Count of user events imported with complete existing catalog information.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudRetailV2betaUserEventImportSummary",
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events."
    },
    "GoogleCloudRetailV2betaRuleOnewaySynonymsAction": {
      "properties": {
        "queryTerms": {
          "type": "array",
          "description": "Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.",
          "items": {
            "type": "string"
          }
        },
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms."
        },
        "onewayTerms": {
          "items": {
            "type": "string"
          },
          "description": "Will be [deprecated = true] post migration;",
          "type": "array"
        }
      },
      "id": "GoogleCloudRetailV2betaRuleOnewaySynonymsAction",
      "type": "object",
      "description": "Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: \"sneakers\" will use a synonym of \"shoes\". \"shoes\" will not use a synonym of \"sneakers\"."
    },
    "GoogleCloudRetailV2betaExportUserEventsResponse": {
      "properties": {
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors if this field was set in the request.",
          "$ref": "GoogleCloudRetailV2betaExportErrorsConfig"
        }
      },
      "description": "Response of the ExportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "id": "GoogleCloudRetailV2betaExportUserEventsResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2ImportCompletionDataResponse": {
      "id": "GoogleCloudRetailV2ImportCompletionDataResponse",
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful.",
      "properties": {
        "errorSamples": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaCondition": {
      "type": "object",
      "properties": {
        "queryTerms": {
          "type": "array",
          "description": "A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).",
          "items": {
            "$ref": "GoogleCloudRetailV2betaConditionQueryTerm"
          }
        },
        "activeTimeRange": {
          "description": "Range of time(s) specifying when Condition is active. Condition true if any time range matches.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaConditionTimeRange"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudRetailV2betaCondition",
      "description": "Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted."
    },
    "GoogleCloudRetailV2betaRuleBoostAction": {
      "id": "GoogleCloudRetailV2betaRuleBoostAction",
      "type": "object",
      "properties": {
        "productsFilter": {
          "description": "The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": *(id: ANY(\"product_1\", \"product_2\")) * *AND * *(colorFamilies: ANY(\"Red\", \"Blue\")) *",
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "float",
          "description": "Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored."
        }
      },
      "description": "A boost action to apply to results matching condition specified above."
    },
    "GoogleCloudRetailV2betaAddCatalogAttributeRequest": {
      "id": "GoogleCloudRetailV2betaAddCatalogAttributeRequest",
      "properties": {
        "catalogAttribute": {
          "description": "Required. The CatalogAttribute to add.",
          "$ref": "GoogleCloudRetailV2betaCatalogAttribute"
        }
      },
      "type": "object",
      "description": "Request for CatalogService.AddCatalogAttribute method."
    },
    "GoogleCloudRetailV2RejoinUserEventsResponse": {
      "description": "Response message for RejoinUserEvents method.",
      "type": "object",
      "properties": {
        "rejoinedUserEventsCount": {
          "format": "int64",
          "description": "Number of user events that were joined with latest product catalog.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2RejoinUserEventsResponse"
    },
    "GoogleCloudRetailV2alphaUserEventImportSummary": {
      "id": "GoogleCloudRetailV2alphaUserEventImportSummary",
      "type": "object",
      "properties": {
        "unjoinedEventsCount": {
          "type": "string",
          "description": "Count of user events imported, but with catalog information not found in the imported catalog.",
          "format": "int64"
        },
        "joinedEventsCount": {
          "description": "Count of user events imported with complete existing catalog information.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events."
    },
    "GoogleCloudRetailV2betaAddControlRequest": {
      "description": "Request for AddControl method.",
      "properties": {
        "controlId": {
          "description": "Required. The id of the control to apply. Assumed to be in the same catalog as the serving config - if id is not found a NOT_FOUND error is returned.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaAddControlRequest",
      "type": "object"
    },
    "GoogleCloudRetailV2betaRejoinUserEventsResponse": {
      "description": "Response message for RejoinUserEvents method.",
      "properties": {
        "rejoinedUserEventsCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of user events that were joined with latest product catalog."
        }
      },
      "id": "GoogleCloudRetailV2betaRejoinUserEventsResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2betaCompleteQueryResponse": {
      "properties": {
        "completionResults": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaCompleteQueryResponseCompletionResult"
          },
          "type": "array",
          "description": "Results of the matching suggestions. The result list is ordered and the first result is top suggestion."
        },
        "attributionToken": {
          "type": "string",
          "description": "A unique complete token. This should be included in the SearchRequest resulting from this completion, which enables accurate attribution of complete model performance."
        },
        "recentSearchResults": {
          "description": "Matched recent searches of this user. The maximum number of recent searches is 10. This field is a restricted feature. Contact Retail Search support team if you are interested in enabling it. This feature is only available when CompleteQueryRequest.visitor_id field is set and UserEvent is imported. The recent searches satisfy the follow rules: * They are ordered from latest to oldest. * They are matched with CompleteQueryRequest.query case insensitively. * They are transformed to lower cases. * They are UTF-8 safe. Recent searches are deduplicated. More recent searches will be reserved when duplication happens.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult"
          }
        }
      },
      "id": "GoogleCloudRetailV2betaCompleteQueryResponse",
      "type": "object",
      "description": "Response of the auto-complete query."
    },
    "GoogleCloudRetailV2alphaPurgeProductsResponse": {
      "description": "Response of the PurgeProductsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaPurgeProductsResponse",
      "properties": {
        "purgeCount": {
          "format": "int64",
          "type": "string",
          "description": "The total count of products purged as a result of the operation."
        },
        "purgeSample": {
          "type": "array",
          "description": "A sample of the product names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRetailV2betaUserEvent": {
      "properties": {
        "attributes": {
          "description": "Extra user event features to include in the recommendation model. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Retail API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is traffic_channel, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2betaCustomAttribute"
          }
        },
        "sessionId": {
          "description": "A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the sesion_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add visitor_id as prefix.",
          "type": "string"
        },
        "eventType": {
          "description": "Required. User event type. Allowed values are: * `add-to-cart`: Products being added to cart. * `category-page-view`: Special pages such as sale or promotion pages viewed. * `detail-page-view`: Products detail page viewed. * `home-page-view`: Homepage viewed. * `promotion-offered`: Promotion is offered to a user. * `promotion-not-offered`: Promotion is not offered to a user. * `purchase-complete`: User finishing a purchase. * `search`: Product search. * `shopping-cart-page-view`: User viewing a shopping cart.",
          "type": "string"
        },
        "userInfo": {
          "description": "User information.",
          "$ref": "GoogleCloudRetailV2betaUserInfo"
        },
        "visitorId": {
          "type": "string",
          "description": "Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. The field should not contain PII or user-data. We recommend to use Google Analystics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field."
        },
        "attributionToken": {
          "description": "Highly recommended for user events that are the result of PredictionService.Predict. This field enables accurate attribution of recommendation model performance. The value must be a valid PredictResponse.attribution_token for user events that are the result of PredictionService.Predict. The value must be a valid SearchResponse.attribution_token for user events that are the result of SearchService.Search. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass PredictResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the PredictResponse.attribution_token to this field.",
          "type": "string"
        },
        "referrerUri": {
          "type": "string",
          "description": "The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically."
        },
        "cartId": {
          "description": "The ID or name of the associated shopping cart. This ID is used to associate multiple items added or present in the cart before purchase. This can only be set for `add-to-cart`, `purchase-complete`, or `shopping-cart-page-view` events.",
          "type": "string"
        },
        "orderBy": {
          "type": "string",
          "description": "The order in which products are returned. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "eventTime": {
          "type": "string",
          "description": "Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.",
          "format": "google-datetime"
        },
        "experimentIds": {
          "description": "A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Retail API, using different recommendation models).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "filter": {
          "type": "string",
          "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. See SearchRequest.filter for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "pageCategories": {
          "description": "The categories associated with a category page. To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, please replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \"pageCategories\" : [\"Sales \u003e 2017 Black Friday Deals\"]. Required for `category-page-view` events. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "completionDetail": {
          "description": "The main auto-completion details related to the event. This field should be set for `search` event when autocomplete function is enabled and the user clicks a suggestion for search.",
          "$ref": "GoogleCloudRetailV2betaCompletionDetail"
        },
        "searchQuery": {
          "type": "string",
          "description": "The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "uri": {
          "description": "Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.",
          "type": "string"
        },
        "offset": {
          "type": "integer",
          "description": "An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an INVALID_ARGUMENT is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.",
          "format": "int32"
        },
        "purchaseTransaction": {
          "description": "A transaction represents the entire purchase transaction. Required for `purchase-complete` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.",
          "$ref": "GoogleCloudRetailV2betaPurchaseTransaction"
        },
        "pageViewId": {
          "description": "A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.",
          "type": "string"
        },
        "productDetails": {
          "description": "The main product details related to the event. This field is required for the following event types: * `add-to-cart` * `detail-page-view` * `purchase-complete` * `search` In a `search` event, this field represents the products returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different product_details is desired. The end user may have not finished browsing the whole page yet.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaProductDetail"
          },
          "type": "array"
        }
      },
      "description": "UserEvent captures all metadata information Retail API needs to know about how end users interact with customers' website.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaUserEvent"
    },
    "GoogleCloudRetailV2alphaImportUserEventsResponse": {
      "id": "GoogleCloudRetailV2alphaImportUserEventsResponse",
      "type": "object",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "properties": {
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors if this field was set in the request.",
          "$ref": "GoogleCloudRetailV2alphaImportErrorsConfig"
        },
        "importSummary": {
          "$ref": "GoogleCloudRetailV2alphaUserEventImportSummary",
          "description": "Aggregated statistics of user event import status."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        }
      }
    },
    "GoogleCloudRetailV2alphaAddFulfillmentPlacesResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2alphaAddFulfillmentPlacesResponse",
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the AddFulfillmentPlaces method.",
      "properties": {}
    },
    "GoogleCloudRetailV2betaImportErrorsConfig": {
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors will be written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaImportErrorsConfig",
      "description": "Configuration of destination for Import related errors."
    },
    "GoogleCloudRetailV2betaCatalogAttribute": {
      "id": "GoogleCloudRetailV2betaCatalogAttribute",
      "type": "object",
      "description": "Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`."
        },
        "searchableOption": {
          "type": "string",
          "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes.",
          "enumDescriptions": [
            "Value used when unset. Defaults to SEARCHABLE_DISABLED.",
            "Searchable option enabled for an attribute.",
            "Searchable option disabled for an attribute."
          ],
          "enum": [
            "SEARCHABLE_OPTION_UNSPECIFIED",
            "SEARCHABLE_ENABLED",
            "SEARCHABLE_DISABLED"
          ]
        },
        "type": {
          "description": "Output only. The type of this attribute. This is derived from the attribute in Product.attributes.",
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "The type of the attribute is unknown. Used when type cannot be derived from attribute that is not in_use.",
            "Textual attribute.",
            "Numerical attribute."
          ],
          "enum": [
            "UNKNOWN",
            "TEXTUAL",
            "NUMERICAL"
          ]
        },
        "inUse": {
          "description": "Output only. Indicates whether this attribute has been used by any products. `True` if at least one Product is using this attribute in Product.attributes. Otherwise, this field is `False`. CatalogAttribute can be pre-loaded by using AddCatalogAttribute, ImportCatalogAttributes, or UpdateAttributesConfig APIs. This field is `False` for pre-loaded CatalogAttributes. Only CatalogAttributes that are not in use by products can be deleted. CatalogAttributes that are in use by products cannot be deleted; however, their configuration properties will reset to default values upon removal request. After catalog changes, it takes about 10 minutes for this field to update.",
          "readOnly": true,
          "type": "boolean"
        },
        "dynamicFacetableOption": {
          "enum": [
            "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED",
            "DYNAMIC_FACETABLE_ENABLED",
            "DYNAMIC_FACETABLE_DISABLED"
          ],
          "enumDescriptions": [
            "Value used when unset. Defaults to DYNAMIC_FACETABLE_ENABLED.",
            "Dynamic facetable option enabled for an attribute.",
            "Dynamic facetable option disabled for an attribute."
          ],
          "description": "If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        },
        "indexableOption": {
          "type": "string",
          "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search.",
          "enum": [
            "INDEXABLE_OPTION_UNSPECIFIED",
            "INDEXABLE_ENABLED",
            "INDEXABLE_DISABLED"
          ],
          "enumDescriptions": [
            "Value used when unset. Defaults to INDEXABLE_ENABLED.",
            "Indexable option enabled for an attribute.",
            "Indexable option disabled for an attribute."
          ]
        }
      }
    },
    "GoogleCloudRetailV2betaAttributesConfig": {
      "properties": {
        "attributeConfigLevel": {
          "description": "Output only. The AttributeConfigLevel used for this catalog.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED",
            "PRODUCT_LEVEL_ATTRIBUTE_CONFIG",
            "CATALOG_LEVEL_ATTRIBUTE_CONFIG"
          ],
          "enumDescriptions": [
            "Value used when unset. Defaults to CATALOG_LEVEL_ATTRIBUTE_CONFIG.",
            "At this level, we honor the attribute configurations set in Product.attributes.",
            "At this level, we honor the attribute configurations set in CatalogConfig.attribute_configs."
          ]
        },
        "catalogAttributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2betaCatalogAttribute"
          },
          "description": "Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or searchable for each attribute. The key is catalog attribute's name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of catalog attributes allowed in a request is 1000."
        },
        "name": {
          "description": "Required. Immutable. The fully qualified resource name of the attribute config. Format: \"projects/*/locations/*/catalogs/*/attributesConfig\"",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaAttributesConfig",
      "description": "Catalog level attribute config."
    },
    "GoogleCloudRetailV2ImportErrorsConfig": {
      "description": "Configuration of destination for Import related errors.",
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors will be written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      },
      "id": "GoogleCloudRetailV2ImportErrorsConfig",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesResponse",
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the RemoveFulfillmentPlaces method.",
      "properties": {}
    },
    "GoogleCloudRetailV2betaCompleteQueryResponseCompletionResult": {
      "properties": {
        "suggestion": {
          "type": "string",
          "description": "The suggestion for the query."
        },
        "attributes": {
          "type": "object",
          "description": "Additional custom attributes ingested through BigQuery.",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2betaCustomAttribute"
          }
        }
      },
      "type": "object",
      "description": "Resource that represents completion results.",
      "id": "GoogleCloudRetailV2betaCompleteQueryResponseCompletionResult"
    },
    "GoogleCloudRetailV2ImportUserEventsResponse": {
      "properties": {
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors if this field was set in the request.",
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig"
        },
        "importSummary": {
          "$ref": "GoogleCloudRetailV2UserEventImportSummary",
          "description": "Aggregated statistics of user event import status."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        }
      },
      "type": "object",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "id": "GoogleCloudRetailV2ImportUserEventsResponse"
    },
    "GoogleCloudRetailV2alphaRemoveLocalInventoriesMetadata": {
      "id": "GoogleCloudRetailV2alphaRemoveLocalInventoriesMetadata",
      "description": "Metadata related to the progress of the RemoveLocalInventories operation. Currently empty because there is no meaningful metadata populated from the RemoveLocalInventories method.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2betaPredictResponsePredictionResult": {
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Additional product metadata / annotations. Possible values: * `product`: JSON representation of the product. Will be set if `returnProduct` is set to true in `PredictRequest.params`. * `score`: Prediction score in double value. Will be set if `returnScore` is set to true in `PredictRequest.params`.",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "id": {
          "type": "string",
          "description": "ID of the recommended product"
        }
      },
      "description": "PredictionResult represents the recommendation prediction results.",
      "id": "GoogleCloudRetailV2betaPredictResponsePredictionResult"
    },
    "GoogleCloudRetailV2AddFulfillmentPlacesMetadata": {
      "type": "object",
      "id": "GoogleCloudRetailV2AddFulfillmentPlacesMetadata",
      "properties": {},
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the AddFulfillmentPlaces method."
    },
    "GoogleCloudRetailV2betaControl": {
      "properties": {
        "associatedServingConfigIds": {
          "readOnly": true,
          "description": "Output only. List of serving configuration ids that that are associated with this control. Note the association is managed via the ServingConfig, this is an output only denormalizeed view. Assumed to be in the same catalog.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facetSpec": {
          "$ref": "GoogleCloudRetailV2betaSearchRequestFacetSpec",
          "description": "A facet specification to perform faceted search."
        },
        "solutionTypes": {
          "items": {
            "enum": [
              "SOLUTION_TYPE_UNSPECIFIED",
              "SOLUTION_TYPE_RECOMMENDATION",
              "SOLUTION_TYPE_SEARCH"
            ],
            "enumDescriptions": [
              "Default value.",
              "Used for Recommendations AI.",
              "Used for Retail Search."
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Required. Immutable. The solution types that the serving config is used for. Currently we support setting only one type of solution at creation time. Only `SOLUTION_TYPE_SEARCH` value is supported at the moment. If no solution type is provided at creation time, will default to SOLUTION_TYPE_SEARCH."
        },
        "rule": {
          "description": "A rule control - a condition-action pair. Enacts a set action when the condition is triggered. For example: Boost \"gShoe\" when query full matches \"Running Shoes\".",
          "$ref": "GoogleCloudRetailV2betaRule"
        },
        "displayName": {
          "description": "Required. The human readable control display name. Used in Retail UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is thrown.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. Fully qualified name projects/*/locations/global/catalogs/*/controls/*"
        },
        "searchSolutionUseCase": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "The value when it's unspecified. Defaults to SEARCH.",
              "Search use case. Expects the traffic has a non-empty query.",
              "Browse use case. Expects the traffic has an empty query."
            ],
            "enum": [
              "SEARCH_SOLUTION_USE_CASE_UNSPECIFIED",
              "SEARCH_SOLUTION_USE_CASE_SEARCH",
              "SEARCH_SOLUTION_USE_CASE_BROWSE"
            ]
          },
          "description": "Required. Specifies the use case for the control. Affects what condition fields can be set. Only settable by search controls. Will default to SEARCH_SOLUTION_USE_CASE_SEARCH if not specified. Currently only allow one search_solution_use_case per control.",
          "type": "array"
        }
      },
      "description": "Configures dynamic serving time metadata that is used to pre and post process search/recommendation model results.",
      "id": "GoogleCloudRetailV2betaControl",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaExportMetadata": {
      "description": "Metadata related to the progress of the Export operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Operation create time.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Operation last update time. If the operation is done, this is also the finish time."
        }
      },
      "id": "GoogleCloudRetailV2alphaExportMetadata",
      "type": "object"
    },
    "GoogleCloudRetailV2betaServingConfig": {
      "properties": {
        "diversityLevel": {
          "description": "How much diversity to use in recommendation model results e.g. 'medium-diversity' or 'high-diversity'. Currently supported values: * 'no-diversity' * 'low-diversity' * 'medium-diversity' * 'high-diversity' * 'auto-diversity' If not specified, we choose default based on recommendation model type. Default value: 'no-diversity'. Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION.",
          "type": "string"
        },
        "modelId": {
          "type": "string",
          "description": "The id of the model to use at serving time. Currently only RecommendationModels are supported: https://cloud.google.com/retail/recommendations-ai/docs/create-models Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required when solution_types is SOLUTION_TYPE_RECOMMENDATION."
        },
        "name": {
          "description": "Immutable. Fully qualified name projects/*/locations/global/catalogs/*/servingConfig/*",
          "type": "string"
        },
        "ignoreControlIds": {
          "items": {
            "type": "string"
          },
          "description": "Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the list will execute. - Order does not matter. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "type": "array"
        },
        "doNotAssociateControlIds": {
          "type": "array",
          "description": "Condition do not associate specifications. If multiple do not associate conditions match, all matching do not associate controls in the list will execute. - Order does not matter. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "twowaySynonymsControlIds": {
          "type": "array",
          "description": "Condition synonyms specifications. If multiple syonyms conditions match, all matching synonyms control in the list will execute. Order of controls in the list will not matter. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "facetControlIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Facet specifications for faceted search. If empty, no facets are returned. The ids refer to the ids of Control resources with only the Facet control set. These controls are assumed to be in the same Catalog as the ServingConfig. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned. Can only be set if solution_types is SOLUTION_TYPE_SEARCH."
        },
        "boostControlIds": {
          "type": "array",
          "description": "Condition boost specifications. If a product matches multiple conditions in the specifications, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 100. Notice that if both ServingConfig.boost_control_ids and [SearchRequest.boost_spec] are set, the boost conditions from both places are evaluated. If a search request matches multiple boost conditions, the final boost score is equal to the sum of the boost scores from all matched boost conditions. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human readable serving config display name. Used in Retail UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "solutionTypes": {
          "items": {
            "enum": [
              "SOLUTION_TYPE_UNSPECIFIED",
              "SOLUTION_TYPE_RECOMMENDATION",
              "SOLUTION_TYPE_SEARCH"
            ],
            "enumDescriptions": [
              "Default value.",
              "Used for Recommendations AI.",
              "Used for Retail Search."
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Required. Immutable. Specifies the solution types that a serving config can be associated with. Currently we support setting only one type of solution."
        },
        "replacementControlIds": {
          "items": {
            "type": "string"
          },
          "description": "Condition replacement specifications. - Applied according to the order in the list. - A previously replaced term can not be re-replaced. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "type": "array"
        },
        "enableCategoryFilterLevel": {
          "description": "Whether to add additional category filters on the 'similar-items' model. If not specified, we enable it by default. Allowed values are: * 'no-category-match': No additional filtering of original results from the model and the customer's filters. * 'relaxed-category-match': Only keep results with categories that match at least one item categories in the PredictRequests's context item. * If customer also sends filters in the PredictRequest, then the results will satisfy both conditions (user given and category match). Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION.",
          "type": "string"
        },
        "onewaySynonymsControlIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway synonyms controls in the list will execute. Order of controls in the list will not matter. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH."
        },
        "priceRerankingLevel": {
          "type": "string",
          "description": "How much price ranking we want in serving results. Price reranking causes product items with a similar recommendation probability to be ordered by price, with the highest-priced items first. This setting could result in a decrease in click-through and conversion rates. Allowed values are: * 'no-price-reranking' * 'low-price-raranking' * 'medium-price-reranking' * 'high-price-reranking' If not specified, we choose default based on model type. Default value: 'no-price-reranking'. Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION."
        },
        "dynamicFacetSpec": {
          "$ref": "GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec",
          "description": "The specification for dynamically generated facets. Notice that only textual facets can be dynamically generated. Can only be set if solution_types is SOLUTION_TYPE_SEARCH."
        },
        "redirectControlIds": {
          "type": "array",
          "description": "Condition redirect specifications. Only the first triggered redirect action is applied, even if multiple apply. Maximum number of specifications is 1000. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "filterControlIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Condition filter specifications. If a product matches multiple conditions in the specifications, filters from these specifications are all applied and combined via the AND operator. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaServingConfig",
      "description": "Configures metadata that is used to generate serving time results (e.g. search results or recommendation predictions). The ServingConfig is passed in the search and predict request and together with the Catalog.default_branch, generates results."
    },
    "GoogleRpcStatus": {
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudRetailV2betaRuleRedirectAction": {
      "properties": {
        "redirectUri": {
          "description": "URL must have length equal or less than 2000 characters.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaRuleRedirectAction",
      "description": "Redirects a shopper to a specific page. * Rule Condition: - Must specify Condition. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaSearchRequestPersonalizationSpec": {
      "id": "GoogleCloudRetailV2betaSearchRequestPersonalizationSpec",
      "type": "object",
      "description": "The specification for personalization.",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "AUTO",
            "DISABLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. Defaults to Mode.AUTO.",
            "Let CRS decide whether to use personalization.",
            "Disable personalization."
          ],
          "description": "Defaults to Mode.AUTO."
        }
      }
    },
    "GoogleCloudRetailV2betaRejoinUserEventsMetadata": {
      "id": "GoogleCloudRetailV2betaRejoinUserEventsMetadata",
      "type": "object",
      "description": "Metadata for RejoinUserEvents method.",
      "properties": {}
    },
    "GoogleCloudRetailV2alphaExportUserEventsResponse": {
      "id": "GoogleCloudRetailV2alphaExportUserEventsResponse",
      "type": "object",
      "description": "Response of the ExportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "properties": {
        "errorSamples": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request."
        },
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2alphaExportErrorsConfig",
          "description": "Echoes the destination for the complete errors if this field was set in the request."
        }
      }
    },
    "GoogleCloudRetailV2alphaRemoveLocalInventoriesResponse": {
      "description": "Response of the RemoveLocalInventories API. Currently empty because there is no meaningful response populated from the RemoveLocalInventories method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRetailV2alphaRemoveLocalInventoriesResponse"
    },
    "GoogleCloudRetailLoggingSourceLocation": {
      "properties": {
        "functionName": {
          "description": "Human-readable name of a function or method. For example, \"google.cloud.retail.v2.UserEventService.ImportUserEvents\".",
          "type": "string"
        }
      },
      "description": "Indicates a location in the source code of the service for which errors are reported.",
      "type": "object",
      "id": "GoogleCloudRetailLoggingSourceLocation"
    },
    "GoogleCloudRetailV2betaRuleDoNotAssociateAction": {
      "id": "GoogleCloudRetailV2betaRuleDoNotAssociateAction",
      "type": "object",
      "description": "Prevents `query_term` from being associated with specified terms during search. Example: Don't associate \"gShoe\" and \"cheap\".",
      "properties": {
        "doNotAssociateTerms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Cannot contain duplicates or the query term. Can specify up to 100 terms."
        },
        "queryTerms": {
          "items": {
            "type": "string"
          },
          "description": "Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.",
          "type": "array"
        },
        "terms": {
          "description": "Will be [deprecated = true] post migration;",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRetailV2betaAddFulfillmentPlacesResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2betaAddFulfillmentPlacesResponse",
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the AddFulfillmentPlaces method."
    },
    "GoogleCloudRetailV2alphaPurgeUserEventsResponse": {
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "id": "GoogleCloudRetailV2alphaPurgeUserEventsResponse",
      "properties": {
        "purgedEventsCount": {
          "format": "int64",
          "description": "The total count of events purged as a result of the operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaRejoinUserEventsRequest": {
      "properties": {
        "userEventRejoinScope": {
          "enum": [
            "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED",
            "JOINED_EVENTS",
            "UNJOINED_EVENTS"
          ],
          "description": "The type of the user event rejoin to define the scope and range of the user events to be rejoined with the latest product catalog. Defaults to USER_EVENT_REJOIN_SCOPE_UNSPECIFIED if this field is not set, or set to an invalid integer value.",
          "enumDescriptions": [
            "Rejoin all events with the latest product catalog, including both joined events and unjoined events.",
            "Only rejoin joined events with the latest product catalog.",
            "Only rejoin unjoined events with the latest product catalog."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaRejoinUserEventsRequest",
      "type": "object",
      "description": "Request message for RejoinUserEvents method."
    },
    "GoogleCloudRetailV2betaAddFulfillmentPlacesRequest": {
      "description": "Request message for AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2betaAddFulfillmentPlacesRequest",
      "type": "object",
      "properties": {
        "placeIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The IDs for this type, such as the store IDs for \"pickup-in-store\" or the region IDs for \"same-day-delivery\" to be added for this type. Duplicate IDs will be automatically ignored. At least 1 value is required, and a maximum of 2000 values are allowed. Each value must be a string with a length limit of 10 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned. If the total number of place IDs exceeds 2000 for this type after adding, then the update will be rejected."
        },
        "addTime": {
          "description": "The time when the fulfillment updates are issued, used to prevent out-of-order updates on fulfillment information. If not provided, the internal system time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product is not found, the fulfillment information will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        },
        "type": {
          "description": "Required. The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. This field directly corresponds to Product.fulfillment_info.type.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaPriceInfoPriceRange": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "GoogleCloudRetailV2betaInterval",
          "description": "The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id."
        },
        "originalPrice": {
          "description": "The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.",
          "$ref": "GoogleCloudRetailV2betaInterval"
        }
      },
      "description": "The price range of all variant Product having the same Product.primary_product_id.",
      "id": "GoogleCloudRetailV2betaPriceInfoPriceRange"
    },
    "GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec": {
      "type": "object",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ],
          "description": "Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Disable Dynamic Facet.",
            "Automatic mode built by Google Retail Search."
          ]
        }
      },
      "description": "The specifications of dynamically generated facets.",
      "id": "GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec"
    },
    "GoogleCloudRetailV2betaUserInfo": {
      "properties": {
        "ipAddress": {
          "description": "The end user's IP address. Required for getting SearchResponse.sponsored_results. This field is used to extract location information for personalization. This field must be either an IPv4 address (e.g. \"104.133.9.80\") or an IPv6 address (e.g. \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"). Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.",
          "type": "string"
        },
        "userAgent": {
          "type": "string",
          "description": "User agent as included in the HTTP header. Required for getting SearchResponse.sponsored_results. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set."
        },
        "directUserRequest": {
          "description": "True if the request is made directly from the end user, in which case the ip_address and user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.",
          "type": "boolean"
        },
        "userId": {
          "description": "Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        }
      },
      "description": "Information of an end user.",
      "id": "GoogleCloudRetailV2betaUserInfo",
      "type": "object"
    },
    "GoogleCloudRetailV2RemoveFulfillmentPlacesResponse": {
      "properties": {},
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the RemoveFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2RemoveFulfillmentPlacesResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2betaExportMetadata": {
      "description": "Metadata related to the progress of the Export operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Operation create time."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Operation last update time. If the operation is done, this is also the finish time."
        }
      },
      "id": "GoogleCloudRetailV2betaExportMetadata"
    },
    "GoogleCloudRetailV2betaSetInventoryResponse": {
      "type": "object",
      "properties": {},
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the SetInventory method.",
      "id": "GoogleCloudRetailV2betaSetInventoryResponse"
    },
    "GoogleCloudRetailV2betaImportMetadata": {
      "description": "Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "id": "GoogleCloudRetailV2betaImportMetadata",
      "properties": {
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "format": "int64",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Operation last update time. If the operation is done, this is also the finish time."
        },
        "successCount": {
          "description": "Count of entries that were processed successfully.",
          "type": "string",
          "format": "int64"
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request / operation. This is parroting back the requestId that was passed in the request."
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification will be sent to specified Pub/Sub topic. The message data will be JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Operation create time."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2RejoinUserEventsMetadata": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRetailV2RejoinUserEventsMetadata",
      "description": "Metadata for RejoinUserEvents method."
    },
    "GoogleCloudRetailLoggingErrorContext": {
      "id": "GoogleCloudRetailLoggingErrorContext",
      "description": "A description of the context in which an error occurred.",
      "properties": {
        "reportLocation": {
          "description": "The location in the source code where the decision was made to report the error, usually the place where it was logged.",
          "$ref": "GoogleCloudRetailLoggingSourceLocation"
        },
        "httpRequest": {
          "$ref": "GoogleCloudRetailLoggingHttpRequestContext",
          "description": "The HTTP request which was processed when the error was triggered."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2alphaSetInventoryMetadata": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2alphaSetInventoryMetadata",
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the SetInventory method."
    },
    "GoogleCloudRetailV2AddFulfillmentPlacesResponse": {
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2AddFulfillmentPlacesResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudRetailV2betaSearchRequest": {
      "properties": {
        "orderBy": {
          "description": "The order in which products are returned. Products can be ordered by a field in an Product object. Leave it unset if ordered by relevance. OrderBy expression is case-sensitive. See more details at this [user guide](https://cloud.google.com/retail/docs/filter-and-order#order). If this field is unrecognizable, an INVALID_ARGUMENT is returned.",
          "type": "string"
        },
        "userInfo": {
          "$ref": "GoogleCloudRetailV2betaUserInfo",
          "description": "User information."
        },
        "searchMode": {
          "enum": [
            "SEARCH_MODE_UNSPECIFIED",
            "PRODUCT_SEARCH_ONLY",
            "FACETED_SEARCH_ONLY"
          ],
          "description": "The search mode of the search request. If not specified, a single search request triggers both product search and faceted search.",
          "type": "string",
          "enumDescriptions": [
            "Default value. In this case both product search and faceted search will be performed. Both [SearchResponse.SearchResult] and [SearchResponse.Facet] will be returned.",
            "Only product search will be performed. The faceted search will be disabled. Only [SearchResponse.SearchResult] will be returned. [SearchResponse.Facet] will not be returned, even if SearchRequest.facet_specs or SearchRequest.dynamic_facet_spec is set.",
            "Only faceted search will be performed. The product search will be disabled. When in this mode, one or both of SearchRequest.facet_spec and SearchRequest.dynamic_facet_spec should be set. Otherwise, an INVALID_ARGUMENT error is returned. Only [SearchResponse.Facet] will be returned. [SearchResponse.SearchResult] will not be returned."
          ]
        },
        "pageCategories": {
          "type": "array",
          "description": "The categories associated with a category page. Required for category navigation queries to achieve good search quality. The format should be the same as UserEvent.page_categories; To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, please replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \"pageCategories\" : [\"Sales \u003e 2017 Black Friday Deals\"].",
          "items": {
            "type": "string"
          }
        },
        "queryExpansionSpec": {
          "description": "The query expansion specification that specifies the conditions under which query expansion will occur. See more details at this [user guide](https://cloud.google.com/retail/docs/result-size#query_expansion).",
          "$ref": "GoogleCloudRetailV2betaSearchRequestQueryExpansionSpec"
        },
        "variantRollupKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The keys to fetch and rollup the matching variant Products attributes, FulfillmentInfo or LocalInventorys attributes. The attributes from all the matching variant Products or LocalInventorys are merged and de-duplicated. Notice that rollup attributes will lead to extra query latency. Maximum number of keys is 30. For FulfillmentInfo, a fulfillment type and a fulfillment ID must be provided in the format of \"fulfillmentType.fulfillmentId\". E.g., in \"pickupInStore.store123\", \"pickupInStore\" is fulfillment type and \"store123\" is the store ID. Supported keys are: * colorFamilies * price * originalPrice * discount * variantId * inventory(place_id,price) * inventory(place_id,original_price) * inventory(place_id,attributes.key), where key is any key in the Product.inventories.attributes map. * attributes.key, where key is any key in the Product.attributes map. * pickupInStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"pickup-in-store\". * shipToStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"ship-to-store\". * sameDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"same-day-delivery\". * nextDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"next-day-delivery\". * customFulfillment1.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-1\". * customFulfillment2.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-2\". * customFulfillment3.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-3\". * customFulfillment4.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-4\". * customFulfillment5.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-5\". If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned."
        },
        "filter": {
          "type": "string",
          "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. Filter expression is case-sensitive. See more details at this [user guide](https://cloud.google.com/retail/docs/filter-and-order#filter). If this field is unrecognizable, an INVALID_ARGUMENT is returned."
        },
        "offset": {
          "type": "integer",
          "description": "A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Products deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an INVALID_ARGUMENT is returned.",
          "format": "int32"
        },
        "canonicalFilter": {
          "description": "The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. For example, if a query does not have enough results, an expanded query with SearchRequest.canonical_filter will be returned as a supplement of the original query. This field is strongly recommended to achieve high search quality. See SearchRequest.filter for more details about filter syntax.",
          "type": "string"
        },
        "branch": {
          "type": "string",
          "description": "The branch resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/0`. Use \"default_branch\" as the branch ID or leave this field empty, to search products under the default branch."
        },
        "visitorId": {
          "type": "string",
          "description": "Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This should be the same identifier as UserEvent.visitor_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "pageToken": {
          "type": "string",
          "description": "A page token SearchResponse.next_page_token, received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "dynamicFacetSpec": {
          "$ref": "GoogleCloudRetailV2betaSearchRequestDynamicFacetSpec",
          "description": "The specification for dynamically generated facets. Notice that only textual facets can be dynamically generated. This feature requires additional allowlisting. Contact Retail Search support team if you are interested in using dynamic facet feature."
        },
        "facetSpecs": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchRequestFacetSpec"
          },
          "type": "array",
          "description": "Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "personalizationSpec": {
          "description": "The specification for personalization.",
          "$ref": "GoogleCloudRetailV2betaSearchRequestPersonalizationSpec"
        },
        "query": {
          "type": "string",
          "description": "Raw search query."
        },
        "boostSpec": {
          "description": "Boost specification to boost certain products. See more details at this [user guide](https://cloud.google.com/retail/docs/boosting). Notice that if both ServingConfig.boost_control_ids and [SearchRequest.boost_spec] are set, the boost conditions from both places are evaluated. If a search request matches multiple boost conditions, the final boost score is equal to the sum of the boost scores from all matched boost conditions.",
          "$ref": "GoogleCloudRetailV2betaSearchRequestBoostSpec"
        },
        "pageSize": {
          "format": "int32",
          "description": "Maximum number of Products to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 120. Values above 120 will be coerced to 120. If this field is negative, an INVALID_ARGUMENT is returned.",
          "type": "integer"
        }
      },
      "description": "Request message for SearchService.Search method.",
      "id": "GoogleCloudRetailV2betaSearchRequest",
      "type": "object"
    },
    "GoogleCloudRetailV2betaFulfillmentInfo": {
      "properties": {
        "placeIds": {
          "description": "The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        }
      },
      "description": "Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.",
      "id": "GoogleCloudRetailV2betaFulfillmentInfo",
      "type": "object"
    },
    "GoogleCloudRetailV2betaInterval": {
      "properties": {
        "maximum": {
          "format": "double",
          "type": "number",
          "description": "Inclusive upper bound."
        },
        "exclusiveMinimum": {
          "description": "Exclusive lower bound.",
          "format": "double",
          "type": "number"
        },
        "minimum": {
          "description": "Inclusive lower bound.",
          "type": "number",
          "format": "double"
        },
        "exclusiveMaximum": {
          "format": "double",
          "type": "number",
          "description": "Exclusive upper bound."
        }
      },
      "description": "A floating point interval.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaInterval"
    },
    "GoogleCloudRetailV2betaSearchResponseFacetFacetValue": {
      "type": "object",
      "properties": {
        "interval": {
          "$ref": "GoogleCloudRetailV2betaInterval",
          "description": "Interval value for a facet, such as [10, 20) for facet \"price\"."
        },
        "value": {
          "type": "string",
          "description": "Text value of a facet, such as \"Black\" for facet \"colorFamilies\"."
        },
        "count": {
          "type": "string",
          "description": "Number of items that have this facet value.",
          "format": "int64"
        }
      },
      "description": "A facet value which contains value names and their count.",
      "id": "GoogleCloudRetailV2betaSearchResponseFacetFacetValue"
    },
    "GoogleCloudRetailV2betaSetInventoryMetadata": {
      "id": "GoogleCloudRetailV2betaSetInventoryMetadata",
      "type": "object",
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the SetInventory method.",
      "properties": {}
    },
    "GoogleCloudRetailV2betaConditionQueryTerm": {
      "type": "object",
      "description": "Query terms that we want to match on.",
      "id": "GoogleCloudRetailV2betaConditionQueryTerm",
      "properties": {
        "fullMatch": {
          "type": "boolean",
          "description": "Whether this is supposed to be a full or partial match."
        },
        "value": {
          "type": "string",
          "description": "The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. Example) \"a b c\" is 3 terms and allowed, \" a b c d\" is 4 terms and not allowed for partial match."
        }
      }
    },
    "GoogleCloudRetailV2betaRemoveFulfillmentPlacesRequest": {
      "id": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesRequest",
      "description": "Request message for RemoveFulfillmentPlaces method.",
      "properties": {
        "removeTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the fulfillment updates are issued, used to prevent out-of-order updates on fulfillment information. If not provided, the internal system time will be used."
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product is not found, the fulfillment information will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        },
        "type": {
          "type": "string",
          "description": "Required. The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. This field directly corresponds to Product.fulfillment_info.type."
        },
        "placeIds": {
          "description": "Required. The IDs for this type, such as the store IDs for \"pickup-in-store\" or the region IDs for \"same-day-delivery\", to be removed for this type. At least 1 value is required, and a maximum of 2000 values are allowed. Each value must be a string with a length limit of 10 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailLoggingErrorLog": {
      "type": "object",
      "id": "GoogleCloudRetailLoggingErrorLog",
      "description": "An error log which is reported to the Error Reporting system. This proto a superset of google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.",
      "properties": {
        "requestPayload": {
          "description": "The API request payload, represented as a protocol buffer. Most API request types are supported. For example: \"type.googleapis.com/google.cloud.retail.v2.ProductService.CreateProductRequest\" \"type.googleapis.com/google.cloud.retail.v2.UserEventService.WriteUserEventRequest\"",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "responsePayload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "The API response payload, represented as a protocol buffer. This is used to log some \"soft errors\", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported and no PII is included: \"google.cloud.retail.v2.PredictionService.Predict\" \"google.cloud.retail.v2.UserEventService.WriteUserEvent\" \"google.cloud.retail.v2.UserEventService.CollectUserEvent\""
        },
        "serviceContext": {
          "description": "The service context in which this error has occurred.",
          "$ref": "GoogleCloudRetailLoggingServiceContext"
        },
        "context": {
          "$ref": "GoogleCloudRetailLoggingErrorContext",
          "description": "A description of the context in which the error occurred."
        },
        "importPayload": {
          "$ref": "GoogleCloudRetailLoggingImportErrorContext",
          "description": "The error payload that is populated on LRO import APIs."
        },
        "status": {
          "description": "The RPC status associated with the error log.",
          "$ref": "GoogleRpcStatus"
        },
        "message": {
          "description": "A message describing the error.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaImportUserEventsResponse": {
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig",
          "description": "Echoes the destination for the complete errors if this field was set in the request."
        },
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "importSummary": {
          "$ref": "GoogleCloudRetailV2betaUserEventImportSummary",
          "description": "Aggregated statistics of user event import status."
        }
      },
      "id": "GoogleCloudRetailV2betaImportUserEventsResponse",
      "type": "object",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful."
    },
    "GoogleCloudRetailV2betaProduct": {
      "description": "Product captures all metadata information of items to be recommended or searched.",
      "properties": {
        "attributes": {
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2betaCustomAttribute"
          },
          "description": "Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ \"vendor\": {\"text\": [\"vendor123\", \"vendor456\"]}, \"lengths_cm\": {\"numbers\":[2.3, 15.4]}, \"heights_cm\": {\"numbers\":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.",
          "type": "object"
        },
        "priceInfo": {
          "description": "Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).",
          "$ref": "GoogleCloudRetailV2betaPriceInfo"
        },
        "brands": {
          "description": "The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "retrievableFields": {
          "type": "string",
          "description": "Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form \"attributes.key\" where \"key\" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info Maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse may increase response payload size and serving latency.",
          "format": "google-fieldmask"
        },
        "primaryProductId": {
          "type": "string",
          "description": "Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID)."
        },
        "ttl": {
          "description": "Input only. The TTL (time to live) of the product. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.",
          "type": "string",
          "format": "google-duration"
        },
        "tags": {
          "description": "Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "patterns": {
          "description": "The pattern or graphic print of the product. For example, \"striped\", \"polka dot\", \"paisley\". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "items": {
            "type": "string"
          },
          "description": "The condition of the product. Strongly encouraged to use the standard values: \"new\", \"refurbished\", \"used\". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition).",
          "type": "array"
        },
        "availableTime": {
          "format": "google-datetime",
          "description": "The timestamp when this Product becomes available for SearchService.Search.",
          "type": "string"
        },
        "collectionMemberIds": {
          "items": {
            "type": "string"
          },
          "description": "The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise and INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.",
          "type": "array"
        },
        "rating": {
          "description": "The rating of this product.",
          "$ref": "GoogleCloudRetailV2betaRating"
        },
        "title": {
          "description": "Required. Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name).",
          "type": "string"
        },
        "audience": {
          "$ref": "GoogleCloudRetailV2betaAudience",
          "description": "The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product."
        },
        "type": {
          "type": "string",
          "description": "Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRIMARY",
            "VARIANT",
            "COLLECTION"
          ],
          "enumDescriptions": [
            "Default value. Default to Catalog.product_level_config.ingestion_product_type if unset.",
            "The primary type. As the primary unit for predicting, indexing and search serving, a Type.PRIMARY Product is grouped with multiple Type.VARIANT Products.",
            "The variant type. Type.VARIANT Products usually share some common attributes on the same Type.PRIMARY Products, but they have variant attributes like different colors, sizes and prices, etc.",
            "The collection type. Collection products are bundled Type.PRIMARY Products or Type.VARIANT Products that are sold together, such as a jewelry set with necklaces, earrings and rings, etc."
          ]
        },
        "images": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaImage"
          },
          "type": "array",
          "description": "Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image)."
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The timestamp when this product becomes unavailable for SearchService.Search. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499)."
        },
        "colorInfo": {
          "$ref": "GoogleCloudRetailV2betaColorInfo",
          "description": "The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color)."
        },
        "categories": {
          "description": "Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, please replace it with other character(s). For example, if a shoes product belongs to both [\"Shoes & Accessories\" -\u003e \"Shoes\"] and [\"Sports & Fitness\" -\u003e \"Athletic Clothing\" -\u003e \"Shoes\"], it could be represented as: \"categories\": [ \"Shoes & Accessories \u003e Shoes\", \"Sports & Fitness \u003e Athletic Clothing \u003e Shoes\" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`."
        },
        "id": {
          "description": "Immutable. Product identifier, which is the final component of name. For example, this field is \"id_1\", if name is `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku).",
          "type": "string"
        },
        "sizes": {
          "description": "The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in \"US:MENS:M\", \"US\" represents size system; \"MENS\" represents size type; \"M\" represents size value. In \"GIRLS:27\", size system is empty; \"GIRLS\" represents size type; \"27\" represents size value. In \"32 inches\", both size system and size type are empty, while size value is \"32 inches\". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fulfillmentInfo": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaFulfillmentInfo"
          },
          "description": "Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array"
        },
        "publishTime": {
          "description": "The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.",
          "type": "string",
          "format": "google-datetime"
        },
        "variants": {
          "description": "Output only. Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2betaProduct"
          }
        },
        "description": {
          "type": "string",
          "description": "Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description)."
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2betaPromotion"
          },
          "description": "The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set."
        },
        "gtin": {
          "type": "string",
          "description": "The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned."
        },
        "materials": {
          "type": "array",
          "description": "The material of the product. For example, \"leather\", \"wooden\". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).",
          "items": {
            "type": "string"
          }
        },
        "languageCode": {
          "type": "string",
          "description": "Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to \"en-US\" if unset."
        },
        "availability": {
          "type": "string",
          "enumDescriptions": [
            "Default product availability. Default to Availability.IN_STOCK if unset.",
            "Product in stock.",
            "Product out of stock.",
            "Product that is in pre-order state.",
            "Product that is back-ordered (i.e. temporarily out of stock)."
          ],
          "description": "The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).",
          "enum": [
            "AVAILABILITY_UNSPECIFIED",
            "IN_STOCK",
            "OUT_OF_STOCK",
            "PREORDER",
            "BACKORDER"
          ]
        },
        "uri": {
          "type": "string",
          "description": "Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url)."
        },
        "availableQuantity": {
          "type": "integer",
          "description": "The available quantity of the item.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudRetailV2betaProduct",
      "type": "object"
    },
    "GoogleCloudRetailV2betaProductLevelConfig": {
      "description": "Configures what level the product should be uploaded with regards to how users will be send events and how predictions will be made.",
      "properties": {
        "ingestionProductType": {
          "type": "string",
          "description": "The type of Products allowed to be ingested into the catalog. Acceptable values are: * `primary` (default): You can ingest Products of all types. When ingesting a Product, its type will default to Product.Type.PRIMARY if unset. * `variant`: You can only ingest Product.Type.VARIANT Products. This means Product.primary_product_id cannot be empty. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `variant` and merchant_center_product_id_field is `itemGroupId`, an INVALID_ARGUMENT error is returned. See [Using product levels](https://cloud.google.com/retail/recommendations-ai/docs/catalog#product-levels) for more details."
        },
        "merchantCenterProductIdField": {
          "description": "Which field of [Merchant Center Product](/bigquery-transfer/docs/merchant-center-products-schema) should be imported as Product.id. Acceptable values are: * `offerId` (default): Import `offerId` as the product ID. * `itemGroupId`: Import `itemGroupId` as the product ID. Notice that Retail API will choose one item from the ones with the same `itemGroupId`, and use it to represent the item group. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `itemGroupId` and ingestion_product_type is `variant`, an INVALID_ARGUMENT error is returned. See [Using product levels](https://cloud.google.com/retail/recommendations-ai/docs/catalog#product-levels) for more details.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaProductLevelConfig"
    },
    "GoogleCloudRetailV2betaProductInputConfig": {
      "type": "object",
      "properties": {
        "bigQuerySource": {
          "$ref": "GoogleCloudRetailV2betaBigQuerySource",
          "description": "BigQuery input source."
        },
        "productInlineSource": {
          "description": "The Inline source for the input content for products.",
          "$ref": "GoogleCloudRetailV2betaProductInlineSource"
        },
        "gcsSource": {
          "description": "Google Cloud Storage location for the input content.",
          "$ref": "GoogleCloudRetailV2betaGcsSource"
        }
      },
      "description": "The input config source for products.",
      "id": "GoogleCloudRetailV2betaProductInputConfig"
    },
    "GoogleCloudRetailV2alphaRejoinUserEventsResponse": {
      "id": "GoogleCloudRetailV2alphaRejoinUserEventsResponse",
      "properties": {
        "rejoinedUserEventsCount": {
          "description": "Number of user events that were joined with latest product catalog.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Response message for RejoinUserEvents method.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaSetInventoryResponse": {
      "type": "object",
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the SetInventory method.",
      "id": "GoogleCloudRetailV2alphaSetInventoryResponse",
      "properties": {}
    },
    "GoogleCloudRetailV2betaGetDefaultBranchResponse": {
      "id": "GoogleCloudRetailV2betaGetDefaultBranchResponse",
      "properties": {
        "note": {
          "description": "This corresponds to SetDefaultBranchRequest.note field, when this branch was set as default.",
          "type": "string"
        },
        "setTime": {
          "type": "string",
          "description": "The time when this branch is set to default.",
          "format": "google-datetime"
        },
        "branch": {
          "description": "Full resource name of the branch id currently set as default branch.",
          "type": "string"
        }
      },
      "description": "Response message of CatalogService.GetDefaultBranch.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaRule": {
      "type": "object",
      "properties": {
        "ignoreAction": {
          "$ref": "GoogleCloudRetailV2betaRuleIgnoreAction",
          "description": "Ignores specific terms from query during search."
        },
        "boostAction": {
          "$ref": "GoogleCloudRetailV2betaRuleBoostAction",
          "description": "A boost action."
        },
        "condition": {
          "$ref": "GoogleCloudRetailV2betaCondition",
          "description": "Required. The condition that triggers the rule. If the condition is empty, the rule will always apply."
        },
        "onewaySynonymsAction": {
          "$ref": "GoogleCloudRetailV2betaRuleOnewaySynonymsAction",
          "description": "Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term."
        },
        "twowaySynonymsAction": {
          "$ref": "GoogleCloudRetailV2betaRuleTwowaySynonymsAction",
          "description": "Treats a set of terms as synonyms of one another."
        },
        "replacementAction": {
          "description": "Replaces specific terms in the query.",
          "$ref": "GoogleCloudRetailV2betaRuleReplacementAction"
        },
        "doNotAssociateAction": {
          "description": "Prevents term from being associated with other terms.",
          "$ref": "GoogleCloudRetailV2betaRuleDoNotAssociateAction"
        },
        "filterAction": {
          "$ref": "GoogleCloudRetailV2betaRuleFilterAction",
          "description": "Filters results."
        },
        "redirectAction": {
          "description": "Redirects a shopper to a specific page.",
          "$ref": "GoogleCloudRetailV2betaRuleRedirectAction"
        }
      },
      "description": "A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently only boost rules are supported. Currently only supported by the search endpoint.",
      "id": "GoogleCloudRetailV2betaRule"
    },
    "GoogleCloudRetailV2betaListControlsResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaListControlsResponse",
      "description": "Response for ListControls method.",
      "properties": {
        "controls": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaControl"
          },
          "type": "array",
          "description": "All the Controls for a given catalog."
        },
        "nextPageToken": {
          "description": "Pagination token, if not returned indicates the last page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaSearchResponseSearchResult": {
      "properties": {
        "id": {
          "description": "Product.id of the searched Product.",
          "type": "string"
        },
        "matchingVariantCount": {
          "format": "int32",
          "description": "The count of matched variant Products.",
          "type": "integer"
        },
        "matchingVariantFields": {
          "description": "If a variant Product matches the search query, this map indicates which Product fields are matched. The key is the Product.name, the value is a field mask of the matched Product fields. If matched attributes cannot be determined, this map will be empty. For example, a key \"sku1\" with field mask \"products.color_info\" indicates there is a match between \"sku1\" ColorInfo and the query.",
          "additionalProperties": {
            "type": "string",
            "format": "google-fieldmask"
          },
          "type": "object"
        },
        "variantRollupValues": {
          "description": "The rollup matching variant Product attributes. The key is one of the SearchRequest.variant_rollup_keys. The values are the merged and de-duplicated Product attributes. Notice that the rollup values are respect filter. For example, when filtering by \"colorFamilies:ANY(\\\"red\\\")\" and rollup \"colorFamilies\", only \"red\" is returned. For textual and numerical attributes, the rollup values is a list of string or double values with type google.protobuf.ListValue. For example, if there are two variants with colors \"red\" and \"blue\", the rollup values are { key: \"colorFamilies\" value { list_value { values { string_value: \"red\" } values { string_value: \"blue\" } } } } For FulfillmentInfo, the rollup values is a double value with type google.protobuf.Value. For example, `{key: \"pickupInStore.store1\" value { number_value: 10 }}` means a there are 10 variants in this product are available in the store \"store1\".",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "product": {
          "description": "The product data snippet in the search response. Only Product.name is guaranteed to be populated. Product.variants contains the product variants that match the search query. If there are multiple product variants matching the query, top 5 most relevant product variants are returned and ordered by relevancy. If relevancy can be deternmined, use matching_variant_fields to look up matched product variants fields. If relevancy cannot be determined, e.g. when searching \"shoe\" all products in a shoe product can be a match, 5 product variants are returned but order is meaningless.",
          "$ref": "GoogleCloudRetailV2betaProduct"
        }
      },
      "description": "Represents the search results.",
      "id": "GoogleCloudRetailV2betaSearchResponseSearchResult",
      "type": "object"
    },
    "GoogleCloudRetailV2betaSearchRequestBoostSpec": {
      "id": "GoogleCloudRetailV2betaSearchRequestBoostSpec",
      "type": "object",
      "description": "Boost specification to boost certain items.",
      "properties": {
        "skipBoostSpecValidation": {
          "description": "Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied.",
          "type": "boolean"
        },
        "conditionBoostSpecs": {
          "type": "array",
          "description": "Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 10.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec"
          }
        }
      }
    },
    "GoogleCloudRetailV2alphaPurgeMetadata": {
      "properties": {},
      "id": "GoogleCloudRetailV2alphaPurgeMetadata",
      "type": "object",
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field."
    },
    "GoogleCloudRetailV2UserEventImportSummary": {
      "id": "GoogleCloudRetailV2UserEventImportSummary",
      "type": "object",
      "properties": {
        "joinedEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of user events imported with complete existing catalog information."
        },
        "unjoinedEventsCount": {
          "description": "Count of user events imported, but with catalog information not found in the imported catalog.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events."
    },
    "GoogleCloudRetailV2betaImage": {
      "description": "Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.",
      "properties": {
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "uri": {
          "description": "Required. URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaImage",
      "type": "object"
    },
    "GoogleCloudRetailV2betaProductDetail": {
      "description": "Detailed product information associated with a user event.",
      "id": "GoogleCloudRetailV2betaProductDetail",
      "properties": {
        "product": {
          "$ref": "GoogleCloudRetailV2betaProduct",
          "description": "Required. Product information. Required field(s): * Product.id Optional override field(s): * Product.price_info If any supported optional fields are provided, we will treat them as a full override when looking up product information from the catalog. Thus, it is important to ensure that the overriding fields are accurate and complete. All other product fields are ignored and instead populated via catalog lookup after event ingestion."
        },
        "quantity": {
          "description": "Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for `purchase-complete` event. Required for `add-to-cart` and `purchase-complete` event types.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey": {
      "properties": {
        "query": {
          "description": "The query that is used to compute facet for the given facet key. When provided, it will override the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, FacetValue.value will be always \"1\" and FacetValue.count will be the number of results that matches the query. For example, you can set a customized facet for \"shipToStore\", where FacetKey.key is \"customizedShipToStore\", and FacetKey.query is \"availability: ANY(\\\"IN_STOCK\\\") AND shipToStore: ANY(\\\"123\\\")\". Then the facet will count the products that are both in stock and ship to store \"123\".",
          "type": "string"
        },
        "prefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women \u003e Shoe\", \"Women \u003e Dress\" and \"Men \u003e Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet will give only \"Women \u003e Shoe\" and \"Women \u003e Dress\". Only supported on textual fields. Maximum is 10."
        },
        "restrictedValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Only get facet for the given restricted values. For example, when using \"pickupInStore\" as key and set restricted values to [\"store123\", \"store456\"], only facets for \"store123\" and \"store456\" are returned. Only supported on textual fields and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5"
        },
        "orderBy": {
          "description": "The order in which Facet.values are returned. Allowed values are: * \"count desc\", which means order by Facet.FacetValue.count descending. * \"value desc\", which means order by Facet.FacetValue.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.",
          "type": "string"
        },
        "key": {
          "description": "Required. Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * \"brands\" * \"categories\" * \"genders\" * \"ageGroups\" * \"availability\" * \"colorFamilies\" * \"colors\" * \"sizes\" * \"materials\" * \"patterns\" * \"conditions\" * \"attributes.key\" * \"pickupInStore\" * \"shipToStore\" * \"sameDayDelivery\" * \"nextDayDelivery\" * \"customFulfillment1\" * \"customFulfillment2\" * \"customFulfillment3\" * \"customFulfillment4\" * \"customFulfillment5\" * \"inventory(place_id,attributes.key)\" * numerical_field = * \"price\" * \"discount\" * \"rating\" * \"ratingCount\" * \"attributes.key\" * \"inventory(place_id,price)\" * \"inventory(place_id,original_price)\" * \"inventory(place_id,attributes.key)\"",
          "type": "string"
        },
        "contains": {
          "items": {
            "type": "string"
          },
          "description": "Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women \u003e Shoe\", \"Women \u003e Dress\" and \"Men \u003e Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet will give only \"Women \u003e Shoe\" and \"Men \u003e Shoe\". Only supported on textual fields. Maximum is 10.",
          "type": "array"
        },
        "intervals": {
          "description": "Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaInterval"
          },
          "type": "array"
        }
      },
      "description": "Specifies how a facet is computed.",
      "id": "GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesMetadata": {
      "type": "object",
      "id": "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesMetadata",
      "properties": {},
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the RemoveFulfillmentPlaces method."
    },
    "GoogleCloudRetailV2alphaImportCompletionDataResponse": {
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful.",
      "type": "object",
      "properties": {
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request.",
          "type": "array"
        }
      },
      "id": "GoogleCloudRetailV2alphaImportCompletionDataResponse"
    },
    "GoogleCloudRetailV2betaConditionTimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start of time range. Range is inclusive.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "End of time range. Range is inclusive.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaConditionTimeRange",
      "description": "Used for time-dependent conditions. Example: Want to have rule applied for week long sale."
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    },
    "GoogleTypeDate": {
      "properties": {
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      },
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object"
    },
    "GoogleCloudRetailV2betaListCatalogsResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaListCatalogsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as ListCatalogsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "catalogs": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaCatalog"
          },
          "type": "array",
          "description": "All the customer's Catalogs."
        }
      },
      "description": "Response for CatalogService.ListCatalogs method."
    },
    "GoogleCloudRetailV2betaSetDefaultBranchRequest": {
      "description": "Request message to set a specified branch as new default_branch.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaSetDefaultBranchRequest",
      "properties": {
        "note": {
          "type": "string",
          "description": "Some note on this request, this can be retrieved by CatalogService.GetDefaultBranch before next valid default branch set occurs. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "branchId": {
          "description": "The final component of the resource name of a branch. This field must be one of \"0\", \"1\" or \"2\". Otherwise, an INVALID_ARGUMENT error is returned. If there are no sufficient active products in the targeted branch and force is not set, a FAILED_PRECONDITION error is returned.",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, it permits switching to a branch with branch_id even if it has no sufficient active products."
        }
      }
    },
    "GoogleCloudRetailLoggingHttpRequestContext": {
      "id": "GoogleCloudRetailLoggingHttpRequestContext",
      "type": "object",
      "properties": {
        "responseStatusCode": {
          "type": "integer",
          "description": "The HTTP response status code for the request.",
          "format": "int32"
        }
      },
      "description": "HTTP request data that is related to a reported error."
    },
    "GoogleCloudRetailV2betaSearchResponseQueryExpansionInfo": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaSearchResponseQueryExpansionInfo",
      "description": "Information describing query expansion including whether expansion has occurred.",
      "properties": {
        "pinnedResultCount": {
          "description": "Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.",
          "format": "int64",
          "type": "string"
        },
        "expandedQuery": {
          "type": "boolean",
          "description": "Bool describing whether query expansion has occurred."
        }
      }
    },
    "GoogleCloudRetailLoggingServiceContext": {
      "id": "GoogleCloudRetailLoggingServiceContext",
      "properties": {
        "service": {
          "description": "An identifier of the service. For example, \"retail.googleapis.com\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes a running service that sends errors."
    },
    "GoogleCloudRetailLoggingImportErrorContext": {
      "description": "The error payload that is populated on LRO import APIs. Including: \"google.cloud.retail.v2.ProductService.ImportProducts\" \"google.cloud.retail.v2.EventService.ImportUserEvents\"",
      "id": "GoogleCloudRetailLoggingImportErrorContext",
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string",
          "description": "The operation resource name of the LRO."
        },
        "userEvent": {
          "description": "The detailed content which caused the error on importing a user event.",
          "type": "string"
        },
        "gcsPath": {
          "type": "string",
          "description": "Cloud Storage file path of the import source. Can be set for batch operation error."
        },
        "lineNumber": {
          "description": "Line number of the content in file. Should be empty for permission or batch operation error.",
          "type": "string"
        },
        "product": {
          "description": "The detailed content which caused the error on importing a product.",
          "type": "string"
        },
        "catalogItem": {
          "description": "The detailed content which caused the error on importing a catalog item.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaRating": {
      "description": "The rating of a Product.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaRating",
      "properties": {
        "averageRating": {
          "description": "The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.",
          "format": "float",
          "type": "number"
        },
        "ratingCount": {
          "type": "integer",
          "description": "The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.",
          "format": "int32"
        },
        "ratingHistogram": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on."
        }
      }
    },
    "GoogleCloudRetailV2betaAudience": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaAudience",
      "description": "An intended audience of the Product for whom it's sold.",
      "properties": {
        "genders": {
          "items": {
            "type": "string"
          },
          "description": "The genders of the audience. Strongly encouraged to use the standard values: \"male\", \"female\", \"unisex\". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).",
          "type": "array"
        },
        "ageGroups": {
          "type": "array",
          "description": "The age groups of the audience. Strongly encouraged to use the standard values: \"newborn\" (up to 3 months old), \"infant\" (3–12 months old), \"toddler\" (1–5 years old), \"kids\" (5–13 years old), \"adult\" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRetailV2PurgeUserEventsResponse": {
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "type": "object",
      "id": "GoogleCloudRetailV2PurgeUserEventsResponse",
      "properties": {
        "purgedEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "The total count of events purged as a result of the operation."
        }
      }
    },
    "GoogleCloudRetailV2betaPurchaseTransaction": {
      "properties": {
        "cost": {
          "type": "number",
          "format": "float",
          "description": "All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = revenue - tax - cost"
        },
        "currencyCode": {
          "description": "Required. Currency code. Use three-character ISO-4217 code.",
          "type": "string"
        },
        "revenue": {
          "format": "float",
          "description": "Required. Total non-zero revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations.",
          "type": "number"
        },
        "tax": {
          "description": "All the taxes associated with the transaction.",
          "format": "float",
          "type": "number"
        },
        "id": {
          "type": "string",
          "description": "The transaction ID with a length limit of 128 characters."
        }
      },
      "type": "object",
      "description": "A transaction represents the entire purchase transaction.",
      "id": "GoogleCloudRetailV2betaPurchaseTransaction"
    },
    "GoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult": {
      "type": "object",
      "description": "Recent search of this user.",
      "properties": {
        "recentSearch": {
          "type": "string",
          "description": "The recent search query."
        }
      },
      "id": "GoogleCloudRetailV2betaCompleteQueryResponseRecentSearchResult"
    },
    "GoogleCloudRetailV2betaRuleFilterAction": {
      "id": "GoogleCloudRetailV2betaRuleFilterAction",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. See more details at the Retail Search [user guide](/retail/search/docs/filter-and-order#filter). * To filter products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": *(id: ANY(\"product_1\", \"product_2\")) * *AND * *(colorFamilies: ANY(\"Red\", \"Blue\")) *"
        }
      },
      "description": "* Rule Condition: - No Condition provided is a global match. - 1 or more Condition provided is combined with OR operator. * Action Input: The request query and filter that will be applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.",
      "type": "object"
    },
    "GoogleCloudRetailV2SetInventoryResponse": {
      "properties": {},
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the SetInventory method.",
      "type": "object",
      "id": "GoogleCloudRetailV2SetInventoryResponse"
    },
    "GoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec": {
      "id": "GoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec",
      "type": "object",
      "description": "Boost applies to products which match a condition.",
      "properties": {
        "boost": {
          "description": "Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.",
          "type": "number",
          "format": "float"
        },
        "condition": {
          "type": "string",
          "description": "An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": * (id: ANY(\"product_1\", \"product_2\")) AND (colorFamilies: ANY(\"Red\",\"Blue\"))"
        }
      }
    },
    "GoogleCloudRetailV2betaImportCompletionDataResponse": {
      "properties": {
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "id": "GoogleCloudRetailV2betaImportCompletionDataResponse",
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful.",
      "type": "object"
    },
    "GoogleCloudRetailV2SetInventoryMetadata": {
      "type": "object",
      "properties": {},
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the SetInventory method.",
      "id": "GoogleCloudRetailV2SetInventoryMetadata"
    },
    "GoogleCloudRetailV2betaPurgeUserEventsResponse": {
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "properties": {
        "purgedEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "The total count of events purged as a result of the operation."
        }
      },
      "id": "GoogleCloudRetailV2betaPurgeUserEventsResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2betaPriceInfo": {
      "properties": {
        "priceEffectiveTime": {
          "description": "The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.",
          "type": "string",
          "format": "google-datetime"
        },
        "priceRange": {
          "description": "Output only. The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.",
          "$ref": "GoogleCloudRetailV2betaPriceInfoPriceRange",
          "readOnly": true
        },
        "price": {
          "description": "Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).",
          "type": "number",
          "format": "float"
        },
        "originalPrice": {
          "description": "Price of the product without any discount. If zero, by default set to be the price.",
          "format": "float",
          "type": "number"
        },
        "currencyCode": {
          "description": "The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.",
          "type": "string"
        },
        "cost": {
          "format": "float",
          "description": "The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).",
          "type": "number"
        },
        "priceExpireTime": {
          "description": "The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "The price information of a Product.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaPriceInfo"
    },
    "GoogleCloudRetailV2betaRemoveFulfillmentPlacesResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesResponse",
      "properties": {},
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the RemoveFulfillmentPlaces method."
    },
    "GoogleCloudRetailV2RemoveFulfillmentPlacesMetadata": {
      "type": "object",
      "properties": {},
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the RemoveFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2RemoveFulfillmentPlacesMetadata"
    },
    "GoogleCloudRetailV2betaPurgeMetadata": {
      "id": "GoogleCloudRetailV2betaPurgeMetadata",
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2betaSearchResponse": {
      "properties": {
        "correctedQuery": {
          "type": "string",
          "description": "If spell correction applies, the corrected query. Otherwise, empty."
        },
        "redirectUri": {
          "description": "The URI of a customer-defined redirect page. If redirect action is triggered, no search will be performed, and only redirect_uri and attribution_token will be set in the response.",
          "type": "string"
        },
        "appliedControls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules)."
        },
        "invalidConditionBoostSpecs": {
          "type": "array",
          "description": "The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchRequestBoostSpecConditionBoostSpec"
          }
        },
        "facets": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchResponseFacet"
          },
          "description": "Results of facets requested by user.",
          "type": "array"
        },
        "attributionToken": {
          "description": "A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.",
          "type": "string"
        },
        "queryExpansionInfo": {
          "description": "Query expansion information for the returned results.",
          "$ref": "GoogleCloudRetailV2betaSearchResponseQueryExpansionInfo"
        },
        "results": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchResponseSearchResult"
          },
          "type": "array",
          "description": "A list of matched items. The order represents the ranking."
        },
        "totalSize": {
          "type": "integer",
          "description": "The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaSearchResponse",
      "description": "Response message for SearchService.Search method."
    },
    "GoogleCloudRetailV2betaCustomAttribute": {
      "properties": {
        "searchable": {
          "type": "boolean",
          "description": "This field will only be used when AttributesConfig.attribute_config_level of the Catalog is 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG', if true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned."
        },
        "numbers": {
          "items": {
            "type": "number",
            "format": "double"
          },
          "type": "array",
          "description": "The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \"lengths_cm\". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "indexable": {
          "description": "This field will only be used when AttributesConfig.attribute_config_level of the Catalog is 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG', if true, custom attribute values are indexed, so that it can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details.",
          "type": "boolean"
        },
        "text": {
          "items": {
            "type": "string"
          },
          "description": "The textual values of this custom attribute. For example, `[\"yellow\", \"green\"]` when the key is \"color\". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array"
        }
      },
      "id": "GoogleCloudRetailV2betaCustomAttribute",
      "type": "object",
      "description": "A custom attribute that is not explicitly modeled in Product."
    },
    "GoogleCloudRetailV2betaExportProductsResponse": {
      "properties": {
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        },
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors in the request if set.",
          "$ref": "GoogleCloudRetailV2betaExportErrorsConfig"
        }
      },
      "id": "GoogleCloudRetailV2betaExportProductsResponse",
      "type": "object",
      "description": "Response of the ExportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful."
    },
    "GoogleCloudRetailV2betaPurgeUserEventsRequest": {
      "id": "GoogleCloudRetailV2betaPurgeUserEventsRequest",
      "properties": {
        "filter": {
          "description": "Required. The filter string to specify the events to be deleted with a length limit of 5,000 characters. Empty string filter is not allowed. The eligible fields for filtering are: * `eventType`: Double quoted UserEvent.event_type string. * `eventTime`: in ISO 8601 \"zulu\" format. * `visitorId`: Double quoted string. Specifying this will delete all events associated with a visitor. * `userId`: Double quoted string. Specifying this will delete all events associated with a user. Examples: * Deleting all events in a time range: `eventTime \u003e \"2012-04-23T18:25:43.511Z\" eventTime \u003c \"2012-04-23T18:30:43.511Z\"` * Deleting specific eventType in time range: `eventTime \u003e \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"` * Deleting all events for a specific visitor: `visitorId = \"visitor1024\"` The filtering fields are assumed to have an implicit AND.",
          "type": "string"
        },
        "force": {
          "description": "Actually perform the purge. If `force` is set to false, the method will return the expected purge count without deleting any user events.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Request message for PurgeUserEvents method."
    },
    "GoogleCloudRetailV2ImportProductsResponse": {
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig",
          "description": "Echoes the destination for the complete errors in the request if set."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        }
      },
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "type": "object",
      "id": "GoogleCloudRetailV2ImportProductsResponse"
    },
    "GoogleCloudRetailV2betaSetInventoryRequest": {
      "id": "GoogleCloudRetailV2betaSetInventoryRequest",
      "properties": {
        "inventory": {
          "description": "Required. The inventory information to update. The allowable fields to update are: * Product.price_info * Product.availability * Product.available_quantity * Product.fulfillment_info The updated inventory fields must be specified in SetInventoryRequest.set_mask. If SetInventoryRequest.inventory.name is empty or invalid, an INVALID_ARGUMENT error is returned. If the caller does not have permission to update the Product named in Product.name, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the Product to update does not have existing inventory information, the provided inventory information will be inserted. If the Product to update has existing inventory information, the provided inventory information will be merged while respecting the last update time for each inventory field, using the provided or default value for SetInventoryRequest.set_time. The caller can replace place IDs for a subset of fulfillment types in the following ways: * Adds \"fulfillment_info\" in SetInventoryRequest.set_mask * Specifies only the desired fulfillment types and corresponding place IDs to update in SetInventoryRequest.inventory.fulfillment_info The caller can clear all place IDs from a subset of fulfillment types in the following ways: * Adds \"fulfillment_info\" in SetInventoryRequest.set_mask * Specifies only the desired fulfillment types to clear in SetInventoryRequest.inventory.fulfillment_info * Checks that only the desired fulfillment info types have empty SetInventoryRequest.inventory.fulfillment_info.place_ids The last update time is recorded for the following inventory fields: * Product.price_info * Product.availability * Product.available_quantity * Product.fulfillment_info If a full overwrite of inventory information while ignoring timestamps is needed, UpdateProduct should be invoked instead.",
          "$ref": "GoogleCloudRetailV2betaProduct"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product with name Product.name is not found, the inventory update will still be processed and retained for at most 1 day until the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        },
        "setTime": {
          "type": "string",
          "description": "The time when the request is issued, used to prevent out-of-order updates on inventory fields with the last update time recorded. If not provided, the internal system time will be used.",
          "format": "google-datetime"
        },
        "setMask": {
          "description": "Indicates which inventory fields in the provided Product to update. At least one field must be provided. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for SetInventory method."
    },
    "GoogleCloudRetailV2betaSearchRequestQueryExpansionSpec": {
      "id": "GoogleCloudRetailV2betaSearchRequestQueryExpansionSpec",
      "properties": {
        "pinUnexpandedResults": {
          "type": "boolean",
          "description": "Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results."
        },
        "condition": {
          "description": "The condition under which query expansion should occur. Default to Condition.DISABLED.",
          "enumDescriptions": [
            "Unspecified query expansion condition. This defaults to Condition.DISABLED.",
            "Disabled query expansion. Only the exact search query is used, even if SearchResponse.total_size is zero.",
            "Automatic query expansion built by Google Retail Search."
          ],
          "enum": [
            "CONDITION_UNSPECIFIED",
            "DISABLED",
            "AUTO"
          ],
          "type": "string"
        }
      },
      "description": "Specification to determine under which conditions query expansion should occur.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaPredictResponse": {
      "description": "Response message for predict method.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaPredictResponse",
      "properties": {
        "attributionToken": {
          "type": "string",
          "description": "A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance."
        },
        "missingIds": {
          "description": "IDs of products in the request that were missing from the inventory.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaPredictResponsePredictionResult"
          },
          "type": "array",
          "description": "A list of recommended products. The order represents the ranking (from the most relevant product to the least)."
        },
        "validateOnly": {
          "description": "True if the validateOnly property was set in the request.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudRetailV2betaExportErrorsConfig": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaExportErrorsConfig",
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Export errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      },
      "description": "Configuration of destination for Export related errors."
    },
    "GoogleCloudRetailV2betaReplaceCatalogAttributeRequest": {
      "properties": {
        "catalogAttribute": {
          "$ref": "GoogleCloudRetailV2betaCatalogAttribute",
          "description": "Required. The updated CatalogAttribute."
        },
        "updateMask": {
          "description": "Indicates which fields in the provided CatalogAttribute to update. The following are NOT supported: * CatalogAttribute.key If not set, all supported fields are updated.",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "type": "object",
      "description": "Request for CatalogService.ReplaceCatalogAttribute method.",
      "id": "GoogleCloudRetailV2betaReplaceCatalogAttributeRequest"
    },
    "GoogleCloudRetailV2betaImportCompletionDataRequest": {
      "type": "object",
      "properties": {
        "inputConfig": {
          "description": "Required. The desired input location of the data.",
          "$ref": "GoogleCloudRetailV2betaCompletionDataInputConfig"
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification will be sent to specified Pub/Sub topic. The message data will be JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`.",
          "type": "string"
        }
      },
      "description": "Request message for ImportCompletionData methods.",
      "id": "GoogleCloudRetailV2betaImportCompletionDataRequest"
    },
    "GoogleCloudRetailV2betaRemoveCatalogAttributeRequest": {
      "id": "GoogleCloudRetailV2betaRemoveCatalogAttributeRequest",
      "type": "object",
      "description": "Request for CatalogService.RemoveCatalogAttribute method.",
      "properties": {
        "key": {
          "description": "Required. The attribute name key of the CatalogAttribute to remove.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaPredictRequest": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaPredictRequest",
      "properties": {
        "filter": {
          "description": "Filter for restricting prediction results with a length limit of 5,000 characters. Accepts values for tags and the `filterOutOfStockItems` flag. * Tag expressions. Restricts predictions to products that match all of the specified tags. Boolean operators `OR` and `NOT` are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. `-\"tagA\"` is also supported and is equivalent to `NOT \"tagA\"`. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1,000 characters. Note: \"Recently viewed\" models don't support tag filtering at the moment. * filterOutOfStockItems. Restricts predictions to products that do not have a stockState value of OUT_OF_STOCK. Examples: * tag=(\"Red\" OR \"Blue\") tag=\"New-Arrival\" tag=(NOT \"promotional\") * filterOutOfStockItems tag=(-\"promotional\") * filterOutOfStockItems If your filter blocks all prediction results, the API will return generic (unfiltered) popular products. If you only want results strictly matching the filters, set `strictFiltering` to True in `PredictRequest.params` to receive empty results instead. Note that the API will never return items with storageStatus of \"EXPIRED\" or \"DELETED\" regardless of filter choices.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters, and cannot be empty. Values can be empty, and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userEvent": {
          "description": "Required. Context about the user, what they are looking at and what action they took to trigger the predict request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging.",
          "$ref": "GoogleCloudRetailV2betaUserEvent"
        },
        "pageToken": {
          "type": "string",
          "description": "The previous PredictResponse.next_page_token."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "Use validate only mode for this prediction query. If set to true, a dummy model will be used that returns arbitrary products. Note that the validate only mode should only be used for testing the API, or if the model is not ready."
        },
        "pageSize": {
          "type": "integer",
          "description": "Maximum number of results to return per page. Set this property to the number of prediction results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.",
          "format": "int32"
        },
        "params": {
          "type": "object",
          "description": "Additional domain specific parameters for the predictions. Allowed values: * `returnProduct`: Boolean. If set to true, the associated product object will be returned in the `results.metadata` field in the prediction response. * `returnScore`: Boolean. If set to true, the prediction 'score' corresponding to each returned product will be set in the `results.metadata` field in the prediction response. The given 'score' indicates the probability of an product being clicked/purchased given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular products instead of empty if your filter blocks all prediction results. * `priceRerankLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking', 'high-price-reranking'}. This gives request-level control and adjusts prediction results based on product price. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity', 'auto-diversity'}. This gives request-level control and adjusts prediction results based on product category.",
          "additionalProperties": {
            "type": "any"
          }
        }
      },
      "description": "Request message for Predict method."
    },
    "GoogleApiHttpBody": {
      "id": "GoogleApiHttpBody",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "extensions": {
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "data": {
          "type": "string",
          "description": "The HTTP request/response body as raw binary.",
          "format": "byte"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaSearchRequestFacetSpec": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaSearchRequestFacetSpec",
      "properties": {
        "facetKey": {
          "description": "Required. The facet key specification.",
          "$ref": "GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKey"
        },
        "enableDynamicPosition": {
          "type": "boolean",
          "description": "Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It will be ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response will be the same as in the request, and it will be ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response will be determined by Google Retail Search. Another example, assuming you have the following facets in the request: * \"rating\", enable_dynamic_position = true * \"price\", enable_dynamic_position = false * \"brands\", enable_dynamic_position = false And also you have a dynamic facets enable, which will generate a facet 'gender'. Then the final order of the facets in the response can be (\"price\", \"brands\", \"rating\", \"gender\") or (\"price\", \"brands\", \"gender\", \"rating\") depends on how Google Retail Search orders \"gender\" and \"rating\" facets. However, notice that \"price\" and \"brands\" will always be ranked at 1st and 2nd position since their enable_dynamic_position are false."
        },
        "excludedFilterKeys": {
          "description": "List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. For example, suppose there are 100 products with color facet \"Red\" and 200 products with color facet \"Blue\". A query containing the filter \"colorFamilies:ANY(\"Red\")\" and have \"colorFamilies\" as FacetKey.key will by default return the \"Red\" with count 100. If this field contains \"colorFamilies\", then the query returns both the \"Red\" with count 100 and \"Blue\" with count 200, because the \"colorFamilies\" key is now excluded from the filter. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "description": "Maximum of facet values that should be returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.",
          "format": "int32"
        }
      },
      "description": "A facet specification to perform faceted search."
    },
    "GoogleCloudRetailV2alphaImportProductsResponse": {
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaImportProductsResponse",
      "properties": {
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors in the request if set.",
          "$ref": "GoogleCloudRetailV2alphaImportErrorsConfig"
        },
        "errorSamples": {
          "type": "array",
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudRetailV2betaCompletionDetail": {
      "description": "Detailed completion information including completion attribution token and clicked completion info.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaCompletionDetail",
      "properties": {
        "completionAttributionToken": {
          "type": "string",
          "description": "Completion attribution token in CompleteQueryResponse.attribution_token."
        },
        "selectedPosition": {
          "format": "int32",
          "description": "End user selected CompleteQueryResponse.CompletionResult.suggestion position, starting from 0.",
          "type": "integer"
        },
        "selectedSuggestion": {
          "description": "End user selected CompleteQueryResponse.CompletionResult.suggestion.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2betaCompletionDataInputConfig": {
      "properties": {
        "bigQuerySource": {
          "description": "Required. BigQuery input source. Add the IAM permission \"BigQuery Data Viewer\" for cloud-retail-customer-data-access@system.gserviceaccount.com before using this feature otherwise an error is thrown.",
          "$ref": "GoogleCloudRetailV2betaBigQuerySource"
        }
      },
      "id": "GoogleCloudRetailV2betaCompletionDataInputConfig",
      "type": "object",
      "description": "The input config source for completion data."
    },
    "GoogleCloudRetailV2alphaExportProductsResponse": {
      "description": "Response of the ExportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2alphaExportErrorsConfig",
          "description": "Echoes the destination for the complete errors in the request if set."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaExportProductsResponse"
    },
    "GoogleCloudRetailV2betaRuleTwowaySynonymsAction": {
      "type": "object",
      "properties": {
        "synonyms": {
          "type": "array",
          "description": "Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudRetailV2betaRuleTwowaySynonymsAction",
      "description": "Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of \"sneakers\" and \"shoes\". * \"sneakers\" will use a synonym of \"shoes\". * \"shoes\" will use a synonym of \"sneakers\"."
    },
    "GoogleCloudRetailV2betaColorInfo": {
      "properties": {
        "colorFamilies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The standard color families. Strongly recommended to use the following standard color groups: \"Red\", \"Pink\", \"Orange\", \"Yellow\", \"Purple\", \"Green\", \"Cyan\", \"Blue\", \"Brown\", \"White\", \"Gray\", \"Black\" and \"Mixed\". Normally it is expected to have only 1 color family. May consider using single \"Mixed\" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color)."
        },
        "colors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single \"Mixed\" instead of multiple values. A maximum of 25 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color)."
        }
      },
      "description": "The color information of a Product.",
      "id": "GoogleCloudRetailV2betaColorInfo",
      "type": "object"
    },
    "GoogleCloudRetailV2betaUserEventInputConfig": {
      "type": "object",
      "properties": {
        "bigQuerySource": {
          "description": "Required. BigQuery input source.",
          "$ref": "GoogleCloudRetailV2betaBigQuerySource"
        },
        "gcsSource": {
          "description": "Required. Google Cloud Storage location for the input content.",
          "$ref": "GoogleCloudRetailV2betaGcsSource"
        },
        "userEventInlineSource": {
          "$ref": "GoogleCloudRetailV2betaUserEventInlineSource",
          "description": "Required. The Inline source for the input content for UserEvents."
        }
      },
      "description": "The input config source for user events.",
      "id": "GoogleCloudRetailV2betaUserEventInputConfig"
    },
    "GoogleCloudRetailV2betaPromotion": {
      "properties": {
        "promotionId": {
          "description": "ID of the promotion. For example, \"free gift\". The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [promotion](https://support.google.com/merchants/answer/7050148).",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaPromotion",
      "description": "Promotion information.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaListServingConfigsResponse": {
      "properties": {
        "servingConfigs": {
          "description": "All the ServingConfigs for a given catalog.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2betaServingConfig"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token, if not returned indicates the last page."
        }
      },
      "id": "GoogleCloudRetailV2betaListServingConfigsResponse",
      "description": "Response for ListServingConfigs method.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaUserEventInlineSource": {
      "properties": {
        "userEvents": {
          "type": "array",
          "description": "Required. A list of user events to import. Recommended max of 10k items.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaUserEvent"
          }
        }
      },
      "description": "The inline source for the input config for ImportUserEvents method.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaUserEventInlineSource"
    },
    "GoogleCloudRetailV2alphaImportMetadata": {
      "description": "Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "properties": {
        "requestId": {
          "description": "Id of the request / operation. This is parroting back the requestId that was passed in the request.",
          "type": "string"
        },
        "successCount": {
          "format": "int64",
          "description": "Count of entries that were processed successfully.",
          "type": "string"
        },
        "updateTime": {
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "type": "string",
          "format": "google-datetime"
        },
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "format": "int64",
          "type": "string"
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification will be sent to specified Pub/Sub topic. The message data will be JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`."
        },
        "createTime": {
          "type": "string",
          "description": "Operation create time.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaImportMetadata"
    },
    "GoogleCloudRetailV2betaRemoveFulfillmentPlacesMetadata": {
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the RemoveFulfillmentPlaces method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesMetadata"
    },
    "GoogleCloudRetailV2betaListProductsResponse": {
      "id": "GoogleCloudRetailV2betaListProductsResponse",
      "type": "object",
      "description": "Response message for ProductService.ListProducts method.",
      "properties": {
        "products": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaProduct"
          },
          "description": "The Products.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as ListProductsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudRetailV2betaProductInlineSource": {
      "id": "GoogleCloudRetailV2betaProductInlineSource",
      "description": "The inline source for the input config for ImportProducts method.",
      "properties": {
        "products": {
          "description": "Required. A list of products to update/create. Each product must have a valid Product.id. Recommended max of 100 items.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaProduct"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2PurgeMetadata": {
      "id": "GoogleCloudRetailV2PurgeMetadata",
      "properties": {},
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaImportProductsRequest": {
      "type": "object",
      "description": "Request message for Import methods.",
      "id": "GoogleCloudRetailV2betaImportProductsRequest",
      "properties": {
        "requestId": {
          "description": "Unique identifier provided by client, within the ancestor dataset scope. Ensures idempotency and used for request deduplication. Server-generated if unspecified. Up to 128 characters long and must match the pattern: `[a-zA-Z0-9_]+`. This is returned as Operation.name in ImportMetadata. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.",
          "type": "string"
        },
        "errorsConfig": {
          "description": "The desired location of errors incurred during the Import.",
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig"
        },
        "updateMask": {
          "type": "string",
          "description": "Indicates which fields in the provided imported 'products' to update. If not set, will by default update all fields.",
          "format": "google-fieldmask"
        },
        "inputConfig": {
          "description": "Required. The desired input location of the data.",
          "$ref": "GoogleCloudRetailV2betaProductInputConfig"
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification will be sent to specified Pub/Sub topic. The message data will be JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`.",
          "type": "string"
        },
        "reconciliationMode": {
          "enumDescriptions": [
            "Defaults to INCREMENTAL.",
            "Inserts new products or updates existing products.",
            "Calculates diff and replaces the entire product dataset. Existing products may be deleted if they are not present in the source location. Can only be set while using BigQuerySource. And the BigQuery dataset must be created in the data location \"us (multiple regions in United States)\", otherwise a PERMISSION_DENIED error is thrown. Add the IAM permission \"BigQuery Data Viewer\" for cloud-retail-customer-data-access@system.gserviceaccount.com before using this feature otherwise an error is thrown. This feature is only available for users who have Retail Search enabled. Please submit a form [here](https://cloud.google.com/contact) to contact cloud sales if you are interested in using Retail Search."
          ],
          "enum": [
            "RECONCILIATION_MODE_UNSPECIFIED",
            "INCREMENTAL",
            "FULL"
          ],
          "description": "The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2alphaImportErrorsConfig": {
      "description": "Configuration of destination for Import related errors.",
      "type": "object",
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors will be written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      },
      "id": "GoogleCloudRetailV2alphaImportErrorsConfig"
    },
    "GoogleCloudRetailV2alphaAddLocalInventoriesMetadata": {
      "description": "Metadata related to the progress of the AddLocalInventories operation. Currently empty because there is no meaningful metadata populated from the AddLocalInventories method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2alphaAddLocalInventoriesMetadata"
    },
    "GoogleCloudRetailV2betaRemoveControlRequest": {
      "description": "Request for RemoveControl method.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaRemoveControlRequest",
      "properties": {
        "controlId": {
          "type": "string",
          "description": "Required. The id of the control to apply. Assumed to be in the same catalog as the serving config."
        }
      }
    },
    "GoogleCloudRetailV2betaImportProductsResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaImportProductsResponse",
      "properties": {
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request.",
          "type": "array"
        },
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig",
          "description": "Echoes the destination for the complete errors in the request if set."
        }
      },
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful."
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "GoogleCloudRetailV2betaCatalog": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Immutable. The fully qualified resource name of the catalog."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Immutable. The catalog display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "productLevelConfig": {
          "$ref": "GoogleCloudRetailV2betaProductLevelConfig",
          "description": "Required. The product level configuration."
        }
      },
      "id": "GoogleCloudRetailV2betaCatalog",
      "description": "The catalog configuration.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaExportErrorsConfig": {
      "properties": {
        "gcsPrefix": {
          "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Export errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2alphaExportErrorsConfig",
      "type": "object",
      "description": "Configuration of destination for Export related errors."
    },
    "GoogleCloudRetailV2alphaRejoinUserEventsMetadata": {
      "description": "Metadata for RejoinUserEvents method.",
      "id": "GoogleCloudRetailV2alphaRejoinUserEventsMetadata",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudRetailV2betaBigQuerySource": {
      "properties": {
        "datasetId": {
          "type": "string",
          "description": "Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters."
        },
        "projectId": {
          "type": "string",
          "description": "The project ID (can be project # or ID) that the BigQuery source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request."
        },
        "gcsStagingDir": {
          "type": "string",
          "description": "Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory."
        },
        "tableId": {
          "type": "string",
          "description": "Required. The BigQuery table to copy the data from with a length limit of 1,024 characters."
        },
        "dataSchema": {
          "description": "The schema to use when parsing the data from the source. Supported values for product imports: * `product` (default): One JSON Product per line. Each product must have a valid Product.id. * `product_merchant_center`: See [Importing catalog data from Merchant Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc). Supported values for user events imports: * `user_event` (default): One JSON UserEvent per line. * `user_event_ga360`: The schema is available here: https://support.google.com/analytics/answer/3437719. * `user_event_ga4`: This feature is in private preview. Please contact the support team for importing Google Analytics 4 events. The schema is available here: https://support.google.com/analytics/answer/7029846.",
          "type": "string"
        },
        "partitionDate": {
          "$ref": "GoogleTypeDate",
          "description": "BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. Only supported when ImportProductsRequest.reconciliation_mode is set to `FULL`."
        }
      },
      "type": "object",
      "description": "BigQuery source import data from.",
      "id": "GoogleCloudRetailV2betaBigQuerySource"
    },
    "GoogleCloudRetailV2betaRuleIgnoreAction": {
      "description": "Prevents a term in the query from being used in search. Example: Don't search for \"shoddy\".",
      "type": "object",
      "id": "GoogleCloudRetailV2betaRuleIgnoreAction",
      "properties": {
        "ignoreTerms": {
          "description": "Terms to ignore in the search query.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRetailV2betaSearchResponseFacet": {
      "id": "GoogleCloudRetailV2betaSearchResponseFacet",
      "type": "object",
      "description": "A facet result.",
      "properties": {
        "values": {
          "description": "The facet values for this field.",
          "items": {
            "$ref": "GoogleCloudRetailV2betaSearchResponseFacetFacetValue"
          },
          "type": "array"
        },
        "dynamicFacet": {
          "description": "Whether the facet is dynamically generated.",
          "type": "boolean"
        },
        "key": {
          "description": "The key for this facet. E.g., \"colorFamilies\" or \"price\" or \"attributes.attr1\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2ImportMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Operation create time."
        },
        "requestId": {
          "type": "string",
          "description": "Id of the request / operation. This is parroting back the requestId that was passed in the request."
        },
        "failureCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of entries that encountered errors while processing."
        },
        "updateTime": {
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "type": "string",
          "format": "google-datetime"
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification will be sent to specified Pub/Sub topic. The message data will be JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`.",
          "type": "string"
        },
        "successCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of entries that were processed successfully."
        }
      },
      "id": "GoogleCloudRetailV2ImportMetadata",
      "type": "object",
      "description": "Metadata related to the progress of the Import operation. This will be returned by the google.longrunning.Operation.metadata field."
    },
    "GoogleCloudRetailV2betaImportUserEventsRequest": {
      "description": "Request message for the ImportUserEvents request.",
      "type": "object",
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig",
          "description": "The desired location of errors incurred during the Import. Cannot be set for inline user event imports."
        },
        "inputConfig": {
          "description": "Required. The desired input location of the data.",
          "$ref": "GoogleCloudRetailV2betaUserEventInputConfig"
        }
      },
      "id": "GoogleCloudRetailV2betaImportUserEventsRequest"
    },
    "GoogleCloudRetailV2alphaAddLocalInventoriesResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRetailV2alphaAddLocalInventoriesResponse",
      "description": "Response of the AddLocalInventories API. Currently empty because there is no meaningful response populated from the AddLocalInventories method."
    },
    "GoogleCloudRetailV2betaGcsSource": {
      "id": "GoogleCloudRetailV2betaGcsSource",
      "description": "Google Cloud Storage location for input content. format.",
      "type": "object",
      "properties": {
        "dataSchema": {
          "type": "string",
          "description": "The schema to use when parsing the data from the source. Supported values for product imports: * `product` (default): One JSON Product per line. Each product must have a valid Product.id. * `product_merchant_center`: See [Importing catalog data from Merchant Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc). Supported values for user events imports: * `user_event` (default): One JSON UserEvent per line. * `user_event_ga360`: Using https://support.google.com/analytics/answer/3437719. Supported values for control imports: * 'control' (default): One JSON Control per line. Supported values for catalog attribute imports: * 'catalog_attribute' (default): One CSV CatalogAttribute per line."
        },
        "inputUris": {
          "description": "Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files, and each file can be up to 2 GB. See [Importing product information](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog) for the expected file format and setup instructions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "id": "retail:v2beta",
  "baseUrl": "https://retail.googleapis.com/",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "servicePath": "",
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "https://cloud.google.com/recommendations"
}

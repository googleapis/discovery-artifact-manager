import logging

from flask import abort, Flask, request
from google.cloud import datastore
from tempfile import TemporaryDirectory
import os
import shlex
import subprocess


app = Flask(__name__)


_DEVNULL = open(os.devnull, 'w')


@app.route('/update/discovery')
def update_discovery():
    # This header can't be spoofed, see
    # https://cloud.google.com/appengine/docs/flexible/nodejs/scheduling-jobs-with-cron-yaml#securing_urls_for_cron
    if request.headers.get('X-AppEngine-Cron') is None:
        abort(403)

    with TemporaryDirectory() as tmp_dir:
        go_dir = os.path.join(tmp_dir, 'go')  # /tmp/go
        os.makedirs(os.path.join(go_dir, 'src'))  # mkdir -p /tmp/go/src

        # /tmp/discovery-artifact-manager
        dartman_dir = os.path.join(tmp_dir, 'discovery-artifact-manager')

        cmd = ('git clone https://github.com/saicheems/discovery-artifact-manager'
               ' {}').format(dartman_dir)
        subprocess.call(shlex.split(cmd))

        # ln -s /tmp/discovery-artifact-manager/src /tmp/go/src/discovery-artifact-manager
        cmd = 'ln -s {} {}'.format(
                os.path.join(dartman_dir, 'src'),
                os.path.join(go_dir, 'src', 'discovery-artifact-manager'))
        subprocess.check_call(shlex.split(cmd))

        env = os.environ.copy()
        env['GOPATH'] = go_dir

        cmd = 'go run src/main/updatedisco/main.go'
        subprocess.check_call(shlex.split(cmd), cwd=dartman_dir, env=env)

        cmd = 'git add discoveries'
        subprocess.check_call(shlex.split(cmd), cwd=dartman_dir)

        # TODO: Add author information here instead of in the Dockerifle.
        cmd = 'git commit -a -m "Autogenerated Discovery document update"'
        returncode = subprocess.call(shlex.split(cmd), cwd=dartman_dir)

        # returncode is non-zero if there's nothing to commit.
        if not returncode:
            ds = datastore.Client()
            github_cred = list(ds.query(kind='GithubCredential').fetch())[0]
            personal_access_token = github_cred['personal_access_token']
            remote_url = ('https://saicheems:{}@github.com'
                          '/saicheems/discovery-artifact-manager')
            remote_url = remote_url.format(personal_access_token)

            # Send output to /dev/null so the remote URL isn't logged.
            cmd = 'git remote add github {}'.format(remote_url)
            subprocess.check_call(shlex.split(cmd), cwd=dartman_dir,
                                  stdout=_DEVNULL, stderr=_DEVNULL)
            cmd = 'git push github'
            subprocess.check_call(shlex.split(cmd), cwd=dartman_dir,
                                  stdout=_DEVNULL, stderr=_DEVNULL)

    return ''


if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)

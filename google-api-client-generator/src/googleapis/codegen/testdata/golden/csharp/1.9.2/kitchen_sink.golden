=== begin: ./Google.Apis.KitchSink.v1.1.9.2.00.nuspec
<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
    <metadata>
        <id>Google.Apis.KitchSink.v1</id>
        <version>1.9.2.00</version>
        <title>Google.Apis.KitchSink.v1 Client Library</title>
        <authors>Google Inc.</authors>
        <owners>peleyal</owners>
        <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
        <projectUrl>https://code.google.com/p/google-api-dotnet-client/</projectUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>Google APIs Client Library for working with KitchSink v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/kitch_sink/v1

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/kitch_sink/v1/csharp
        </description>
        <tags>Google</tags>
        <dependencies>
            <group>
                <dependency id="Google.Apis" version="1.9.2" />
                <dependency id="Google.Apis.Auth" version="1.9.2" />
            </group>
        </dependencies>
    </metadata>
    <files>
        <file src="bin\ReleaseSigned\Google.Apis.KitchSink.v1.dll" target="lib\portable-net40+sl50+win+wpa81+wp80\Google.Apis.KitchSink.v1.dll" />
        <file src="bin\ReleaseSigned\Google.Apis.KitchSink.v1.pdb" target="lib\portable-net40+sl50+win+wpa81+wp80\Google.Apis.KitchSink.v1.pdb" />
        <file src="bin\ReleaseSigned\Google.Apis.KitchSink.v1.xml" target="lib\portable-net40+sl50+win+wpa81+wp80\Google.Apis.KitchSink.v1.xml" />
    </files>
</package>
=== end: ./Google.Apis.KitchSink.v1.1.9.2.00.nuspec
=== begin: ./Google.Apis.KitchSink.v1.cs
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generater version: 1.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   kitch_sink Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href=''>kitch_sink</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href=''>
 *              </a>
 *      <tr><th>Discovery Name<td>kitch_sink
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using kitch_sink can be found at
 * <a href=''></a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.KitchSink.v1.Data
{    

    /// <summary>Enum type definition.</summary>
    public class Enum : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enum type name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Geometry : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeometryCollection : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("geometries")]
        public virtual System.Collections.Generic.IList<Geometry> Geometries { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeometryPolygon : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual string Coordinates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GeometryReference : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("coordinates")]
        public virtual string Coordinates { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class LatLong : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ModeratorTopicsResourcePartial : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Profile : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("attribution")]
        public virtual Profile.AttributionData Attribution { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Profile.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class AttributionData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("avatarUrl")]
            public virtual string AvatarUrl { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("geo")]
            public virtual LatLong Geo { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("location")]
            public virtual string Location { get; set; } 

        }    

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("user")]
            public virtual string User { get; set; } 

        }
    }    

    public class Rule : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("submissions")]
        public virtual Rule.SubmissionsData Submissions { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class SubmissionsData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("close")]
            public virtual System.Nullable<int> Close { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("open")]
            public virtual System.Nullable<int> Open { get; set; } 

        }
    }    

    public class Series : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("anonymousSubmissionAllowed")]
        public virtual System.Nullable<bool> AnonymousSubmissionAllowed { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("counters")]
        public virtual Series.CountersData Counters { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Series.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("numTopics")]
        public virtual System.Nullable<int> NumTopics { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("videoSubmissionAllowed")]
        public virtual System.Nullable<bool> VideoSubmissionAllowed { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class CountersData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("anonymousSubmissions")]
            public virtual System.Nullable<int> AnonymousSubmissions { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("counters")]
            public virtual CountersData.CountersDataSchema Counters { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("else")]
            public virtual System.Nullable<int> Else__ { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("minus_votes")]
            public virtual System.Nullable<int> MinusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("none_votes")]
            public virtual System.Nullable<ulong> NoneVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("plus_votes")]
            public virtual System.Nullable<int> PlusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissions")]
            public virtual System.Nullable<int> Submissions { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("users")]
            public virtual string Users { get; set; } 

            

            public class CountersDataSchema
            {
                [Newtonsoft.Json.JsonPropertyAttribute("all-votes")]
                public virtual System.Nullable<int> AllVotes { get; set; } 

            }
        }    

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

        }
    }    

    public class SeriesList : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Series> Items { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Submission : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("@attachmentUrl")]
        public virtual string AttachmentUrl { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("attribution")]
        public virtual Submission.AttributionData Attribution { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual string Author { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("counters")]
        public virtual Submission.CountersData Counters { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("created")]
        public virtual System.Nullable<int> Created { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("geo")]
        public virtual System.Collections.Generic.IList<LatLong> Geo { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Submission.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("parentSubmissionId")]
        public virtual Submission.ParentSubmissionIdData ParentSubmissionId { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("topics")]
        public virtual System.Collections.Generic.IList<ModeratorTopicsResourcePartial> Topics { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("translations")]
        public virtual System.Collections.Generic.IDictionary<string,Translation> Translations { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class AttributionData
        {
            /// <summary>A member with a $ in the name</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$avatarUrl")]
            public virtual string AvatarUrl { get; set; } 

            /// <summary>A member with a $ in the name, but if you strip it, you get a reserved word</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$object")]
            public virtual string Object__ { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("location")]
            public virtual string Location { get; set; } 

        }    

        public class CountersData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("minus_votes")]
            public virtual System.Nullable<int> MinusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("none_votes")]
            public virtual System.Nullable<int> NoneVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("plus_votes")]
            public virtual System.Nullable<int> PlusVotes { get; set; } 

        }    

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissionId")]
            public virtual System.Nullable<int> SubmissionId { get; set; } 

        }    

        public class ParentSubmissionIdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissionId")]
            public virtual System.Nullable<int> SubmissionId { get; set; } 

        }
    }    

    public class SubmissionList : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Submission> Items { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Tag : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("geometry")]
        public virtual Geometry Geometry { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Tag.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissionId")]
            public virtual System.Nullable<int> SubmissionId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("tag")]
            public virtual string Tag { get; set; } 

        }
    }    

    public class Topic : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("counters")]
        public virtual Topic.CountersData Counters { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Topic.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("presenter")]
        public virtual string Presenter { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual Topic.RulesData Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class CountersData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("minus_votes")]
            public virtual System.Nullable<int> MinusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("none_votes")]
            public virtual System.Nullable<int> NoneVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("plus_votes")]
            public virtual System.Nullable<int> PlusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissions")]
            public virtual System.Nullable<int> Submissions { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("users")]
            public virtual System.Nullable<int> Users { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("videoSubmissions")]
            public virtual System.Nullable<int> VideoSubmissions { get; set; } 

        }    

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("topicId")]
            public virtual System.Nullable<int> TopicId { get; set; } 

        }    

        public class RulesData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("submissions")]
            public virtual RulesData.SubmissionsData Submissions { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("votes")]
            public virtual RulesData.VotesData Votes { get; set; } 

            

            public class SubmissionsData
            {
                [Newtonsoft.Json.JsonPropertyAttribute("close")]
                public virtual System.Nullable<int> Close { get; set; } 

                [Newtonsoft.Json.JsonPropertyAttribute("open")]
                public virtual System.Nullable<int> Open { get; set; } 

            }    

            public class VotesData
            {
                [Newtonsoft.Json.JsonPropertyAttribute("close")]
                public virtual System.Nullable<int> Close { get; set; } 

                [Newtonsoft.Json.JsonPropertyAttribute("open")]
                public virtual System.Nullable<int> Open { get; set; } 

            }
        }
    }    

    public class Topic2 : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("counters")]
        public virtual Topic2.CountersData Counters { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("featuredSubmission")]
        public virtual Submission FeaturedSubmission { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Topic2.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("presenter")]
        public virtual string Presenter { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<Rule> Rules { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class CountersData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("minus_votes")]
            public virtual System.Nullable<int> MinusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("none_votes")]
            public virtual System.Nullable<int> NoneVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("plus_votes")]
            public virtual System.Nullable<int> PlusVotes { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("submissions")]
            public virtual System.Nullable<int> Submissions { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("users")]
            public virtual System.Nullable<int> Users { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("videoSubmissions")]
            public virtual System.Nullable<int> VideoSubmissions { get; set; } 

        }    

        public class IdData
        {
            [Newtonsoft.Json.JsonPropertyAttribute("seriesId")]
            public virtual System.Nullable<int> SeriesId { get; set; } 

            [Newtonsoft.Json.JsonPropertyAttribute("topicId")]
            public virtual System.Nullable<int> TopicId { get; set; } 

        }
    }    

    public class TopicList : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Topic> Items { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Translation : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("lang")]
        public virtual string Lang { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Vote : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("flag")]
        public virtual string Flag { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual Vote.IdData Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("vote")]
        public virtual string VoteValue { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
        

        public class IdData
        {
        }
    }    

    public class VoteList : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Vote> Items { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.KitchSink.v1
{
    /// <summary>The KitchSink Service.</summary>
    public class KitchSinkService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public KitchSinkService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public KitchSinkService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            featured = new FeaturedResource(this);
            global = new GlobalResource(this);
            my = new MyResource(this);
            myrecent = new MyrecentResource(this);
            profiles = new ProfilesResource(this);
            responses = new ResponsesResource(this);
            series = new SeriesResource(this);
            submissions = new SubmissionsResource(this);
            tags = new TagsResource(this);
            topics = new TopicsResource(this);
            votes = new VotesResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[] {"dataWrapper"}; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "kitch_sink"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.googleapis.com/sink/v1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "sink/v1/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the kitch_sink.</summary>
        public class Scope
        {
            /// <summary>A non googleapis.com scope</summary>
            public static string MailGoogleCom = "https://mail.google.com/";

            /// <summary>a product level scope</summary>
            public static string Product = "https://www.googleapis.com/auth/product";

            /// <summary>A typical scope</summary>
            public static string UserinfoEmail = "https://www.googleapis.com/auth/userinfo.email";

        }



        private readonly FeaturedResource featured;

        /// <summary>Gets the Featured resource.</summary>
        public virtual FeaturedResource Featured
        {
            get { return featured; }
        }

        private readonly GlobalResource global;

        /// <summary>Gets the Global resource.</summary>
        public virtual GlobalResource Global
        {
            get { return global; }
        }

        private readonly MyResource my;

        /// <summary>Gets the My resource.</summary>
        public virtual MyResource My
        {
            get { return my; }
        }

        private readonly MyrecentResource myrecent;

        /// <summary>Gets the Myrecent resource.</summary>
        public virtual MyrecentResource Myrecent
        {
            get { return myrecent; }
        }

        private readonly ProfilesResource profiles;

        /// <summary>Gets the Profiles resource.</summary>
        public virtual ProfilesResource Profiles
        {
            get { return profiles; }
        }

        private readonly ResponsesResource responses;

        /// <summary>Gets the Responses resource.</summary>
        public virtual ResponsesResource Responses
        {
            get { return responses; }
        }

        private readonly SeriesResource series;

        /// <summary>Gets the Series resource.</summary>
        public virtual SeriesResource Series
        {
            get { return series; }
        }

        private readonly SubmissionsResource submissions;

        /// <summary>Gets the Submissions resource.</summary>
        public virtual SubmissionsResource Submissions
        {
            get { return submissions; }
        }

        private readonly TagsResource tags;

        /// <summary>Gets the Tags resource.</summary>
        public virtual TagsResource Tags
        {
            get { return tags; }
        }

        private readonly TopicsResource topics;

        /// <summary>Gets the Topics resource.</summary>
        public virtual TopicsResource Topics
        {
            get { return topics; }
        }

        private readonly VotesResource votes;

        /// <summary>Gets the Votes resource.</summary>
        public virtual VotesResource Votes
        {
            get { return votes; }
        }
    }

    ///<summary>A base abstract class for KitchSink requests.</summary>
    public abstract class KitchSinkBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new KitchSinkBaseServiceRequest instance.</summary>
        protected KitchSinkBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>An Enum API parameter</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>An Enum API parameter</summary>
        public enum AltEnum
        {
            /// <summary>The meaning for the enun value 'json'</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }

        /// <summary>An _ delimited API parameter</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>A camelCased API parameter</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Initializes KitchSink parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
        }
    }

    /// <summary>The "featured" collection of methods.</summary>
    public class FeaturedResource
    {
        private const string Resource = "featured";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FeaturedResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            series = new SeriesResource(service);

        }

        private readonly SeriesResource series;

        /// <summary>Gets the Series resource.</summary>
        public virtual SeriesResource Series
        {
            get { return series; }
        }

        /// <summary>The "series" collection of methods.</summary>
        public class SeriesResource
        {
            private const string Resource = "series";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SeriesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Lists the featured series.</summary>
            public virtual ListRequest List()
            {
                return new ListRequest(service);
            }

            /// <summary>Lists the featured series.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service)
                    : base(service)
                {
                    InitParameters();
                }



                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/featured"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                }

            }
        }
    }

    /// <summary>The "global" collection of methods.</summary>
    public class GlobalResource
    {
        private const string Resource = "global";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public GlobalResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            series = new SeriesResource(service);

        }

        private readonly SeriesResource series;

        /// <summary>Gets the Series resource.</summary>
        public virtual SeriesResource Series
        {
            get { return series; }
        }

        /// <summary>The "series" collection of methods.</summary>
        public class SeriesResource
        {
            private const string Resource = "series";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SeriesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Searches the public series and returns the search results.</summary>
            public virtual ListRequest List()
            {
                return new ListRequest(service);
            }

            /// <summary>Searches the public series and returns the search results.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service)
                    : base(service)
                {
                    InitParameters();
                }


                /// <summary>Maximum number of results to return.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("max-results", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> MaxResults { get; set; }

                /// <summary>Search query.</summary>
                [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Q { get; set; }

                /// <summary>Index of the first result to be retrieved.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> StartIndex { get; set; }

                /// <summary>Enum</summary>
                [Google.Apis.Util.RequestParameterAttribute("enum", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object Enum { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "search"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "max-results", new Google.Apis.Discovery.Parameter
                        {
                            Name = "max-results",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "q", new Google.Apis.Discovery.Parameter
                        {
                            Name = "q",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "start-index", new Google.Apis.Discovery.Parameter
                        {
                            Name = "start-index",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "enum", new Google.Apis.Discovery.Parameter
                        {
                            Name = "enum",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }

    /// <summary>The "my" collection of methods.</summary>
    public class MyResource
    {
        private const string Resource = "my";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MyResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            series = new SeriesResource(service);

        }

        private readonly SeriesResource series;

        /// <summary>Gets the Series resource.</summary>
        public virtual SeriesResource Series
        {
            get { return series; }
        }

        /// <summary>The "series" collection of methods.</summary>
        public class SeriesResource
        {
            private const string Resource = "series";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SeriesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Lists all series created by the authenticated user.</summary>
            public virtual ListRequest List()
            {
                return new ListRequest(service);
            }

            /// <summary>Lists all series created by the authenticated user.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service)
                    : base(service)
                {
                    InitParameters();
                }



                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/@me/mine"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                }

            }
        }
    }

    /// <summary>The "myrecent" collection of methods.</summary>
    public class MyrecentResource
    {
        private const string Resource = "myrecent";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MyrecentResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            kitch_sinkPrivate = new KitchSinkPrivateResource(service);

        }

        private readonly KitchSinkPrivateResource kitch_sinkPrivate;

        /// <summary>Gets the KitchSinkPrivate resource.</summary>
        public virtual KitchSinkPrivateResource KitchSinkPrivate
        {
            get { return kitch_sinkPrivate; }
        }

        /// <summary>The "private" collection of methods.</summary>
        public class KitchSinkPrivateResource
        {
            private const string Resource = "kitch_sinkPrivate";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public KitchSinkPrivateResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Resource using a name which is a keyword in many languages, to check their handling.</summary>
            public virtual ListRequest List()
            {
                return new ListRequest(service);
            }

            /// <summary>Resource using a name which is a keyword in many languages, to check their handling.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service)
                    : base(service)
                {
                    InitParameters();
                }



                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/@me/recent"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                }

            }
        }
    }

    /// <summary>The "profiles" collection of methods.</summary>
    public class ProfilesResource
    {
        private const string Resource = "profiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the profile information for the authenticated user.</summary>
        public virtual GetRequest Get()
        {
            return new GetRequest(service);
        }

        /// <summary>Returns the profile information for the authenticated user.</summary>
        public class GetRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Profile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "profiles/@me"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Updates the profile information for the authenticated user.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual UpdateRequest Update(Google.Apis.KitchSink.v1.Data.Profile body)
        {
            return new UpdateRequest(service, body);
        }

        /// <summary>Updates the profile information for the authenticated user.</summary>
        public class UpdateRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Profile>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Profile body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Profile Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "profiles/@me"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "responses" collection of methods.</summary>
    public class ResponsesResource
    {
        private const string Resource = "responses";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ResponsesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Inserts a response for the specified submission in the specified topic within the specified
        /// series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="topicId">The decimal ID of the
        /// Topic within the Series.</param>
        /// <param name="parentSubmissionId">The decimal ID of the parent Submission
        /// within the Series.</param>
        public virtual InsertRequest Insert(Google.Apis.KitchSink.v1.Data.Submission body, int seriesId, int topicId, int parentSubmissionId)
        {
            return new InsertRequest(service, body, seriesId, topicId, parentSubmissionId);
        }

        /// <summary>Inserts a response for the specified submission in the specified topic within the specified
        /// series.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Submission>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Submission body, int seriesId, int topicId, int parentSubmissionId)
                : base(service)
            {
                SeriesId = seriesId;
                TopicId = topicId;
                ParentSubmissionId = parentSubmissionId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Topic within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int TopicId { get; private set; }

            /// <summary>The decimal ID of the parent Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("parentSubmissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int ParentSubmissionId { get; private set; }

            /// <summary>Set to true to mark the new submission as anonymous.</summary>
            [Google.Apis.Util.RequestParameterAttribute("anonymous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Anonymous { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Submission Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics/{topicId}/submissions/{parentSubmissionId}/responses"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "topicId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "topicId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "parentSubmissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parentSubmissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "anonymous", new Google.Apis.Discovery.Parameter
                    {
                        Name = "anonymous",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a response for the specified submission in the specified topic within the specified
        /// series.</summary>/// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="topicId">The decimal ID of the
        /// Topic within the Series.</param>
        /// <param name="parentSubmissionId">The decimal ID of the parent Submission
        /// within the Series.</param>
        /// <param name="stream">The stream to upload.</param>
        /// <param name="contentType">The content type of the stream to upload.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.KitchSink.v1.Data.Submission body, int seriesId, int topicId, int parentSubmissionId, System.IO.Stream stream, string contentType)
        {
            return new InsertMediaUpload(service, body, seriesId, topicId, parentSubmissionId, stream, contentType);
        }

        /// <summary>Insert media upload which supports resumable upload.</summary>
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.KitchSink.v1.Data.Submission, Google.Apis.KitchSink.v1.Data.Submission>
        {

            /// <summary>An Enum API parameter</summary>
            /// [default: json]
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AltEnum> Alt { get; set; }

            /// <summary>An Enum API parameter</summary>
            public enum AltEnum
            {
                /// <summary>The meaning for the enun value 'json'</summary>
                [Google.Apis.Util.StringValueAttribute("json")]
                Json,
            }

            /// <summary>An _ delimited API parameter</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OauthToken { get; set; }

            /// <summary>A camelCased API parameter</summary>
            /// [default: true]
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint { get; set; }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Topic within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int TopicId { get; private set; }

            /// <summary>The decimal ID of the parent Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("parentSubmissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int ParentSubmissionId { get; private set; }

            /// <summary>Set to true to mark the new submission as anonymous.</summary>
            [Google.Apis.Util.RequestParameterAttribute("anonymous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Anonymous { get; set; }

            /// <summary>Constructs a new Insert media upload instance.</summary>
            public InsertMediaUpload(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Submission body, int
             seriesId, int
             topicId, int
             parentSubmissionId, System.IO.Stream stream, string contentType)
                : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "series/{seriesId}/topics/{topicId}/submissions/{parentSubmissionId}/responses"), "POST", stream, contentType)
            {
                SeriesId = seriesId;
                TopicId = topicId;
                ParentSubmissionId = parentSubmissionId;
                Body = body;
            }
        }

        /// <summary>Lists or searches the responses for the specified submission within the specified series and
        /// returns the search results.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual ListRequest List(int seriesId, int submissionId)
        {
            return new ListRequest(service, seriesId, submissionId);
        }

        /// <summary>Lists or searches the responses for the specified submission within the specified series and
        /// returns the search results.</summary>
        public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SubmissionList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }

            /// <summary>Restricts the results to submissions by a specific author.</summary>
            [Google.Apis.Util.RequestParameterAttribute("author", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Author { get; set; }

            /// <summary>Specifies whether to restrict to submissions that have videos attached.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hasAttachedVideo", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> HasAttachedVideo { get; set; }

            /// <summary>Search query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q { get; set; }

            /// <summary>Sort order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sort", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Sort { get; set; }

            /// <summary>Index of the first result to be retrieved.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> StartIndex { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}/responses"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "author", new Google.Apis.Discovery.Parameter
                    {
                        Name = "author",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "hasAttachedVideo", new Google.Apis.Discovery.Parameter
                    {
                        Name = "hasAttachedVideo",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "q", new Google.Apis.Discovery.Parameter
                    {
                        Name = "q",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sort", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sort",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start-index", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start-index",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "series" collection of methods.</summary>
    public class SeriesResource
    {
        private const string Resource = "series";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SeriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            responses = new ResponsesResource(service);
            submissions = new SubmissionsResource(service);

        }

        private readonly ResponsesResource responses;

        /// <summary>Gets the Responses resource.</summary>
        public virtual ResponsesResource Responses
        {
            get { return responses; }
        }

        /// <summary>The "responses" collection of methods.</summary>
        public class ResponsesResource
        {
            private const string Resource = "responses";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ResponsesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Searches the responses for the specified series and returns the search results.</summary>
            /// <param name="seriesId">The decimal ID of the Series.</param>
            /// <param name="q">Search query - a required query
            /// parameter.</param>
            public virtual ListRequest List(int seriesId, string q)
            {
                return new ListRequest(service, seriesId, q);
            }

            /// <summary>Searches the responses for the specified series and returns the search results.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, int seriesId, string q)
                    : base(service)
                {
                    SeriesId = seriesId;
                    Q = q;
                    InitParameters();
                }


                /// <summary>The decimal ID of the Series.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual int SeriesId { get; private set; }

                /// <summary>Restricts the results to submissions by a specific author.</summary>
                [Google.Apis.Util.RequestParameterAttribute("author", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Author { get; set; }

                /// <summary>Specifies whether to restrict to submissions that have videos attached.</summary>
                [Google.Apis.Util.RequestParameterAttribute("hasAttachedVideo", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> HasAttachedVideo { get; set; }

                /// <summary>Maximum number of results to return.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("max-results", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> MaxResults { get; set; }

                /// <summary>Search query - a required query parameter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Q { get; private set; }

                /// <summary>Sort order.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sort", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Sort { get; set; }

                /// <summary>Index of the first result to be retrieved.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> StartIndex { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/{seriesId}/responses"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "seriesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "seriesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "author", new Google.Apis.Discovery.Parameter
                        {
                            Name = "author",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "hasAttachedVideo", new Google.Apis.Discovery.Parameter
                        {
                            Name = "hasAttachedVideo",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "max-results", new Google.Apis.Discovery.Parameter
                        {
                            Name = "max-results",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "q", new Google.Apis.Discovery.Parameter
                        {
                            Name = "q",
                            IsRequired = true,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sort", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sort",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "start-index", new Google.Apis.Discovery.Parameter
                        {
                            Name = "start-index",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly SubmissionsResource submissions;

        /// <summary>Gets the Submissions resource.</summary>
        public virtual SubmissionsResource Submissions
        {
            get { return submissions; }
        }

        /// <summary>The "submissions" collection of methods.</summary>
        public class SubmissionsResource
        {
            private const string Resource = "submissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SubmissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Searches the submissions for the specified series and returns the search results.</summary>
            /// <param name="seriesId">The decimal ID of the Series.</param>
            public virtual ListRequest List(int seriesId)
            {
                return new ListRequest(service, seriesId);
            }

            /// <summary>Searches the submissions for the specified series and returns the search results.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SubmissionList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, int seriesId)
                    : base(service)
                {
                    SeriesId = seriesId;
                    InitParameters();
                }


                /// <summary>The decimal ID of the Series.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual int SeriesId { get; private set; }

                /// <summary>Restricts the results to submissions by a specific author.</summary>
                [Google.Apis.Util.RequestParameterAttribute("author", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Author { get; set; }

                /// <summary>Specifies whether to restrict to submissions that have videos attached.</summary>
                [Google.Apis.Util.RequestParameterAttribute("hasAttachedVideo", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> HasAttachedVideo { get; set; }

                /// <summary>The language code for the language the client prefers resuls in.</summary>
                [Google.Apis.Util.RequestParameterAttribute("lang", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Lang { get; set; }

                /// <summary>Search query.</summary>
                [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Q { get; set; }

                /// <summary>Sort order.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sort", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Sort { get; set; }

                /// <summary>Index of the first result to be retrieved.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> StartIndex { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/{seriesId}/submissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "seriesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "seriesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "author", new Google.Apis.Discovery.Parameter
                        {
                            Name = "author",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "hasAttachedVideo", new Google.Apis.Discovery.Parameter
                        {
                            Name = "hasAttachedVideo",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "lang", new Google.Apis.Discovery.Parameter
                        {
                            Name = "lang",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "q", new Google.Apis.Discovery.Parameter
                        {
                            Name = "q",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sort", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sort",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "start-index", new Google.Apis.Discovery.Parameter
                        {
                            Name = "start-index",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Returns the specified series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        public virtual GetRequest Get(int seriesId)
        {
            return new GetRequest(service, seriesId);
        }

        /// <summary>Returns the specified series.</summary>
        public class GetRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Series>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, int seriesId)
                : base(service)
            {
                SeriesId = seriesId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Media method without request data.</summary>
        public virtual InsertRequest Insert()
        {
            return new InsertRequest(service);
        }

        /// <summary>Media method without request data.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Series>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Media method without request data.</summary>
        /// <param name="stream">The stream to upload.</param>
        /// <param name="contentType">The content type of the stream to upload.</param>
        public virtual InsertMediaUpload Insert(System.IO.Stream stream, string contentType)
        {
            return new InsertMediaUpload(service, stream, contentType);
        }

        /// <summary>Insert media upload which supports resumable upload.</summary>
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<string, Google.Apis.KitchSink.v1.Data.Series>
        {

            /// <summary>An Enum API parameter</summary>
            /// [default: json]
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AltEnum> Alt { get; set; }

            /// <summary>An Enum API parameter</summary>
            public enum AltEnum
            {
                /// <summary>The meaning for the enun value 'json'</summary>
                [Google.Apis.Util.StringValueAttribute("json")]
                Json,
            }

            /// <summary>An _ delimited API parameter</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OauthToken { get; set; }

            /// <summary>A camelCased API parameter</summary>
            /// [default: true]
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint { get; set; }


            /// <summary>Constructs a new Insert media upload instance.</summary>
            public InsertMediaUpload(Google.Apis.Services.IClientService service, System.IO.Stream stream, string contentType)
                : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "series"), "POST", stream, contentType)
            {

            }
        }

        /// <summary>Searches the series and returns the search results.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Searches the series and returns the search results.</summary>
        public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SeriesList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("max-results", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Search query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q { get; set; }

            /// <summary>Index of the first result to be retrieved.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> StartIndex { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "max-results", new Google.Apis.Discovery.Parameter
                    {
                        Name = "max-results",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "q", new Google.Apis.Discovery.Parameter
                    {
                        Name = "q",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start-index", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start-index",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        public virtual UpdateRequest Update(Google.Apis.KitchSink.v1.Data.Series body, int seriesId)
        {
            return new UpdateRequest(service, body, seriesId);
        }

        /// <summary>Updates the specified series.</summary>
        public class UpdateRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Series>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Series body, int seriesId)
                : base(service)
            {
                SeriesId = seriesId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Series Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "submissions" collection of methods.</summary>
    public class SubmissionsResource
    {
        private const string Resource = "submissions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SubmissionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the specified submission within the specified series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual GetRequest Get(int seriesId, int submissionId)
        {
            return new GetRequest(service, seriesId, submissionId);
        }

        /// <summary>Returns the specified submission within the specified series.</summary>
        public class GetRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Submission>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }

            /// <summary>The language code for the language the client prefers resuls in.</summary>
            [Google.Apis.Util.RequestParameterAttribute("lang", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Lang { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "lang", new Google.Apis.Discovery.Parameter
                    {
                        Name = "lang",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new submission in the specified topic within the specified series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="topicId">The decimal ID of the
        /// Topic within the Series.</param>
        public virtual InsertRequest Insert(Google.Apis.KitchSink.v1.Data.Submission body, int seriesId, int topicId)
        {
            return new InsertRequest(service, body, seriesId, topicId);
        }

        /// <summary>Inserts a new submission in the specified topic within the specified series.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Submission>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Submission body, int seriesId, int topicId)
                : base(service)
            {
                SeriesId = seriesId;
                TopicId = topicId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Topic within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int TopicId { get; private set; }

            /// <summary>Set to true to mark the new submission as anonymous.</summary>
            [Google.Apis.Util.RequestParameterAttribute("anonymous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Anonymous { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Submission Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics/{topicId}/submissions"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "topicId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "topicId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "anonymous", new Google.Apis.Discovery.Parameter
                    {
                        Name = "anonymous",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "tags" collection of methods.</summary>
    public class TagsResource
    {
        private const string Resource = "tags";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TagsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Deletes the specified tag from the specified submission within the specified series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        /// <param name="tagId"></param>
        public virtual DeleteRequest Delete(int seriesId, int submissionId, string tagId)
        {
            return new DeleteRequest(service, seriesId, submissionId, tagId);
        }

        /// <summary>Deletes the specified tag from the specified submission within the specified series.</summary>
        public class DeleteRequest : KitchSinkBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, int seriesId, int submissionId, string tagId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                TagId = tagId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("tagId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TagId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}/tags/{tagId}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "tagId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "tagId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new tag for the specified submission within the specified series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual InsertRequest Insert(Google.Apis.KitchSink.v1.Data.Tag body, int seriesId, int submissionId)
        {
            return new InsertRequest(service, body, seriesId, submissionId);
        }

        /// <summary>Inserts a new tag for the specified submission within the specified series.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Tag>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Tag body, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Tag Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}/tags"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>A method with a parameters named |id| and |else|</summary>
        /// <param name="id">id is a reserved word in Objective-C</param>
        /// <param name="kitch_sinkElse">A parameter name
        /// 'else'.</param>
        public virtual ListRequest List(string id, string kitch_sinkElse)
        {
            return new ListRequest(service, id, kitch_sinkElse);
        }

        /// <summary>A method with a parameters named |id| and |else|</summary>
        public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.TagList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string id, string kitch_sinkElse)
                : base(service)
            {
                Id = id;
                Else = kitch_sinkElse;
                InitParameters();
            }


            /// <summary>id is a reserved word in Objective-C</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>A parameter name 'else'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("else", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Else { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{id}/submissions/{else}/tags"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "else", new Google.Apis.Discovery.Parameter
                    {
                        Name = "else",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "topics" collection of methods.</summary>
    public class TopicsResource
    {
        private const string Resource = "topics";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TopicsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            submissions = new SubmissionsResource(service);

        }

        private readonly SubmissionsResource submissions;

        /// <summary>Gets the Submissions resource.</summary>
        public virtual SubmissionsResource Submissions
        {
            get { return submissions; }
        }

        /// <summary>The "submissions" collection of methods.</summary>
        public class SubmissionsResource
        {
            private const string Resource = "submissions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SubmissionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Searches the submissions for the specified topic within the specified series and returns the
            /// search results.</summary>
            /// <param name="seriesId">The decimal ID of the Series.</param>
            /// <param name="topicId">The decimal ID of the
            /// Topic within the Series.</param>
            public virtual ListRequest List(int seriesId, int topicId)
            {
                return new ListRequest(service, seriesId, topicId);
            }

            /// <summary>Searches the submissions for the specified topic within the specified series and returns the
            /// search results.</summary>
            public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.SubmissionList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, int seriesId, int topicId)
                    : base(service)
                {
                    SeriesId = seriesId;
                    TopicId = topicId;
                    InitParameters();
                }


                /// <summary>The decimal ID of the Series.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual int SeriesId { get; private set; }

                /// <summary>The decimal ID of the Topic within the Series.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual int TopicId { get; private set; }

                /// <summary>Restricts the results to submissions by a specific author.</summary>
                [Google.Apis.Util.RequestParameterAttribute("author", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Author { get; set; }

                /// <summary>Specifies whether to restrict to submissions that have videos attached.</summary>
                [Google.Apis.Util.RequestParameterAttribute("hasAttachedVideo", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> HasAttachedVideo { get; set; }

                /// <summary>Search query.</summary>
                [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Q { get; set; }

                /// <summary>Sort order.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sort", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Sort { get; set; }

                /// <summary>Index of the first result to be retrieved.</summary>
                /// [minimum: 0]
                /// [maximum: 4294967295]
                [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> StartIndex { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "series/{seriesId}/topics/{topicId}/submissions"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "seriesId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "seriesId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "topicId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "topicId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "author", new Google.Apis.Discovery.Parameter
                        {
                            Name = "author",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "hasAttachedVideo", new Google.Apis.Discovery.Parameter
                        {
                            Name = "hasAttachedVideo",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "q", new Google.Apis.Discovery.Parameter
                        {
                            Name = "q",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "sort", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sort",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "start-index", new Google.Apis.Discovery.Parameter
                        {
                            Name = "start-index",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Returns the specified topic from the specified series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="topicId">The decimal ID of the
        /// Topic within the Series.</param>
        public virtual GetRequest Get(int seriesId, int topicId)
        {
            return new GetRequest(service, seriesId, topicId);
        }

        /// <summary>Returns the specified topic from the specified series.</summary>
        public class GetRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Topic2>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, int seriesId, int topicId)
                : base(service)
            {
                SeriesId = seriesId;
                TopicId = topicId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Topic within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int TopicId { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics/{topicId}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "topicId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "topicId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new topic into the specified series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        public virtual InsertRequest Insert(Google.Apis.KitchSink.v1.Data.Topic body, int seriesId)
        {
            return new InsertRequest(service, body, seriesId);
        }

        /// <summary>Inserts a new topic into the specified series.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Topic>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Topic body, int seriesId)
                : base(service)
            {
                SeriesId = seriesId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Topic Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Searches the topics within the specified series and returns the search results.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        public virtual ListRequest List(int seriesId)
        {
            return new ListRequest(service, seriesId);
        }

        /// <summary>Searches the topics within the specified series and returns the search results.</summary>
        public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.TopicList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, int seriesId)
                : base(service)
            {
                SeriesId = seriesId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("max-results", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("mode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ModeEnum> Mode { get; set; }


            public enum ModeEnum
            {
                /// <summary>A value with a @, to show we make constant names the right way.</summary>
                [Google.Apis.Util.StringValueAttribute("@auto")]
                Auto,
                /// <summary>boring</summary>
                [Google.Apis.Util.StringValueAttribute("Normal")]
                Normal,
                /// <summary>this should be kMixItUp in some languages</summary>
                [Google.Apis.Util.StringValueAttribute("mix_it_up")]
                MixItUp,
            }

            /// <summary>Search query.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q { get; set; }

            /// <summary>Index of the first result to be retrieved.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> StartIndex { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "max-results", new Google.Apis.Discovery.Parameter
                    {
                        Name = "max-results",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "mode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "mode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "q", new Google.Apis.Discovery.Parameter
                    {
                        Name = "q",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start-index", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start-index",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the specified topic within the specified series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="topicId">The decimal ID of the
        /// Topic within the Series.</param>
        public virtual UpdateRequest Update(Google.Apis.KitchSink.v1.Data.Topic body, int seriesId, int topicId)
        {
            return new UpdateRequest(service, body, seriesId, topicId);
        }

        /// <summary>Updates the specified topic within the specified series.</summary>
        public class UpdateRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Topic>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Topic body, int seriesId, int topicId)
                : base(service)
            {
                SeriesId = seriesId;
                TopicId = topicId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Topic within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int TopicId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Topic Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/topics/{topicId}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "topicId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "topicId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "votes" collection of methods.</summary>
    public class VotesResource
    {
        private const string Resource = "votes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public VotesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns the votes by the authenticated user for the specified submission within the specified
        /// series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual GetRequest Get(int seriesId, int submissionId)
        {
            return new GetRequest(service, seriesId, submissionId);
        }

        /// <summary>Returns the votes by the authenticated user for the specified submission within the specified
        /// series.</summary>
        public class GetRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Vote>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserId { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}/votes/@me"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "userId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "userId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Inserts a new vote by the authenticated user for the specified submission within the specified
        /// series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual InsertRequest Insert(Google.Apis.KitchSink.v1.Data.Vote body, int seriesId, int submissionId)
        {
            return new InsertRequest(service, body, seriesId, submissionId);
        }

        /// <summary>Inserts a new vote by the authenticated user for the specified submission within the specified
        /// series.</summary>
        public class InsertRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Vote>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Vote body, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submissionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Vote Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submissionId}/votes/@me"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submissionId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submissionId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Lists the votes by the authenticated user for the given series.</summary>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        public virtual ListRequest List(int seriesId)
        {
            return new ListRequest(service, seriesId);
        }

        /// <summary>Lists the votes by the authenticated user for the given series.</summary>
        public class ListRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.VoteList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, int seriesId)
                : base(service)
            {
                SeriesId = seriesId;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>Index of the first result to be retrieved.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> StartIndex { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/votes/@me"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start-index", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start-index",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the votes by the authenticated user for the specified submission within the specified
        /// series.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="seriesId">The decimal ID of the Series.</param>
        /// <param name="submissionId">The decimal ID of
        /// the Submission within the Series.</param>
        public virtual UpdateRequest Update(Google.Apis.KitchSink.v1.Data.Vote body, int seriesId, int submissionId)
        {
            return new UpdateRequest(service, body, seriesId, submissionId);
        }

        /// <summary>Updates the votes by the authenticated user for the specified submission within the specified
        /// series.</summary>
        public class UpdateRequest : KitchSinkBaseServiceRequest<Google.Apis.KitchSink.v1.Data.Vote>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.KitchSink.v1.Data.Vote body, int seriesId, int submissionId)
                : base(service)
            {
                SeriesId = seriesId;
                SubmissionId = submissionId;
                Body = body;
                InitParameters();
            }


            /// <summary>The decimal ID of the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("seriesId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SeriesId { get; private set; }

            /// <summary>The decimal ID of the Submission within the Series.</summary>
            /// [minimum: 0]
            /// [maximum: 4294967295]
            [Google.Apis.Util.RequestParameterAttribute("submission_id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int SubmissionId { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserId { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.KitchSink.v1.Data.Vote Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "series/{seriesId}/submissions/{submission_id}/votes/@me"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "seriesId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "seriesId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "submission_id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "submission_id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"\d{3},\d{3},\d{3}",
                    });
                RequestParameters.Add(
                    "userId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "userId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}
=== end: ./Google.Apis.KitchSink.v1.cs
=== begin: ./Google.Apis.KitchSink.v1.csproj
﻿<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
  <PropertyGroup>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6745AAF1-A1B5-4C28-8B33-195FA88BCDAF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Google.Apis.KitchSink.v1</RootNamespace>
    <AssemblyName>Google.Apis.KitchSink.v1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile328</TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <RestorePackages>true</RestorePackages>
    <DocumentationFile>Google.Apis.KitchSink.v1.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'ReleaseSigned|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\ReleaseSigned\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>c:\code\google.apis.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Google.Apis.KitchSink.v1.cs"/>
    <Compile Include="Properties\AssemblyInfo.cs"/>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Google.Apis.Core">
      <HintPath>..\packages\Google.Apis.Core.1.9.2\lib\portable-net40+sl50+win+wpa81+wp80\Google.Apis.Core.dll</HintPath>
    </Reference>
    <Reference Include="Google.Apis">
      <HintPath>..\packages\Google.Apis.1.9.2\lib\portable-net40+sl50+win+wpa81+wp80\Google.Apis.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Threading.Tasks">
      <HintPath>..\packages\Microsoft.Bcl.Async.1.0.168\lib\portable-net40+sl4+win8+wp71+wpa81\Microsoft.Threading.Tasks.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Threading.Tasks.Extensions">
      <HintPath>..\packages\Microsoft.Bcl.Async.1.0.168\lib\portable-net40+sl4+win8+wp71+wpa81\Microsoft.Threading.Tasks.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>..\packages\Newtonsoft.Json.7.0.1\lib\portable-net40+sl5+wp80+win8+wpa81\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System.IO">
      <HintPath>..\packages\Microsoft.Bcl.1.1.10\lib\portable-net40+sl5+win8+wp8+wpa81\System.IO.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http.Extensions">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System.Net.Http.Primitives">
      <HintPath>..\packages\Microsoft.Net.Http.2.2.29\lib\portable-net40+sl4+win8+wp71+wpa81\System.Net.Http.Primitives.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime">
      <HintPath>..\packages\Microsoft.Bcl.1.1.10\lib\portable-net40+sl5+win8+wp8+wpa81\System.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="System.Threading.Tasks">
      <HintPath>..\packages\Microsoft.Bcl.1.1.10\lib\portable-net40+sl5+win8+wp8+wpa81\System.Threading.Tasks.dll</HintPath>
    </Reference>
    <Reference Include="Zlib.Portable">
      <HintPath>..\packages\Zlib.Portable.Signed.1.11.0\lib\portable-net4+sl5+wp8+win8+wpa81+MonoTouch+MonoAndroid\Zlib.Portable.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config"/>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="..\.nuget\NuGet.targets" Condition="Exists('..\.nuget\NuGet.targets')"/>
  <Import Project="..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets" Condition="Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Bcl.Build.1.0.21\build\Microsoft.Bcl.Build.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
=== end: ./Google.Apis.KitchSink.v1.csproj
=== begin: ./packages.config
﻿<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Google.Apis" version="1.9.2" targetFramework="portable-net40+sl50+win+wpa81+wp80"/>
  <package id="Google.Apis.Core" version="1.9.2" targetFramework="portable-net40+sl50+win+wpa81+wp80"/>
  <package id="Microsoft.Bcl" version="1.1.10" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
  <package id="Microsoft.Bcl.Async" version="1.0.168" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
  <package id="Microsoft.Bcl.Build" version="1.0.21" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
  <package id="Microsoft.Net.Http" version="2.2.29" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
  <package id="Newtonsoft.Json" version="7.0.1" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
  <package id="Zlib.Portable.Signed" version="1.11.0" targetFramework="portable-net40+sl50+win+wpa81+wp80" />
</packages>
=== end: ./packages.config
=== begin: ./Properties/AssemblyInfo.cs
﻿/*
Copyright 2013 Google Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

using System.Resources;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("Google.Apis.KitchSink.v1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyProduct("Google.Apis.KitchSink.v1")]
[assembly: AssemblyCompany("Google Inc.")]
[assembly: AssemblyCopyright("Copyright © Google Inc. 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
[assembly: AssemblyVersion("1.9.2.0")]
=== end: ./Properties/AssemblyInfo.cs

{% if current_model.children %}{% for child in current_model.children %}{% call_template _model_cc guarded_model=child %}{% endfor %}{% endif %}
// Object factory method (static).
{{ current_model.packageRelativeClassName }}* {{ current_model.packageRelativeClassName }}::New() {
  return new {{ api.client_namespace }}::JsonCppCapsule<{{ current_model.className }}>;
}

// Standard immutable constructor.
{{ current_model.packageRelativeClassName }}::{{ current_model.className }}(const Json::Value& storage)
  : {{ api.client_namespace }}::JsonCppData(storage) {
}

// Standard mutable constructor.
{{ current_model.packageRelativeClassName }}::{{ current_model.className }}(Json::Value* storage)
  : {{ api.client_namespace }}::JsonCppData(storage) {
}

// Standard destructor.
{{ current_model.packageRelativeClassName }}::~{{ current_model.className }}() {
}
{% if not api.monolithicSourceName and current_model.properties %}
// Properties.
{% for property in current_model.properties %}{% if property.useSplitAccessor %}
const {{ property.codeType }} {{ current_model.packageRelativeClassName }}::{{ property.getterName }}() const {
   const Json::Value& storage = Storage({% literal property.wireName %});
   return {{ api.client_namespace }}::JsonValueToCppValueHelper<{{ property.codeType }} >(storage);
}

{{ property.codeType }} {{ current_model.packageRelativeClassName }}::mutable_{{ property.wireName }}() {
  Json::Value* storage = MutableStorage({% literal property.wireName %});
  return {{ api.client_namespace }}::JsonValueToMutableCppValueHelper<{{ property.codeType }} >(storage);
}
{% endif %}{% endfor %}{% endif %}

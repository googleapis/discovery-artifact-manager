
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the project in which the dataset should be created (e.g.,
# `projects/{project_id}/locations/{location_id}`).
parent = 'projects/my-project/locations/my-location'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::Dataset.new

response = service.create_project_location_dataset(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Source dataset resource name. (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
source_dataset = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::DeidentifyDatasetRequest.new

response = service.deidentify_dataset(source_dataset, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset to delete (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
name = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

service.delete_project_location_dataset(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset this DICOM store belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::DicomStore.new

response = service.create_project_location_dataset_dicom_store(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the DICOM store to delete.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

service.delete_project_location_dataset_dicom_store(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The DICOM store resource name from which the data should be exported (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::ExportDicomDataRequest.new

response = service.export_dicom_store_dicom_data(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the DICOM store to get.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_dicom_store(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_dicom_store_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store resource into which the data is imported (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::ImportDicomDataRequest.new

response = service.import_dicom_store_dicom_data(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the dataset.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

dicom_stores = service.fetch_all(items: :dicom_stores) do |token|
  service.list_project_location_dataset_dicom_stores(parent, page_token: token)
end

dicom_stores.each do |dicom_store|
  # TODO: Change code below to process each `dicom_store` resource:
  puts dicom_store.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Output only. Resource name of the DICOM store, of the form
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::DicomStore.new

response = service.patch_project_location_dataset_dicom_store(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `instances`).
dicom_web_path = 'instances'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_for_instances(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `series`).
dicom_web_path = 'series'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_for_series(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies`).
dicom_web_path = 'studies'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_for_studies(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::SetIamPolicyRequest.new

response = service.set_dicom_store_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}`).
dicom_web_path = 'studies'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.store_project_location_dataset_dicom_store_instances(parent, dicom_web_path, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}`).
dicom_web_path = 'studies/my-study'  # TODO: Update placeholder value.

service.delete_project_location_dataset_dicom_store_study(parent, dicom_web_path)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}/metadata`.
dicom_web_path = 'studies/my-study/metadata'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_metadata(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}`).
dicom_web_path = 'studies/my-study'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_study(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `instances`).
dicom_web_path = 'studies/my-study/instances'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_study_for_instances(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `series`).
dicom_web_path = 'studies/my-study/series'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_study_for_series(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}`).
dicom_web_path = 'studies/my-study/series/my-sery'  # TODO: Update placeholder value.

service.delete_project_location_dataset_dicom_store_study_series(parent, dicom_web_path)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instances/{instance_id}`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance'  # TODO: Update placeholder value.

service.delete_project_location_dataset_dicom_store_study_series_instance(parent, dicom_web_path)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instance/{instance_id}/frames/{frame_list}`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance/frames/my-frame'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_instance_frame_frames(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instance/{instance_id}/frames/{frame_list}/rendered`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance/frames/my-frame/rendered'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_instance_frame_rendered(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instance/{instance_id}`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_instance_instance(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instances/{instance_id}/metadata`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance/metadata'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_instance_metadata(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `studies/{study_id}/series/{series_id}/instance/{instance_id}/rendered`).
dicom_web_path = 'studies/my-study/series/my-sery/instances/my-instance/rendered'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_instance_rendered(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}/metadata`.
dicom_web_path = 'studies/my-study/series/my-sery/metadata'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_metadata(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}`).
dicom_web_path = 'studies/my-study/series/my-sery'  # TODO: Update placeholder value.

response = service.retrieve_project_location_dataset_dicom_store_study_series_series(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g.,
# `instances`).
dicom_web_path = 'studies/my-study/series/my-sery/instances'  # TODO: Update placeholder value.

response = service.search_project_location_dataset_dicom_store_study_series_for_instances(parent, dicom_web_path)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the DICOM store that is being accessed (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
# QIDO-RS standard (e.g., `studies/{study_id}`).
dicom_web_path = 'studies/my-study'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.store_project_location_dataset_dicom_store_study_instances(parent, dicom_web_path, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::TestIamPermissionsRequest.new

response = service.test_dicom_store_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset this FHIR store belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::FhirStore.new

response = service.create_project_location_dataset_fhir_store(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the FHIR store to delete.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

service.delete_project_location_dataset_fhir_store(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store to export resource from. The name should be in
# the format of
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::ExportResourcesRequest.new

response = service.export_fhir_store_resources(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the FHIR store to retrieve resources from.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

response = service.observation_project_location_dataset_fhir_store_fhir_lastn(parent)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the `Patient` resource for which the information is required.
name = 'my-name'  # TODO: Update placeholder value.

response = service.patient_project_location_dataset_fhir_store_fhir_everything(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to purge.
name = 'my-name'  # TODO: Update placeholder value.

service.resource_project_location_dataset_fhir_store_fhir_purge(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the FHIR store to retrieve the capabilities for.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

response = service.capabilities_project_location_dataset_fhir_store_fhir(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store this resource belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# The type of the resource to delete.
type = 'my-type'  # TODO: Update placeholder value.

service.conditional_project_location_dataset_fhir_store_fhir_delete(parent, type)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store this resource belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# The type of the resource to update.
type = 'my-type'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.conditional_project_location_dataset_fhir_store_fhir_patch(parent, type, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store this resource belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# The type of the resource to update.
type = 'my-type'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.conditional_project_location_dataset_fhir_store_fhir_update(parent, type, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store this resource belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# The type of the resource to create.
type = 'my-type'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.create_project_location_dataset_fhir_store_fhir(parent, type, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to delete.
name = 'my-name'  # TODO: Update placeholder value.

response = service.delete_project_location_dataset_fhir_store_fhir(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the FHIR store in which this bundle will be executed.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.execute_project_location_dataset_fhir_store_fhir_bundle(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to retrieve.
name = 'my-name'  # TODO: Update placeholder value.

response = service.history_project_location_dataset_fhir_store_fhir(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to update.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.patch_project_location_dataset_fhir_store_fhir(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to retrieve.
name = 'my-name'  # TODO: Update placeholder value.

response = service.read_project_location_dataset_fhir_store_fhir(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the FHIR store to retrieve resources from.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::SearchResourcesRequest.new

response = service.search_fhir_resources(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource to update.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. All existing
# members will be replaced:
request_body = Google::Apis::HealthcareV1beta1::HttpBody.new

response = service.update_project_location_dataset_fhir_store_fhir(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the resource version to retrieve.
name = 'my-name'  # TODO: Update placeholder value.

response = service.vread_project_location_dataset_fhir_store_fhir(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the FHIR store to get.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_fhir_store(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_fhir_store_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the FHIR store to import FHIR resources to. The name should be
# in the format of
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::ImportResourcesRequest.new

response = service.import_fhir_store_resources(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the dataset.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

fhir_stores = service.fetch_all(items: :fhir_stores) do |token|
  service.list_project_location_dataset_fhir_stores(parent, page_token: token)
end

fhir_stores.each do |fhir_store|
  # TODO: Change code below to process each `fhir_store` resource:
  puts fhir_store.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Output only. Resource name of the FHIR store, of the form
# `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::FhirStore.new

response = service.patch_project_location_dataset_fhir_store(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::SetIamPolicyRequest.new

response = service.set_fhir_store_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::TestIamPermissionsRequest.new

response = service.test_fhir_store_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset to read (e.g.,
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
name = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

response = service.get_project_location_dataset(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset this HL7v2 store belongs to.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::Hl7V2Store.new

response = service.create_project_location_dataset_hl7_v2_store(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the HL7v2 store to delete.
name = 'my-name'  # TODO: Update placeholder value.

service.delete_project_location_dataset_hl7_v2_store(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the HL7v2 store to get.
name = 'my-name'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_hl7_v2_store(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'my-resource'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_hl7_v2_store_iam_policy(resource)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the dataset.
parent = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

hl7_v2_stores = service.fetch_all(items: :hl7_v2_stores) do |token|
  service.list_project_location_dataset_hl7_v2_stores(parent, page_token: token)
end

hl7_v2_stores.each do |hl7_v2_store|
  # TODO: Change code below to process each `hl7_v2_store` resource:
  puts hl7_v2_store.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the dataset this message belongs to.
parent = 'my-parent'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::CreateMessageRequest.new

response = service.create_message(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the HL7v2 message to delete.
name = 'my-name'  # TODO: Update placeholder value.

service.delete_project_location_dataset_hl7_v2_store_message(name)
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource name of the HL7v2 message to retrieve.
name = 'my-name'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_hl7_v2_store_message(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the HL7v2 store this message belongs to.
parent = 'my-parent'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::IngestMessageRequest.new

response = service.ingest_message(parent, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Name of the HL7v2 store to retrieve messages from.
parent = 'my-parent'  # TODO: Update placeholder value.

messages = service.fetch_all(items: :messages) do |token|
  service.list_project_location_dataset_hl7_v2_store_messages(parent, page_token: token)
end

messages.each do |item|
  # TODO: Change code below to process each `item` resource:
  puts item.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Resource name of the Message, of the form
# `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
# Assigned by the server.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::Message.new

response = service.patch_project_location_dataset_hl7_v2_store_message(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Output only. Resource name of the HL7v2 store, of the form
# `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
name = 'my-name'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::Hl7V2Store.new

response = service.patch_project_location_dataset_hl7_v2_store(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# See the operation documentation for the appropriate value for this field.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::SetIamPolicyRequest.new

response = service.set_hl7_v2_store_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'my-resource'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::TestIamPermissionsRequest.new

response = service.test_hl7_v2_store_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the project whose datasets should be listed (e.g.,
# `projects/{project_id}/locations/{location_id}`).
parent = 'projects/my-project/locations/my-location'  # TODO: Update placeholder value.

datasets = service.fetch_all(items: :datasets) do |token|
  service.list_project_location_datasets(parent, page_token: token)
end

datasets.each do |dataset|
  # TODO: Change code below to process each `dataset` resource:
  puts dataset.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation resource.
name = 'projects/my-project/locations/my-location/datasets/my-dataset/operations/my-operation'  # TODO: Update placeholder value.

response = service.get_project_location_dataset_operation(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The name of the operation's parent resource.
name = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

operations = service.fetch_all(items: :operations) do |token|
  service.list_project_location_dataset_operations(name, page_token: token)
end

operations.each do |operation|
  # TODO: Change code below to process each `operation` resource:
  puts operation.to_json
end
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Output only. Resource name of the dataset, of the form
# `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
name = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`. Only assigned
# members will be changed:
request_body = Google::Apis::HealthcareV1beta1::Dataset.new

response = service.patch_project_location_dataset(name, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy is being specified.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::SetIamPolicyRequest.new

response = service.set_dataset_iam_policy(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# REQUIRED: The resource for which the policy detail is being requested.
# See the operation documentation for the appropriate value for this field.
resource = 'projects/my-project/locations/my-location/datasets/my-dataset'  # TODO: Update placeholder value.

# TODO: Assign values to desired members of `request_body`:
request_body = Google::Apis::HealthcareV1beta1::TestIamPermissionsRequest.new

response = service.test_dataset_iam_permissions(resource, request_body)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# Resource name for the location.
name = 'projects/my-project/locations/my-location'  # TODO: Update placeholder value.

response = service.get_project_location(name)

# TODO: Change code below to process the `response` object:
puts response.to_json
# BEFORE RUNNING:
# ---------------
# 1. If not already done, enable the Cloud Healthcare API
#    and check the quota for your project at
#    https://console.developers.google.com/apis/api/healthcare
# 2. This sample uses Application Default Credentials for authentication.
#    If not already done, install the gcloud CLI from
#    https://cloud.google.com/sdk and run
#    `gcloud beta auth application-default login`.
#    For more information, see
#    https://developers.google.com/identity/protocols/application-default-credentials
# 3. Install the Ruby client library and Application Default Credentials
#    library by running `gem install google-api-client` and
#    `gem install googleauth`

require 'googleauth'
require 'google/apis/healthcare_v1beta1'

service = Google::Apis::HealthcareV1beta1::CloudHealthcareService.new

service.authorization = \
    Google::Auth.get_application_default(['https://www.googleapis.com/auth/cloud-platform'])

# The resource that owns the locations collection, if applicable.
name = 'projects/my-project'  # TODO: Update placeholder value.

locations = service.fetch_all(items: :locations) do |token|
  service.list_project_locations(name, page_token: token)
end

locations.each do |location|
  # TODO: Change code below to process each `location` resource:
  puts location.to_json
end

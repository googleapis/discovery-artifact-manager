
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the project in which the dataset should be created (e.g.,
// `projects/{project_id}/locations/{location_id}`).
$parent = 'projects/my-project/locations/my-location';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_Dataset();

$response = $service->projects_locations_datasets->create($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Source dataset resource name. (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
$sourceDataset = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_DeidentifyDatasetRequest();

$response = $service->projects_locations_datasets->deidentify($sourceDataset, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset to delete (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
$name = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$service->projects_locations_datasets->delete($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset this DICOM store belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_DicomStore();

$response = $service->projects_locations_datasets_dicomStores->create($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the DICOM store to delete.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

$service->projects_locations_datasets_dicomStores->delete($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The DICOM store resource name from which the data should be exported (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_ExportDicomDataRequest();

$response = $service->projects_locations_datasets_dicomStores->export($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the DICOM store to get.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores->getIamPolicy($resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store resource into which the data is imported (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_ImportDicomDataRequest();

$response = $service->projects_locations_datasets_dicomStores->import($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the dataset.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets_dicomStores->listProjectsLocationsDatasetsDicomStores($parent, $optParams);

  foreach ($response['dicomStores'] as $dicomStore) {
    // TODO: Change code below to process each `dicomStore` resource:
    echo '<pre>', var_export($dicomStore, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Output only. Resource name of the DICOM store, of the form
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_DicomStore();

$response = $service->projects_locations_datasets_dicomStores->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `instances`).
$dicomWebPath = 'instances';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores->searchForInstances($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `series`).
$dicomWebPath = 'series';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores->searchForSeries($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies`).
$dicomWebPath = 'studies';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores->searchForStudies($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being specified.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_SetIamPolicyRequest();

$response = $service->projects_locations_datasets_dicomStores->setIamPolicy($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}`).
$dicomWebPath = 'studies';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_dicomStores->storeInstances($parent, $dicomWebPath, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}`).
$dicomWebPath = 'studies/my-study';  // TODO: Update placeholder value.

$service->projects_locations_datasets_dicomStores_studies->delete($parent, $dicomWebPath);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}/metadata`.
$dicomWebPath = 'studies/my-study/metadata';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies->retrieveMetadata($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}`).
$dicomWebPath = 'studies/my-study';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies->retrieveStudy($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `instances`).
$dicomWebPath = 'studies/my-study/instances';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies->searchForInstances($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `series`).
$dicomWebPath = 'studies/my-study/series';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies->searchForSeries($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}`).
$dicomWebPath = 'studies/my-study/series/my-sery';  // TODO: Update placeholder value.

$service->projects_locations_datasets_dicomStores_studies_series->delete($parent, $dicomWebPath);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instances/{instance_id}`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance';  // TODO: Update placeholder value.

$service->projects_locations_datasets_dicomStores_studies_series_instances->delete($parent, $dicomWebPath);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instance/{instance_id}/frames/{frame_list}`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance/frames/my-frame';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series_instances_frames->retrieveFrames($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instance/{instance_id}/frames/{frame_list}/rendered`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance/frames/my-frame/rendered';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series_instances_frames->retrieveRendered($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instance/{instance_id}`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series_instances->retrieveInstance($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instances/{instance_id}/metadata`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance/metadata';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series_instances->retrieveMetadata($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `studies/{study_id}/series/{series_id}/instance/{instance_id}/rendered`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances/my-instance/rendered';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series_instances->retrieveRendered($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}/metadata`.
$dicomWebPath = 'studies/my-study/series/my-sery/metadata';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series->retrieveMetadata($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}/series/{series_id}`).
$dicomWebPath = 'studies/my-study/series/my-sery';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series->retrieveSeries($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g.,
// `instances`).
$dicomWebPath = 'studies/my-study/series/my-sery/instances';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_dicomStores_studies_series->searchForInstances($parent, $dicomWebPath);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the DICOM store that is being accessed (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`).
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// The path of the DICOMweb request, as specified in the STOW-RS, WADO-RS, or
// QIDO-RS standard (e.g., `studies/{study_id}`).
$dicomWebPath = 'studies/my-study';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_dicomStores_studies->storeInstances($parent, $dicomWebPath, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy detail is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/dicomStores/my-dicom-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_TestIamPermissionsRequest();

$response = $service->projects_locations_datasets_dicomStores->testIamPermissions($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset this FHIR store belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_FhirStore();

$response = $service->projects_locations_datasets_fhirStores->create($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the FHIR store to delete.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

$service->projects_locations_datasets_fhirStores->delete($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store to export resource from. The name should be in
// the format of
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_ExportResourcesRequest();

$response = $service->projects_locations_datasets_fhirStores->export($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the FHIR store to retrieve resources from.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->observationLastn($parent);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the `Patient` resource for which the information is required.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->patientEverything($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to purge.
$name = 'my-name';  // TODO: Update placeholder value.

$service->projects_locations_datasets_fhirStores_fhir->resourcePurge($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the FHIR store to retrieve the capabilities for.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->capabilities($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store this resource belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// The type of the resource to delete.
$type = 'my-type';  // TODO: Update placeholder value.

$service->projects_locations_datasets_fhirStores_fhir->conditionalDelete($parent, $type);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store this resource belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// The type of the resource to update.
$type = 'my-type';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->conditionalPatch($parent, $type, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store this resource belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// The type of the resource to update.
$type = 'my-type';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. All existing
// properties will be replaced:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->conditionalUpdate($parent, $type, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store this resource belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// The type of the resource to create.
$type = 'my-type';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->create($parent, $type, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to delete.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->delete($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the FHIR store in which this bundle will be executed.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->executeBundle($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to retrieve.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->history($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to update.
$name = 'my-name';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to retrieve.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->read($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the FHIR store to retrieve resources from.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_SearchResourcesRequest();

$response = $service->projects_locations_datasets_fhirStores_fhir->search($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource to update.
$name = 'my-name';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. All existing
// properties will be replaced:
$requestBody = new Google_Service_CloudHealthcare_HttpBody();

$response = $service->projects_locations_datasets_fhirStores_fhir->update($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the resource version to retrieve.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores_fhir->vread($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the FHIR store to get.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_fhirStores->getIamPolicy($resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the FHIR store to import FHIR resources to. The name should be
// in the format of
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_ImportResourcesRequest();

$response = $service->projects_locations_datasets_fhirStores->import($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the dataset.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets_fhirStores->listProjectsLocationsDatasetsFhirStores($parent, $optParams);

  foreach ($response['fhirStores'] as $fhirStore) {
    // TODO: Change code below to process each `fhirStore` resource:
    echo '<pre>', var_export($fhirStore, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Output only. Resource name of the FHIR store, of the form
// `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_FhirStore();

$response = $service->projects_locations_datasets_fhirStores->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being specified.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_SetIamPolicyRequest();

$response = $service->projects_locations_datasets_fhirStores->setIamPolicy($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy detail is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset/fhirStores/my-fhir-store';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_TestIamPermissionsRequest();

$response = $service->projects_locations_datasets_fhirStores->testIamPermissions($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset to read (e.g.,
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`).
$name = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets->getIamPolicy($resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset this HL7v2 store belongs to.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_Hl7V2Store();

$response = $service->projects_locations_datasets_hl7V2Stores->create($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the HL7v2 store to delete.
$name = 'my-name';  // TODO: Update placeholder value.

$service->projects_locations_datasets_hl7V2Stores->delete($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the HL7v2 store to get.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_hl7V2Stores->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'my-resource';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_hl7V2Stores->getIamPolicy($resource);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the dataset.
$parent = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets_hl7V2Stores->listProjectsLocationsDatasetsHl7V2Stores($parent, $optParams);

  foreach ($response['hl7V2Stores'] as $hl7V2Store) {
    // TODO: Change code below to process each `hl7V2Store` resource:
    echo '<pre>', var_export($hl7V2Store, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the dataset this message belongs to.
$parent = 'my-parent';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_CreateMessageRequest();

$response = $service->projects_locations_datasets_hl7V2Stores_messages->create($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the HL7v2 message to delete.
$name = 'my-name';  // TODO: Update placeholder value.

$service->projects_locations_datasets_hl7V2Stores_messages->delete($name);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource name of the HL7v2 message to retrieve.
$name = 'my-name';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_hl7V2Stores_messages->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the HL7v2 store this message belongs to.
$parent = 'my-parent';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_IngestMessageRequest();

$response = $service->projects_locations_datasets_hl7V2Stores_messages->ingest($parent, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Name of the HL7v2 store to retrieve messages from.
$parent = 'my-parent';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets_hl7V2Stores_messages->listProjectsLocationsDatasetsHl7V2StoresMessages($parent, $optParams);

  foreach ($response['messages'] as $item) {
    // TODO: Change code below to process each `item` resource:
    echo '<pre>', var_export($item, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Resource name of the Message, of the form
// `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
// Assigned by the server.
$name = 'my-name';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_Message();

$response = $service->projects_locations_datasets_hl7V2Stores_messages->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Output only. Resource name of the HL7v2 store, of the form
// `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
$name = 'my-name';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_Hl7V2Store();

$response = $service->projects_locations_datasets_hl7V2Stores->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being specified.
// See the operation documentation for the appropriate value for this field.
$resource = 'my-resource';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_SetIamPolicyRequest();

$response = $service->projects_locations_datasets_hl7V2Stores->setIamPolicy($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy detail is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'my-resource';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_TestIamPermissionsRequest();

$response = $service->projects_locations_datasets_hl7V2Stores->testIamPermissions($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the project whose datasets should be listed (e.g.,
// `projects/{project_id}/locations/{location_id}`).
$parent = 'projects/my-project/locations/my-location';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets->listProjectsLocationsDatasets($parent, $optParams);

  foreach ($response['datasets'] as $dataset) {
    // TODO: Change code below to process each `dataset` resource:
    echo '<pre>', var_export($dataset, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the operation resource.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset/operations/my-operation';  // TODO: Update placeholder value.

$response = $service->projects_locations_datasets_operations->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The name of the operation's parent resource.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations_datasets_operations->listProjectsLocationsDatasetsOperations($name, $optParams);

  foreach ($response['operations'] as $operation) {
    // TODO: Change code below to process each `operation` resource:
    echo '<pre>', var_export($operation, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Output only. Resource name of the dataset, of the form
// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
$name = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`. Only assigned
// properties will be changed:
$requestBody = new Google_Service_CloudHealthcare_Dataset();

$response = $service->projects_locations_datasets->patch($name, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy is being specified.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_SetIamPolicyRequest();

$response = $service->projects_locations_datasets->setIamPolicy($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// REQUIRED: The resource for which the policy detail is being requested.
// See the operation documentation for the appropriate value for this field.
$resource = 'projects/my-project/locations/my-location/datasets/my-dataset';  // TODO: Update placeholder value.

// TODO: Assign values to desired properties of `requestBody`:
$requestBody = new Google_Service_CloudHealthcare_TestIamPermissionsRequest();

$response = $service->projects_locations_datasets->testIamPermissions($resource, $requestBody);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// Resource name for the location.
$name = 'projects/my-project/locations/my-location';  // TODO: Update placeholder value.

$response = $service->projects_locations->get($name);

// TODO: Change code below to process the `response` object:
echo '<pre>', var_export($response, true), '</pre>', "\n";
?>
<?php
/*
 * BEFORE RUNNING:
 * ---------------
 * 1. If not already done, enable the Cloud Healthcare API
 *    and check the quota for your project at
 *    https://console.developers.google.com/apis/api/healthcare
 * 2. This sample uses Application Default Credentials for authentication.
 *    If not already done, install the gcloud CLI from
 *    https://cloud.google.com/sdk and run
 *    `gcloud beta auth application-default login`.
 *    For more information, see
 *    https://developers.google.com/identity/protocols/application-default-credentials
 * 3. Install the PHP client library with Composer. Check installation
 *    instructions at https://github.com/google/google-api-php-client.
 */

// Autoload Composer.
require_once __DIR__ . '/vendor/autoload.php';

$client = new Google_Client();
$client->setApplicationName('Google-CloudHealthcareSample/0.1');
$client->useApplicationDefaultCredentials();
$client->addScope('https://www.googleapis.com/auth/cloud-platform');

$service = new Google_Service_CloudHealthcare($client);

// The resource that owns the locations collection, if applicable.
$name = 'projects/my-project';  // TODO: Update placeholder value.

$optParams = [];

do {
  $response = $service->projects_locations->listProjectsLocations($name, $optParams);

  foreach ($response['locations'] as $location) {
    // TODO: Change code below to process each `location` resource:
    echo '<pre>', var_export($location, true), '</pre>', "\n";
  }

  $optParams['pageToken'] = $response->getNextPageToken();
} while ($optParams['pageToken']);
?>
